-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_init_block_AB_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    A_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_0_ce0 : OUT STD_LOGIC;
    A_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    ii : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_01_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_01_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_01_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_01_full_n : IN STD_LOGIC;
    block_A_loader_01_write : OUT STD_LOGIC;
    A_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_12_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_12_full_n : IN STD_LOGIC;
    block_A_loader_12_write : OUT STD_LOGIC;
    A_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_2_ce0 : OUT STD_LOGIC;
    A_2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_23_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_23_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_23_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_23_full_n : IN STD_LOGIC;
    block_A_loader_23_write : OUT STD_LOGIC;
    A_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_3_ce0 : OUT STD_LOGIC;
    A_3_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_34_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_A_loader_34_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_34_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_A_loader_34_full_n : IN STD_LOGIC;
    block_A_loader_34_write : OUT STD_LOGIC;
    B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_ce0 : OUT STD_LOGIC;
    B_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    jj : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_05_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_05_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_05_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_05_full_n : IN STD_LOGIC;
    block_B_loader_05_write : OUT STD_LOGIC;
    B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_ce0 : OUT STD_LOGIC;
    B_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_16_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_16_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_16_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_16_full_n : IN STD_LOGIC;
    block_B_loader_16_write : OUT STD_LOGIC;
    B_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_ce0 : OUT STD_LOGIC;
    B_2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_27_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_27_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_27_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_27_full_n : IN STD_LOGIC;
    block_B_loader_27_write : OUT STD_LOGIC;
    B_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_ce0 : OUT STD_LOGIC;
    B_3_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_38_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    block_B_loader_38_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_38_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    block_B_loader_38_full_n : IN STD_LOGIC;
    block_B_loader_38_write : OUT STD_LOGIC;
    ii_c_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    ii_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c_full_n : IN STD_LOGIC;
    ii_c_write : OUT STD_LOGIC;
    ii_c1_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    ii_c1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c1_full_n : IN STD_LOGIC;
    ii_c1_write : OUT STD_LOGIC;
    ii_c2_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    ii_c2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c2_full_n : IN STD_LOGIC;
    ii_c2_write : OUT STD_LOGIC;
    ii_c3_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    ii_c3_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c3_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    ii_c3_full_n : IN STD_LOGIC;
    ii_c3_write : OUT STD_LOGIC;
    jj_c_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    jj_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c_full_n : IN STD_LOGIC;
    jj_c_write : OUT STD_LOGIC;
    jj_c4_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    jj_c4_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c4_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c4_full_n : IN STD_LOGIC;
    jj_c4_write : OUT STD_LOGIC;
    jj_c5_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    jj_c5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c5_full_n : IN STD_LOGIC;
    jj_c5_write : OUT STD_LOGIC;
    jj_c6_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    jj_c6_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c6_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    jj_c6_full_n : IN STD_LOGIC;
    jj_c6_write : OUT STD_LOGIC );
end;


architecture behav of Bert_layer_init_block_AB_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal ii_c_blk_n : STD_LOGIC;
    signal ii_c1_blk_n : STD_LOGIC;
    signal ii_c2_blk_n : STD_LOGIC;
    signal ii_c3_blk_n : STD_LOGIC;
    signal jj_c_blk_n : STD_LOGIC;
    signal jj_c4_blk_n : STD_LOGIC;
    signal jj_c5_blk_n : STD_LOGIC;
    signal jj_c6_blk_n : STD_LOGIC;
    signal tmp_fu_198_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_224 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_s_fu_206_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_229 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_idle : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_ready : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_write : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_0_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_1_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_2_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_3_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_0_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_1_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_2_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_3_ce0 : STD_LOGIC;
    signal grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_init_block_AB_proc_Pipeline_init_block_AB IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        block_A_loader_01_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_A_loader_01_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_01_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_01_full_n : IN STD_LOGIC;
        block_A_loader_01_write : OUT STD_LOGIC;
        block_A_loader_12_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_A_loader_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_12_full_n : IN STD_LOGIC;
        block_A_loader_12_write : OUT STD_LOGIC;
        block_A_loader_23_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_A_loader_23_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_23_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_23_full_n : IN STD_LOGIC;
        block_A_loader_23_write : OUT STD_LOGIC;
        block_A_loader_34_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_A_loader_34_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_34_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_34_full_n : IN STD_LOGIC;
        block_A_loader_34_write : OUT STD_LOGIC;
        block_B_loader_05_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_B_loader_05_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_05_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_05_full_n : IN STD_LOGIC;
        block_B_loader_05_write : OUT STD_LOGIC;
        block_B_loader_16_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_B_loader_16_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_16_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_16_full_n : IN STD_LOGIC;
        block_B_loader_16_write : OUT STD_LOGIC;
        block_B_loader_27_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_B_loader_27_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_27_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_27_full_n : IN STD_LOGIC;
        block_B_loader_27_write : OUT STD_LOGIC;
        block_B_loader_38_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_B_loader_38_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_38_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_38_full_n : IN STD_LOGIC;
        block_B_loader_38_write : OUT STD_LOGIC;
        zext_ln174 : IN STD_LOGIC_VECTOR (7 downto 0);
        A_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        A_0_ce0 : OUT STD_LOGIC;
        A_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        A_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        A_1_ce0 : OUT STD_LOGIC;
        A_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        A_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        A_2_ce0 : OUT STD_LOGIC;
        A_2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        A_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        A_3_ce0 : OUT STD_LOGIC;
        A_3_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        zext_ln174_7 : IN STD_LOGIC_VECTOR (7 downto 0);
        B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        B_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        B_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_q0 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160 : component Bert_layer_init_block_AB_proc_Pipeline_init_block_AB
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start,
        ap_done => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done,
        ap_idle => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_idle,
        ap_ready => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_ready,
        block_A_loader_01_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_din,
        block_A_loader_01_num_data_valid => ap_const_lv2_0,
        block_A_loader_01_fifo_cap => ap_const_lv2_0,
        block_A_loader_01_full_n => block_A_loader_01_full_n,
        block_A_loader_01_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_write,
        block_A_loader_12_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_din,
        block_A_loader_12_num_data_valid => ap_const_lv2_0,
        block_A_loader_12_fifo_cap => ap_const_lv2_0,
        block_A_loader_12_full_n => block_A_loader_12_full_n,
        block_A_loader_12_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_write,
        block_A_loader_23_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_din,
        block_A_loader_23_num_data_valid => ap_const_lv2_0,
        block_A_loader_23_fifo_cap => ap_const_lv2_0,
        block_A_loader_23_full_n => block_A_loader_23_full_n,
        block_A_loader_23_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_write,
        block_A_loader_34_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_din,
        block_A_loader_34_num_data_valid => ap_const_lv2_0,
        block_A_loader_34_fifo_cap => ap_const_lv2_0,
        block_A_loader_34_full_n => block_A_loader_34_full_n,
        block_A_loader_34_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_write,
        block_B_loader_05_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_din,
        block_B_loader_05_num_data_valid => ap_const_lv2_0,
        block_B_loader_05_fifo_cap => ap_const_lv2_0,
        block_B_loader_05_full_n => block_B_loader_05_full_n,
        block_B_loader_05_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_write,
        block_B_loader_16_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_din,
        block_B_loader_16_num_data_valid => ap_const_lv2_0,
        block_B_loader_16_fifo_cap => ap_const_lv2_0,
        block_B_loader_16_full_n => block_B_loader_16_full_n,
        block_B_loader_16_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_write,
        block_B_loader_27_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_din,
        block_B_loader_27_num_data_valid => ap_const_lv2_0,
        block_B_loader_27_fifo_cap => ap_const_lv2_0,
        block_B_loader_27_full_n => block_B_loader_27_full_n,
        block_B_loader_27_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_write,
        block_B_loader_38_din => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_din,
        block_B_loader_38_num_data_valid => ap_const_lv2_0,
        block_B_loader_38_fifo_cap => ap_const_lv2_0,
        block_B_loader_38_full_n => block_B_loader_38_full_n,
        block_B_loader_38_write => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_write,
        zext_ln174 => tmp_reg_224,
        A_0_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_0_address0,
        A_0_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_0_ce0,
        A_0_q0 => A_0_q0,
        A_1_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_1_address0,
        A_1_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_1_ce0,
        A_1_q0 => A_1_q0,
        A_2_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_2_address0,
        A_2_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_2_ce0,
        A_2_q0 => A_2_q0,
        A_3_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_3_address0,
        A_3_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_3_ce0,
        A_3_q0 => A_3_q0,
        zext_ln174_7 => tmp_s_reg_229,
        B_0_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_0_address0,
        B_0_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_0_ce0,
        B_0_q0 => B_0_q0,
        B_1_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_1_address0,
        B_1_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_1_ce0,
        B_1_q0 => B_1_q0,
        B_2_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_2_address0,
        B_2_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_2_ce0,
        B_2_q0 => B_2_q0,
        B_3_address0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_3_address0,
        B_3_ce0 => grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_3_ce0,
        B_3_q0 => B_3_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_ready = ap_const_logic_1)) then 
                    grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    tmp_reg_224(7 downto 6) <= tmp_fu_198_p3(7 downto 6);
                    tmp_s_reg_229(7 downto 6) <= tmp_s_fu_206_p3(7 downto 6);
            end if;
        end if;
    end process;
    tmp_reg_224(5 downto 0) <= "000000";
    tmp_s_reg_229(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n, grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    A_0_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_0_address0;
    A_0_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_0_ce0;
    A_1_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_1_address0;
    A_1_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_1_ce0;
    A_2_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_2_address0;
    A_2_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_2_ce0;
    A_3_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_3_address0;
    A_3_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_A_3_ce0;
    B_0_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_0_address0;
    B_0_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_0_ce0;
    B_1_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_1_address0;
    B_1_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_1_ce0;
    B_2_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_2_address0;
    B_2_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_2_ce0;
    B_3_address0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_3_address0;
    B_3_ce0 <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_B_3_ce0;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done)
    begin
        if ((grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done, ap_CS_fsm_state3)
    begin
        if (((grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    block_A_loader_01_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_din;

    block_A_loader_01_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_A_loader_01_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_01_write;
        else 
            block_A_loader_01_write <= ap_const_logic_0;
        end if; 
    end process;

    block_A_loader_12_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_din;

    block_A_loader_12_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_A_loader_12_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_12_write;
        else 
            block_A_loader_12_write <= ap_const_logic_0;
        end if; 
    end process;

    block_A_loader_23_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_din;

    block_A_loader_23_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_A_loader_23_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_23_write;
        else 
            block_A_loader_23_write <= ap_const_logic_0;
        end if; 
    end process;

    block_A_loader_34_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_din;

    block_A_loader_34_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_A_loader_34_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_A_loader_34_write;
        else 
            block_A_loader_34_write <= ap_const_logic_0;
        end if; 
    end process;

    block_B_loader_05_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_din;

    block_B_loader_05_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_B_loader_05_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_05_write;
        else 
            block_B_loader_05_write <= ap_const_logic_0;
        end if; 
    end process;

    block_B_loader_16_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_din;

    block_B_loader_16_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_B_loader_16_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_16_write;
        else 
            block_B_loader_16_write <= ap_const_logic_0;
        end if; 
    end process;

    block_B_loader_27_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_din;

    block_B_loader_27_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_B_loader_27_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_27_write;
        else 
            block_B_loader_27_write <= ap_const_logic_0;
        end if; 
    end process;

    block_B_loader_38_din <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_din;

    block_B_loader_38_write_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            block_B_loader_38_write <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_block_B_loader_38_write;
        else 
            block_B_loader_38_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start <= grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_start_reg;

    ii_c1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c1_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c1_blk_n <= ii_c1_full_n;
        else 
            ii_c1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ii_c1_din <= ii;

    ii_c1_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c1_write <= ap_const_logic_1;
        else 
            ii_c1_write <= ap_const_logic_0;
        end if; 
    end process;


    ii_c2_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c2_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c2_blk_n <= ii_c2_full_n;
        else 
            ii_c2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ii_c2_din <= ii;

    ii_c2_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c2_write <= ap_const_logic_1;
        else 
            ii_c2_write <= ap_const_logic_0;
        end if; 
    end process;


    ii_c3_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c3_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c3_blk_n <= ii_c3_full_n;
        else 
            ii_c3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ii_c3_din <= ii;

    ii_c3_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c3_write <= ap_const_logic_1;
        else 
            ii_c3_write <= ap_const_logic_0;
        end if; 
    end process;


    ii_c_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c_blk_n <= ii_c_full_n;
        else 
            ii_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    ii_c_din <= ii;

    ii_c_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ii_c_write <= ap_const_logic_1;
        else 
            ii_c_write <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done, ap_CS_fsm_state3)
    begin
        if (((grp_init_block_AB_proc_Pipeline_init_block_AB_fu_160_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    jj_c4_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, jj_c4_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c4_blk_n <= jj_c4_full_n;
        else 
            jj_c4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    jj_c4_din <= jj;

    jj_c4_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c4_write <= ap_const_logic_1;
        else 
            jj_c4_write <= ap_const_logic_0;
        end if; 
    end process;


    jj_c5_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, jj_c5_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c5_blk_n <= jj_c5_full_n;
        else 
            jj_c5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    jj_c5_din <= jj;

    jj_c5_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c5_write <= ap_const_logic_1;
        else 
            jj_c5_write <= ap_const_logic_0;
        end if; 
    end process;


    jj_c6_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c6_blk_n <= jj_c6_full_n;
        else 
            jj_c6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    jj_c6_din <= jj;

    jj_c6_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c6_write <= ap_const_logic_1;
        else 
            jj_c6_write <= ap_const_logic_0;
        end if; 
    end process;


    jj_c_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, jj_c_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c_blk_n <= jj_c_full_n;
        else 
            jj_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    jj_c_din <= jj;

    jj_c_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ii_c_full_n, ii_c1_full_n, ii_c2_full_n, ii_c3_full_n, jj_c_full_n, jj_c4_full_n, jj_c5_full_n, jj_c6_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (jj_c6_full_n = ap_const_logic_0) or (jj_c5_full_n = ap_const_logic_0) or (jj_c4_full_n = ap_const_logic_0) or (jj_c_full_n = ap_const_logic_0) or (ii_c3_full_n = ap_const_logic_0) or (ii_c2_full_n = ap_const_logic_0) or (ii_c1_full_n = ap_const_logic_0) or (ii_c_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            jj_c_write <= ap_const_logic_1;
        else 
            jj_c_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_198_p3 <= (ii & ap_const_lv6_0);
    tmp_s_fu_206_p3 <= (jj & ap_const_lv6_0);
end behav;
