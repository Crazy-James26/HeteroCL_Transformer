-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_Layer_norm_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v137_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v137_ce0 : OUT STD_LOGIC;
    v137_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v262_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v262_ce0 : OUT STD_LOGIC;
    v262_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v263_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v263_ce0 : OUT STD_LOGIC;
    v263_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v264_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_0_ce0 : OUT STD_LOGIC;
    v264_0_we0 : OUT STD_LOGIC;
    v264_0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_1_ce0 : OUT STD_LOGIC;
    v264_1_we0 : OUT STD_LOGIC;
    v264_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_2_ce0 : OUT STD_LOGIC;
    v264_2_we0 : OUT STD_LOGIC;
    v264_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_3_ce0 : OUT STD_LOGIC;
    v264_3_we0 : OUT STD_LOGIC;
    v264_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_4_ce0 : OUT STD_LOGIC;
    v264_4_we0 : OUT STD_LOGIC;
    v264_4_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_5_ce0 : OUT STD_LOGIC;
    v264_5_we0 : OUT STD_LOGIC;
    v264_5_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_6_ce0 : OUT STD_LOGIC;
    v264_6_we0 : OUT STD_LOGIC;
    v264_6_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_7_ce0 : OUT STD_LOGIC;
    v264_7_we0 : OUT STD_LOGIC;
    v264_7_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_8_ce0 : OUT STD_LOGIC;
    v264_8_we0 : OUT STD_LOGIC;
    v264_8_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_9_ce0 : OUT STD_LOGIC;
    v264_9_we0 : OUT STD_LOGIC;
    v264_9_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_10_ce0 : OUT STD_LOGIC;
    v264_10_we0 : OUT STD_LOGIC;
    v264_10_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v264_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v264_11_ce0 : OUT STD_LOGIC;
    v264_11_we0 : OUT STD_LOGIC;
    v264_11_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    grp_fu_1483_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1483_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1483_p_ce : OUT STD_LOGIC;
    grp_fu_1480_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1480_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1480_p_ce : OUT STD_LOGIC;
    grp_fu_1486_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1486_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1486_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1486_p_ce : OUT STD_LOGIC;
    grp_fu_1490_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1490_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1490_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_1490_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_1490_p_ce : OUT STD_LOGIC;
    grp_fu_1472_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1472_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1472_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_1472_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1472_p_ce : OUT STD_LOGIC;
    grp_fu_1468_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1468_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1468_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1468_p_ce : OUT STD_LOGIC;
    grp_fu_1476_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1476_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1476_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1476_p_ce : OUT STD_LOGIC;
    grp_fu_1494_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1494_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1494_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_1494_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1494_p_ce : OUT STD_LOGIC );
end;


architecture behav of Bert_layer_Layer_norm_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (35 downto 0) := "000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (35 downto 0) := "000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (35 downto 0) := "000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (35 downto 0) := "000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (35 downto 0) := "000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (35 downto 0) := "000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (35 downto 0) := "000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (35 downto 0) := "000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (35 downto 0) := "000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (35 downto 0) := "001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (35 downto 0) := "010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (35 downto 0) := "100000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_3EE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i8_1_reg_350 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln235_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mean2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mean2_load_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln238_fu_285_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln238_reg_382 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i9_1_reg_387 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln260_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_reg_412 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add3_reg_417 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal v_reg_422 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal v1_reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal sub_ln264_fu_336_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln264_reg_432 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal mean_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_ce0 : STD_LOGIC;
    signal mean_we0 : STD_LOGIC;
    signal mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mean2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_ce0 : STD_LOGIC;
    signal mean2_we0 : STD_LOGIC;
    signal mean2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal var_ce0 : STD_LOGIC;
    signal var_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_done : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_idle : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_ready : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_done : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_idle : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_ready : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_done : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_idle : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_ready : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_done : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_idle : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_ready : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v262_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v262_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v263_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v263_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_ce0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_we0 : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_ce : STD_LOGIC;
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start_reg : STD_LOGIC := '0';
    signal grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal zext_ln235_fu_251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln260_fu_307_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i8_fu_82 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln235_fu_245_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i9_fu_98 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln260_fu_301_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_31_fu_274_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_267_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln238_fu_281_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_33_fu_325_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_318_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln264_fu_332_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_437_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_437_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_437_ce : STD_LOGIC;
    signal grp_fu_441_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_ce : STD_LOGIC;
    signal grp_fu_445_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_445_ce : STD_LOGIC;
    signal grp_fu_449_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_Layer_norm_1_Pipeline_VITIS_LOOP_227_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mean_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mean_ce0 : OUT STD_LOGIC;
        mean_we0 : OUT STD_LOGIC;
        mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_Layer_norm_1_Pipeline_VITIS_LOOP_231_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mean2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mean2_ce0 : OUT STD_LOGIC;
        mean2_we0 : OUT STD_LOGIC;
        mean2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_Layer_norm_1_Pipeline_l_j6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mean2_load : IN STD_LOGIC_VECTOR (31 downto 0);
        mean_load : IN STD_LOGIC_VECTOR (31 downto 0);
        var_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        var_ce0 : OUT STD_LOGIC;
        var_we0 : OUT STD_LOGIC;
        var_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        zext_ln235 : IN STD_LOGIC_VECTOR (3 downto 0);
        mean2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mean2_ce0 : OUT STD_LOGIC;
        mean2_we0 : OUT STD_LOGIC;
        mean2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mean_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mean_ce0 : OUT STD_LOGIC;
        mean_we0 : OUT STD_LOGIC;
        mean_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sub_ln238 : IN STD_LOGIC_VECTOR (13 downto 0);
        v137_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v137_ce0 : OUT STD_LOGIC;
        v137_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_437_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_ce : OUT STD_LOGIC;
        grp_fu_441_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_441_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_441_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_441_p_ce : OUT STD_LOGIC;
        grp_fu_445_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_445_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_445_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_445_p_ce : OUT STD_LOGIC );
    end component;


    component Bert_layer_Layer_norm_1_Pipeline_l_j7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v264_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_0_ce0 : OUT STD_LOGIC;
        v264_0_we0 : OUT STD_LOGIC;
        v264_0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        sub_ln264 : IN STD_LOGIC_VECTOR (13 downto 0);
        v137_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v137_ce0 : OUT STD_LOGIC;
        v137_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v262_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v262_ce0 : OUT STD_LOGIC;
        v262_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v167 : IN STD_LOGIC_VECTOR (31 downto 0);
        v172 : IN STD_LOGIC_VECTOR (31 downto 0);
        v263_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v263_ce0 : OUT STD_LOGIC;
        v263_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i9 : IN STD_LOGIC_VECTOR (3 downto 0);
        v264_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_1_ce0 : OUT STD_LOGIC;
        v264_1_we0 : OUT STD_LOGIC;
        v264_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_2_ce0 : OUT STD_LOGIC;
        v264_2_we0 : OUT STD_LOGIC;
        v264_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_3_ce0 : OUT STD_LOGIC;
        v264_3_we0 : OUT STD_LOGIC;
        v264_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_4_ce0 : OUT STD_LOGIC;
        v264_4_we0 : OUT STD_LOGIC;
        v264_4_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_5_ce0 : OUT STD_LOGIC;
        v264_5_we0 : OUT STD_LOGIC;
        v264_5_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_6_ce0 : OUT STD_LOGIC;
        v264_6_we0 : OUT STD_LOGIC;
        v264_6_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_7_ce0 : OUT STD_LOGIC;
        v264_7_we0 : OUT STD_LOGIC;
        v264_7_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_8_ce0 : OUT STD_LOGIC;
        v264_8_we0 : OUT STD_LOGIC;
        v264_8_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_9_ce0 : OUT STD_LOGIC;
        v264_9_we0 : OUT STD_LOGIC;
        v264_9_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_10_ce0 : OUT STD_LOGIC;
        v264_10_we0 : OUT STD_LOGIC;
        v264_10_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v264_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v264_11_ce0 : OUT STD_LOGIC;
        v264_11_we0 : OUT STD_LOGIC;
        v264_11_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        grp_fu_437_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_437_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_437_p_ce : OUT STD_LOGIC;
        grp_fu_449_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_449_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_449_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_449_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_449_p_ce : OUT STD_LOGIC;
        grp_fu_441_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_441_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_441_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_441_p_ce : OUT STD_LOGIC;
        grp_fu_445_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_445_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_445_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_445_p_ce : OUT STD_LOGIC;
        grp_fu_211_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_211_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_211_p_ce : OUT STD_LOGIC );
    end component;


    component Bert_layer_fptrunc_64ns_32_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Bert_layer_fsqrt_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_dadd_64ns_64ns_64_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Bert_layer_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_Self_attention_inp_sumRow_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mean_U : component Bert_layer_Self_attention_inp_sumRow_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean_address0,
        ce0 => mean_ce0,
        we0 => mean_we0,
        d0 => mean_d0,
        q0 => mean_q0);

    mean2_U : component Bert_layer_Self_attention_inp_sumRow_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean2_address0,
        ce0 => mean2_ce0,
        we0 => mean2_we0,
        d0 => mean2_d0,
        q0 => mean2_q0);

    var_U : component Bert_layer_Self_attention_inp_sumRow_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => var_address0,
        ce0 => var_ce0,
        we0 => var_we0,
        d0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_d0,
        q0 => var_q0);

    grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145 : component Bert_layer_Layer_norm_1_Pipeline_VITIS_LOOP_227_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start,
        ap_done => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_done,
        ap_idle => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_idle,
        ap_ready => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_ready,
        mean_address0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_address0,
        mean_ce0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_ce0,
        mean_we0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_we0,
        mean_d0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_d0);

    grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151 : component Bert_layer_Layer_norm_1_Pipeline_VITIS_LOOP_231_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start,
        ap_done => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_done,
        ap_idle => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_idle,
        ap_ready => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_ready,
        mean2_address0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_address0,
        mean2_ce0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_ce0,
        mean2_we0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_we0,
        mean2_d0 => grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_d0);

    grp_Layer_norm_1_Pipeline_l_j6_fu_157 : component Bert_layer_Layer_norm_1_Pipeline_l_j6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start,
        ap_done => grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_done,
        ap_idle => grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_idle,
        ap_ready => grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_ready,
        mean2_load => mean2_load_reg_377,
        mean_load => reg_225,
        var_address0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_address0,
        var_ce0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_ce0,
        var_we0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_we0,
        var_d0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_d0,
        zext_ln235 => i8_1_reg_350,
        mean2_address0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_address0,
        mean2_ce0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_ce0,
        mean2_we0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_we0,
        mean2_d0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_d0,
        mean_address0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_address0,
        mean_ce0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_ce0,
        mean_we0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_we0,
        mean_d0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_d0,
        sub_ln238 => sub_ln238_reg_382,
        v137_address0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_address0,
        v137_ce0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_ce0,
        v137_q0 => v137_q0,
        grp_fu_437_p_din0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din0,
        grp_fu_437_p_din1 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din1,
        grp_fu_437_p_opcode => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_opcode,
        grp_fu_437_p_dout0 => grp_fu_1472_p_dout0,
        grp_fu_437_p_ce => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_ce,
        grp_fu_441_p_din0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din0,
        grp_fu_441_p_din1 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din1,
        grp_fu_441_p_dout0 => grp_fu_1468_p_dout0,
        grp_fu_441_p_ce => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_ce,
        grp_fu_445_p_din0 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din0,
        grp_fu_445_p_din1 => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din1,
        grp_fu_445_p_dout0 => grp_fu_1476_p_dout0,
        grp_fu_445_p_ce => grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_ce);

    grp_Layer_norm_1_Pipeline_l_j7_fu_170 : component Bert_layer_Layer_norm_1_Pipeline_l_j7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start,
        ap_done => grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_done,
        ap_idle => grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_idle,
        ap_ready => grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_ready,
        v264_0_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_address0,
        v264_0_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_ce0,
        v264_0_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_we0,
        v264_0_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_d0,
        sub_ln264 => sub_ln264_reg_432,
        v137_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_address0,
        v137_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_ce0,
        v137_q0 => v137_q0,
        v262_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v262_address0,
        v262_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v262_ce0,
        v262_q0 => v262_q0,
        v167 => reg_225,
        v172 => v1_reg_427,
        v263_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v263_address0,
        v263_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v263_ce0,
        v263_q0 => v263_q0,
        i9 => i9_1_reg_387,
        v264_1_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_address0,
        v264_1_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_ce0,
        v264_1_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_we0,
        v264_1_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_d0,
        v264_2_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_address0,
        v264_2_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_ce0,
        v264_2_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_we0,
        v264_2_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_d0,
        v264_3_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_address0,
        v264_3_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_ce0,
        v264_3_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_we0,
        v264_3_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_d0,
        v264_4_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_address0,
        v264_4_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_ce0,
        v264_4_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_we0,
        v264_4_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_d0,
        v264_5_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_address0,
        v264_5_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_ce0,
        v264_5_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_we0,
        v264_5_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_d0,
        v264_6_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_address0,
        v264_6_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_ce0,
        v264_6_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_we0,
        v264_6_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_d0,
        v264_7_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_address0,
        v264_7_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_ce0,
        v264_7_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_we0,
        v264_7_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_d0,
        v264_8_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_address0,
        v264_8_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_ce0,
        v264_8_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_we0,
        v264_8_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_d0,
        v264_9_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_address0,
        v264_9_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_ce0,
        v264_9_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_we0,
        v264_9_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_d0,
        v264_10_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_address0,
        v264_10_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_ce0,
        v264_10_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_we0,
        v264_10_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_d0,
        v264_11_address0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_address0,
        v264_11_ce0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_ce0,
        v264_11_we0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_we0,
        v264_11_d0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_d0,
        grp_fu_437_p_din0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din0,
        grp_fu_437_p_din1 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din1,
        grp_fu_437_p_opcode => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_opcode,
        grp_fu_437_p_dout0 => grp_fu_1472_p_dout0,
        grp_fu_437_p_ce => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_ce,
        grp_fu_449_p_din0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_din0,
        grp_fu_449_p_din1 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_din1,
        grp_fu_449_p_opcode => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_opcode,
        grp_fu_449_p_dout0 => grp_fu_1494_p_dout0,
        grp_fu_449_p_ce => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_ce,
        grp_fu_441_p_din0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din0,
        grp_fu_441_p_din1 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din1,
        grp_fu_441_p_dout0 => grp_fu_1468_p_dout0,
        grp_fu_441_p_ce => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_ce,
        grp_fu_445_p_din0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din0,
        grp_fu_445_p_din1 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din1,
        grp_fu_445_p_dout0 => grp_fu_1476_p_dout0,
        grp_fu_445_p_ce => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_ce,
        grp_fu_211_p_din0 => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_din0,
        grp_fu_211_p_dout0 => grp_fu_1480_p_dout0,
        grp_fu_211_p_ce => grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_ready = ap_const_logic_1)) then 
                    grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_ready = ap_const_logic_1)) then 
                    grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_ready = ap_const_logic_1)) then 
                    grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_ready = ap_const_logic_1)) then 
                    grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i8_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i8_fu_82 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln235_fu_239_p2 = ap_const_lv1_0))) then 
                i8_fu_82 <= add_ln235_fu_245_p2;
            end if; 
        end if;
    end process;

    i9_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln235_fu_239_p2 = ap_const_lv1_1))) then 
                i9_fu_98 <= ap_const_lv4_0;
            elsif (((icmp_ln260_fu_295_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i9_fu_98 <= add_ln260_fu_301_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add3_reg_417 <= grp_fu_1490_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                conv_reg_412 <= grp_fu_1480_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i8_1_reg_350 <= i8_fu_82;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                i9_1_reg_387 <= i9_fu_98;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                mean2_load_reg_377 <= mean2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_225 <= mean_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    sub_ln238_reg_382(13 downto 8) <= sub_ln238_fu_285_p2(13 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                    sub_ln264_reg_432(13 downto 8) <= sub_ln264_fu_336_p2(13 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                v1_reg_427 <= grp_fu_1486_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                v_reg_422 <= grp_fu_1483_p_dout0;
            end if;
        end if;
    end process;
    sub_ln238_reg_382(7 downto 0) <= "00000000";
    sub_ln264_reg_432(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln235_fu_239_p2, ap_CS_fsm_state7, icmp_ln260_fu_295_p2, grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_done, grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state36, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln235_fu_239_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln260_fu_295_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln235_fu_245_p2 <= std_logic_vector(unsigned(i8_fu_82) + unsigned(ap_const_lv4_1));
    add_ln260_fu_301_p2 <= std_logic_vector(unsigned(i9_fu_98) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_done)
    begin
        if ((grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_done)
    begin
        if ((grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_done, grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_done = ap_const_logic_0) or (grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln260_fu_295_p2)
    begin
        if ((((icmp_ln260_fu_295_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, icmp_ln260_fu_295_p2)
    begin
        if (((icmp_ln260_fu_295_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_ap_start_reg;
    grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_ap_start_reg;
    grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_ap_start_reg;
    grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_ap_start_reg;
    grp_fu_1468_p_ce <= grp_fu_441_ce;
    grp_fu_1468_p_din0 <= grp_fu_441_p0;
    grp_fu_1468_p_din1 <= grp_fu_441_p1;
    grp_fu_1472_p_ce <= grp_fu_437_ce;
    grp_fu_1472_p_din0 <= grp_fu_437_p0;
    grp_fu_1472_p_din1 <= grp_fu_437_p1;
    grp_fu_1472_p_opcode <= grp_fu_437_opcode;
    grp_fu_1476_p_ce <= grp_fu_445_ce;
    grp_fu_1476_p_din0 <= grp_fu_445_p0;
    grp_fu_1476_p_din1 <= grp_fu_445_p1;
    grp_fu_1480_p_ce <= grp_fu_211_ce;
    grp_fu_1480_p_din0 <= grp_fu_211_p0;
    grp_fu_1483_p_ce <= ap_const_logic_1;
    grp_fu_1483_p_din0 <= add3_reg_417;
    grp_fu_1486_p_ce <= ap_const_logic_1;
    grp_fu_1486_p_din0 <= ap_const_lv32_0;
    grp_fu_1486_p_din1 <= v_reg_422;
    grp_fu_1490_p_ce <= ap_const_logic_1;
    grp_fu_1490_p_din0 <= conv_reg_412;
    grp_fu_1490_p_din1 <= ap_const_lv64_3EE4F8B588E368F1;
    grp_fu_1490_p_opcode <= ap_const_lv2_0;
    grp_fu_1494_p_ce <= grp_fu_449_ce;
    grp_fu_1494_p_din0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_din0;
    grp_fu_1494_p_din1 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_din1;
    grp_fu_1494_p_opcode <= ap_const_lv2_0;

    grp_fu_211_ce_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_ce, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_211_ce <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_ce;
        else 
            grp_fu_211_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_211_p0_assign_proc : process(ap_CS_fsm_state8, var_q0, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_din0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_211_p0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_211_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_211_p0 <= var_q0;
        else 
            grp_fu_211_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_437_ce_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_ce, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_ce, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_437_ce <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_437_ce <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_ce;
        else 
            grp_fu_437_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_437_opcode_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_opcode, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_opcode, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_437_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_437_opcode <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_opcode;
        else 
            grp_fu_437_opcode <= "XX";
        end if; 
    end process;


    grp_fu_437_p0_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din0, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din0, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_437_p0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_437_p0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din0;
        else 
            grp_fu_437_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_437_p1_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din1, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din1, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_437_p1 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_437_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_437_p1 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_437_p_din1;
        else 
            grp_fu_437_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_441_ce_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_ce, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_ce, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_441_ce <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_441_ce <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_ce;
        else 
            grp_fu_441_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_441_p0_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din0, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din0, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_441_p0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_441_p0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din0;
        else 
            grp_fu_441_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_441_p1_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din1, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din1, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_441_p1 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_441_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_441_p1 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_441_p_din1;
        else 
            grp_fu_441_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_445_ce_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_ce, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_ce, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_445_ce <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_445_ce <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_ce;
        else 
            grp_fu_445_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_445_p0_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din0, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din0, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_445_p0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_445_p0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din0;
        else 
            grp_fu_445_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_445_p1_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din1, grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din1, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_445_p1 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_445_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_445_p1 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_grp_fu_445_p_din1;
        else 
            grp_fu_445_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_449_ce_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_ce, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_449_ce <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_grp_fu_449_p_ce;
        else 
            grp_fu_449_ce <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln235_fu_239_p2 <= "1" when (i8_fu_82 = ap_const_lv4_C) else "0";
    icmp_ln260_fu_295_p2 <= "1" when (i9_fu_98 = ap_const_lv4_C) else "0";

    mean2_address0_assign_proc : process(ap_CS_fsm_state3, grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_address0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_address0, ap_CS_fsm_state2, ap_CS_fsm_state6, zext_ln235_fu_251_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean2_address0 <= zext_ln235_fu_251_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean2_address0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean2_address0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_address0;
        else 
            mean2_address0 <= "XXXX";
        end if; 
    end process;


    mean2_ce0_assign_proc : process(ap_CS_fsm_state3, grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_ce0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean2_ce0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean2_ce0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_ce0;
        else 
            mean2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean2_d0_assign_proc : process(grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_d0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_d0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean2_d0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean2_d0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_d0;
        else 
            mean2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean2_we0_assign_proc : process(grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_we0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_we0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean2_we0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean2_we0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_231_2_fu_151_mean2_we0;
        else 
            mean2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_address0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_address0, ap_CS_fsm_state2, ap_CS_fsm_state6, zext_ln235_fu_251_p1, zext_ln260_fu_307_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mean_address0 <= zext_ln260_fu_307_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean_address0 <= zext_ln235_fu_251_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean_address0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_address0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_address0;
        else 
            mean_address0 <= "XXXX";
        end if; 
    end process;


    mean_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_ce0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mean_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean_ce0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_ce0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_ce0;
        else 
            mean_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_d0_assign_proc : process(grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_d0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_d0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean_d0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_d0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_d0;
        else 
            mean_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean_we0_assign_proc : process(grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_we0, grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_we0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            mean_we0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_mean_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_we0 <= grp_Layer_norm_1_Pipeline_VITIS_LOOP_227_1_fu_145_mean_we0;
        else 
            mean_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln238_fu_285_p2 <= std_logic_vector(unsigned(tmp_s_fu_267_p3) - unsigned(zext_ln238_fu_281_p1));
    sub_ln264_fu_336_p2 <= std_logic_vector(unsigned(tmp_32_fu_318_p3) - unsigned(zext_ln264_fu_332_p1));
    tmp_31_fu_274_p3 <= (i8_1_reg_350 & ap_const_lv8_0);
    tmp_32_fu_318_p3 <= (i9_1_reg_387 & ap_const_lv10_0);
    tmp_33_fu_325_p3 <= (i9_1_reg_387 & ap_const_lv8_0);
    tmp_s_fu_267_p3 <= (i8_1_reg_350 & ap_const_lv10_0);

    v137_address0_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_address0, grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_address0, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            v137_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v137_address0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_address0;
        else 
            v137_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    v137_ce0_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_ce0, grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_ce0, ap_CS_fsm_state6, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            v137_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v137_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v137_ce0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_v137_ce0;
        else 
            v137_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v262_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v262_address0;
    v262_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v262_ce0;
    v263_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v263_address0;
    v263_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v263_ce0;
    v264_0_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_address0;
    v264_0_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_ce0;
    v264_0_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_d0;
    v264_0_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_0_we0;
    v264_10_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_address0;
    v264_10_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_ce0;
    v264_10_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_d0;
    v264_10_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_10_we0;
    v264_11_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_address0;
    v264_11_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_ce0;
    v264_11_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_d0;
    v264_11_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_11_we0;
    v264_1_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_address0;
    v264_1_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_ce0;
    v264_1_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_d0;
    v264_1_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_1_we0;
    v264_2_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_address0;
    v264_2_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_ce0;
    v264_2_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_d0;
    v264_2_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_2_we0;
    v264_3_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_address0;
    v264_3_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_ce0;
    v264_3_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_d0;
    v264_3_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_3_we0;
    v264_4_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_address0;
    v264_4_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_ce0;
    v264_4_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_d0;
    v264_4_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_4_we0;
    v264_5_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_address0;
    v264_5_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_ce0;
    v264_5_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_d0;
    v264_5_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_5_we0;
    v264_6_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_address0;
    v264_6_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_ce0;
    v264_6_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_d0;
    v264_6_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_6_we0;
    v264_7_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_address0;
    v264_7_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_ce0;
    v264_7_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_d0;
    v264_7_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_7_we0;
    v264_8_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_address0;
    v264_8_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_ce0;
    v264_8_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_d0;
    v264_8_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_8_we0;
    v264_9_address0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_address0;
    v264_9_ce0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_ce0;
    v264_9_d0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_d0;
    v264_9_we0 <= grp_Layer_norm_1_Pipeline_l_j7_fu_170_v264_9_we0;

    var_address0_assign_proc : process(ap_CS_fsm_state7, grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_address0, ap_CS_fsm_state6, zext_ln260_fu_307_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            var_address0 <= zext_ln260_fu_307_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            var_address0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_address0;
        else 
            var_address0 <= "XXXX";
        end if; 
    end process;


    var_ce0_assign_proc : process(ap_CS_fsm_state7, grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            var_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            var_ce0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_ce0;
        else 
            var_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var_we0_assign_proc : process(grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            var_we0 <= grp_Layer_norm_1_Pipeline_l_j6_fu_157_var_we0;
        else 
            var_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln235_fu_251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i8_fu_82),64));
    zext_ln238_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_274_p3),14));
    zext_ln260_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i9_fu_98),64));
    zext_ln264_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_325_p3),14));
end behav;
