// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_update_i4_l_j3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_sumRow_address0,
        inp_sumRow_ce0,
        inp_sumRow_q0,
        v100_address0,
        v100_ce0,
        v100_q0,
        v100_1_address0,
        v100_1_ce0,
        v100_1_q0,
        v100_2_address0,
        v100_2_ce0,
        v100_2_q0,
        v100_3_address0,
        v100_3_ce0,
        v100_3_q0,
        v101_V_address0,
        v101_V_ce0,
        v101_V_we0,
        v101_V_d0,
        v101_V_1_address0,
        v101_V_1_ce0,
        v101_V_1_we0,
        v101_V_1_d0,
        v101_V_2_address0,
        v101_V_2_ce0,
        v101_V_2_we0,
        v101_V_2_d0,
        v101_V_3_address0,
        v101_V_3_ce0,
        v101_V_3_we0,
        v101_V_3_d0,
        grp_fu_661_p_din0,
        grp_fu_661_p_din1,
        grp_fu_661_p_dout0,
        grp_fu_661_p_ce,
        grp_fu_665_p_din0,
        grp_fu_665_p_dout0,
        grp_fu_665_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] inp_sumRow_address0;
output   inp_sumRow_ce0;
input  [31:0] inp_sumRow_q0;
output  [5:0] v100_address0;
output   v100_ce0;
input  [31:0] v100_q0;
output  [5:0] v100_1_address0;
output   v100_1_ce0;
input  [31:0] v100_1_q0;
output  [5:0] v100_2_address0;
output   v100_2_ce0;
input  [31:0] v100_2_q0;
output  [5:0] v100_3_address0;
output   v100_3_ce0;
input  [31:0] v100_3_q0;
output  [5:0] v101_V_address0;
output   v101_V_ce0;
output   v101_V_we0;
output  [23:0] v101_V_d0;
output  [5:0] v101_V_1_address0;
output   v101_V_1_ce0;
output   v101_V_1_we0;
output  [23:0] v101_V_1_d0;
output  [5:0] v101_V_2_address0;
output   v101_V_2_ce0;
output   v101_V_2_we0;
output  [23:0] v101_V_2_d0;
output  [5:0] v101_V_3_address0;
output   v101_V_3_ce0;
output   v101_V_3_we0;
output  [23:0] v101_V_3_d0;
output  [31:0] grp_fu_661_p_din0;
output  [31:0] grp_fu_661_p_din1;
input  [31:0] grp_fu_661_p_dout0;
output   grp_fu_661_p_ce;
output  [31:0] grp_fu_665_p_din0;
input  [63:0] grp_fu_665_p_dout0;
output   grp_fu_665_p_ce;

reg ap_idle;
reg inp_sumRow_ce0;
reg v100_ce0;
reg v100_1_ce0;
reg v100_2_ce0;
reg v100_3_ce0;
reg v101_V_ce0;
reg v101_V_we0;
reg v101_V_1_ce0;
reg v101_V_1_we0;
reg v101_V_2_ce0;
reg v101_V_2_we0;
reg v101_V_3_ce0;
reg v101_V_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln92_fu_254_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln92_fu_284_p3;
reg   [3:0] select_ln92_reg_642;
wire   [3:0] select_ln92_1_fu_292_p3;
reg   [3:0] select_ln92_1_reg_647;
wire   [1:0] trunc_ln92_fu_300_p1;
reg   [1:0] trunc_ln92_reg_652;
reg   [1:0] trunc_ln92_reg_652_pp0_iter1_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter2_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter3_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter4_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter5_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter6_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter7_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter8_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter9_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter10_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter11_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter12_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter13_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter14_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter15_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter16_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter17_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter18_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter19_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter20_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter21_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter22_reg;
reg   [1:0] trunc_ln92_reg_652_pp0_iter23_reg;
reg   [1:0] p_cast15_mid2_v_reg_657;
reg   [5:0] v101_V_addr_reg_688;
reg   [5:0] v101_V_addr_reg_688_pp0_iter2_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter3_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter4_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter5_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter6_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter7_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter8_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter9_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter10_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter11_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter12_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter13_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter14_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter15_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter16_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter17_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter18_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter19_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter20_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter21_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter22_reg;
reg   [5:0] v101_V_addr_reg_688_pp0_iter23_reg;
reg   [5:0] v101_V_1_addr_reg_693;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter2_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter3_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter4_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter5_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter6_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter7_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter8_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter9_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter10_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter11_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter12_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter13_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter14_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter15_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter16_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter17_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter18_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter19_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter20_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter21_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter22_reg;
reg   [5:0] v101_V_1_addr_reg_693_pp0_iter23_reg;
reg   [5:0] v101_V_2_addr_reg_698;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter2_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter3_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter4_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter5_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter6_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter7_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter8_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter9_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter10_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter11_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter12_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter13_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter14_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter15_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter16_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter17_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter18_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter19_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter20_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter21_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter22_reg;
reg   [5:0] v101_V_2_addr_reg_698_pp0_iter23_reg;
reg   [5:0] v101_V_3_addr_reg_703;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter2_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter3_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter4_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter5_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter6_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter7_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter8_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter9_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter10_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter11_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter12_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter13_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter14_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter15_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter16_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter17_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter18_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter19_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter20_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter21_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter22_reg;
reg   [5:0] v101_V_3_addr_reg_703_pp0_iter23_reg;
reg   [31:0] inp_sumRow_load_reg_708;
wire   [31:0] v62_fu_384_p6;
reg   [31:0] v62_reg_713;
reg   [31:0] v64_reg_718;
reg   [31:0] v64_reg_718_pp0_iter19_reg;
reg   [31:0] v64_reg_718_pp0_iter20_reg;
reg   [31:0] v64_reg_718_pp0_iter21_reg;
reg   [31:0] v64_reg_718_pp0_iter22_reg;
reg   [0:0] p_Result_s_reg_724;
reg   [10:0] exp_tmp_reg_729;
wire   [51:0] trunc_ln600_fu_423_p1;
reg   [51:0] trunc_ln600_reg_734;
wire   [0:0] icmp_ln606_fu_427_p2;
reg   [0:0] icmp_ln606_reg_739;
reg   [0:0] icmp_ln606_reg_739_pp0_iter21_reg;
reg   [0:0] icmp_ln606_reg_739_pp0_iter22_reg;
wire   [53:0] man_V_2_fu_453_p3;
reg   [53:0] man_V_2_reg_746;
reg   [53:0] man_V_2_reg_746_pp0_iter22_reg;
wire  signed [11:0] sh_amt_fu_484_p3;
reg  signed [11:0] sh_amt_reg_751;
wire   [0:0] icmp_ln617_fu_492_p2;
reg   [0:0] icmp_ln617_reg_758;
wire   [23:0] trunc_ln618_fu_498_p1;
reg   [23:0] trunc_ln618_reg_763;
wire   [0:0] and_ln616_fu_513_p2;
reg   [0:0] and_ln616_reg_769;
reg   [0:0] and_ln616_reg_769_pp0_iter22_reg;
wire  signed [31:0] sext_ln616_fu_519_p1;
reg  signed [31:0] sext_ln616_reg_774;
wire   [0:0] icmp_ln620_fu_522_p2;
reg   [0:0] icmp_ln620_reg_779;
wire   [23:0] select_ln617_fu_559_p3;
reg   [23:0] select_ln617_reg_784;
wire   [23:0] v65_V_fu_610_p3;
reg   [23:0] v65_V_reg_789;
wire   [63:0] zext_ln92_fu_335_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln95_2_fu_372_p1;
reg   [3:0] j3_fu_104;
wire   [3:0] add_ln93_fu_314_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j3_load;
reg   [3:0] i4_fu_108;
reg   [3:0] ap_sig_allocacmp_i4_load;
reg   [7:0] indvar_flatten30_fu_112;
wire   [7:0] add_ln92_1_fu_260_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten30_load;
wire   [0:0] icmp_ln93_fu_278_p2;
wire   [3:0] add_ln92_fu_272_p2;
wire   [3:0] tmp_23_fu_346_p3;
wire   [5:0] tmp_s_fu_339_p3;
wire   [5:0] zext_ln95_fu_353_p1;
wire   [5:0] sub_ln95_fu_357_p2;
wire   [5:0] zext_ln95_1_fu_363_p1;
wire   [5:0] add_ln95_fu_366_p2;
wire   [63:0] ireg_fu_397_p1;
wire   [62:0] trunc_ln590_fu_401_p1;
wire   [52:0] p_Result_32_fu_436_p3;
wire   [53:0] zext_ln604_fu_443_p1;
wire   [53:0] man_V_1_fu_447_p2;
wire   [11:0] zext_ln501_fu_433_p1;
wire   [11:0] F2_fu_460_p2;
wire   [0:0] icmp_ln616_fu_466_p2;
wire   [11:0] add_ln616_fu_472_p2;
wire   [11:0] sub_ln616_fu_478_p2;
wire   [0:0] or_ln617_fu_502_p2;
wire   [0:0] xor_ln617_fu_507_p2;
wire   [23:0] sext_ln616cast_fu_532_p1;
wire   [0:0] icmp_ln638_fu_527_p2;
wire   [23:0] shl_ln639_fu_536_p2;
wire   [0:0] xor_ln606_fu_549_p2;
wire   [0:0] and_ln617_fu_554_p2;
wire   [23:0] select_ln638_fu_541_p3;
wire   [53:0] zext_ln621_fu_566_p1;
wire   [53:0] ashr_ln621_fu_569_p2;
wire   [31:0] bitcast_ln768_fu_578_p1;
wire   [0:0] tmp_fu_581_p3;
wire   [23:0] trunc_ln621_fu_574_p1;
wire   [23:0] select_ln623_fu_589_p3;
wire   [23:0] select_ln620_fu_597_p3;
wire   [23:0] select_ln616_fu_604_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2697(
    .din0(v100_q0),
    .din1(v100_1_q0),
    .din2(v100_2_q0),
    .din3(v100_3_q0),
    .din4(trunc_ln92_reg_652_pp0_iter1_reg),
    .dout(v62_fu_384_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln92_fu_254_p2 == 1'd0))) begin
            i4_fu_108 <= select_ln92_1_fu_292_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i4_fu_108 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln92_fu_254_p2 == 1'd0))) begin
            indvar_flatten30_fu_112 <= add_ln92_1_fu_260_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten30_fu_112 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln92_fu_254_p2 == 1'd0))) begin
            j3_fu_104 <= add_ln93_fu_314_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j3_fu_104 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_739 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln616_reg_769 <= and_ln616_fu_513_p2;
        icmp_ln617_reg_758 <= icmp_ln617_fu_492_p2;
        man_V_2_reg_746 <= man_V_2_fu_453_p3;
        sh_amt_reg_751 <= sh_amt_fu_484_p3;
        trunc_ln618_reg_763 <= trunc_ln618_fu_498_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln616_reg_769_pp0_iter22_reg <= and_ln616_reg_769;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        exp_tmp_reg_729 <= {{ireg_fu_397_p1[62:52]}};
        icmp_ln606_reg_739 <= icmp_ln606_fu_427_p2;
        icmp_ln606_reg_739_pp0_iter21_reg <= icmp_ln606_reg_739;
        icmp_ln606_reg_739_pp0_iter22_reg <= icmp_ln606_reg_739_pp0_iter21_reg;
        inp_sumRow_load_reg_708 <= inp_sumRow_q0;
        man_V_2_reg_746_pp0_iter22_reg <= man_V_2_reg_746;
        p_Result_s_reg_724 <= ireg_fu_397_p1[32'd63];
        trunc_ln600_reg_734 <= trunc_ln600_fu_423_p1;
        trunc_ln92_reg_652_pp0_iter10_reg <= trunc_ln92_reg_652_pp0_iter9_reg;
        trunc_ln92_reg_652_pp0_iter11_reg <= trunc_ln92_reg_652_pp0_iter10_reg;
        trunc_ln92_reg_652_pp0_iter12_reg <= trunc_ln92_reg_652_pp0_iter11_reg;
        trunc_ln92_reg_652_pp0_iter13_reg <= trunc_ln92_reg_652_pp0_iter12_reg;
        trunc_ln92_reg_652_pp0_iter14_reg <= trunc_ln92_reg_652_pp0_iter13_reg;
        trunc_ln92_reg_652_pp0_iter15_reg <= trunc_ln92_reg_652_pp0_iter14_reg;
        trunc_ln92_reg_652_pp0_iter16_reg <= trunc_ln92_reg_652_pp0_iter15_reg;
        trunc_ln92_reg_652_pp0_iter17_reg <= trunc_ln92_reg_652_pp0_iter16_reg;
        trunc_ln92_reg_652_pp0_iter18_reg <= trunc_ln92_reg_652_pp0_iter17_reg;
        trunc_ln92_reg_652_pp0_iter19_reg <= trunc_ln92_reg_652_pp0_iter18_reg;
        trunc_ln92_reg_652_pp0_iter20_reg <= trunc_ln92_reg_652_pp0_iter19_reg;
        trunc_ln92_reg_652_pp0_iter21_reg <= trunc_ln92_reg_652_pp0_iter20_reg;
        trunc_ln92_reg_652_pp0_iter22_reg <= trunc_ln92_reg_652_pp0_iter21_reg;
        trunc_ln92_reg_652_pp0_iter23_reg <= trunc_ln92_reg_652_pp0_iter22_reg;
        trunc_ln92_reg_652_pp0_iter2_reg <= trunc_ln92_reg_652_pp0_iter1_reg;
        trunc_ln92_reg_652_pp0_iter3_reg <= trunc_ln92_reg_652_pp0_iter2_reg;
        trunc_ln92_reg_652_pp0_iter4_reg <= trunc_ln92_reg_652_pp0_iter3_reg;
        trunc_ln92_reg_652_pp0_iter5_reg <= trunc_ln92_reg_652_pp0_iter4_reg;
        trunc_ln92_reg_652_pp0_iter6_reg <= trunc_ln92_reg_652_pp0_iter5_reg;
        trunc_ln92_reg_652_pp0_iter7_reg <= trunc_ln92_reg_652_pp0_iter6_reg;
        trunc_ln92_reg_652_pp0_iter8_reg <= trunc_ln92_reg_652_pp0_iter7_reg;
        trunc_ln92_reg_652_pp0_iter9_reg <= trunc_ln92_reg_652_pp0_iter8_reg;
        v101_V_1_addr_reg_693_pp0_iter10_reg <= v101_V_1_addr_reg_693_pp0_iter9_reg;
        v101_V_1_addr_reg_693_pp0_iter11_reg <= v101_V_1_addr_reg_693_pp0_iter10_reg;
        v101_V_1_addr_reg_693_pp0_iter12_reg <= v101_V_1_addr_reg_693_pp0_iter11_reg;
        v101_V_1_addr_reg_693_pp0_iter13_reg <= v101_V_1_addr_reg_693_pp0_iter12_reg;
        v101_V_1_addr_reg_693_pp0_iter14_reg <= v101_V_1_addr_reg_693_pp0_iter13_reg;
        v101_V_1_addr_reg_693_pp0_iter15_reg <= v101_V_1_addr_reg_693_pp0_iter14_reg;
        v101_V_1_addr_reg_693_pp0_iter16_reg <= v101_V_1_addr_reg_693_pp0_iter15_reg;
        v101_V_1_addr_reg_693_pp0_iter17_reg <= v101_V_1_addr_reg_693_pp0_iter16_reg;
        v101_V_1_addr_reg_693_pp0_iter18_reg <= v101_V_1_addr_reg_693_pp0_iter17_reg;
        v101_V_1_addr_reg_693_pp0_iter19_reg <= v101_V_1_addr_reg_693_pp0_iter18_reg;
        v101_V_1_addr_reg_693_pp0_iter20_reg <= v101_V_1_addr_reg_693_pp0_iter19_reg;
        v101_V_1_addr_reg_693_pp0_iter21_reg <= v101_V_1_addr_reg_693_pp0_iter20_reg;
        v101_V_1_addr_reg_693_pp0_iter22_reg <= v101_V_1_addr_reg_693_pp0_iter21_reg;
        v101_V_1_addr_reg_693_pp0_iter23_reg <= v101_V_1_addr_reg_693_pp0_iter22_reg;
        v101_V_1_addr_reg_693_pp0_iter2_reg <= v101_V_1_addr_reg_693;
        v101_V_1_addr_reg_693_pp0_iter3_reg <= v101_V_1_addr_reg_693_pp0_iter2_reg;
        v101_V_1_addr_reg_693_pp0_iter4_reg <= v101_V_1_addr_reg_693_pp0_iter3_reg;
        v101_V_1_addr_reg_693_pp0_iter5_reg <= v101_V_1_addr_reg_693_pp0_iter4_reg;
        v101_V_1_addr_reg_693_pp0_iter6_reg <= v101_V_1_addr_reg_693_pp0_iter5_reg;
        v101_V_1_addr_reg_693_pp0_iter7_reg <= v101_V_1_addr_reg_693_pp0_iter6_reg;
        v101_V_1_addr_reg_693_pp0_iter8_reg <= v101_V_1_addr_reg_693_pp0_iter7_reg;
        v101_V_1_addr_reg_693_pp0_iter9_reg <= v101_V_1_addr_reg_693_pp0_iter8_reg;
        v101_V_2_addr_reg_698_pp0_iter10_reg <= v101_V_2_addr_reg_698_pp0_iter9_reg;
        v101_V_2_addr_reg_698_pp0_iter11_reg <= v101_V_2_addr_reg_698_pp0_iter10_reg;
        v101_V_2_addr_reg_698_pp0_iter12_reg <= v101_V_2_addr_reg_698_pp0_iter11_reg;
        v101_V_2_addr_reg_698_pp0_iter13_reg <= v101_V_2_addr_reg_698_pp0_iter12_reg;
        v101_V_2_addr_reg_698_pp0_iter14_reg <= v101_V_2_addr_reg_698_pp0_iter13_reg;
        v101_V_2_addr_reg_698_pp0_iter15_reg <= v101_V_2_addr_reg_698_pp0_iter14_reg;
        v101_V_2_addr_reg_698_pp0_iter16_reg <= v101_V_2_addr_reg_698_pp0_iter15_reg;
        v101_V_2_addr_reg_698_pp0_iter17_reg <= v101_V_2_addr_reg_698_pp0_iter16_reg;
        v101_V_2_addr_reg_698_pp0_iter18_reg <= v101_V_2_addr_reg_698_pp0_iter17_reg;
        v101_V_2_addr_reg_698_pp0_iter19_reg <= v101_V_2_addr_reg_698_pp0_iter18_reg;
        v101_V_2_addr_reg_698_pp0_iter20_reg <= v101_V_2_addr_reg_698_pp0_iter19_reg;
        v101_V_2_addr_reg_698_pp0_iter21_reg <= v101_V_2_addr_reg_698_pp0_iter20_reg;
        v101_V_2_addr_reg_698_pp0_iter22_reg <= v101_V_2_addr_reg_698_pp0_iter21_reg;
        v101_V_2_addr_reg_698_pp0_iter23_reg <= v101_V_2_addr_reg_698_pp0_iter22_reg;
        v101_V_2_addr_reg_698_pp0_iter2_reg <= v101_V_2_addr_reg_698;
        v101_V_2_addr_reg_698_pp0_iter3_reg <= v101_V_2_addr_reg_698_pp0_iter2_reg;
        v101_V_2_addr_reg_698_pp0_iter4_reg <= v101_V_2_addr_reg_698_pp0_iter3_reg;
        v101_V_2_addr_reg_698_pp0_iter5_reg <= v101_V_2_addr_reg_698_pp0_iter4_reg;
        v101_V_2_addr_reg_698_pp0_iter6_reg <= v101_V_2_addr_reg_698_pp0_iter5_reg;
        v101_V_2_addr_reg_698_pp0_iter7_reg <= v101_V_2_addr_reg_698_pp0_iter6_reg;
        v101_V_2_addr_reg_698_pp0_iter8_reg <= v101_V_2_addr_reg_698_pp0_iter7_reg;
        v101_V_2_addr_reg_698_pp0_iter9_reg <= v101_V_2_addr_reg_698_pp0_iter8_reg;
        v101_V_3_addr_reg_703_pp0_iter10_reg <= v101_V_3_addr_reg_703_pp0_iter9_reg;
        v101_V_3_addr_reg_703_pp0_iter11_reg <= v101_V_3_addr_reg_703_pp0_iter10_reg;
        v101_V_3_addr_reg_703_pp0_iter12_reg <= v101_V_3_addr_reg_703_pp0_iter11_reg;
        v101_V_3_addr_reg_703_pp0_iter13_reg <= v101_V_3_addr_reg_703_pp0_iter12_reg;
        v101_V_3_addr_reg_703_pp0_iter14_reg <= v101_V_3_addr_reg_703_pp0_iter13_reg;
        v101_V_3_addr_reg_703_pp0_iter15_reg <= v101_V_3_addr_reg_703_pp0_iter14_reg;
        v101_V_3_addr_reg_703_pp0_iter16_reg <= v101_V_3_addr_reg_703_pp0_iter15_reg;
        v101_V_3_addr_reg_703_pp0_iter17_reg <= v101_V_3_addr_reg_703_pp0_iter16_reg;
        v101_V_3_addr_reg_703_pp0_iter18_reg <= v101_V_3_addr_reg_703_pp0_iter17_reg;
        v101_V_3_addr_reg_703_pp0_iter19_reg <= v101_V_3_addr_reg_703_pp0_iter18_reg;
        v101_V_3_addr_reg_703_pp0_iter20_reg <= v101_V_3_addr_reg_703_pp0_iter19_reg;
        v101_V_3_addr_reg_703_pp0_iter21_reg <= v101_V_3_addr_reg_703_pp0_iter20_reg;
        v101_V_3_addr_reg_703_pp0_iter22_reg <= v101_V_3_addr_reg_703_pp0_iter21_reg;
        v101_V_3_addr_reg_703_pp0_iter23_reg <= v101_V_3_addr_reg_703_pp0_iter22_reg;
        v101_V_3_addr_reg_703_pp0_iter2_reg <= v101_V_3_addr_reg_703;
        v101_V_3_addr_reg_703_pp0_iter3_reg <= v101_V_3_addr_reg_703_pp0_iter2_reg;
        v101_V_3_addr_reg_703_pp0_iter4_reg <= v101_V_3_addr_reg_703_pp0_iter3_reg;
        v101_V_3_addr_reg_703_pp0_iter5_reg <= v101_V_3_addr_reg_703_pp0_iter4_reg;
        v101_V_3_addr_reg_703_pp0_iter6_reg <= v101_V_3_addr_reg_703_pp0_iter5_reg;
        v101_V_3_addr_reg_703_pp0_iter7_reg <= v101_V_3_addr_reg_703_pp0_iter6_reg;
        v101_V_3_addr_reg_703_pp0_iter8_reg <= v101_V_3_addr_reg_703_pp0_iter7_reg;
        v101_V_3_addr_reg_703_pp0_iter9_reg <= v101_V_3_addr_reg_703_pp0_iter8_reg;
        v101_V_addr_reg_688_pp0_iter10_reg <= v101_V_addr_reg_688_pp0_iter9_reg;
        v101_V_addr_reg_688_pp0_iter11_reg <= v101_V_addr_reg_688_pp0_iter10_reg;
        v101_V_addr_reg_688_pp0_iter12_reg <= v101_V_addr_reg_688_pp0_iter11_reg;
        v101_V_addr_reg_688_pp0_iter13_reg <= v101_V_addr_reg_688_pp0_iter12_reg;
        v101_V_addr_reg_688_pp0_iter14_reg <= v101_V_addr_reg_688_pp0_iter13_reg;
        v101_V_addr_reg_688_pp0_iter15_reg <= v101_V_addr_reg_688_pp0_iter14_reg;
        v101_V_addr_reg_688_pp0_iter16_reg <= v101_V_addr_reg_688_pp0_iter15_reg;
        v101_V_addr_reg_688_pp0_iter17_reg <= v101_V_addr_reg_688_pp0_iter16_reg;
        v101_V_addr_reg_688_pp0_iter18_reg <= v101_V_addr_reg_688_pp0_iter17_reg;
        v101_V_addr_reg_688_pp0_iter19_reg <= v101_V_addr_reg_688_pp0_iter18_reg;
        v101_V_addr_reg_688_pp0_iter20_reg <= v101_V_addr_reg_688_pp0_iter19_reg;
        v101_V_addr_reg_688_pp0_iter21_reg <= v101_V_addr_reg_688_pp0_iter20_reg;
        v101_V_addr_reg_688_pp0_iter22_reg <= v101_V_addr_reg_688_pp0_iter21_reg;
        v101_V_addr_reg_688_pp0_iter23_reg <= v101_V_addr_reg_688_pp0_iter22_reg;
        v101_V_addr_reg_688_pp0_iter2_reg <= v101_V_addr_reg_688;
        v101_V_addr_reg_688_pp0_iter3_reg <= v101_V_addr_reg_688_pp0_iter2_reg;
        v101_V_addr_reg_688_pp0_iter4_reg <= v101_V_addr_reg_688_pp0_iter3_reg;
        v101_V_addr_reg_688_pp0_iter5_reg <= v101_V_addr_reg_688_pp0_iter4_reg;
        v101_V_addr_reg_688_pp0_iter6_reg <= v101_V_addr_reg_688_pp0_iter5_reg;
        v101_V_addr_reg_688_pp0_iter7_reg <= v101_V_addr_reg_688_pp0_iter6_reg;
        v101_V_addr_reg_688_pp0_iter8_reg <= v101_V_addr_reg_688_pp0_iter7_reg;
        v101_V_addr_reg_688_pp0_iter9_reg <= v101_V_addr_reg_688_pp0_iter8_reg;
        v62_reg_713 <= v62_fu_384_p6;
        v64_reg_718 <= grp_fu_661_p_dout0;
        v64_reg_718_pp0_iter19_reg <= v64_reg_718;
        v64_reg_718_pp0_iter20_reg <= v64_reg_718_pp0_iter19_reg;
        v64_reg_718_pp0_iter21_reg <= v64_reg_718_pp0_iter20_reg;
        v64_reg_718_pp0_iter22_reg <= v64_reg_718_pp0_iter21_reg;
        v65_V_reg_789 <= v65_V_fu_610_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        trunc_ln92_reg_652_pp0_iter1_reg <= trunc_ln92_reg_652;
        v101_V_1_addr_reg_693 <= zext_ln95_2_fu_372_p1;
        v101_V_2_addr_reg_698 <= zext_ln95_2_fu_372_p1;
        v101_V_3_addr_reg_703 <= zext_ln95_2_fu_372_p1;
        v101_V_addr_reg_688 <= zext_ln95_2_fu_372_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_739_pp0_iter21_reg == 1'd0) & (1'd1 == and_ln616_reg_769) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln620_reg_779 <= icmp_ln620_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln92_fu_254_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_cast15_mid2_v_reg_657 <= {{select_ln92_1_fu_292_p3[3:2]}};
        select_ln92_1_reg_647 <= select_ln92_1_fu_292_p3;
        select_ln92_reg_642 <= select_ln92_fu_284_p3;
        trunc_ln92_reg_652 <= trunc_ln92_fu_300_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_739_pp0_iter21_reg == 1'd0) & (1'd0 == and_ln616_reg_769) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln617_reg_784 <= select_ln617_fu_559_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_739_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln616_reg_774 <= sext_ln616_fu_519_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln92_fu_254_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i4_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i4_load = i4_fu_108;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten30_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten30_load = indvar_flatten30_fu_112;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j3_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j3_load = j3_fu_104;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v100_1_ce0 = 1'b1;
    end else begin
        v100_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v100_2_ce0 = 1'b1;
    end else begin
        v100_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v100_3_ce0 = 1'b1;
    end else begin
        v100_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v100_ce0 = 1'b1;
    end else begin
        v100_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_1_ce0 = 1'b1;
    end else begin
        v101_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln92_reg_652_pp0_iter23_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_1_we0 = 1'b1;
    end else begin
        v101_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_2_ce0 = 1'b1;
    end else begin
        v101_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln92_reg_652_pp0_iter23_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_2_we0 = 1'b1;
    end else begin
        v101_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_3_ce0 = 1'b1;
    end else begin
        v101_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln92_reg_652_pp0_iter23_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_3_we0 = 1'b1;
    end else begin
        v101_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_ce0 = 1'b1;
    end else begin
        v101_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln92_reg_652_pp0_iter23_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_we0 = 1'b1;
    end else begin
        v101_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_460_p2 = (12'd1075 - zext_ln501_fu_433_p1);

assign add_ln616_fu_472_p2 = ($signed(F2_fu_460_p2) + $signed(12'd4080));

assign add_ln92_1_fu_260_p2 = (ap_sig_allocacmp_indvar_flatten30_load + 8'd1);

assign add_ln92_fu_272_p2 = (ap_sig_allocacmp_i4_load + 4'd1);

assign add_ln93_fu_314_p2 = (select_ln92_fu_284_p3 + 4'd1);

assign add_ln95_fu_366_p2 = (sub_ln95_fu_357_p2 + zext_ln95_1_fu_363_p1);

assign and_ln616_fu_513_p2 = (xor_ln617_fu_507_p2 & icmp_ln616_fu_466_p2);

assign and_ln617_fu_554_p2 = (xor_ln606_fu_549_p2 & icmp_ln617_reg_758);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln621_fu_569_p2 = $signed(man_V_2_reg_746_pp0_iter22_reg) >>> zext_ln621_fu_566_p1;

assign bitcast_ln768_fu_578_p1 = v64_reg_718_pp0_iter22_reg;

assign grp_fu_661_p_ce = 1'b1;

assign grp_fu_661_p_din0 = v62_reg_713;

assign grp_fu_661_p_din1 = inp_sumRow_load_reg_708;

assign grp_fu_665_p_ce = 1'b1;

assign grp_fu_665_p_din0 = v64_reg_718;

assign icmp_ln606_fu_427_p2 = ((trunc_ln590_fu_401_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_466_p2 = (($signed(F2_fu_460_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_492_p2 = ((F2_fu_460_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_522_p2 = ((sh_amt_reg_751 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_527_p2 = ((sh_amt_reg_751 < 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_254_p2 = ((ap_sig_allocacmp_indvar_flatten30_load == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_278_p2 = ((ap_sig_allocacmp_j3_load == 4'd12) ? 1'b1 : 1'b0);

assign inp_sumRow_address0 = zext_ln92_fu_335_p1;

assign ireg_fu_397_p1 = grp_fu_665_p_dout0;

assign man_V_1_fu_447_p2 = (54'd0 - zext_ln604_fu_443_p1);

assign man_V_2_fu_453_p3 = ((p_Result_s_reg_724[0:0] == 1'b1) ? man_V_1_fu_447_p2 : zext_ln604_fu_443_p1);

assign or_ln617_fu_502_p2 = (icmp_ln617_fu_492_p2 | icmp_ln606_reg_739);

assign p_Result_32_fu_436_p3 = {{1'd1}, {trunc_ln600_reg_734}};

assign select_ln616_fu_604_p3 = ((and_ln616_reg_769_pp0_iter22_reg[0:0] == 1'b1) ? select_ln620_fu_597_p3 : select_ln617_reg_784);

assign select_ln617_fu_559_p3 = ((and_ln617_fu_554_p2[0:0] == 1'b1) ? trunc_ln618_reg_763 : select_ln638_fu_541_p3);

assign select_ln620_fu_597_p3 = ((icmp_ln620_reg_779[0:0] == 1'b1) ? trunc_ln621_fu_574_p1 : select_ln623_fu_589_p3);

assign select_ln623_fu_589_p3 = ((tmp_fu_581_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln638_fu_541_p3 = ((icmp_ln638_fu_527_p2[0:0] == 1'b1) ? shl_ln639_fu_536_p2 : 24'd0);

assign select_ln92_1_fu_292_p3 = ((icmp_ln93_fu_278_p2[0:0] == 1'b1) ? add_ln92_fu_272_p2 : ap_sig_allocacmp_i4_load);

assign select_ln92_fu_284_p3 = ((icmp_ln93_fu_278_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j3_load);

assign sext_ln616_fu_519_p1 = sh_amt_reg_751;

assign sext_ln616cast_fu_532_p1 = sext_ln616_fu_519_p1[23:0];

assign sh_amt_fu_484_p3 = ((icmp_ln616_fu_466_p2[0:0] == 1'b1) ? add_ln616_fu_472_p2 : sub_ln616_fu_478_p2);

assign shl_ln639_fu_536_p2 = trunc_ln618_reg_763 << sext_ln616cast_fu_532_p1;

assign sub_ln616_fu_478_p2 = (12'd16 - F2_fu_460_p2);

assign sub_ln95_fu_357_p2 = (tmp_s_fu_339_p3 - zext_ln95_fu_353_p1);

assign tmp_23_fu_346_p3 = {{p_cast15_mid2_v_reg_657}, {2'd0}};

assign tmp_fu_581_p3 = bitcast_ln768_fu_578_p1[32'd31];

assign tmp_s_fu_339_p3 = {{p_cast15_mid2_v_reg_657}, {4'd0}};

assign trunc_ln590_fu_401_p1 = ireg_fu_397_p1[62:0];

assign trunc_ln600_fu_423_p1 = ireg_fu_397_p1[51:0];

assign trunc_ln618_fu_498_p1 = man_V_2_fu_453_p3[23:0];

assign trunc_ln621_fu_574_p1 = ashr_ln621_fu_569_p2[23:0];

assign trunc_ln92_fu_300_p1 = select_ln92_1_fu_292_p3[1:0];

assign v100_1_address0 = zext_ln95_2_fu_372_p1;

assign v100_2_address0 = zext_ln95_2_fu_372_p1;

assign v100_3_address0 = zext_ln95_2_fu_372_p1;

assign v100_address0 = zext_ln95_2_fu_372_p1;

assign v101_V_1_address0 = v101_V_1_addr_reg_693_pp0_iter23_reg;

assign v101_V_1_d0 = v65_V_reg_789;

assign v101_V_2_address0 = v101_V_2_addr_reg_698_pp0_iter23_reg;

assign v101_V_2_d0 = v65_V_reg_789;

assign v101_V_3_address0 = v101_V_3_addr_reg_703_pp0_iter23_reg;

assign v101_V_3_d0 = v65_V_reg_789;

assign v101_V_address0 = v101_V_addr_reg_688_pp0_iter23_reg;

assign v101_V_d0 = v65_V_reg_789;

assign v65_V_fu_610_p3 = ((icmp_ln606_reg_739_pp0_iter22_reg[0:0] == 1'b1) ? 24'd0 : select_ln616_fu_604_p3);

assign xor_ln606_fu_549_p2 = (icmp_ln606_reg_739_pp0_iter21_reg ^ 1'd1);

assign xor_ln617_fu_507_p2 = (or_ln617_fu_502_p2 ^ 1'd1);

assign zext_ln501_fu_433_p1 = exp_tmp_reg_729;

assign zext_ln604_fu_443_p1 = p_Result_32_fu_436_p3;

assign zext_ln621_fu_566_p1 = $unsigned(sext_ln616_reg_774);

assign zext_ln92_fu_335_p1 = select_ln92_1_reg_647;

assign zext_ln95_1_fu_363_p1 = select_ln92_reg_642;

assign zext_ln95_2_fu_372_p1 = add_ln95_fu_366_p2;

assign zext_ln95_fu_353_p1 = tmp_23_fu_346_p3;

endmodule //Bert_layer_Self_attention_Pipeline_l_update_i4_l_j3
