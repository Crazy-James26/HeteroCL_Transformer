// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_norm_i2_l_j1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outp_V_address0,
        outp_V_ce0,
        outp_V_q0,
        outp_V_1_address0,
        outp_V_1_ce0,
        outp_V_1_q0,
        outp_V_2_address0,
        outp_V_2_ce0,
        outp_V_2_q0,
        outp_V_3_address0,
        outp_V_3_ce0,
        outp_V_3_q0,
        v100_address0,
        v100_ce0,
        v100_we0,
        v100_d0,
        v100_1_address0,
        v100_1_ce0,
        v100_1_we0,
        v100_1_d0,
        v100_2_address0,
        v100_2_ce0,
        v100_2_we0,
        v100_2_d0,
        v100_3_address0,
        v100_3_ce0,
        v100_3_we0,
        v100_3_d0,
        grp_fu_653_p_din0,
        grp_fu_653_p_din1,
        grp_fu_653_p_dout0,
        grp_fu_653_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] outp_V_address0;
output   outp_V_ce0;
input  [23:0] outp_V_q0;
output  [5:0] outp_V_1_address0;
output   outp_V_1_ce0;
input  [23:0] outp_V_1_q0;
output  [5:0] outp_V_2_address0;
output   outp_V_2_ce0;
input  [23:0] outp_V_2_q0;
output  [5:0] outp_V_3_address0;
output   outp_V_3_ce0;
input  [23:0] outp_V_3_q0;
output  [5:0] v100_address0;
output   v100_ce0;
output   v100_we0;
output  [31:0] v100_d0;
output  [5:0] v100_1_address0;
output   v100_1_ce0;
output   v100_1_we0;
output  [31:0] v100_1_d0;
output  [5:0] v100_2_address0;
output   v100_2_ce0;
output   v100_2_we0;
output  [31:0] v100_2_d0;
output  [5:0] v100_3_address0;
output   v100_3_ce0;
output   v100_3_we0;
output  [31:0] v100_3_d0;
output  [31:0] grp_fu_653_p_din0;
output  [31:0] grp_fu_653_p_din1;
input  [31:0] grp_fu_653_p_dout0;
output   grp_fu_653_p_ce;

reg ap_idle;
reg outp_V_ce0;
reg outp_V_1_ce0;
reg outp_V_2_ce0;
reg outp_V_3_ce0;
reg v100_ce0;
reg v100_we0;
reg v100_1_ce0;
reg v100_1_we0;
reg v100_2_ce0;
reg v100_2_we0;
reg v100_3_ce0;
reg v100_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln57_fu_263_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln57_fu_293_p3;
reg   [3:0] select_ln57_reg_726;
wire   [1:0] trunc_ln57_fu_309_p1;
reg   [1:0] trunc_ln57_reg_731;
reg   [1:0] trunc_ln57_reg_731_pp0_iter1_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter2_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter3_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter4_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter5_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter6_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter7_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter8_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter9_reg;
reg   [1:0] trunc_ln57_reg_731_pp0_iter10_reg;
reg   [1:0] p_cast9_mid2_v_reg_736;
reg   [5:0] v100_addr_reg_762;
reg   [5:0] v100_addr_reg_762_pp0_iter2_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter3_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter4_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter5_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter6_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter7_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter8_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter9_reg;
reg   [5:0] v100_addr_reg_762_pp0_iter10_reg;
reg   [5:0] v100_1_addr_reg_767;
reg   [5:0] v100_1_addr_reg_767_pp0_iter2_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter3_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter4_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter5_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter6_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter7_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter8_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter9_reg;
reg   [5:0] v100_1_addr_reg_767_pp0_iter10_reg;
reg   [5:0] v100_2_addr_reg_772;
reg   [5:0] v100_2_addr_reg_772_pp0_iter2_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter3_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter4_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter5_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter6_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter7_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter8_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter9_reg;
reg   [5:0] v100_2_addr_reg_772_pp0_iter10_reg;
reg   [5:0] v100_3_addr_reg_777;
reg   [5:0] v100_3_addr_reg_777_pp0_iter2_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter3_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter4_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter5_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter6_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter7_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter8_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter9_reg;
reg   [5:0] v100_3_addr_reg_777_pp0_iter10_reg;
wire   [23:0] v46_V_fu_389_p6;
reg   [23:0] v46_V_reg_782;
reg   [0:0] p_Result_39_reg_789;
reg   [0:0] p_Result_39_reg_789_pp0_iter3_reg;
reg   [0:0] p_Result_39_reg_789_pp0_iter4_reg;
reg   [0:0] p_Result_39_reg_789_pp0_iter5_reg;
wire   [0:0] icmp_ln1136_fu_410_p2;
reg   [0:0] icmp_ln1136_reg_795;
reg   [0:0] icmp_ln1136_reg_795_pp0_iter4_reg;
reg   [0:0] icmp_ln1136_reg_795_pp0_iter5_reg;
reg   [0:0] icmp_ln1136_reg_795_pp0_iter6_reg;
reg   [0:0] icmp_ln1136_reg_795_pp0_iter7_reg;
reg   [0:0] icmp_ln1136_reg_795_pp0_iter8_reg;
reg   [0:0] icmp_ln1136_reg_795_pp0_iter9_reg;
wire   [23:0] tmp_V_2_fu_420_p3;
reg   [23:0] tmp_V_2_reg_800;
reg   [23:0] tmp_V_2_reg_800_pp0_iter4_reg;
wire   [31:0] sub_ln1145_fu_456_p2;
reg   [31:0] sub_ln1145_reg_807;
reg   [31:0] sub_ln1145_reg_807_pp0_iter4_reg;
wire   [23:0] trunc_ln1145_fu_462_p1;
reg   [23:0] trunc_ln1145_reg_814;
wire   [4:0] trunc_ln1148_fu_466_p1;
reg   [4:0] trunc_ln1148_reg_819;
wire   [7:0] trunc_ln1144_fu_470_p1;
reg   [7:0] trunc_ln1144_reg_824;
reg   [7:0] trunc_ln1144_reg_824_pp0_iter4_reg;
reg   [7:0] trunc_ln1144_reg_824_pp0_iter5_reg;
wire   [1:0] or_ln_fu_565_p3;
reg   [1:0] or_ln_reg_829;
wire   [0:0] icmp_ln1159_fu_573_p2;
reg   [0:0] icmp_ln1159_reg_834;
reg   [62:0] m_4_reg_839;
reg   [0:0] p_Result_37_reg_844;
wire   [31:0] LD_fu_686_p1;
reg   [31:0] LD_reg_849;
wire   [31:0] bitcast_ln810_fu_690_p1;
wire   [31:0] v48_fu_694_p3;
reg   [31:0] v48_reg_859;
wire   [63:0] zext_ln60_2_fu_377_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] j1_fu_128;
wire   [3:0] add_ln58_fu_323_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j1_load;
reg   [3:0] i2_fu_132;
wire   [3:0] select_ln57_1_fu_301_p3;
reg   [3:0] ap_sig_allocacmp_i2_load;
reg   [7:0] indvar_flatten19_fu_136;
wire   [7:0] add_ln57_1_fu_269_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten19_load;
wire   [0:0] icmp_ln58_fu_287_p2;
wire   [3:0] add_ln57_fu_281_p2;
wire   [3:0] tmp_24_fu_351_p3;
wire   [5:0] tmp_s_fu_344_p3;
wire   [5:0] zext_ln60_fu_358_p1;
wire   [5:0] sub_ln60_fu_362_p2;
wire   [5:0] zext_ln60_1_fu_368_p1;
wire   [5:0] add_ln60_fu_371_p2;
wire   [23:0] tmp_V_fu_415_p2;
reg   [23:0] p_Result_s_fu_426_p4;
wire   [24:0] p_Result_40_fu_436_p3;
wire  signed [31:0] sext_ln1244_fu_444_p1;
reg   [31:0] l_fu_448_p3;
wire   [31:0] lsb_index_fu_474_p2;
wire   [30:0] tmp_fu_479_p4;
wire   [4:0] sub_ln1148_fu_495_p2;
wire   [23:0] zext_ln1148_fu_500_p1;
wire   [23:0] lshr_ln1148_fu_504_p2;
wire   [23:0] p_Result_35_fu_510_p2;
wire   [0:0] icmp_ln1147_fu_489_p2;
wire   [0:0] icmp_ln1148_fu_515_p2;
wire   [0:0] tmp_27_fu_527_p3;
wire   [23:0] add_ln1150_fu_541_p2;
wire   [0:0] p_Result_36_fu_546_p3;
wire   [0:0] xor_ln1150_fu_535_p2;
wire   [0:0] and_ln1150_fu_553_p2;
wire   [0:0] a_fu_521_p2;
wire   [0:0] or_ln1150_fu_559_p2;
wire   [31:0] add_ln1159_fu_582_p2;
wire   [63:0] zext_ln1158_fu_579_p1;
wire   [63:0] zext_ln1159_fu_587_p1;
wire   [31:0] sub_ln1160_fu_597_p2;
wire   [63:0] zext_ln1160_fu_602_p1;
wire   [63:0] lshr_ln1159_fu_591_p2;
wire   [63:0] shl_ln1160_fu_606_p2;
wire   [63:0] m_2_fu_612_p3;
wire   [63:0] zext_ln1162_fu_619_p1;
wire   [63:0] m_3_fu_622_p2;
wire   [7:0] sub_ln1165_fu_656_p2;
wire   [7:0] select_ln1144_fu_649_p3;
wire   [7:0] add_ln1170_fu_661_p2;
wire   [63:0] zext_ln1163_fu_646_p1;
wire   [8:0] tmp_3_fu_667_p3;
wire   [63:0] p_Result_41_fu_674_p5;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_42_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_42_24_1_1_U2670(
    .din0(outp_V_q0),
    .din1(outp_V_1_q0),
    .din2(outp_V_2_q0),
    .din3(outp_V_3_q0),
    .din4(trunc_ln57_reg_731_pp0_iter1_reg),
    .dout(v46_V_fu_389_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln57_fu_263_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i2_fu_132 <= select_ln57_1_fu_301_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i2_fu_132 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln57_fu_263_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten19_fu_136 <= add_ln57_1_fu_269_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten19_fu_136 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln57_fu_263_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j1_fu_128 <= add_ln58_fu_323_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j1_fu_128 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1136_reg_795_pp0_iter5_reg == 1'd0))) begin
        LD_reg_849 <= LD_fu_686_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln1136_reg_795 <= icmp_ln1136_fu_410_p2;
        icmp_ln1136_reg_795_pp0_iter4_reg <= icmp_ln1136_reg_795;
        icmp_ln1136_reg_795_pp0_iter5_reg <= icmp_ln1136_reg_795_pp0_iter4_reg;
        icmp_ln1136_reg_795_pp0_iter6_reg <= icmp_ln1136_reg_795_pp0_iter5_reg;
        icmp_ln1136_reg_795_pp0_iter7_reg <= icmp_ln1136_reg_795_pp0_iter6_reg;
        icmp_ln1136_reg_795_pp0_iter8_reg <= icmp_ln1136_reg_795_pp0_iter7_reg;
        icmp_ln1136_reg_795_pp0_iter9_reg <= icmp_ln1136_reg_795_pp0_iter8_reg;
        p_Result_39_reg_789 <= v46_V_fu_389_p6[32'd23];
        p_Result_39_reg_789_pp0_iter3_reg <= p_Result_39_reg_789;
        p_Result_39_reg_789_pp0_iter4_reg <= p_Result_39_reg_789_pp0_iter3_reg;
        p_Result_39_reg_789_pp0_iter5_reg <= p_Result_39_reg_789_pp0_iter4_reg;
        sub_ln1145_reg_807 <= sub_ln1145_fu_456_p2;
        sub_ln1145_reg_807_pp0_iter4_reg <= sub_ln1145_reg_807;
        tmp_V_2_reg_800 <= tmp_V_2_fu_420_p3;
        tmp_V_2_reg_800_pp0_iter4_reg <= tmp_V_2_reg_800;
        trunc_ln1144_reg_824 <= trunc_ln1144_fu_470_p1;
        trunc_ln1144_reg_824_pp0_iter4_reg <= trunc_ln1144_reg_824;
        trunc_ln1144_reg_824_pp0_iter5_reg <= trunc_ln1144_reg_824_pp0_iter4_reg;
        trunc_ln1145_reg_814 <= trunc_ln1145_fu_462_p1;
        trunc_ln1148_reg_819 <= trunc_ln1148_fu_466_p1;
        trunc_ln57_reg_731_pp0_iter10_reg <= trunc_ln57_reg_731_pp0_iter9_reg;
        trunc_ln57_reg_731_pp0_iter2_reg <= trunc_ln57_reg_731_pp0_iter1_reg;
        trunc_ln57_reg_731_pp0_iter3_reg <= trunc_ln57_reg_731_pp0_iter2_reg;
        trunc_ln57_reg_731_pp0_iter4_reg <= trunc_ln57_reg_731_pp0_iter3_reg;
        trunc_ln57_reg_731_pp0_iter5_reg <= trunc_ln57_reg_731_pp0_iter4_reg;
        trunc_ln57_reg_731_pp0_iter6_reg <= trunc_ln57_reg_731_pp0_iter5_reg;
        trunc_ln57_reg_731_pp0_iter7_reg <= trunc_ln57_reg_731_pp0_iter6_reg;
        trunc_ln57_reg_731_pp0_iter8_reg <= trunc_ln57_reg_731_pp0_iter7_reg;
        trunc_ln57_reg_731_pp0_iter9_reg <= trunc_ln57_reg_731_pp0_iter8_reg;
        v100_1_addr_reg_767_pp0_iter10_reg <= v100_1_addr_reg_767_pp0_iter9_reg;
        v100_1_addr_reg_767_pp0_iter2_reg <= v100_1_addr_reg_767;
        v100_1_addr_reg_767_pp0_iter3_reg <= v100_1_addr_reg_767_pp0_iter2_reg;
        v100_1_addr_reg_767_pp0_iter4_reg <= v100_1_addr_reg_767_pp0_iter3_reg;
        v100_1_addr_reg_767_pp0_iter5_reg <= v100_1_addr_reg_767_pp0_iter4_reg;
        v100_1_addr_reg_767_pp0_iter6_reg <= v100_1_addr_reg_767_pp0_iter5_reg;
        v100_1_addr_reg_767_pp0_iter7_reg <= v100_1_addr_reg_767_pp0_iter6_reg;
        v100_1_addr_reg_767_pp0_iter8_reg <= v100_1_addr_reg_767_pp0_iter7_reg;
        v100_1_addr_reg_767_pp0_iter9_reg <= v100_1_addr_reg_767_pp0_iter8_reg;
        v100_2_addr_reg_772_pp0_iter10_reg <= v100_2_addr_reg_772_pp0_iter9_reg;
        v100_2_addr_reg_772_pp0_iter2_reg <= v100_2_addr_reg_772;
        v100_2_addr_reg_772_pp0_iter3_reg <= v100_2_addr_reg_772_pp0_iter2_reg;
        v100_2_addr_reg_772_pp0_iter4_reg <= v100_2_addr_reg_772_pp0_iter3_reg;
        v100_2_addr_reg_772_pp0_iter5_reg <= v100_2_addr_reg_772_pp0_iter4_reg;
        v100_2_addr_reg_772_pp0_iter6_reg <= v100_2_addr_reg_772_pp0_iter5_reg;
        v100_2_addr_reg_772_pp0_iter7_reg <= v100_2_addr_reg_772_pp0_iter6_reg;
        v100_2_addr_reg_772_pp0_iter8_reg <= v100_2_addr_reg_772_pp0_iter7_reg;
        v100_2_addr_reg_772_pp0_iter9_reg <= v100_2_addr_reg_772_pp0_iter8_reg;
        v100_3_addr_reg_777_pp0_iter10_reg <= v100_3_addr_reg_777_pp0_iter9_reg;
        v100_3_addr_reg_777_pp0_iter2_reg <= v100_3_addr_reg_777;
        v100_3_addr_reg_777_pp0_iter3_reg <= v100_3_addr_reg_777_pp0_iter2_reg;
        v100_3_addr_reg_777_pp0_iter4_reg <= v100_3_addr_reg_777_pp0_iter3_reg;
        v100_3_addr_reg_777_pp0_iter5_reg <= v100_3_addr_reg_777_pp0_iter4_reg;
        v100_3_addr_reg_777_pp0_iter6_reg <= v100_3_addr_reg_777_pp0_iter5_reg;
        v100_3_addr_reg_777_pp0_iter7_reg <= v100_3_addr_reg_777_pp0_iter6_reg;
        v100_3_addr_reg_777_pp0_iter8_reg <= v100_3_addr_reg_777_pp0_iter7_reg;
        v100_3_addr_reg_777_pp0_iter9_reg <= v100_3_addr_reg_777_pp0_iter8_reg;
        v100_addr_reg_762_pp0_iter10_reg <= v100_addr_reg_762_pp0_iter9_reg;
        v100_addr_reg_762_pp0_iter2_reg <= v100_addr_reg_762;
        v100_addr_reg_762_pp0_iter3_reg <= v100_addr_reg_762_pp0_iter2_reg;
        v100_addr_reg_762_pp0_iter4_reg <= v100_addr_reg_762_pp0_iter3_reg;
        v100_addr_reg_762_pp0_iter5_reg <= v100_addr_reg_762_pp0_iter4_reg;
        v100_addr_reg_762_pp0_iter6_reg <= v100_addr_reg_762_pp0_iter5_reg;
        v100_addr_reg_762_pp0_iter7_reg <= v100_addr_reg_762_pp0_iter6_reg;
        v100_addr_reg_762_pp0_iter8_reg <= v100_addr_reg_762_pp0_iter7_reg;
        v100_addr_reg_762_pp0_iter9_reg <= v100_addr_reg_762_pp0_iter8_reg;
        v46_V_reg_782 <= v46_V_fu_389_p6;
        v48_reg_859 <= v48_fu_694_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        trunc_ln57_reg_731_pp0_iter1_reg <= trunc_ln57_reg_731;
        v100_1_addr_reg_767 <= zext_ln60_2_fu_377_p1;
        v100_2_addr_reg_772 <= zext_ln60_2_fu_377_p1;
        v100_3_addr_reg_777 <= zext_ln60_2_fu_377_p1;
        v100_addr_reg_762 <= zext_ln60_2_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1136_reg_795 == 1'd0))) begin
        icmp_ln1159_reg_834 <= icmp_ln1159_fu_573_p2;
        or_ln_reg_829[0] <= or_ln_fu_565_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1136_reg_795_pp0_iter4_reg == 1'd0))) begin
        m_4_reg_839 <= {{m_3_fu_622_p2[63:1]}};
        p_Result_37_reg_844 <= m_3_fu_622_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_263_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_cast9_mid2_v_reg_736 <= {{select_ln57_1_fu_301_p3[3:2]}};
        select_ln57_reg_726 <= select_ln57_fu_293_p3;
        trunc_ln57_reg_731 <= trunc_ln57_fu_309_p1;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_263_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i2_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i2_load = i2_fu_132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten19_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten19_load = indvar_flatten19_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j1_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j1_load = j1_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp_V_1_ce0 = 1'b1;
    end else begin
        outp_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp_V_2_ce0 = 1'b1;
    end else begin
        outp_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp_V_3_ce0 = 1'b1;
    end else begin
        outp_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp_V_ce0 = 1'b1;
    end else begin
        outp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        v100_1_ce0 = 1'b1;
    end else begin
        v100_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln57_reg_731_pp0_iter10_reg == 2'd1))) begin
        v100_1_we0 = 1'b1;
    end else begin
        v100_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        v100_2_ce0 = 1'b1;
    end else begin
        v100_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln57_reg_731_pp0_iter10_reg == 2'd2))) begin
        v100_2_we0 = 1'b1;
    end else begin
        v100_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        v100_3_ce0 = 1'b1;
    end else begin
        v100_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln57_reg_731_pp0_iter10_reg == 2'd3))) begin
        v100_3_we0 = 1'b1;
    end else begin
        v100_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        v100_ce0 = 1'b1;
    end else begin
        v100_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (trunc_ln57_reg_731_pp0_iter10_reg == 2'd0))) begin
        v100_we0 = 1'b1;
    end else begin
        v100_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_686_p1 = p_Result_41_fu_674_p5[31:0];

assign a_fu_521_p2 = (icmp_ln1148_fu_515_p2 & icmp_ln1147_fu_489_p2);

assign add_ln1150_fu_541_p2 = ($signed(trunc_ln1145_reg_814) + $signed(24'd16777192));

assign add_ln1159_fu_582_p2 = ($signed(sub_ln1145_reg_807_pp0_iter4_reg) + $signed(32'd4294967271));

assign add_ln1170_fu_661_p2 = (sub_ln1165_fu_656_p2 + select_ln1144_fu_649_p3);

assign add_ln57_1_fu_269_p2 = (ap_sig_allocacmp_indvar_flatten19_load + 8'd1);

assign add_ln57_fu_281_p2 = (ap_sig_allocacmp_i2_load + 4'd1);

assign add_ln58_fu_323_p2 = (select_ln57_fu_293_p3 + 4'd1);

assign add_ln60_fu_371_p2 = (sub_ln60_fu_362_p2 + zext_ln60_1_fu_368_p1);

assign and_ln1150_fu_553_p2 = (xor_ln1150_fu_535_p2 & p_Result_36_fu_546_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln810_fu_690_p1 = LD_reg_849;

assign grp_fu_653_p_ce = 1'b1;

assign grp_fu_653_p_din0 = bitcast_ln810_fu_690_p1;

assign grp_fu_653_p_din1 = 32'd1040187392;

assign icmp_ln1136_fu_410_p2 = ((v46_V_reg_782 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln1147_fu_489_p2 = (($signed(tmp_fu_479_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1148_fu_515_p2 = ((p_Result_35_fu_510_p2 != 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln1159_fu_573_p2 = (($signed(lsb_index_fu_474_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_263_p2 = ((ap_sig_allocacmp_indvar_flatten19_load == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_287_p2 = ((ap_sig_allocacmp_j1_load == 4'd12) ? 1'b1 : 1'b0);


always @ (sext_ln1244_fu_444_p1) begin
    if (sext_ln1244_fu_444_p1[0] == 1'b1) begin
        l_fu_448_p3 = 32'd0;
    end else if (sext_ln1244_fu_444_p1[1] == 1'b1) begin
        l_fu_448_p3 = 32'd1;
    end else if (sext_ln1244_fu_444_p1[2] == 1'b1) begin
        l_fu_448_p3 = 32'd2;
    end else if (sext_ln1244_fu_444_p1[3] == 1'b1) begin
        l_fu_448_p3 = 32'd3;
    end else if (sext_ln1244_fu_444_p1[4] == 1'b1) begin
        l_fu_448_p3 = 32'd4;
    end else if (sext_ln1244_fu_444_p1[5] == 1'b1) begin
        l_fu_448_p3 = 32'd5;
    end else if (sext_ln1244_fu_444_p1[6] == 1'b1) begin
        l_fu_448_p3 = 32'd6;
    end else if (sext_ln1244_fu_444_p1[7] == 1'b1) begin
        l_fu_448_p3 = 32'd7;
    end else if (sext_ln1244_fu_444_p1[8] == 1'b1) begin
        l_fu_448_p3 = 32'd8;
    end else if (sext_ln1244_fu_444_p1[9] == 1'b1) begin
        l_fu_448_p3 = 32'd9;
    end else if (sext_ln1244_fu_444_p1[10] == 1'b1) begin
        l_fu_448_p3 = 32'd10;
    end else if (sext_ln1244_fu_444_p1[11] == 1'b1) begin
        l_fu_448_p3 = 32'd11;
    end else if (sext_ln1244_fu_444_p1[12] == 1'b1) begin
        l_fu_448_p3 = 32'd12;
    end else if (sext_ln1244_fu_444_p1[13] == 1'b1) begin
        l_fu_448_p3 = 32'd13;
    end else if (sext_ln1244_fu_444_p1[14] == 1'b1) begin
        l_fu_448_p3 = 32'd14;
    end else if (sext_ln1244_fu_444_p1[15] == 1'b1) begin
        l_fu_448_p3 = 32'd15;
    end else if (sext_ln1244_fu_444_p1[16] == 1'b1) begin
        l_fu_448_p3 = 32'd16;
    end else if (sext_ln1244_fu_444_p1[17] == 1'b1) begin
        l_fu_448_p3 = 32'd17;
    end else if (sext_ln1244_fu_444_p1[18] == 1'b1) begin
        l_fu_448_p3 = 32'd18;
    end else if (sext_ln1244_fu_444_p1[19] == 1'b1) begin
        l_fu_448_p3 = 32'd19;
    end else if (sext_ln1244_fu_444_p1[20] == 1'b1) begin
        l_fu_448_p3 = 32'd20;
    end else if (sext_ln1244_fu_444_p1[21] == 1'b1) begin
        l_fu_448_p3 = 32'd21;
    end else if (sext_ln1244_fu_444_p1[22] == 1'b1) begin
        l_fu_448_p3 = 32'd22;
    end else if (sext_ln1244_fu_444_p1[23] == 1'b1) begin
        l_fu_448_p3 = 32'd23;
    end else if (sext_ln1244_fu_444_p1[24] == 1'b1) begin
        l_fu_448_p3 = 32'd24;
    end else if (sext_ln1244_fu_444_p1[25] == 1'b1) begin
        l_fu_448_p3 = 32'd25;
    end else if (sext_ln1244_fu_444_p1[26] == 1'b1) begin
        l_fu_448_p3 = 32'd26;
    end else if (sext_ln1244_fu_444_p1[27] == 1'b1) begin
        l_fu_448_p3 = 32'd27;
    end else if (sext_ln1244_fu_444_p1[28] == 1'b1) begin
        l_fu_448_p3 = 32'd28;
    end else if (sext_ln1244_fu_444_p1[29] == 1'b1) begin
        l_fu_448_p3 = 32'd29;
    end else if (sext_ln1244_fu_444_p1[30] == 1'b1) begin
        l_fu_448_p3 = 32'd30;
    end else if (sext_ln1244_fu_444_p1[31] == 1'b1) begin
        l_fu_448_p3 = 32'd31;
    end else begin
        l_fu_448_p3 = 32'd32;
    end
end

assign lsb_index_fu_474_p2 = ($signed(sub_ln1145_reg_807) + $signed(32'd4294967272));

assign lshr_ln1148_fu_504_p2 = 24'd16777215 >> zext_ln1148_fu_500_p1;

assign lshr_ln1159_fu_591_p2 = zext_ln1158_fu_579_p1 >> zext_ln1159_fu_587_p1;

assign m_2_fu_612_p3 = ((icmp_ln1159_reg_834[0:0] == 1'b1) ? lshr_ln1159_fu_591_p2 : shl_ln1160_fu_606_p2);

assign m_3_fu_622_p2 = (m_2_fu_612_p3 + zext_ln1162_fu_619_p1);

assign or_ln1150_fu_559_p2 = (and_ln1150_fu_553_p2 | a_fu_521_p2);

assign or_ln_fu_565_p3 = {{1'd0}, {or_ln1150_fu_559_p2}};

assign outp_V_1_address0 = zext_ln60_2_fu_377_p1;

assign outp_V_2_address0 = zext_ln60_2_fu_377_p1;

assign outp_V_3_address0 = zext_ln60_2_fu_377_p1;

assign outp_V_address0 = zext_ln60_2_fu_377_p1;

assign p_Result_35_fu_510_p2 = (tmp_V_2_reg_800 & lshr_ln1148_fu_504_p2);

assign p_Result_36_fu_546_p3 = tmp_V_2_reg_800[add_ln1150_fu_541_p2];

assign p_Result_40_fu_436_p3 = {{1'd1}, {p_Result_s_fu_426_p4}};

assign p_Result_41_fu_674_p5 = {{zext_ln1163_fu_646_p1[63:32]}, {tmp_3_fu_667_p3}, {zext_ln1163_fu_646_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_2_fu_420_p3) begin
    for (ap_tvar_int_0 = 24 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 23 - 0) begin
            p_Result_s_fu_426_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_426_p4[ap_tvar_int_0] = tmp_V_2_fu_420_p3[23 - ap_tvar_int_0];
        end
    end
end

assign select_ln1144_fu_649_p3 = ((p_Result_37_reg_844[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln57_1_fu_301_p3 = ((icmp_ln58_fu_287_p2[0:0] == 1'b1) ? add_ln57_fu_281_p2 : ap_sig_allocacmp_i2_load);

assign select_ln57_fu_293_p3 = ((icmp_ln58_fu_287_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j1_load);

assign sext_ln1244_fu_444_p1 = $signed(p_Result_40_fu_436_p3);

assign shl_ln1160_fu_606_p2 = zext_ln1158_fu_579_p1 << zext_ln1160_fu_602_p1;

assign sub_ln1145_fu_456_p2 = (32'd24 - l_fu_448_p3);

assign sub_ln1148_fu_495_p2 = ($signed(5'd17) - $signed(trunc_ln1148_reg_819));

assign sub_ln1160_fu_597_p2 = (32'd25 - sub_ln1145_reg_807_pp0_iter4_reg);

assign sub_ln1165_fu_656_p2 = (8'd8 - trunc_ln1144_reg_824_pp0_iter5_reg);

assign sub_ln60_fu_362_p2 = (tmp_s_fu_344_p3 - zext_ln60_fu_358_p1);

assign tmp_24_fu_351_p3 = {{p_cast9_mid2_v_reg_736}, {2'd0}};

assign tmp_27_fu_527_p3 = lsb_index_fu_474_p2[32'd31];

assign tmp_3_fu_667_p3 = {{p_Result_39_reg_789_pp0_iter5_reg}, {add_ln1170_fu_661_p2}};

assign tmp_V_2_fu_420_p3 = ((p_Result_39_reg_789[0:0] == 1'b1) ? tmp_V_fu_415_p2 : v46_V_reg_782);

assign tmp_V_fu_415_p2 = (24'd0 - v46_V_reg_782);

assign tmp_fu_479_p4 = {{lsb_index_fu_474_p2[31:1]}};

assign tmp_s_fu_344_p3 = {{p_cast9_mid2_v_reg_736}, {4'd0}};

assign trunc_ln1144_fu_470_p1 = l_fu_448_p3[7:0];

assign trunc_ln1145_fu_462_p1 = sub_ln1145_fu_456_p2[23:0];

assign trunc_ln1148_fu_466_p1 = sub_ln1145_fu_456_p2[4:0];

assign trunc_ln57_fu_309_p1 = select_ln57_1_fu_301_p3[1:0];

assign v100_1_address0 = v100_1_addr_reg_767_pp0_iter10_reg;

assign v100_1_d0 = v48_reg_859;

assign v100_2_address0 = v100_2_addr_reg_772_pp0_iter10_reg;

assign v100_2_d0 = v48_reg_859;

assign v100_3_address0 = v100_3_addr_reg_777_pp0_iter10_reg;

assign v100_3_d0 = v48_reg_859;

assign v100_address0 = v100_addr_reg_762_pp0_iter10_reg;

assign v100_d0 = v48_reg_859;

assign v48_fu_694_p3 = ((icmp_ln1136_reg_795_pp0_iter9_reg[0:0] == 1'b1) ? 32'd0 : grp_fu_653_p_dout0);

assign xor_ln1150_fu_535_p2 = (tmp_27_fu_527_p3 ^ 1'd1);

assign zext_ln1148_fu_500_p1 = sub_ln1148_fu_495_p2;

assign zext_ln1158_fu_579_p1 = tmp_V_2_reg_800_pp0_iter4_reg;

assign zext_ln1159_fu_587_p1 = add_ln1159_fu_582_p2;

assign zext_ln1160_fu_602_p1 = sub_ln1160_fu_597_p2;

assign zext_ln1162_fu_619_p1 = or_ln_reg_829;

assign zext_ln1163_fu_646_p1 = m_4_reg_839;

assign zext_ln60_1_fu_368_p1 = select_ln57_reg_726;

assign zext_ln60_2_fu_377_p1 = add_ln60_fu_371_p2;

assign zext_ln60_fu_358_p1 = tmp_24_fu_351_p3;

always @ (posedge ap_clk) begin
    or_ln_reg_829[1] <= 1'b0;
end

endmodule //Bert_layer_Self_attention_Pipeline_l_norm_i2_l_j1
