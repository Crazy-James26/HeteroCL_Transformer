// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Bert_layer_Pipeline_l_to_float_i12_l_j9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outp1_V_address0,
        outp1_V_ce0,
        outp1_V_q0,
        outp1_V_1_address0,
        outp1_V_1_ce0,
        outp1_V_1_q0,
        outp1_V_2_address0,
        outp1_V_2_ce0,
        outp1_V_2_q0,
        outp1_V_3_address0,
        outp1_V_3_ce0,
        outp1_V_3_q0,
        outp1_V_4_address0,
        outp1_V_4_ce0,
        outp1_V_4_q0,
        outp1_V_5_address0,
        outp1_V_5_ce0,
        outp1_V_5_q0,
        outp1_V_6_address0,
        outp1_V_6_ce0,
        outp1_V_6_q0,
        outp1_V_7_address0,
        outp1_V_7_ce0,
        outp1_V_7_q0,
        outp1_V_8_address0,
        outp1_V_8_ce0,
        outp1_V_8_q0,
        outp1_V_9_address0,
        outp1_V_9_ce0,
        outp1_V_9_q0,
        outp1_V_10_address0,
        outp1_V_10_ce0,
        outp1_V_10_q0,
        outp1_V_11_address0,
        outp1_V_11_ce0,
        outp1_V_11_q0,
        v272_address0,
        v272_ce0,
        v272_we0,
        v272_d0,
        v272_1_address0,
        v272_1_ce0,
        v272_1_we0,
        v272_1_d0,
        v272_2_address0,
        v272_2_ce0,
        v272_2_we0,
        v272_2_d0,
        v272_3_address0,
        v272_3_ce0,
        v272_3_we0,
        v272_3_d0,
        v272_4_address0,
        v272_4_ce0,
        v272_4_we0,
        v272_4_d0,
        v272_5_address0,
        v272_5_ce0,
        v272_5_we0,
        v272_5_d0,
        v272_6_address0,
        v272_6_ce0,
        v272_6_we0,
        v272_6_d0,
        v272_7_address0,
        v272_7_ce0,
        v272_7_we0,
        v272_7_d0,
        v272_8_address0,
        v272_8_ce0,
        v272_8_we0,
        v272_8_d0,
        v272_9_address0,
        v272_9_ce0,
        v272_9_we0,
        v272_9_d0,
        v272_10_address0,
        v272_10_ce0,
        v272_10_we0,
        v272_10_d0,
        v272_11_address0,
        v272_11_ce0,
        v272_11_we0,
        v272_11_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] outp1_V_address0;
output   outp1_V_ce0;
input  [23:0] outp1_V_q0;
output  [11:0] outp1_V_1_address0;
output   outp1_V_1_ce0;
input  [23:0] outp1_V_1_q0;
output  [11:0] outp1_V_2_address0;
output   outp1_V_2_ce0;
input  [23:0] outp1_V_2_q0;
output  [11:0] outp1_V_3_address0;
output   outp1_V_3_ce0;
input  [23:0] outp1_V_3_q0;
output  [11:0] outp1_V_4_address0;
output   outp1_V_4_ce0;
input  [23:0] outp1_V_4_q0;
output  [11:0] outp1_V_5_address0;
output   outp1_V_5_ce0;
input  [23:0] outp1_V_5_q0;
output  [11:0] outp1_V_6_address0;
output   outp1_V_6_ce0;
input  [23:0] outp1_V_6_q0;
output  [11:0] outp1_V_7_address0;
output   outp1_V_7_ce0;
input  [23:0] outp1_V_7_q0;
output  [11:0] outp1_V_8_address0;
output   outp1_V_8_ce0;
input  [23:0] outp1_V_8_q0;
output  [11:0] outp1_V_9_address0;
output   outp1_V_9_ce0;
input  [23:0] outp1_V_9_q0;
output  [11:0] outp1_V_10_address0;
output   outp1_V_10_ce0;
input  [23:0] outp1_V_10_q0;
output  [11:0] outp1_V_11_address0;
output   outp1_V_11_ce0;
input  [23:0] outp1_V_11_q0;
output  [11:0] v272_address0;
output   v272_ce0;
output   v272_we0;
output  [31:0] v272_d0;
output  [11:0] v272_1_address0;
output   v272_1_ce0;
output   v272_1_we0;
output  [31:0] v272_1_d0;
output  [11:0] v272_2_address0;
output   v272_2_ce0;
output   v272_2_we0;
output  [31:0] v272_2_d0;
output  [11:0] v272_3_address0;
output   v272_3_ce0;
output   v272_3_we0;
output  [31:0] v272_3_d0;
output  [11:0] v272_4_address0;
output   v272_4_ce0;
output   v272_4_we0;
output  [31:0] v272_4_d0;
output  [11:0] v272_5_address0;
output   v272_5_ce0;
output   v272_5_we0;
output  [31:0] v272_5_d0;
output  [11:0] v272_6_address0;
output   v272_6_ce0;
output   v272_6_we0;
output  [31:0] v272_6_d0;
output  [11:0] v272_7_address0;
output   v272_7_ce0;
output   v272_7_we0;
output  [31:0] v272_7_d0;
output  [11:0] v272_8_address0;
output   v272_8_ce0;
output   v272_8_we0;
output  [31:0] v272_8_d0;
output  [11:0] v272_9_address0;
output   v272_9_ce0;
output   v272_9_we0;
output  [31:0] v272_9_d0;
output  [11:0] v272_10_address0;
output   v272_10_ce0;
output   v272_10_we0;
output  [31:0] v272_10_d0;
output  [11:0] v272_11_address0;
output   v272_11_ce0;
output   v272_11_we0;
output  [31:0] v272_11_d0;

reg ap_idle;
reg outp1_V_ce0;
reg outp1_V_1_ce0;
reg outp1_V_2_ce0;
reg outp1_V_3_ce0;
reg outp1_V_4_ce0;
reg outp1_V_5_ce0;
reg outp1_V_6_ce0;
reg outp1_V_7_ce0;
reg outp1_V_8_ce0;
reg outp1_V_9_ce0;
reg outp1_V_10_ce0;
reg outp1_V_11_ce0;
reg v272_ce0;
reg v272_we0;
reg v272_1_ce0;
reg v272_1_we0;
reg v272_2_ce0;
reg v272_2_we0;
reg v272_3_ce0;
reg v272_3_we0;
reg v272_4_ce0;
reg v272_4_we0;
reg v272_5_ce0;
reg v272_5_we0;
reg v272_6_ce0;
reg v272_6_we0;
reg v272_7_ce0;
reg v272_7_we0;
reg v272_8_ce0;
reg v272_8_we0;
reg v272_9_ce0;
reg v272_9_we0;
reg v272_10_ce0;
reg v272_10_we0;
reg v272_11_ce0;
reg v272_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln305_fu_506_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln306_fu_521_p2;
reg   [0:0] icmp_ln306_reg_942;
wire   [63:0] zext_ln306_fu_535_p1;
reg   [63:0] zext_ln306_reg_947;
reg   [63:0] zext_ln306_reg_947_pp0_iter1_reg;
reg   [63:0] zext_ln306_reg_947_pp0_iter2_reg;
reg   [63:0] zext_ln306_reg_947_pp0_iter3_reg;
reg   [63:0] zext_ln306_reg_947_pp0_iter4_reg;
reg   [63:0] zext_ln306_reg_947_pp0_iter5_reg;
wire   [3:0] select_ln305_1_fu_576_p3;
reg   [3:0] select_ln305_1_reg_1023;
reg   [3:0] select_ln305_1_reg_1023_pp0_iter2_reg;
reg   [3:0] select_ln305_1_reg_1023_pp0_iter3_reg;
reg   [3:0] select_ln305_1_reg_1023_pp0_iter4_reg;
reg   [3:0] select_ln305_1_reg_1023_pp0_iter5_reg;
wire   [23:0] v200_V_fu_583_p14;
reg   [23:0] v200_V_reg_1027;
reg   [0:0] p_Result_49_reg_1034;
reg   [0:0] p_Result_49_reg_1034_pp0_iter2_reg;
reg   [0:0] p_Result_49_reg_1034_pp0_iter3_reg;
reg   [0:0] p_Result_49_reg_1034_pp0_iter4_reg;
wire   [0:0] icmp_ln1136_fu_626_p2;
reg   [0:0] icmp_ln1136_reg_1040;
reg   [0:0] icmp_ln1136_reg_1040_pp0_iter3_reg;
reg   [0:0] icmp_ln1136_reg_1040_pp0_iter4_reg;
wire   [23:0] tmp_V_612_fu_636_p3;
reg   [23:0] tmp_V_612_reg_1045;
reg   [23:0] tmp_V_612_reg_1045_pp0_iter3_reg;
wire   [31:0] sub_ln1145_fu_672_p2;
reg   [31:0] sub_ln1145_reg_1052;
reg   [31:0] sub_ln1145_reg_1052_pp0_iter3_reg;
wire   [23:0] trunc_ln1145_fu_678_p1;
reg   [23:0] trunc_ln1145_reg_1059;
wire   [4:0] trunc_ln1148_fu_682_p1;
reg   [4:0] trunc_ln1148_reg_1064;
wire   [7:0] trunc_ln1144_fu_686_p1;
reg   [7:0] trunc_ln1144_reg_1069;
reg   [7:0] trunc_ln1144_reg_1069_pp0_iter3_reg;
reg   [7:0] trunc_ln1144_reg_1069_pp0_iter4_reg;
wire   [1:0] or_ln1150_1_fu_781_p3;
reg   [1:0] or_ln1150_1_reg_1074;
wire   [0:0] icmp_ln1159_fu_789_p2;
reg   [0:0] icmp_ln1159_reg_1079;
reg   [62:0] m_8_reg_1084;
reg   [0:0] p_Result_47_reg_1089;
wire   [31:0] v201_fu_910_p3;
reg   [31:0] v201_reg_1094;
wire    ap_block_pp0_stage0;
reg   [11:0] j9_fu_164;
wire   [11:0] add_ln306_fu_551_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_j9_load;
reg   [3:0] i12_fu_168;
reg   [15:0] indvar_flatten41_fu_172;
wire   [15:0] add_ln305_1_fu_512_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten41_load;
wire   [11:0] select_ln305_fu_527_p3;
wire   [3:0] add_ln305_fu_570_p2;
wire   [3:0] v200_V_fu_583_p13;
wire   [23:0] tmp_V_fu_631_p2;
reg   [23:0] p_Result_s_fu_642_p4;
wire   [24:0] p_Result_50_fu_652_p3;
wire  signed [31:0] sext_ln1244_fu_660_p1;
reg   [31:0] l_fu_664_p3;
wire   [31:0] lsb_index_fu_690_p2;
wire   [30:0] tmp_fu_695_p4;
wire   [4:0] sub_ln1148_fu_711_p2;
wire   [23:0] zext_ln1148_fu_716_p1;
wire   [23:0] lshr_ln1148_fu_720_p2;
wire   [23:0] p_Result_45_fu_726_p2;
wire   [0:0] icmp_ln1147_fu_705_p2;
wire   [0:0] icmp_ln1148_fu_731_p2;
wire   [0:0] tmp_29_fu_743_p3;
wire   [23:0] add_ln1150_fu_757_p2;
wire   [0:0] p_Result_46_fu_762_p3;
wire   [0:0] xor_ln1150_fu_751_p2;
wire   [0:0] and_ln1150_fu_769_p2;
wire   [0:0] a_fu_737_p2;
wire   [0:0] or_ln1150_fu_775_p2;
wire   [31:0] add_ln1159_fu_798_p2;
wire   [63:0] zext_ln1158_fu_795_p1;
wire   [63:0] zext_ln1159_fu_803_p1;
wire   [31:0] sub_ln1160_fu_813_p2;
wire   [63:0] zext_ln1160_fu_818_p1;
wire   [63:0] lshr_ln1159_fu_807_p2;
wire   [63:0] shl_ln1160_fu_822_p2;
wire   [63:0] m_6_fu_828_p3;
wire   [63:0] zext_ln1162_fu_835_p1;
wire   [63:0] m_7_fu_838_p2;
wire   [7:0] sub_ln1165_fu_872_p2;
wire   [7:0] select_ln1144_fu_865_p3;
wire   [7:0] add_ln1170_fu_877_p2;
wire   [63:0] zext_ln1163_fu_862_p1;
wire   [8:0] tmp_9_fu_883_p3;
wire   [63:0] p_Result_51_fu_890_p5;
wire   [31:0] LD_fu_902_p1;
wire   [31:0] bitcast_ln810_fu_906_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_124_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 24 ),
    .din10_WIDTH( 24 ),
    .din11_WIDTH( 24 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
mux_124_24_1_1_U7659(
    .din0(outp1_V_q0),
    .din1(outp1_V_1_q0),
    .din2(outp1_V_2_q0),
    .din3(outp1_V_3_q0),
    .din4(outp1_V_4_q0),
    .din5(outp1_V_5_q0),
    .din6(outp1_V_6_q0),
    .din7(outp1_V_7_q0),
    .din8(outp1_V_8_q0),
    .din9(outp1_V_9_q0),
    .din10(outp1_V_10_q0),
    .din11(outp1_V_11_q0),
    .din12(v200_V_fu_583_p13),
    .dout(v200_V_fu_583_p14)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i12_fu_168 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i12_fu_168 <= select_ln305_1_fu_576_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln305_fu_506_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten41_fu_172 <= add_ln305_1_fu_512_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten41_fu_172 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln305_fu_506_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j9_fu_164 <= add_ln306_fu_551_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j9_fu_164 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        p_Result_49_reg_1034 <= v200_V_fu_583_p14[32'd23];
        select_ln305_1_reg_1023 <= select_ln305_1_fu_576_p3;
        v200_V_reg_1027 <= v200_V_fu_583_p14;
        zext_ln306_reg_947_pp0_iter1_reg[11 : 0] <= zext_ln306_reg_947[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        icmp_ln1136_reg_1040 <= icmp_ln1136_fu_626_p2;
        icmp_ln1136_reg_1040_pp0_iter3_reg <= icmp_ln1136_reg_1040;
        icmp_ln1136_reg_1040_pp0_iter4_reg <= icmp_ln1136_reg_1040_pp0_iter3_reg;
        p_Result_49_reg_1034_pp0_iter2_reg <= p_Result_49_reg_1034;
        p_Result_49_reg_1034_pp0_iter3_reg <= p_Result_49_reg_1034_pp0_iter2_reg;
        p_Result_49_reg_1034_pp0_iter4_reg <= p_Result_49_reg_1034_pp0_iter3_reg;
        select_ln305_1_reg_1023_pp0_iter2_reg <= select_ln305_1_reg_1023;
        select_ln305_1_reg_1023_pp0_iter3_reg <= select_ln305_1_reg_1023_pp0_iter2_reg;
        select_ln305_1_reg_1023_pp0_iter4_reg <= select_ln305_1_reg_1023_pp0_iter3_reg;
        select_ln305_1_reg_1023_pp0_iter5_reg <= select_ln305_1_reg_1023_pp0_iter4_reg;
        sub_ln1145_reg_1052 <= sub_ln1145_fu_672_p2;
        sub_ln1145_reg_1052_pp0_iter3_reg <= sub_ln1145_reg_1052;
        tmp_V_612_reg_1045 <= tmp_V_612_fu_636_p3;
        tmp_V_612_reg_1045_pp0_iter3_reg <= tmp_V_612_reg_1045;
        trunc_ln1144_reg_1069 <= trunc_ln1144_fu_686_p1;
        trunc_ln1144_reg_1069_pp0_iter3_reg <= trunc_ln1144_reg_1069;
        trunc_ln1144_reg_1069_pp0_iter4_reg <= trunc_ln1144_reg_1069_pp0_iter3_reg;
        trunc_ln1145_reg_1059 <= trunc_ln1145_fu_678_p1;
        trunc_ln1148_reg_1064 <= trunc_ln1148_fu_682_p1;
        v201_reg_1094 <= v201_fu_910_p3;
        zext_ln306_reg_947_pp0_iter2_reg[11 : 0] <= zext_ln306_reg_947_pp0_iter1_reg[11 : 0];
        zext_ln306_reg_947_pp0_iter3_reg[11 : 0] <= zext_ln306_reg_947_pp0_iter2_reg[11 : 0];
        zext_ln306_reg_947_pp0_iter4_reg[11 : 0] <= zext_ln306_reg_947_pp0_iter3_reg[11 : 0];
        zext_ln306_reg_947_pp0_iter5_reg[11 : 0] <= zext_ln306_reg_947_pp0_iter4_reg[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1136_reg_1040 == 1'd0))) begin
        icmp_ln1159_reg_1079 <= icmp_ln1159_fu_789_p2;
        or_ln1150_1_reg_1074[0] <= or_ln1150_1_fu_781_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_fu_506_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln306_reg_942 <= icmp_ln306_fu_521_p2;
        zext_ln306_reg_947[11 : 0] <= zext_ln306_fu_535_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1136_reg_1040_pp0_iter3_reg == 1'd0))) begin
        m_8_reg_1084 <= {{m_7_fu_838_p2[63:1]}};
        p_Result_47_reg_1089 <= m_7_fu_838_p2[32'd25];
    end
end

always @ (*) begin
    if (((icmp_ln305_fu_506_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten41_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten41_load = indvar_flatten41_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j9_load = 12'd0;
    end else begin
        ap_sig_allocacmp_j9_load = j9_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_10_ce0 = 1'b1;
    end else begin
        outp1_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_11_ce0 = 1'b1;
    end else begin
        outp1_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_1_ce0 = 1'b1;
    end else begin
        outp1_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_2_ce0 = 1'b1;
    end else begin
        outp1_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_3_ce0 = 1'b1;
    end else begin
        outp1_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_4_ce0 = 1'b1;
    end else begin
        outp1_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_5_ce0 = 1'b1;
    end else begin
        outp1_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_6_ce0 = 1'b1;
    end else begin
        outp1_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_7_ce0 = 1'b1;
    end else begin
        outp1_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_8_ce0 = 1'b1;
    end else begin
        outp1_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_9_ce0 = 1'b1;
    end else begin
        outp1_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outp1_V_ce0 = 1'b1;
    end else begin
        outp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_10_ce0 = 1'b1;
    end else begin
        v272_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd10))) begin
        v272_10_we0 = 1'b1;
    end else begin
        v272_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_11_ce0 = 1'b1;
    end else begin
        v272_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & ((select_ln305_1_reg_1023_pp0_iter5_reg == 4'd11) | ((select_ln305_1_reg_1023_pp0_iter5_reg == 4'd12) | ((select_ln305_1_reg_1023_pp0_iter5_reg == 4'd13) | ((select_ln305_1_reg_1023_pp0_iter5_reg == 4'd14) | (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd15))))))) begin
        v272_11_we0 = 1'b1;
    end else begin
        v272_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_1_ce0 = 1'b1;
    end else begin
        v272_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd1))) begin
        v272_1_we0 = 1'b1;
    end else begin
        v272_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_2_ce0 = 1'b1;
    end else begin
        v272_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd2))) begin
        v272_2_we0 = 1'b1;
    end else begin
        v272_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_3_ce0 = 1'b1;
    end else begin
        v272_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd3))) begin
        v272_3_we0 = 1'b1;
    end else begin
        v272_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_4_ce0 = 1'b1;
    end else begin
        v272_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd4))) begin
        v272_4_we0 = 1'b1;
    end else begin
        v272_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_5_ce0 = 1'b1;
    end else begin
        v272_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd5))) begin
        v272_5_we0 = 1'b1;
    end else begin
        v272_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_6_ce0 = 1'b1;
    end else begin
        v272_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd6))) begin
        v272_6_we0 = 1'b1;
    end else begin
        v272_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_7_ce0 = 1'b1;
    end else begin
        v272_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd7))) begin
        v272_7_we0 = 1'b1;
    end else begin
        v272_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_8_ce0 = 1'b1;
    end else begin
        v272_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd8))) begin
        v272_8_we0 = 1'b1;
    end else begin
        v272_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_9_ce0 = 1'b1;
    end else begin
        v272_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd9))) begin
        v272_9_we0 = 1'b1;
    end else begin
        v272_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v272_ce0 = 1'b1;
    end else begin
        v272_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln305_1_reg_1023_pp0_iter5_reg == 4'd0))) begin
        v272_we0 = 1'b1;
    end else begin
        v272_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_fu_902_p1 = p_Result_51_fu_890_p5[31:0];

assign a_fu_737_p2 = (icmp_ln1148_fu_731_p2 & icmp_ln1147_fu_705_p2);

assign add_ln1150_fu_757_p2 = ($signed(trunc_ln1145_reg_1059) + $signed(24'd16777192));

assign add_ln1159_fu_798_p2 = ($signed(sub_ln1145_reg_1052_pp0_iter3_reg) + $signed(32'd4294967271));

assign add_ln1170_fu_877_p2 = (sub_ln1165_fu_872_p2 + select_ln1144_fu_865_p3);

assign add_ln305_1_fu_512_p2 = (ap_sig_allocacmp_indvar_flatten41_load + 16'd1);

assign add_ln305_fu_570_p2 = (i12_fu_168 + 4'd1);

assign add_ln306_fu_551_p2 = (select_ln305_fu_527_p3 + 12'd1);

assign and_ln1150_fu_769_p2 = (xor_ln1150_fu_751_p2 & p_Result_46_fu_762_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln810_fu_906_p1 = LD_fu_902_p1;

assign icmp_ln1136_fu_626_p2 = ((v200_V_reg_1027 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln1147_fu_705_p2 = (($signed(tmp_fu_695_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1148_fu_731_p2 = ((p_Result_45_fu_726_p2 != 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln1159_fu_789_p2 = (($signed(lsb_index_fu_690_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln305_fu_506_p2 = ((ap_sig_allocacmp_indvar_flatten41_load == 16'd36864) ? 1'b1 : 1'b0);

assign icmp_ln306_fu_521_p2 = ((ap_sig_allocacmp_j9_load == 12'd3072) ? 1'b1 : 1'b0);


always @ (sext_ln1244_fu_660_p1) begin
    if (sext_ln1244_fu_660_p1[0] == 1'b1) begin
        l_fu_664_p3 = 32'd0;
    end else if (sext_ln1244_fu_660_p1[1] == 1'b1) begin
        l_fu_664_p3 = 32'd1;
    end else if (sext_ln1244_fu_660_p1[2] == 1'b1) begin
        l_fu_664_p3 = 32'd2;
    end else if (sext_ln1244_fu_660_p1[3] == 1'b1) begin
        l_fu_664_p3 = 32'd3;
    end else if (sext_ln1244_fu_660_p1[4] == 1'b1) begin
        l_fu_664_p3 = 32'd4;
    end else if (sext_ln1244_fu_660_p1[5] == 1'b1) begin
        l_fu_664_p3 = 32'd5;
    end else if (sext_ln1244_fu_660_p1[6] == 1'b1) begin
        l_fu_664_p3 = 32'd6;
    end else if (sext_ln1244_fu_660_p1[7] == 1'b1) begin
        l_fu_664_p3 = 32'd7;
    end else if (sext_ln1244_fu_660_p1[8] == 1'b1) begin
        l_fu_664_p3 = 32'd8;
    end else if (sext_ln1244_fu_660_p1[9] == 1'b1) begin
        l_fu_664_p3 = 32'd9;
    end else if (sext_ln1244_fu_660_p1[10] == 1'b1) begin
        l_fu_664_p3 = 32'd10;
    end else if (sext_ln1244_fu_660_p1[11] == 1'b1) begin
        l_fu_664_p3 = 32'd11;
    end else if (sext_ln1244_fu_660_p1[12] == 1'b1) begin
        l_fu_664_p3 = 32'd12;
    end else if (sext_ln1244_fu_660_p1[13] == 1'b1) begin
        l_fu_664_p3 = 32'd13;
    end else if (sext_ln1244_fu_660_p1[14] == 1'b1) begin
        l_fu_664_p3 = 32'd14;
    end else if (sext_ln1244_fu_660_p1[15] == 1'b1) begin
        l_fu_664_p3 = 32'd15;
    end else if (sext_ln1244_fu_660_p1[16] == 1'b1) begin
        l_fu_664_p3 = 32'd16;
    end else if (sext_ln1244_fu_660_p1[17] == 1'b1) begin
        l_fu_664_p3 = 32'd17;
    end else if (sext_ln1244_fu_660_p1[18] == 1'b1) begin
        l_fu_664_p3 = 32'd18;
    end else if (sext_ln1244_fu_660_p1[19] == 1'b1) begin
        l_fu_664_p3 = 32'd19;
    end else if (sext_ln1244_fu_660_p1[20] == 1'b1) begin
        l_fu_664_p3 = 32'd20;
    end else if (sext_ln1244_fu_660_p1[21] == 1'b1) begin
        l_fu_664_p3 = 32'd21;
    end else if (sext_ln1244_fu_660_p1[22] == 1'b1) begin
        l_fu_664_p3 = 32'd22;
    end else if (sext_ln1244_fu_660_p1[23] == 1'b1) begin
        l_fu_664_p3 = 32'd23;
    end else if (sext_ln1244_fu_660_p1[24] == 1'b1) begin
        l_fu_664_p3 = 32'd24;
    end else if (sext_ln1244_fu_660_p1[25] == 1'b1) begin
        l_fu_664_p3 = 32'd25;
    end else if (sext_ln1244_fu_660_p1[26] == 1'b1) begin
        l_fu_664_p3 = 32'd26;
    end else if (sext_ln1244_fu_660_p1[27] == 1'b1) begin
        l_fu_664_p3 = 32'd27;
    end else if (sext_ln1244_fu_660_p1[28] == 1'b1) begin
        l_fu_664_p3 = 32'd28;
    end else if (sext_ln1244_fu_660_p1[29] == 1'b1) begin
        l_fu_664_p3 = 32'd29;
    end else if (sext_ln1244_fu_660_p1[30] == 1'b1) begin
        l_fu_664_p3 = 32'd30;
    end else if (sext_ln1244_fu_660_p1[31] == 1'b1) begin
        l_fu_664_p3 = 32'd31;
    end else begin
        l_fu_664_p3 = 32'd32;
    end
end

assign lsb_index_fu_690_p2 = ($signed(sub_ln1145_reg_1052) + $signed(32'd4294967272));

assign lshr_ln1148_fu_720_p2 = 24'd16777215 >> zext_ln1148_fu_716_p1;

assign lshr_ln1159_fu_807_p2 = zext_ln1158_fu_795_p1 >> zext_ln1159_fu_803_p1;

assign m_6_fu_828_p3 = ((icmp_ln1159_reg_1079[0:0] == 1'b1) ? lshr_ln1159_fu_807_p2 : shl_ln1160_fu_822_p2);

assign m_7_fu_838_p2 = (m_6_fu_828_p3 + zext_ln1162_fu_835_p1);

assign or_ln1150_1_fu_781_p3 = {{1'd0}, {or_ln1150_fu_775_p2}};

assign or_ln1150_fu_775_p2 = (and_ln1150_fu_769_p2 | a_fu_737_p2);

assign outp1_V_10_address0 = zext_ln306_fu_535_p1;

assign outp1_V_11_address0 = zext_ln306_fu_535_p1;

assign outp1_V_1_address0 = zext_ln306_fu_535_p1;

assign outp1_V_2_address0 = zext_ln306_fu_535_p1;

assign outp1_V_3_address0 = zext_ln306_fu_535_p1;

assign outp1_V_4_address0 = zext_ln306_fu_535_p1;

assign outp1_V_5_address0 = zext_ln306_fu_535_p1;

assign outp1_V_6_address0 = zext_ln306_fu_535_p1;

assign outp1_V_7_address0 = zext_ln306_fu_535_p1;

assign outp1_V_8_address0 = zext_ln306_fu_535_p1;

assign outp1_V_9_address0 = zext_ln306_fu_535_p1;

assign outp1_V_address0 = zext_ln306_fu_535_p1;

assign p_Result_45_fu_726_p2 = (tmp_V_612_reg_1045 & lshr_ln1148_fu_720_p2);

assign p_Result_46_fu_762_p3 = tmp_V_612_reg_1045[add_ln1150_fu_757_p2];

assign p_Result_50_fu_652_p3 = {{1'd1}, {p_Result_s_fu_642_p4}};

assign p_Result_51_fu_890_p5 = {{zext_ln1163_fu_862_p1[63:32]}, {tmp_9_fu_883_p3}, {zext_ln1163_fu_862_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_612_fu_636_p3) begin
    for (ap_tvar_int_0 = 24 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 23 - 0) begin
            p_Result_s_fu_642_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_642_p4[ap_tvar_int_0] = tmp_V_612_fu_636_p3[23 - ap_tvar_int_0];
        end
    end
end

assign select_ln1144_fu_865_p3 = ((p_Result_47_reg_1089[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln305_1_fu_576_p3 = ((icmp_ln306_reg_942[0:0] == 1'b1) ? add_ln305_fu_570_p2 : i12_fu_168);

assign select_ln305_fu_527_p3 = ((icmp_ln306_fu_521_p2[0:0] == 1'b1) ? 12'd0 : ap_sig_allocacmp_j9_load);

assign sext_ln1244_fu_660_p1 = $signed(p_Result_50_fu_652_p3);

assign shl_ln1160_fu_822_p2 = zext_ln1158_fu_795_p1 << zext_ln1160_fu_818_p1;

assign sub_ln1145_fu_672_p2 = (32'd24 - l_fu_664_p3);

assign sub_ln1148_fu_711_p2 = ($signed(5'd17) - $signed(trunc_ln1148_reg_1064));

assign sub_ln1160_fu_813_p2 = (32'd25 - sub_ln1145_reg_1052_pp0_iter3_reg);

assign sub_ln1165_fu_872_p2 = (8'd8 - trunc_ln1144_reg_1069_pp0_iter4_reg);

assign tmp_29_fu_743_p3 = lsb_index_fu_690_p2[32'd31];

assign tmp_9_fu_883_p3 = {{p_Result_49_reg_1034_pp0_iter4_reg}, {add_ln1170_fu_877_p2}};

assign tmp_V_612_fu_636_p3 = ((p_Result_49_reg_1034[0:0] == 1'b1) ? tmp_V_fu_631_p2 : v200_V_reg_1027);

assign tmp_V_fu_631_p2 = (24'd0 - v200_V_reg_1027);

assign tmp_fu_695_p4 = {{lsb_index_fu_690_p2[31:1]}};

assign trunc_ln1144_fu_686_p1 = l_fu_664_p3[7:0];

assign trunc_ln1145_fu_678_p1 = sub_ln1145_fu_672_p2[23:0];

assign trunc_ln1148_fu_682_p1 = sub_ln1145_fu_672_p2[4:0];

assign v200_V_fu_583_p13 = ((icmp_ln306_reg_942[0:0] == 1'b1) ? add_ln305_fu_570_p2 : i12_fu_168);

assign v201_fu_910_p3 = ((icmp_ln1136_reg_1040_pp0_iter4_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln810_fu_906_p1);

assign v272_10_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_10_d0 = v201_reg_1094;

assign v272_11_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_11_d0 = v201_reg_1094;

assign v272_1_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_1_d0 = v201_reg_1094;

assign v272_2_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_2_d0 = v201_reg_1094;

assign v272_3_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_3_d0 = v201_reg_1094;

assign v272_4_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_4_d0 = v201_reg_1094;

assign v272_5_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_5_d0 = v201_reg_1094;

assign v272_6_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_6_d0 = v201_reg_1094;

assign v272_7_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_7_d0 = v201_reg_1094;

assign v272_8_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_8_d0 = v201_reg_1094;

assign v272_9_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_9_d0 = v201_reg_1094;

assign v272_address0 = zext_ln306_reg_947_pp0_iter5_reg;

assign v272_d0 = v201_reg_1094;

assign xor_ln1150_fu_751_p2 = (tmp_29_fu_743_p3 ^ 1'd1);

assign zext_ln1148_fu_716_p1 = sub_ln1148_fu_711_p2;

assign zext_ln1158_fu_795_p1 = tmp_V_612_reg_1045_pp0_iter3_reg;

assign zext_ln1159_fu_803_p1 = add_ln1159_fu_798_p2;

assign zext_ln1160_fu_818_p1 = sub_ln1160_fu_813_p2;

assign zext_ln1162_fu_835_p1 = or_ln1150_1_reg_1074;

assign zext_ln1163_fu_862_p1 = m_8_reg_1084;

assign zext_ln306_fu_535_p1 = select_ln305_fu_527_p3;

always @ (posedge ap_clk) begin
    zext_ln306_reg_947[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_947_pp0_iter1_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_947_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_947_pp0_iter3_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_947_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_947_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    or_ln1150_1_reg_1074[1] <= 1'b0;
end

endmodule //Bert_layer_Bert_layer_Pipeline_l_to_float_i12_l_j9
