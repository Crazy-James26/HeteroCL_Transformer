

================================================================
== Vitis HLS Report for 'Self_attention_Pipeline_l_update_i4_l_j3'
================================================================
* Date:           Tue Sep  5 09:33:13 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.222 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      169|      169|  1.690 us|  1.690 us|  169|  169|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_update_i4_l_j3  |      167|      167|        25|          1|          1|   144|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 25


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 1
  Pipeline-0 : II = 1, D = 25, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.64>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%j3 = alloca i32 1"   --->   Operation 28 'alloca' 'j3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%i4 = alloca i32 1"   --->   Operation 29 'alloca' 'i4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten30 = alloca i32 1"   --->   Operation 30 'alloca' 'indvar_flatten30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten30"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i4"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j3"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc49.i"   --->   Operation 34 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%indvar_flatten30_load = load i8 %indvar_flatten30" [bert_layer.cpp:92]   --->   Operation 35 'load' 'indvar_flatten30_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.55ns)   --->   "%icmp_ln92 = icmp_eq  i8 %indvar_flatten30_load, i8 144" [bert_layer.cpp:92]   --->   Operation 36 'icmp' 'icmp_ln92' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.91ns)   --->   "%add_ln92_1 = add i8 %indvar_flatten30_load, i8 1" [bert_layer.cpp:92]   --->   Operation 37 'add' 'add_ln92_1' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln92 = br i1 %icmp_ln92, void %for.inc52.i, void %for.inc.i21.preheader.exitStub" [bert_layer.cpp:92]   --->   Operation 38 'br' 'br_ln92' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%j3_load = load i4 %j3" [bert_layer.cpp:93]   --->   Operation 39 'load' 'j3_load' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i4_load = load i4 %i4" [bert_layer.cpp:92]   --->   Operation 40 'load' 'i4_load' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.73ns)   --->   "%add_ln92 = add i4 %i4_load, i4 1" [bert_layer.cpp:92]   --->   Operation 41 'add' 'add_ln92' <Predicate = (!icmp_ln92)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (1.30ns)   --->   "%icmp_ln93 = icmp_eq  i4 %j3_load, i4 12" [bert_layer.cpp:93]   --->   Operation 42 'icmp' 'icmp_ln93' <Predicate = (!icmp_ln92)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (1.02ns)   --->   "%select_ln92 = select i1 %icmp_ln93, i4 0, i4 %j3_load" [bert_layer.cpp:92]   --->   Operation 43 'select' 'select_ln92' <Predicate = (!icmp_ln92)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (1.02ns)   --->   "%select_ln92_1 = select i1 %icmp_ln93, i4 %add_ln92, i4 %i4_load" [bert_layer.cpp:92]   --->   Operation 44 'select' 'select_ln92_1' <Predicate = (!icmp_ln92)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln92 = trunc i4 %select_ln92_1" [bert_layer.cpp:92]   --->   Operation 45 'trunc' 'trunc_ln92' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_cast15_mid2_v = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %select_ln92_1, i32 2, i32 3" [bert_layer.cpp:92]   --->   Operation 46 'partselect' 'p_cast15_mid2_v' <Predicate = (!icmp_ln92)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.95ns)   --->   "%switch_ln99 = switch i2 %trunc_ln92, void %arrayidx482.0.0.02.i26.case.3, i2 0, void %arrayidx482.0.0.02.i26.case.0, i2 1, void %arrayidx482.0.0.02.i26.case.1, i2 2, void %arrayidx482.0.0.02.i26.case.2" [bert_layer.cpp:99]   --->   Operation 47 'switch' 'switch_ln99' <Predicate = (!icmp_ln92)> <Delay = 0.95>
ST_1 : Operation 48 [1/1] (1.73ns)   --->   "%add_ln93 = add i4 %select_ln92, i4 1" [bert_layer.cpp:93]   --->   Operation 48 'add' 'add_ln93' <Predicate = (!icmp_ln92)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln93 = store i8 %add_ln92_1, i8 %indvar_flatten30" [bert_layer.cpp:93]   --->   Operation 49 'store' 'store_ln93' <Predicate = (!icmp_ln92)> <Delay = 1.58>
ST_1 : Operation 50 [1/1] (1.58ns)   --->   "%store_ln93 = store i4 %select_ln92_1, i4 %i4" [bert_layer.cpp:93]   --->   Operation 50 'store' 'store_ln93' <Predicate = (!icmp_ln92)> <Delay = 1.58>
ST_1 : Operation 51 [1/1] (1.58ns)   --->   "%store_ln93 = store i4 %add_ln93, i4 %j3" [bert_layer.cpp:93]   --->   Operation 51 'store' 'store_ln93' <Predicate = (!icmp_ln92)> <Delay = 1.58>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln93 = br void %for.inc49.i" [bert_layer.cpp:93]   --->   Operation 52 'br' 'br_ln93' <Predicate = (!icmp_ln92)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.74>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln92 = zext i4 %select_ln92_1" [bert_layer.cpp:92]   --->   Operation 53 'zext' 'zext_ln92' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%inp_sumRow_addr = getelementptr i32 %inp_sumRow, i64 0, i64 %zext_ln92" [bert_layer.cpp:92]   --->   Operation 54 'getelementptr' 'inp_sumRow_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [2/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [bert_layer.cpp:92]   --->   Operation 55 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i2.i4, i2 %p_cast15_mid2_v, i4 0" [bert_layer.cpp:95]   --->   Operation 56 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_23 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %p_cast15_mid2_v, i2 0" [bert_layer.cpp:95]   --->   Operation 57 'bitconcatenate' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln95 = zext i4 %tmp_23" [bert_layer.cpp:95]   --->   Operation 58 'zext' 'zext_ln95' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln95 = sub i6 %tmp_s, i6 %zext_ln95" [bert_layer.cpp:95]   --->   Operation 59 'sub' 'sub_ln95' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln95_1 = zext i4 %select_ln92" [bert_layer.cpp:95]   --->   Operation 60 'zext' 'zext_ln95_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%add_ln95 = add i6 %sub_ln95, i6 %zext_ln95_1" [bert_layer.cpp:95]   --->   Operation 61 'add' 'add_ln95' <Predicate = true> <Delay = 3.49> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln95_2 = zext i6 %add_ln95" [bert_layer.cpp:95]   --->   Operation 62 'zext' 'zext_ln95_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%v100_addr = getelementptr i32 %v100, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:95]   --->   Operation 63 'getelementptr' 'v100_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%v100_1_addr = getelementptr i32 %v100_1, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:95]   --->   Operation 64 'getelementptr' 'v100_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%v100_2_addr = getelementptr i32 %v100_2, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:95]   --->   Operation 65 'getelementptr' 'v100_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%v100_3_addr = getelementptr i32 %v100_3, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:95]   --->   Operation 66 'getelementptr' 'v100_3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%v101_V_addr = getelementptr i24 %v101_V, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:99]   --->   Operation 67 'getelementptr' 'v101_V_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%v101_V_1_addr = getelementptr i24 %v101_V_1, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:99]   --->   Operation 68 'getelementptr' 'v101_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%v101_V_2_addr = getelementptr i24 %v101_V_2, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:99]   --->   Operation 69 'getelementptr' 'v101_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%v101_V_3_addr = getelementptr i24 %v101_V_3, i64 0, i64 %zext_ln95_2" [bert_layer.cpp:99]   --->   Operation 70 'getelementptr' 'v101_V_3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [2/2] (3.25ns)   --->   "%v100_load = load i6 %v100_addr" [bert_layer.cpp:95]   --->   Operation 71 'load' 'v100_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_2 : Operation 72 [2/2] (3.25ns)   --->   "%v100_1_load = load i6 %v100_1_addr" [bert_layer.cpp:95]   --->   Operation 72 'load' 'v100_1_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_2 : Operation 73 [2/2] (3.25ns)   --->   "%v100_2_load = load i6 %v100_2_addr" [bert_layer.cpp:95]   --->   Operation 73 'load' 'v100_2_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_2 : Operation 74 [2/2] (3.25ns)   --->   "%v100_3_load = load i6 %v100_3_addr" [bert_layer.cpp:95]   --->   Operation 74 'load' 'v100_3_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>

State 3 <SV = 2> <Delay = 5.08>
ST_3 : Operation 75 [1/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [bert_layer.cpp:92]   --->   Operation 75 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_3 : Operation 76 [1/2] (3.25ns)   --->   "%v100_load = load i6 %v100_addr" [bert_layer.cpp:95]   --->   Operation 76 'load' 'v100_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_3 : Operation 77 [1/2] (3.25ns)   --->   "%v100_1_load = load i6 %v100_1_addr" [bert_layer.cpp:95]   --->   Operation 77 'load' 'v100_1_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_3 : Operation 78 [1/2] (3.25ns)   --->   "%v100_2_load = load i6 %v100_2_addr" [bert_layer.cpp:95]   --->   Operation 78 'load' 'v100_2_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_3 : Operation 79 [1/2] (3.25ns)   --->   "%v100_3_load = load i6 %v100_3_addr" [bert_layer.cpp:95]   --->   Operation 79 'load' 'v100_3_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 36> <RAM>
ST_3 : Operation 80 [1/1] (1.82ns)   --->   "%v62 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %v100_load, i32 %v100_1_load, i32 %v100_2_load, i32 %v100_3_load, i2 %trunc_ln92" [bert_layer.cpp:95]   --->   Operation 80 'mux' 'v62' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.07>
ST_4 : Operation 81 [16/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 81 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.07>
ST_5 : Operation 82 [15/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 82 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.07>
ST_6 : Operation 83 [14/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 83 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.07>
ST_7 : Operation 84 [13/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 84 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.07>
ST_8 : Operation 85 [12/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 85 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.07>
ST_9 : Operation 86 [11/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 86 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.07>
ST_10 : Operation 87 [10/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 87 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.07>
ST_11 : Operation 88 [9/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 88 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.07>
ST_12 : Operation 89 [8/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 89 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.07>
ST_13 : Operation 90 [7/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 90 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.07>
ST_14 : Operation 91 [6/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 91 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.07>
ST_15 : Operation 92 [5/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 92 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 6.07>
ST_16 : Operation 93 [4/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 93 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.07>
ST_17 : Operation 94 [3/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 94 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.07>
ST_18 : Operation 95 [2/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 95 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.07>
ST_19 : Operation 96 [1/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [bert_layer.cpp:97]   --->   Operation 96 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 4.43>
ST_20 : Operation 97 [2/2] (4.43ns)   --->   "%d = fpext i32 %v64"   --->   Operation 97 'fpext' 'd' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.22>
ST_21 : Operation 98 [1/2] (4.43ns)   --->   "%d = fpext i32 %v64"   --->   Operation 98 'fpext' 'd' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_21 : Operation 99 [1/1] (0.00ns)   --->   "%ireg = bitcast i64 %d"   --->   Operation 99 'bitcast' 'ireg' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln590 = trunc i64 %ireg"   --->   Operation 100 'trunc' 'trunc_ln590' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 101 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ireg, i32 63"   --->   Operation 101 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 102 [1/1] (0.00ns)   --->   "%exp_tmp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %ireg, i32 52, i32 62"   --->   Operation 102 'partselect' 'exp_tmp' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 103 [1/1] (0.00ns)   --->   "%trunc_ln600 = trunc i64 %ireg"   --->   Operation 103 'trunc' 'trunc_ln600' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 104 [1/1] (2.78ns)   --->   "%icmp_ln606 = icmp_eq  i63 %trunc_ln590, i63 0"   --->   Operation 104 'icmp' 'icmp_ln606' <Predicate = true> <Delay = 2.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.51>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln501 = zext i11 %exp_tmp"   --->   Operation 105 'zext' 'zext_ln501' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 106 [1/1] (0.00ns)   --->   "%p_Result_32 = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln600"   --->   Operation 106 'bitconcatenate' 'p_Result_32' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln604 = zext i53 %p_Result_32"   --->   Operation 107 'zext' 'zext_ln604' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 108 [1/1] (3.23ns)   --->   "%man_V_1 = sub i54 0, i54 %zext_ln604"   --->   Operation 108 'sub' 'man_V_1' <Predicate = (!icmp_ln606 & p_Result_s)> <Delay = 3.23> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 109 [1/1] (0.94ns)   --->   "%man_V_2 = select i1 %p_Result_s, i54 %man_V_1, i54 %zext_ln604"   --->   Operation 109 'select' 'man_V_2' <Predicate = (!icmp_ln606)> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 110 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, i12 %zext_ln501"   --->   Operation 110 'sub' 'F2' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 111 [1/1] (1.99ns)   --->   "%icmp_ln616 = icmp_sgt  i12 %F2, i12 16"   --->   Operation 111 'icmp' 'icmp_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 112 [1/1] (1.54ns)   --->   "%add_ln616 = add i12 %F2, i12 4080"   --->   Operation 112 'add' 'add_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 113 [1/1] (1.54ns)   --->   "%sub_ln616 = sub i12 16, i12 %F2"   --->   Operation 113 'sub' 'sub_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 114 [1/1] (0.69ns)   --->   "%sh_amt = select i1 %icmp_ln616, i12 %add_ln616, i12 %sub_ln616"   --->   Operation 114 'select' 'sh_amt' <Predicate = (!icmp_ln606)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 115 [1/1] (1.99ns)   --->   "%icmp_ln617 = icmp_eq  i12 %F2, i12 16"   --->   Operation 115 'icmp' 'icmp_ln617' <Predicate = (!icmp_ln606)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 116 [1/1] (0.00ns)   --->   "%trunc_ln618 = trunc i54 %man_V_2"   --->   Operation 116 'trunc' 'trunc_ln618' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln616)   --->   "%or_ln617 = or i1 %icmp_ln606, i1 %icmp_ln617"   --->   Operation 117 'or' 'or_ln617' <Predicate = (!icmp_ln606)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln616)   --->   "%xor_ln617 = xor i1 %or_ln617, i1 1"   --->   Operation 118 'xor' 'xor_ln617' <Predicate = (!icmp_ln606)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 119 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln616 = and i1 %icmp_ln616, i1 %xor_ln617"   --->   Operation 119 'and' 'and_ln616' <Predicate = (!icmp_ln606)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.19>
ST_23 : Operation 120 [1/1] (0.00ns)   --->   "%sext_ln616 = sext i12 %sh_amt"   --->   Operation 120 'sext' 'sext_ln616' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_23 : Operation 121 [1/1] (1.99ns)   --->   "%icmp_ln620 = icmp_ult  i12 %sh_amt, i12 54"   --->   Operation 121 'icmp' 'icmp_ln620' <Predicate = (!icmp_ln606 & and_ln616)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 122 [1/1] (1.99ns)   --->   "%icmp_ln638 = icmp_ult  i12 %sh_amt, i12 24"   --->   Operation 122 'icmp' 'icmp_ln638' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%sext_ln616cast = trunc i32 %sext_ln616"   --->   Operation 123 'trunc' 'sext_ln616cast' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00>
ST_23 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%shl_ln639 = shl i24 %trunc_ln618, i24 %sext_ln616cast"   --->   Operation 124 'shl' 'shl_ln639' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.20> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%select_ln638 = select i1 %icmp_ln638, i24 %shl_ln639, i24 0"   --->   Operation 125 'select' 'select_ln638' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%xor_ln606 = xor i1 %icmp_ln606, i1 1"   --->   Operation 126 'xor' 'xor_ln606' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%and_ln617 = and i1 %icmp_ln617, i1 %xor_ln606"   --->   Operation 127 'and' 'and_ln617' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 128 [1/1] (4.20ns) (out node of the LUT)   --->   "%select_ln617 = select i1 %and_ln617, i24 %trunc_ln618, i24 %select_ln638"   --->   Operation 128 'select' 'select_ln617' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 4.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 24 <SV = 23> <Delay = 5.30>
ST_24 : Operation 129 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @l_update_i4_l_j3_str"   --->   Operation 129 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 130 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 144, i64 144, i64 144"   --->   Operation 130 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 131 [1/1] (0.00ns)   --->   "%specpipeline_ln94 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_39" [bert_layer.cpp:94]   --->   Operation 131 'specpipeline' 'specpipeline_ln94' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 132 [1/1] (0.00ns)   --->   "%specloopname_ln93 = specloopname void @_ssdm_op_SpecLoopName, void @empty_35" [bert_layer.cpp:93]   --->   Operation 132 'specloopname' 'specloopname_ln93' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%zext_ln621 = zext i32 %sext_ln616"   --->   Operation 133 'zext' 'zext_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%ashr_ln621 = ashr i54 %man_V_2, i54 %zext_ln621"   --->   Operation 134 'ashr' 'ashr_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%trunc_ln621 = trunc i54 %ashr_ln621"   --->   Operation 135 'trunc' 'trunc_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%bitcast_ln768 = bitcast i32 %v64"   --->   Operation 136 'bitcast' 'bitcast_ln768' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln768, i32 31"   --->   Operation 137 'bitselect' 'tmp' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%select_ln623 = select i1 %tmp, i24 16777215, i24 0"   --->   Operation 138 'select' 'select_ln623' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%select_ln620 = select i1 %icmp_ln620, i24 %trunc_ln621, i24 %select_ln623"   --->   Operation 139 'select' 'select_ln620' <Predicate = (!icmp_ln606 & and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 140 [1/1] (4.61ns) (out node of the LUT)   --->   "%select_ln616 = select i1 %and_ln616, i24 %select_ln620, i24 %select_ln617"   --->   Operation 140 'select' 'select_ln616' <Predicate = (!icmp_ln606)> <Delay = 4.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 141 [1/1] (0.69ns) (out node of the LUT)   --->   "%v65_V = select i1 %icmp_ln606, i24 0, i24 %select_ln616"   --->   Operation 141 'select' 'v65_V' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 150 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 150 'ret' 'ret_ln0' <Predicate = (icmp_ln92)> <Delay = 0.00>

State 25 <SV = 24> <Delay = 2.32>
ST_25 : Operation 142 [1/1] (2.32ns)   --->   "%store_ln99 = store i24 %v65_V, i6 %v101_V_2_addr" [bert_layer.cpp:99]   --->   Operation 142 'store' 'store_ln99' <Predicate = (trunc_ln92 == 2)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 143 [1/1] (0.00ns)   --->   "%br_ln99 = br void %arrayidx482.0.0.02.i26.exit" [bert_layer.cpp:99]   --->   Operation 143 'br' 'br_ln99' <Predicate = (trunc_ln92 == 2)> <Delay = 0.00>
ST_25 : Operation 144 [1/1] (2.32ns)   --->   "%store_ln99 = store i24 %v65_V, i6 %v101_V_1_addr" [bert_layer.cpp:99]   --->   Operation 144 'store' 'store_ln99' <Predicate = (trunc_ln92 == 1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 145 [1/1] (0.00ns)   --->   "%br_ln99 = br void %arrayidx482.0.0.02.i26.exit" [bert_layer.cpp:99]   --->   Operation 145 'br' 'br_ln99' <Predicate = (trunc_ln92 == 1)> <Delay = 0.00>
ST_25 : Operation 146 [1/1] (2.32ns)   --->   "%store_ln99 = store i24 %v65_V, i6 %v101_V_addr" [bert_layer.cpp:99]   --->   Operation 146 'store' 'store_ln99' <Predicate = (trunc_ln92 == 0)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 147 [1/1] (0.00ns)   --->   "%br_ln99 = br void %arrayidx482.0.0.02.i26.exit" [bert_layer.cpp:99]   --->   Operation 147 'br' 'br_ln99' <Predicate = (trunc_ln92 == 0)> <Delay = 0.00>
ST_25 : Operation 148 [1/1] (2.32ns)   --->   "%store_ln99 = store i24 %v65_V, i6 %v101_V_3_addr" [bert_layer.cpp:99]   --->   Operation 148 'store' 'store_ln99' <Predicate = (trunc_ln92 == 3)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 149 [1/1] (0.00ns)   --->   "%br_ln99 = br void %arrayidx482.0.0.02.i26.exit" [bert_layer.cpp:99]   --->   Operation 149 'br' 'br_ln99' <Predicate = (trunc_ln92 == 3)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.65ns
The critical path consists of the following:
	'alloca' operation ('j3') [10]  (0 ns)
	'load' operation ('j3_load', bert_layer.cpp:93) on local variable 'j3' [23]  (0 ns)
	'icmp' operation ('icmp_ln93', bert_layer.cpp:93) [28]  (1.3 ns)
	'select' operation ('select_ln92', bert_layer.cpp:92) [29]  (1.02 ns)
	'add' operation ('add_ln93', bert_layer.cpp:93) [113]  (1.74 ns)
	'store' operation ('store_ln93', bert_layer.cpp:93) of variable 'add_ln93', bert_layer.cpp:93 on local variable 'j3' [116]  (1.59 ns)

 <State 2>: 6.75ns
The critical path consists of the following:
	'sub' operation ('sub_ln95', bert_layer.cpp:95) [39]  (0 ns)
	'add' operation ('add_ln95', bert_layer.cpp:95) [41]  (3.49 ns)
	'getelementptr' operation ('v100_addr', bert_layer.cpp:95) [43]  (0 ns)
	'load' operation ('v100_load', bert_layer.cpp:95) on array 'v100' [53]  (3.25 ns)

 <State 3>: 5.08ns
The critical path consists of the following:
	'load' operation ('v100_load', bert_layer.cpp:95) on array 'v100' [53]  (3.25 ns)
	'mux' operation ('v62', bert_layer.cpp:95) [57]  (1.83 ns)

 <State 4>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 6>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 7>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 8>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 9>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 10>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 11>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 12>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 13>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 14>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 15>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 16>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 17>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 18>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 19>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', bert_layer.cpp:97) [58]  (6.08 ns)

 <State 20>: 4.44ns
The critical path consists of the following:
	'fpext' operation ('d') [59]  (4.44 ns)

 <State 21>: 7.22ns
The critical path consists of the following:
	'fpext' operation ('d') [59]  (4.44 ns)
	'icmp' operation ('icmp_ln606') [70]  (2.79 ns)

 <State 22>: 4.51ns
The critical path consists of the following:
	'sub' operation ('F2') [71]  (1.55 ns)
	'icmp' operation ('icmp_ln616') [72]  (1.99 ns)
	'and' operation ('and_ln616') [96]  (0.978 ns)

 <State 23>: 6.19ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln638') [87]  (1.99 ns)
	'select' operation ('select_ln638') [90]  (0 ns)
	'select' operation ('select_ln617') [93]  (4.2 ns)

 <State 24>: 5.31ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln621') [81]  (0 ns)
	'select' operation ('select_ln620') [86]  (0 ns)
	'select' operation ('select_ln616') [97]  (4.61 ns)
	'select' operation ('v65.V') [98]  (0.694 ns)

 <State 25>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln99', bert_layer.cpp:99) of variable 'v65.V' on array 'v101_V_3' [110]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
