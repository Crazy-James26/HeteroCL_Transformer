-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_Linear_layer_qkv_Pipeline_l_scale_outp_i3_l_j3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v341_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v341_ce0 : OUT STD_LOGIC;
    v341_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v13_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_11_ce0 : OUT STD_LOGIC;
    v13_11_we0 : OUT STD_LOGIC;
    v13_11_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_11_ce1 : OUT STD_LOGIC;
    v13_11_we1 : OUT STD_LOGIC;
    v13_11_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_10_ce0 : OUT STD_LOGIC;
    v13_10_we0 : OUT STD_LOGIC;
    v13_10_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_10_ce1 : OUT STD_LOGIC;
    v13_10_we1 : OUT STD_LOGIC;
    v13_10_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_9_ce0 : OUT STD_LOGIC;
    v13_9_we0 : OUT STD_LOGIC;
    v13_9_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_9_ce1 : OUT STD_LOGIC;
    v13_9_we1 : OUT STD_LOGIC;
    v13_9_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_8_ce0 : OUT STD_LOGIC;
    v13_8_we0 : OUT STD_LOGIC;
    v13_8_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_8_ce1 : OUT STD_LOGIC;
    v13_8_we1 : OUT STD_LOGIC;
    v13_8_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_7_ce0 : OUT STD_LOGIC;
    v13_7_we0 : OUT STD_LOGIC;
    v13_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_7_ce1 : OUT STD_LOGIC;
    v13_7_we1 : OUT STD_LOGIC;
    v13_7_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_6_ce0 : OUT STD_LOGIC;
    v13_6_we0 : OUT STD_LOGIC;
    v13_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_6_ce1 : OUT STD_LOGIC;
    v13_6_we1 : OUT STD_LOGIC;
    v13_6_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_5_ce0 : OUT STD_LOGIC;
    v13_5_we0 : OUT STD_LOGIC;
    v13_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_5_ce1 : OUT STD_LOGIC;
    v13_5_we1 : OUT STD_LOGIC;
    v13_5_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_4_ce0 : OUT STD_LOGIC;
    v13_4_we0 : OUT STD_LOGIC;
    v13_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_4_ce1 : OUT STD_LOGIC;
    v13_4_we1 : OUT STD_LOGIC;
    v13_4_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_3_ce0 : OUT STD_LOGIC;
    v13_3_we0 : OUT STD_LOGIC;
    v13_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_3_ce1 : OUT STD_LOGIC;
    v13_3_we1 : OUT STD_LOGIC;
    v13_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_2_ce0 : OUT STD_LOGIC;
    v13_2_we0 : OUT STD_LOGIC;
    v13_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_2_ce1 : OUT STD_LOGIC;
    v13_2_we1 : OUT STD_LOGIC;
    v13_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_1_ce0 : OUT STD_LOGIC;
    v13_1_we0 : OUT STD_LOGIC;
    v13_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_1_ce1 : OUT STD_LOGIC;
    v13_1_we1 : OUT STD_LOGIC;
    v13_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_0_ce0 : OUT STD_LOGIC;
    v13_0_we0 : OUT STD_LOGIC;
    v13_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    v13_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v13_0_ce1 : OUT STD_LOGIC;
    v13_0_we1 : OUT STD_LOGIC;
    v13_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    acc_outp_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_ce0 : OUT STD_LOGIC;
    acc_outp_V_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_1_ce0 : OUT STD_LOGIC;
    acc_outp_V_1_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_2_ce0 : OUT STD_LOGIC;
    acc_outp_V_2_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_3_ce0 : OUT STD_LOGIC;
    acc_outp_V_3_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_4_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_4_ce0 : OUT STD_LOGIC;
    acc_outp_V_4_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_5_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_5_ce0 : OUT STD_LOGIC;
    acc_outp_V_5_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_6_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_6_ce0 : OUT STD_LOGIC;
    acc_outp_V_6_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_7_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_7_ce0 : OUT STD_LOGIC;
    acc_outp_V_7_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_8_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_8_ce0 : OUT STD_LOGIC;
    acc_outp_V_8_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_9_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_9_ce0 : OUT STD_LOGIC;
    acc_outp_V_9_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_10_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_10_ce0 : OUT STD_LOGIC;
    acc_outp_V_10_q0 : IN STD_LOGIC_VECTOR (47 downto 0);
    acc_outp_V_11_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    acc_outp_V_11_ce0 : OUT STD_LOGIC;
    acc_outp_V_11_q0 : IN STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of Bert_layer_Linear_layer_qkv_Pipeline_l_scale_outp_i3_l_j3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv13_1200 : STD_LOGIC_VECTOR (12 downto 0) := "1001000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv9_180 : STD_LOGIC_VECTOR (8 downto 0) := "110000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln62_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln63_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_1168 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_fu_686_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter3_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter4_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter5_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter6_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter7_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter8_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter9_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter10_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter11_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter12_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_reg_1173_pp0_iter13_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln62_1_fu_735_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln62_1_reg_1238_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal outp0_dp_reg_1243 : STD_LOGIC_VECTOR (23 downto 0);
    signal outp1_dp_fu_782_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal outp1_dp_reg_1248 : STD_LOGIC_VECTOR (23 downto 0);
    signal v341_load_reg_1268 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i_reg_1273 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_i1_reg_1278 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln62_fu_803_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal outp0_f_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_637_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal outp1_f_reg_1294 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1299_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_36_fu_829_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_36_reg_1304 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_fu_861_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_reg_1314 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_37_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_37_reg_1319_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_38_fu_890_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_38_reg_1324 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_1_fu_904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_1_reg_1329 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_1_fu_922_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_1_reg_1334 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_fu_984_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_reg_1339 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_1_fu_1045_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_1_reg_1345 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln63_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln62_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_fu_1082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j3_fu_152 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln63_fu_710_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j3_load : STD_LOGIC_VECTOR (8 downto 0);
    signal i3_fu_156 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten7_fu_160 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln62_1_fu_671_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten7_load : STD_LOGIC_VECTOR (12 downto 0);
    signal result_V_fu_1057_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_V_16_fu_1103_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_641_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_644_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln62_fu_729_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_fu_742_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_fu_742_p14 : STD_LOGIC_VECTOR (47 downto 0);
    signal data_V_fu_808_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_V_fu_819_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_833_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_837_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_fu_851_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1512_fu_857_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal data_V_2_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_V_1_fu_880_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_1_fu_894_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_898_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_1_fu_912_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1512_1_fu_918_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_fu_930_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1488_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_939_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln1488_fu_946_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal r_V_fu_950_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_fu_962_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_53_fu_956_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln818_fu_970_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_974_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal mantissa_1_fu_991_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1488_1_fu_1004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_1000_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln1488_2_fu_1007_p1 : STD_LOGIC_VECTOR (54 downto 0);
    signal r_V_54_fu_1011_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal tmp_739_fu_1023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_55_fu_1017_p2 : STD_LOGIC_VECTOR (54 downto 0);
    signal zext_ln818_2_fu_1031_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_590_fu_1035_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_V_11_fu_1052_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_1075_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal result_V_15_fu_1098_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln73_fu_1121_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_sitofp_32s_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_mux_124_48_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (47 downto 0);
        din1 : IN STD_LOGIC_VECTOR (47 downto 0);
        din2 : IN STD_LOGIC_VECTOR (47 downto 0);
        din3 : IN STD_LOGIC_VECTOR (47 downto 0);
        din4 : IN STD_LOGIC_VECTOR (47 downto 0);
        din5 : IN STD_LOGIC_VECTOR (47 downto 0);
        din6 : IN STD_LOGIC_VECTOR (47 downto 0);
        din7 : IN STD_LOGIC_VECTOR (47 downto 0);
        din8 : IN STD_LOGIC_VECTOR (47 downto 0);
        din9 : IN STD_LOGIC_VECTOR (47 downto 0);
        din10 : IN STD_LOGIC_VECTOR (47 downto 0);
        din11 : IN STD_LOGIC_VECTOR (47 downto 0);
        din12 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component Bert_layer_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fmul_32ns_32ns_32_4_max_dsp_1_U2246 : component Bert_layer_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i_reg_1273,
        din1 => bitcast_ln62_fu_803_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_633_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U2247 : component Bert_layer_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_i1_reg_1278,
        din1 => bitcast_ln62_fu_803_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_637_p2);

    sitofp_32s_32_6_no_dsp_1_U2248 : component Bert_layer_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_641_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_641_p1);

    sitofp_32s_32_6_no_dsp_1_U2249 : component Bert_layer_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_644_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_644_p1);

    mux_124_48_1_1_U2250 : component Bert_layer_mux_124_48_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 48,
        din1_WIDTH => 48,
        din2_WIDTH => 48,
        din3_WIDTH => 48,
        din4_WIDTH => 48,
        din5_WIDTH => 48,
        din6_WIDTH => 48,
        din7_WIDTH => 48,
        din8_WIDTH => 48,
        din9_WIDTH => 48,
        din10_WIDTH => 48,
        din11_WIDTH => 48,
        din12_WIDTH => 4,
        dout_WIDTH => 48)
    port map (
        din0 => acc_outp_V_q0,
        din1 => acc_outp_V_1_q0,
        din2 => acc_outp_V_2_q0,
        din3 => acc_outp_V_3_q0,
        din4 => acc_outp_V_4_q0,
        din5 => acc_outp_V_5_q0,
        din6 => acc_outp_V_6_q0,
        din7 => acc_outp_V_7_q0,
        din8 => acc_outp_V_8_q0,
        din9 => acc_outp_V_9_q0,
        din10 => acc_outp_V_10_q0,
        din11 => acc_outp_V_11_q0,
        din12 => p_Val2_s_fu_742_p13,
        dout => p_Val2_s_fu_742_p14);

    flow_control_loop_pipe_sequential_init_U : component Bert_layer_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i3_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i3_fu_156 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    i3_fu_156 <= select_ln62_1_fu_735_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten7_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln62_fu_665_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten7_fu_160 <= add_ln62_1_fu_671_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten7_fu_160 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    j3_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln62_fu_665_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j3_fu_152 <= add_ln63_fu_710_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j3_fu_152 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                conv_i1_reg_1278 <= grp_fu_644_p1;
                conv_i_reg_1273 <= grp_fu_641_p1;
                isNeg_1_reg_1329 <= add_ln346_1_fu_898_p2(8 downto 8);
                isNeg_reg_1309 <= add_ln346_fu_837_p2(8 downto 8);
                outp0_f_reg_1289 <= grp_fu_633_p2;
                outp1_f_reg_1294 <= grp_fu_637_p2;
                p_Result_36_reg_1304 <= p_Result_36_fu_829_p1;
                p_Result_37_reg_1319 <= data_V_2_fu_869_p1(31 downto 31);
                p_Result_37_reg_1319_pp0_iter13_reg <= p_Result_37_reg_1319;
                p_Result_38_reg_1324 <= p_Result_38_fu_890_p1;
                p_Result_s_reg_1299 <= data_V_fu_808_p1(31 downto 31);
                p_Result_s_reg_1299_pp0_iter13_reg <= p_Result_s_reg_1299;
                select_ln62_1_reg_1238_pp0_iter10_reg <= select_ln62_1_reg_1238_pp0_iter9_reg;
                select_ln62_1_reg_1238_pp0_iter11_reg <= select_ln62_1_reg_1238_pp0_iter10_reg;
                select_ln62_1_reg_1238_pp0_iter12_reg <= select_ln62_1_reg_1238_pp0_iter11_reg;
                select_ln62_1_reg_1238_pp0_iter13_reg <= select_ln62_1_reg_1238_pp0_iter12_reg;
                select_ln62_1_reg_1238_pp0_iter2_reg <= select_ln62_1_reg_1238;
                select_ln62_1_reg_1238_pp0_iter3_reg <= select_ln62_1_reg_1238_pp0_iter2_reg;
                select_ln62_1_reg_1238_pp0_iter4_reg <= select_ln62_1_reg_1238_pp0_iter3_reg;
                select_ln62_1_reg_1238_pp0_iter5_reg <= select_ln62_1_reg_1238_pp0_iter4_reg;
                select_ln62_1_reg_1238_pp0_iter6_reg <= select_ln62_1_reg_1238_pp0_iter5_reg;
                select_ln62_1_reg_1238_pp0_iter7_reg <= select_ln62_1_reg_1238_pp0_iter6_reg;
                select_ln62_1_reg_1238_pp0_iter8_reg <= select_ln62_1_reg_1238_pp0_iter7_reg;
                select_ln62_1_reg_1238_pp0_iter9_reg <= select_ln62_1_reg_1238_pp0_iter8_reg;
                select_ln62_reg_1173_pp0_iter10_reg <= select_ln62_reg_1173_pp0_iter9_reg;
                select_ln62_reg_1173_pp0_iter11_reg <= select_ln62_reg_1173_pp0_iter10_reg;
                select_ln62_reg_1173_pp0_iter12_reg <= select_ln62_reg_1173_pp0_iter11_reg;
                select_ln62_reg_1173_pp0_iter13_reg <= select_ln62_reg_1173_pp0_iter12_reg;
                select_ln62_reg_1173_pp0_iter2_reg <= select_ln62_reg_1173_pp0_iter1_reg;
                select_ln62_reg_1173_pp0_iter3_reg <= select_ln62_reg_1173_pp0_iter2_reg;
                select_ln62_reg_1173_pp0_iter4_reg <= select_ln62_reg_1173_pp0_iter3_reg;
                select_ln62_reg_1173_pp0_iter5_reg <= select_ln62_reg_1173_pp0_iter4_reg;
                select_ln62_reg_1173_pp0_iter6_reg <= select_ln62_reg_1173_pp0_iter5_reg;
                select_ln62_reg_1173_pp0_iter7_reg <= select_ln62_reg_1173_pp0_iter6_reg;
                select_ln62_reg_1173_pp0_iter8_reg <= select_ln62_reg_1173_pp0_iter7_reg;
                select_ln62_reg_1173_pp0_iter9_reg <= select_ln62_reg_1173_pp0_iter8_reg;
                ush_1_reg_1334 <= ush_1_fu_922_p3;
                ush_reg_1314 <= ush_fu_861_p3;
                v341_load_reg_1268 <= v341_q0;
                val_1_reg_1345 <= val_1_fu_1045_p3;
                val_reg_1339 <= val_fu_984_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                outp0_dp_reg_1243 <= p_Val2_s_fu_742_p14(47 downto 24);
                outp1_dp_reg_1248 <= outp1_dp_fu_782_p1;
                select_ln62_1_reg_1238 <= select_ln62_1_fu_735_p3;
                select_ln62_reg_1173_pp0_iter1_reg <= select_ln62_reg_1173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln62_fu_665_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln63_reg_1168 <= icmp_ln63_fu_680_p2;
                select_ln62_reg_1173 <= select_ln62_fu_686_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc_outp_V_10_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_10_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_11_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_11_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_1_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_1_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_2_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_2_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_3_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_3_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_4_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_4_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_5_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_5_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_6_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_6_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_7_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_7_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_8_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_8_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_9_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_9_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    acc_outp_V_address0 <= zext_ln63_fu_694_p1(9 - 1 downto 0);

    acc_outp_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_outp_V_ce0 <= ap_const_logic_1;
        else 
            acc_outp_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln346_1_fu_898_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_894_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_837_p2 <= std_logic_vector(unsigned(zext_ln346_fu_833_p1) + unsigned(ap_const_lv9_181));
    add_ln62_1_fu_671_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten7_load) + unsigned(ap_const_lv13_1));
    add_ln62_fu_729_p2 <= std_logic_vector(unsigned(i3_fu_156) + unsigned(ap_const_lv4_1));
    add_ln63_fu_710_p2 <= std_logic_vector(unsigned(select_ln62_fu_686_p3) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln62_fu_665_p2)
    begin
        if (((icmp_ln62_fu_665_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter13_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten7_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten7_fu_160)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten7_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten7_load <= indvar_flatten7_fu_160;
        end if; 
    end process;


    ap_sig_allocacmp_j3_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j3_fu_152, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j3_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_j3_load <= j3_fu_152;
        end if; 
    end process;

    bitcast_ln62_fu_803_p1 <= v341_load_reg_1268;
    data_V_2_fu_869_p1 <= outp1_f_reg_1294;
    data_V_fu_808_p1 <= outp0_f_reg_1289;
        grp_fu_641_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(outp0_dp_reg_1243),32));

        grp_fu_644_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(outp1_dp_reg_1248),32));

    icmp_ln62_fu_665_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten7_load = ap_const_lv13_1200) else "0";
    icmp_ln63_fu_680_p2 <= "1" when (ap_sig_allocacmp_j3_load = ap_const_lv9_180) else "0";
    isNeg_1_fu_904_p3 <= add_ln346_1_fu_898_p2(8 downto 8);
    isNeg_fu_843_p3 <= add_ln346_fu_837_p2(8 downto 8);
    mantissa_1_fu_991_p4 <= ((ap_const_lv1_1 & p_Result_38_reg_1324) & ap_const_lv1_0);
    mantissa_fu_930_p4 <= ((ap_const_lv1_1 & p_Result_36_reg_1304) & ap_const_lv1_0);
    or_ln73_fu_1121_p2 <= (shl_ln_fu_1075_p3 or ap_const_lv10_1);
    outp1_dp_fu_782_p1 <= p_Val2_s_fu_742_p14(24 - 1 downto 0);
    p_Result_36_fu_829_p1 <= data_V_fu_808_p1(23 - 1 downto 0);
    p_Result_38_fu_890_p1 <= data_V_2_fu_869_p1(23 - 1 downto 0);
    p_Val2_s_fu_742_p13 <= 
        add_ln62_fu_729_p2 when (icmp_ln63_reg_1168(0) = '1') else 
        i3_fu_156;
    r_V_53_fu_956_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_939_p1),to_integer(unsigned('0' & zext_ln1488_fu_946_p1(31-1 downto 0)))));
    r_V_54_fu_1011_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_1000_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_1007_p1(31-1 downto 0)))));
    r_V_55_fu_1017_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_1000_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_1007_p1(31-1 downto 0)))));
    r_V_fu_950_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_939_p1),to_integer(unsigned('0' & zext_ln1488_fu_946_p1(31-1 downto 0)))));
    result_V_11_fu_1052_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(val_reg_1339));
    result_V_15_fu_1098_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(val_1_reg_1345));
    result_V_16_fu_1103_p3 <= 
        result_V_15_fu_1098_p2 when (p_Result_37_reg_1319_pp0_iter13_reg(0) = '1') else 
        val_1_reg_1345;
    result_V_fu_1057_p3 <= 
        result_V_11_fu_1052_p2 when (p_Result_s_reg_1299_pp0_iter13_reg(0) = '1') else 
        val_reg_1339;
    select_ln62_1_fu_735_p3 <= 
        add_ln62_fu_729_p2 when (icmp_ln63_reg_1168(0) = '1') else 
        i3_fu_156;
    select_ln62_fu_686_p3 <= 
        ap_const_lv9_0 when (icmp_ln63_fu_680_p2(0) = '1') else 
        ap_sig_allocacmp_j3_load;
        sext_ln1488_1_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_reg_1334),32));

        sext_ln1488_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_reg_1314),32));

        sext_ln1512_1_fu_918_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_1_fu_912_p2),9));

        sext_ln1512_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_851_p2),9));

    shl_ln_fu_1075_p3 <= (select_ln62_reg_1173_pp0_iter13_reg & ap_const_lv1_0);
    sub_ln1512_1_fu_912_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_1_fu_880_p4));
    sub_ln1512_fu_851_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_fu_819_p4));
    tmp_590_fu_1035_p4 <= r_V_55_fu_1017_p2(31 downto 24);
    tmp_739_fu_1023_p3 <= r_V_54_fu_1011_p2(24 downto 24);
    tmp_fu_962_p3 <= r_V_fu_950_p2(24 downto 24);
    tmp_s_fu_974_p4 <= r_V_53_fu_956_p2(31 downto 24);
    ush_1_fu_922_p3 <= 
        sext_ln1512_1_fu_918_p1 when (isNeg_1_fu_904_p3(0) = '1') else 
        add_ln346_1_fu_898_p2;
    ush_fu_861_p3 <= 
        sext_ln1512_fu_857_p1 when (isNeg_fu_843_p3(0) = '1') else 
        add_ln346_fu_837_p2;
    v13_0_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_0_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_0_ce0 <= ap_const_logic_1;
        else 
            v13_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_0_ce1 <= ap_const_logic_1;
        else 
            v13_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_0_d0 <= result_V_16_fu_1103_p3;
    v13_0_d1 <= result_V_fu_1057_p3;

    v13_0_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_0))) then 
            v13_0_we0 <= ap_const_logic_1;
        else 
            v13_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_0_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_0))) then 
            v13_0_we1 <= ap_const_logic_1;
        else 
            v13_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_10_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_10_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_10_ce0 <= ap_const_logic_1;
        else 
            v13_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_10_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_10_ce1 <= ap_const_logic_1;
        else 
            v13_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_10_d0 <= result_V_16_fu_1103_p3;
    v13_10_d1 <= result_V_fu_1057_p3;

    v13_10_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_A))) then 
            v13_10_we0 <= ap_const_logic_1;
        else 
            v13_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_10_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_A))) then 
            v13_10_we1 <= ap_const_logic_1;
        else 
            v13_10_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_11_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_11_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_11_ce0 <= ap_const_logic_1;
        else 
            v13_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_11_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_11_ce1 <= ap_const_logic_1;
        else 
            v13_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_11_d0 <= result_V_16_fu_1103_p3;
    v13_11_d1 <= result_V_fu_1057_p3;

    v13_11_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_B) or ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_C) or ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_D) or ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_E) or (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_F))))))) then 
            v13_11_we0 <= ap_const_logic_1;
        else 
            v13_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_11_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_B) or ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_C) or ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_D) or ((select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_E) or (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_F))))))) then 
            v13_11_we1 <= ap_const_logic_1;
        else 
            v13_11_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_1_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_1_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_1_ce0 <= ap_const_logic_1;
        else 
            v13_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_1_ce1 <= ap_const_logic_1;
        else 
            v13_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_1_d0 <= result_V_16_fu_1103_p3;
    v13_1_d1 <= result_V_fu_1057_p3;

    v13_1_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_1))) then 
            v13_1_we0 <= ap_const_logic_1;
        else 
            v13_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_1_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_1))) then 
            v13_1_we1 <= ap_const_logic_1;
        else 
            v13_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_2_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_2_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_2_ce0 <= ap_const_logic_1;
        else 
            v13_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_2_ce1 <= ap_const_logic_1;
        else 
            v13_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_2_d0 <= result_V_16_fu_1103_p3;
    v13_2_d1 <= result_V_fu_1057_p3;

    v13_2_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_2))) then 
            v13_2_we0 <= ap_const_logic_1;
        else 
            v13_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_2_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_2))) then 
            v13_2_we1 <= ap_const_logic_1;
        else 
            v13_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_3_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_3_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_3_ce0 <= ap_const_logic_1;
        else 
            v13_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_3_ce1 <= ap_const_logic_1;
        else 
            v13_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_3_d0 <= result_V_16_fu_1103_p3;
    v13_3_d1 <= result_V_fu_1057_p3;

    v13_3_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_3))) then 
            v13_3_we0 <= ap_const_logic_1;
        else 
            v13_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_3_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_3))) then 
            v13_3_we1 <= ap_const_logic_1;
        else 
            v13_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_4_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_4_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_4_ce0 <= ap_const_logic_1;
        else 
            v13_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_4_ce1 <= ap_const_logic_1;
        else 
            v13_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_4_d0 <= result_V_16_fu_1103_p3;
    v13_4_d1 <= result_V_fu_1057_p3;

    v13_4_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_4))) then 
            v13_4_we0 <= ap_const_logic_1;
        else 
            v13_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_4_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_4))) then 
            v13_4_we1 <= ap_const_logic_1;
        else 
            v13_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_5_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_5_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_5_ce0 <= ap_const_logic_1;
        else 
            v13_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_5_ce1 <= ap_const_logic_1;
        else 
            v13_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_5_d0 <= result_V_16_fu_1103_p3;
    v13_5_d1 <= result_V_fu_1057_p3;

    v13_5_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_5))) then 
            v13_5_we0 <= ap_const_logic_1;
        else 
            v13_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_5_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_5))) then 
            v13_5_we1 <= ap_const_logic_1;
        else 
            v13_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_6_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_6_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_6_ce0 <= ap_const_logic_1;
        else 
            v13_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_6_ce1 <= ap_const_logic_1;
        else 
            v13_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_6_d0 <= result_V_16_fu_1103_p3;
    v13_6_d1 <= result_V_fu_1057_p3;

    v13_6_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_6))) then 
            v13_6_we0 <= ap_const_logic_1;
        else 
            v13_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_6_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_6))) then 
            v13_6_we1 <= ap_const_logic_1;
        else 
            v13_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_7_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_7_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_7_ce0 <= ap_const_logic_1;
        else 
            v13_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_7_ce1 <= ap_const_logic_1;
        else 
            v13_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_7_d0 <= result_V_16_fu_1103_p3;
    v13_7_d1 <= result_V_fu_1057_p3;

    v13_7_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_7))) then 
            v13_7_we0 <= ap_const_logic_1;
        else 
            v13_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_7_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_7))) then 
            v13_7_we1 <= ap_const_logic_1;
        else 
            v13_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_8_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_8_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_8_ce0 <= ap_const_logic_1;
        else 
            v13_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_8_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_8_ce1 <= ap_const_logic_1;
        else 
            v13_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_8_d0 <= result_V_16_fu_1103_p3;
    v13_8_d1 <= result_V_fu_1057_p3;

    v13_8_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_8))) then 
            v13_8_we0 <= ap_const_logic_1;
        else 
            v13_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_8_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_8))) then 
            v13_8_we1 <= ap_const_logic_1;
        else 
            v13_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_9_address0 <= zext_ln73_fu_1127_p1(10 - 1 downto 0);
    v13_9_address1 <= zext_ln70_fu_1082_p1(10 - 1 downto 0);

    v13_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_9_ce0 <= ap_const_logic_1;
        else 
            v13_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_9_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            v13_9_ce1 <= ap_const_logic_1;
        else 
            v13_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v13_9_d0 <= result_V_16_fu_1103_p3;
    v13_9_d1 <= result_V_fu_1057_p3;

    v13_9_we0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_9))) then 
            v13_9_we0 <= ap_const_logic_1;
        else 
            v13_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v13_9_we1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, select_ln62_1_reg_1238_pp0_iter13_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (select_ln62_1_reg_1238_pp0_iter13_reg = ap_const_lv4_9))) then 
            v13_9_we1 <= ap_const_logic_1;
        else 
            v13_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    v341_address0 <= zext_ln62_fu_799_p1(4 - 1 downto 0);

    v341_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            v341_ce0 <= ap_const_logic_1;
        else 
            v341_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    val_1_fu_1045_p3 <= 
        zext_ln818_2_fu_1031_p1 when (isNeg_1_reg_1329(0) = '1') else 
        tmp_590_fu_1035_p4;
    val_fu_984_p3 <= 
        zext_ln818_fu_970_p1 when (isNeg_reg_1309(0) = '1') else 
        tmp_s_fu_974_p4;
    xs_exp_V_1_fu_880_p4 <= data_V_2_fu_869_p1(30 downto 23);
    xs_exp_V_fu_819_p4 <= data_V_fu_808_p1(30 downto 23);
    zext_ln1488_2_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_1_fu_1004_p1),55));
    zext_ln1488_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_943_p1),55));
    zext_ln15_1_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_991_p4),55));
    zext_ln15_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_930_p4),55));
    zext_ln346_1_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_1_fu_880_p4),9));
    zext_ln346_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_fu_819_p4),9));
    zext_ln62_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln62_1_reg_1238_pp0_iter5_reg),64));
    zext_ln63_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln62_fu_686_p3),64));
    zext_ln70_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1075_p3),64));
    zext_ln73_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln73_fu_1121_p2),64));
    zext_ln818_2_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_739_fu_1023_p3),8));
    zext_ln818_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_962_p3),8));
end behav;
