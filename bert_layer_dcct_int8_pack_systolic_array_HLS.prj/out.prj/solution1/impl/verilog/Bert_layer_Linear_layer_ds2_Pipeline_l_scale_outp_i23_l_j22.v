// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Linear_layer_ds2_Pipeline_l_scale_outp_i23_l_j22 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v351_address0,
        v351_ce0,
        v351_q0,
        v252_11_address0,
        v252_11_ce0,
        v252_11_we0,
        v252_11_d0,
        v252_11_address1,
        v252_11_ce1,
        v252_11_we1,
        v252_11_d1,
        v252_10_address0,
        v252_10_ce0,
        v252_10_we0,
        v252_10_d0,
        v252_10_address1,
        v252_10_ce1,
        v252_10_we1,
        v252_10_d1,
        v252_9_address0,
        v252_9_ce0,
        v252_9_we0,
        v252_9_d0,
        v252_9_address1,
        v252_9_ce1,
        v252_9_we1,
        v252_9_d1,
        v252_8_address0,
        v252_8_ce0,
        v252_8_we0,
        v252_8_d0,
        v252_8_address1,
        v252_8_ce1,
        v252_8_we1,
        v252_8_d1,
        v252_7_address0,
        v252_7_ce0,
        v252_7_we0,
        v252_7_d0,
        v252_7_address1,
        v252_7_ce1,
        v252_7_we1,
        v252_7_d1,
        v252_6_address0,
        v252_6_ce0,
        v252_6_we0,
        v252_6_d0,
        v252_6_address1,
        v252_6_ce1,
        v252_6_we1,
        v252_6_d1,
        v252_5_address0,
        v252_5_ce0,
        v252_5_we0,
        v252_5_d0,
        v252_5_address1,
        v252_5_ce1,
        v252_5_we1,
        v252_5_d1,
        v252_4_address0,
        v252_4_ce0,
        v252_4_we0,
        v252_4_d0,
        v252_4_address1,
        v252_4_ce1,
        v252_4_we1,
        v252_4_d1,
        v252_3_address0,
        v252_3_ce0,
        v252_3_we0,
        v252_3_d0,
        v252_3_address1,
        v252_3_ce1,
        v252_3_we1,
        v252_3_d1,
        v252_2_address0,
        v252_2_ce0,
        v252_2_we0,
        v252_2_d0,
        v252_2_address1,
        v252_2_ce1,
        v252_2_we1,
        v252_2_d1,
        v252_1_address0,
        v252_1_ce0,
        v252_1_we0,
        v252_1_d0,
        v252_1_address1,
        v252_1_ce1,
        v252_1_we1,
        v252_1_d1,
        v252_0_address0,
        v252_0_ce0,
        v252_0_we0,
        v252_0_d0,
        v252_0_address1,
        v252_0_ce1,
        v252_0_we1,
        v252_0_d1,
        acc_outp5_V_address0,
        acc_outp5_V_ce0,
        acc_outp5_V_q0,
        acc_outp5_V_1_address0,
        acc_outp5_V_1_ce0,
        acc_outp5_V_1_q0,
        acc_outp5_V_2_address0,
        acc_outp5_V_2_ce0,
        acc_outp5_V_2_q0,
        acc_outp5_V_3_address0,
        acc_outp5_V_3_ce0,
        acc_outp5_V_3_q0,
        acc_outp5_V_4_address0,
        acc_outp5_V_4_ce0,
        acc_outp5_V_4_q0,
        acc_outp5_V_5_address0,
        acc_outp5_V_5_ce0,
        acc_outp5_V_5_q0,
        acc_outp5_V_6_address0,
        acc_outp5_V_6_ce0,
        acc_outp5_V_6_q0,
        acc_outp5_V_7_address0,
        acc_outp5_V_7_ce0,
        acc_outp5_V_7_q0,
        acc_outp5_V_8_address0,
        acc_outp5_V_8_ce0,
        acc_outp5_V_8_q0,
        acc_outp5_V_9_address0,
        acc_outp5_V_9_ce0,
        acc_outp5_V_9_q0,
        acc_outp5_V_10_address0,
        acc_outp5_V_10_ce0,
        acc_outp5_V_10_q0,
        acc_outp5_V_11_address0,
        acc_outp5_V_11_ce0,
        acc_outp5_V_11_q0,
        grp_fu_278_p_din0,
        grp_fu_278_p_din1,
        grp_fu_278_p_dout0,
        grp_fu_278_p_ce,
        grp_fu_282_p_din0,
        grp_fu_282_p_din1,
        grp_fu_282_p_dout0,
        grp_fu_282_p_ce,
        grp_fu_286_p_din0,
        grp_fu_286_p_dout0,
        grp_fu_286_p_ce,
        grp_fu_289_p_din0,
        grp_fu_289_p_dout0,
        grp_fu_289_p_ce,
        grp_fu_292_p_din0,
        grp_fu_292_p_dout0,
        grp_fu_292_p_ce,
        grp_fu_295_p_din0,
        grp_fu_295_p_dout0,
        grp_fu_295_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v351_address0;
output   v351_ce0;
input  [31:0] v351_q0;
output  [9:0] v252_11_address0;
output   v252_11_ce0;
output   v252_11_we0;
output  [31:0] v252_11_d0;
output  [9:0] v252_11_address1;
output   v252_11_ce1;
output   v252_11_we1;
output  [31:0] v252_11_d1;
output  [9:0] v252_10_address0;
output   v252_10_ce0;
output   v252_10_we0;
output  [31:0] v252_10_d0;
output  [9:0] v252_10_address1;
output   v252_10_ce1;
output   v252_10_we1;
output  [31:0] v252_10_d1;
output  [9:0] v252_9_address0;
output   v252_9_ce0;
output   v252_9_we0;
output  [31:0] v252_9_d0;
output  [9:0] v252_9_address1;
output   v252_9_ce1;
output   v252_9_we1;
output  [31:0] v252_9_d1;
output  [9:0] v252_8_address0;
output   v252_8_ce0;
output   v252_8_we0;
output  [31:0] v252_8_d0;
output  [9:0] v252_8_address1;
output   v252_8_ce1;
output   v252_8_we1;
output  [31:0] v252_8_d1;
output  [9:0] v252_7_address0;
output   v252_7_ce0;
output   v252_7_we0;
output  [31:0] v252_7_d0;
output  [9:0] v252_7_address1;
output   v252_7_ce1;
output   v252_7_we1;
output  [31:0] v252_7_d1;
output  [9:0] v252_6_address0;
output   v252_6_ce0;
output   v252_6_we0;
output  [31:0] v252_6_d0;
output  [9:0] v252_6_address1;
output   v252_6_ce1;
output   v252_6_we1;
output  [31:0] v252_6_d1;
output  [9:0] v252_5_address0;
output   v252_5_ce0;
output   v252_5_we0;
output  [31:0] v252_5_d0;
output  [9:0] v252_5_address1;
output   v252_5_ce1;
output   v252_5_we1;
output  [31:0] v252_5_d1;
output  [9:0] v252_4_address0;
output   v252_4_ce0;
output   v252_4_we0;
output  [31:0] v252_4_d0;
output  [9:0] v252_4_address1;
output   v252_4_ce1;
output   v252_4_we1;
output  [31:0] v252_4_d1;
output  [9:0] v252_3_address0;
output   v252_3_ce0;
output   v252_3_we0;
output  [31:0] v252_3_d0;
output  [9:0] v252_3_address1;
output   v252_3_ce1;
output   v252_3_we1;
output  [31:0] v252_3_d1;
output  [9:0] v252_2_address0;
output   v252_2_ce0;
output   v252_2_we0;
output  [31:0] v252_2_d0;
output  [9:0] v252_2_address1;
output   v252_2_ce1;
output   v252_2_we1;
output  [31:0] v252_2_d1;
output  [9:0] v252_1_address0;
output   v252_1_ce0;
output   v252_1_we0;
output  [31:0] v252_1_d0;
output  [9:0] v252_1_address1;
output   v252_1_ce1;
output   v252_1_we1;
output  [31:0] v252_1_d1;
output  [9:0] v252_0_address0;
output   v252_0_ce0;
output   v252_0_we0;
output  [31:0] v252_0_d0;
output  [9:0] v252_0_address1;
output   v252_0_ce1;
output   v252_0_we1;
output  [31:0] v252_0_d1;
output  [8:0] acc_outp5_V_address0;
output   acc_outp5_V_ce0;
input  [47:0] acc_outp5_V_q0;
output  [8:0] acc_outp5_V_1_address0;
output   acc_outp5_V_1_ce0;
input  [47:0] acc_outp5_V_1_q0;
output  [8:0] acc_outp5_V_2_address0;
output   acc_outp5_V_2_ce0;
input  [47:0] acc_outp5_V_2_q0;
output  [8:0] acc_outp5_V_3_address0;
output   acc_outp5_V_3_ce0;
input  [47:0] acc_outp5_V_3_q0;
output  [8:0] acc_outp5_V_4_address0;
output   acc_outp5_V_4_ce0;
input  [47:0] acc_outp5_V_4_q0;
output  [8:0] acc_outp5_V_5_address0;
output   acc_outp5_V_5_ce0;
input  [47:0] acc_outp5_V_5_q0;
output  [8:0] acc_outp5_V_6_address0;
output   acc_outp5_V_6_ce0;
input  [47:0] acc_outp5_V_6_q0;
output  [8:0] acc_outp5_V_7_address0;
output   acc_outp5_V_7_ce0;
input  [47:0] acc_outp5_V_7_q0;
output  [8:0] acc_outp5_V_8_address0;
output   acc_outp5_V_8_ce0;
input  [47:0] acc_outp5_V_8_q0;
output  [8:0] acc_outp5_V_9_address0;
output   acc_outp5_V_9_ce0;
input  [47:0] acc_outp5_V_9_q0;
output  [8:0] acc_outp5_V_10_address0;
output   acc_outp5_V_10_ce0;
input  [47:0] acc_outp5_V_10_q0;
output  [8:0] acc_outp5_V_11_address0;
output   acc_outp5_V_11_ce0;
input  [47:0] acc_outp5_V_11_q0;
output  [31:0] grp_fu_278_p_din0;
output  [31:0] grp_fu_278_p_din1;
input  [31:0] grp_fu_278_p_dout0;
output   grp_fu_278_p_ce;
output  [31:0] grp_fu_282_p_din0;
output  [31:0] grp_fu_282_p_din1;
input  [31:0] grp_fu_282_p_dout0;
output   grp_fu_282_p_ce;
output  [31:0] grp_fu_286_p_din0;
input  [31:0] grp_fu_286_p_dout0;
output   grp_fu_286_p_ce;
output  [31:0] grp_fu_289_p_din0;
input  [31:0] grp_fu_289_p_dout0;
output   grp_fu_289_p_ce;
output  [31:0] grp_fu_292_p_din0;
input  [31:0] grp_fu_292_p_dout0;
output   grp_fu_292_p_ce;
output  [31:0] grp_fu_295_p_din0;
input  [31:0] grp_fu_295_p_dout0;
output   grp_fu_295_p_ce;

reg ap_idle;
reg v351_ce0;
reg v252_11_ce0;
reg v252_11_we0;
reg v252_11_ce1;
reg v252_11_we1;
reg v252_10_ce0;
reg v252_10_we0;
reg v252_10_ce1;
reg v252_10_we1;
reg v252_9_ce0;
reg v252_9_we0;
reg v252_9_ce1;
reg v252_9_we1;
reg v252_8_ce0;
reg v252_8_we0;
reg v252_8_ce1;
reg v252_8_we1;
reg v252_7_ce0;
reg v252_7_we0;
reg v252_7_ce1;
reg v252_7_we1;
reg v252_6_ce0;
reg v252_6_we0;
reg v252_6_ce1;
reg v252_6_we1;
reg v252_5_ce0;
reg v252_5_we0;
reg v252_5_ce1;
reg v252_5_we1;
reg v252_4_ce0;
reg v252_4_we0;
reg v252_4_ce1;
reg v252_4_we1;
reg v252_3_ce0;
reg v252_3_we0;
reg v252_3_ce1;
reg v252_3_we1;
reg v252_2_ce0;
reg v252_2_we0;
reg v252_2_ce1;
reg v252_2_we1;
reg v252_1_ce0;
reg v252_1_we0;
reg v252_1_ce1;
reg v252_1_we1;
reg v252_0_ce0;
reg v252_0_we0;
reg v252_0_ce1;
reg v252_0_we1;
reg acc_outp5_V_ce0;
reg acc_outp5_V_1_ce0;
reg acc_outp5_V_2_ce0;
reg acc_outp5_V_3_ce0;
reg acc_outp5_V_4_ce0;
reg acc_outp5_V_5_ce0;
reg acc_outp5_V_6_ce0;
reg acc_outp5_V_7_ce0;
reg acc_outp5_V_8_ce0;
reg acc_outp5_V_9_ce0;
reg acc_outp5_V_10_ce0;
reg acc_outp5_V_11_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln472_fu_671_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln473_fu_686_p2;
reg   [0:0] icmp_ln473_reg_1158;
wire   [8:0] select_ln472_fu_692_p3;
reg   [8:0] select_ln472_reg_1163;
reg   [8:0] select_ln472_reg_1163_pp0_iter1_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter2_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter3_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter4_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter5_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter6_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter7_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter8_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter9_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter10_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter11_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter12_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter13_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter14_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter15_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter16_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter17_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter18_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter19_reg;
reg   [8:0] select_ln472_reg_1163_pp0_iter20_reg;
wire   [3:0] select_ln472_1_fu_741_p3;
reg   [3:0] select_ln472_1_reg_1228;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter2_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter3_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter4_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter5_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter6_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter7_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter8_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter9_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter10_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter11_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter12_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter13_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter14_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter15_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter16_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter17_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter18_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter19_reg;
reg   [3:0] select_ln472_1_reg_1228_pp0_iter20_reg;
reg   [23:0] outp0_dp_reg_1233;
wire   [23:0] outp1_dp_fu_788_p1;
reg   [23:0] outp1_dp_reg_1238;
wire  signed [31:0] sext_ln1616_fu_797_p1;
wire  signed [31:0] sext_ln1616_2_fu_801_p1;
reg   [31:0] v351_load_reg_1258;
reg   [31:0] conv_i_reg_1263;
reg   [31:0] conv_i2_reg_1268;
wire   [31:0] bitcast_ln472_fu_809_p1;
reg   [31:0] outp0_f_reg_1279;
reg   [31:0] outp1_f_reg_1284;
reg   [0:0] p_Result_s_reg_1289;
reg   [0:0] p_Result_s_reg_1289_pp0_iter13_reg;
wire   [22:0] p_Result_39_fu_835_p1;
reg   [22:0] p_Result_39_reg_1294;
wire   [0:0] isNeg_fu_849_p3;
reg   [0:0] isNeg_reg_1299;
wire   [8:0] ush_fu_867_p3;
reg   [8:0] ush_reg_1304;
reg   [0:0] p_Result_40_reg_1309;
reg   [0:0] p_Result_40_reg_1309_pp0_iter13_reg;
wire   [22:0] p_Result_41_fu_896_p1;
reg   [22:0] p_Result_41_reg_1314;
wire   [0:0] isNeg_2_fu_910_p3;
reg   [0:0] isNeg_2_reg_1319;
wire   [8:0] ush_2_fu_928_p3;
reg   [8:0] ush_2_reg_1324;
wire   [7:0] val_fu_990_p3;
reg   [7:0] val_reg_1329;
wire   [7:0] val_2_fu_1051_p3;
reg   [7:0] val_2_reg_1335;
wire   [7:0] result_V_fu_1063_p3;
reg   [7:0] result_V_reg_1341;
wire   [7:0] result_V_24_fu_1074_p3;
reg   [7:0] result_V_24_reg_1346;
wire  signed [31:0] sext_ln480_fu_1080_p1;
wire  signed [31:0] sext_ln483_fu_1084_p1;
reg   [31:0] conv_reg_1361;
reg   [31:0] conv1_reg_1377;
wire   [63:0] zext_ln473_fu_700_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln472_fu_805_p1;
wire   [63:0] zext_ln480_fu_1095_p1;
wire   [63:0] zext_ln483_fu_1117_p1;
reg   [8:0] j22_fu_152;
wire   [8:0] add_ln473_fu_716_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_j22_load;
reg   [3:0] i23_fu_156;
reg   [12:0] indvar_flatten7_fu_160;
wire   [12:0] add_ln472_1_fu_677_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten7_load;
wire   [3:0] add_ln472_fu_735_p2;
wire   [3:0] p_Val2_s_fu_748_p13;
wire   [47:0] p_Val2_s_fu_748_p14;
wire   [31:0] data_V_fu_814_p1;
wire   [7:0] xs_exp_V_fu_825_p4;
wire   [8:0] zext_ln346_fu_839_p1;
wire   [8:0] add_ln346_fu_843_p2;
wire   [7:0] sub_ln1512_fu_857_p2;
wire  signed [8:0] sext_ln1512_fu_863_p1;
wire   [31:0] data_V_3_fu_875_p1;
wire   [7:0] xs_exp_V_2_fu_886_p4;
wire   [8:0] zext_ln346_2_fu_900_p1;
wire   [8:0] add_ln346_2_fu_904_p2;
wire   [7:0] sub_ln1512_2_fu_918_p2;
wire  signed [8:0] sext_ln1512_2_fu_924_p1;
wire   [24:0] mantissa_fu_936_p4;
wire  signed [31:0] sext_ln1488_fu_949_p1;
wire   [54:0] zext_ln15_fu_945_p1;
wire   [54:0] zext_ln1488_fu_952_p1;
wire   [54:0] r_V_fu_956_p2;
wire   [0:0] tmp_fu_968_p3;
wire   [54:0] r_V_56_fu_962_p2;
wire   [7:0] zext_ln818_fu_976_p1;
wire   [7:0] tmp_s_fu_980_p4;
wire   [24:0] mantissa_2_fu_997_p4;
wire  signed [31:0] sext_ln1488_2_fu_1010_p1;
wire   [54:0] zext_ln15_2_fu_1006_p1;
wire   [54:0] zext_ln1488_3_fu_1013_p1;
wire   [54:0] r_V_57_fu_1017_p2;
wire   [0:0] tmp_743_fu_1029_p3;
wire   [54:0] r_V_58_fu_1023_p2;
wire   [7:0] zext_ln818_3_fu_1037_p1;
wire   [7:0] tmp_591_fu_1041_p4;
wire   [7:0] result_V_20_fu_1058_p2;
wire   [7:0] result_V_23_fu_1069_p2;
wire   [9:0] shl_ln_fu_1088_p3;
wire   [9:0] or_ln483_fu_1111_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_124_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 48 ),
    .din2_WIDTH( 48 ),
    .din3_WIDTH( 48 ),
    .din4_WIDTH( 48 ),
    .din5_WIDTH( 48 ),
    .din6_WIDTH( 48 ),
    .din7_WIDTH( 48 ),
    .din8_WIDTH( 48 ),
    .din9_WIDTH( 48 ),
    .din10_WIDTH( 48 ),
    .din11_WIDTH( 48 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 48 ))
mux_124_48_1_1_U10300(
    .din0(acc_outp5_V_q0),
    .din1(acc_outp5_V_1_q0),
    .din2(acc_outp5_V_2_q0),
    .din3(acc_outp5_V_3_q0),
    .din4(acc_outp5_V_4_q0),
    .din5(acc_outp5_V_5_q0),
    .din6(acc_outp5_V_6_q0),
    .din7(acc_outp5_V_7_q0),
    .din8(acc_outp5_V_8_q0),
    .din9(acc_outp5_V_9_q0),
    .din10(acc_outp5_V_10_q0),
    .din11(acc_outp5_V_11_q0),
    .din12(p_Val2_s_fu_748_p13),
    .dout(p_Val2_s_fu_748_p14)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i23_fu_156 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i23_fu_156 <= select_ln472_1_fu_741_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln472_fu_671_p2 == 1'd0))) begin
            indvar_flatten7_fu_160 <= add_ln472_1_fu_677_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten7_fu_160 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln472_fu_671_p2 == 1'd0))) begin
            j22_fu_152 <= add_ln473_fu_716_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j22_fu_152 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        conv1_reg_1377 <= grp_fu_295_p_dout0;
        conv_i2_reg_1268 <= grp_fu_289_p_dout0;
        conv_i_reg_1263 <= grp_fu_286_p_dout0;
        conv_reg_1361 <= grp_fu_292_p_dout0;
        isNeg_2_reg_1319 <= add_ln346_2_fu_904_p2[32'd8];
        isNeg_reg_1299 <= add_ln346_fu_843_p2[32'd8];
        outp0_f_reg_1279 <= grp_fu_278_p_dout0;
        outp1_f_reg_1284 <= grp_fu_282_p_dout0;
        p_Result_39_reg_1294 <= p_Result_39_fu_835_p1;
        p_Result_40_reg_1309 <= data_V_3_fu_875_p1[32'd31];
        p_Result_40_reg_1309_pp0_iter13_reg <= p_Result_40_reg_1309;
        p_Result_41_reg_1314 <= p_Result_41_fu_896_p1;
        p_Result_s_reg_1289 <= data_V_fu_814_p1[32'd31];
        p_Result_s_reg_1289_pp0_iter13_reg <= p_Result_s_reg_1289;
        result_V_24_reg_1346 <= result_V_24_fu_1074_p3;
        result_V_reg_1341 <= result_V_fu_1063_p3;
        select_ln472_1_reg_1228_pp0_iter10_reg <= select_ln472_1_reg_1228_pp0_iter9_reg;
        select_ln472_1_reg_1228_pp0_iter11_reg <= select_ln472_1_reg_1228_pp0_iter10_reg;
        select_ln472_1_reg_1228_pp0_iter12_reg <= select_ln472_1_reg_1228_pp0_iter11_reg;
        select_ln472_1_reg_1228_pp0_iter13_reg <= select_ln472_1_reg_1228_pp0_iter12_reg;
        select_ln472_1_reg_1228_pp0_iter14_reg <= select_ln472_1_reg_1228_pp0_iter13_reg;
        select_ln472_1_reg_1228_pp0_iter15_reg <= select_ln472_1_reg_1228_pp0_iter14_reg;
        select_ln472_1_reg_1228_pp0_iter16_reg <= select_ln472_1_reg_1228_pp0_iter15_reg;
        select_ln472_1_reg_1228_pp0_iter17_reg <= select_ln472_1_reg_1228_pp0_iter16_reg;
        select_ln472_1_reg_1228_pp0_iter18_reg <= select_ln472_1_reg_1228_pp0_iter17_reg;
        select_ln472_1_reg_1228_pp0_iter19_reg <= select_ln472_1_reg_1228_pp0_iter18_reg;
        select_ln472_1_reg_1228_pp0_iter20_reg <= select_ln472_1_reg_1228_pp0_iter19_reg;
        select_ln472_1_reg_1228_pp0_iter2_reg <= select_ln472_1_reg_1228;
        select_ln472_1_reg_1228_pp0_iter3_reg <= select_ln472_1_reg_1228_pp0_iter2_reg;
        select_ln472_1_reg_1228_pp0_iter4_reg <= select_ln472_1_reg_1228_pp0_iter3_reg;
        select_ln472_1_reg_1228_pp0_iter5_reg <= select_ln472_1_reg_1228_pp0_iter4_reg;
        select_ln472_1_reg_1228_pp0_iter6_reg <= select_ln472_1_reg_1228_pp0_iter5_reg;
        select_ln472_1_reg_1228_pp0_iter7_reg <= select_ln472_1_reg_1228_pp0_iter6_reg;
        select_ln472_1_reg_1228_pp0_iter8_reg <= select_ln472_1_reg_1228_pp0_iter7_reg;
        select_ln472_1_reg_1228_pp0_iter9_reg <= select_ln472_1_reg_1228_pp0_iter8_reg;
        select_ln472_reg_1163_pp0_iter10_reg <= select_ln472_reg_1163_pp0_iter9_reg;
        select_ln472_reg_1163_pp0_iter11_reg <= select_ln472_reg_1163_pp0_iter10_reg;
        select_ln472_reg_1163_pp0_iter12_reg <= select_ln472_reg_1163_pp0_iter11_reg;
        select_ln472_reg_1163_pp0_iter13_reg <= select_ln472_reg_1163_pp0_iter12_reg;
        select_ln472_reg_1163_pp0_iter14_reg <= select_ln472_reg_1163_pp0_iter13_reg;
        select_ln472_reg_1163_pp0_iter15_reg <= select_ln472_reg_1163_pp0_iter14_reg;
        select_ln472_reg_1163_pp0_iter16_reg <= select_ln472_reg_1163_pp0_iter15_reg;
        select_ln472_reg_1163_pp0_iter17_reg <= select_ln472_reg_1163_pp0_iter16_reg;
        select_ln472_reg_1163_pp0_iter18_reg <= select_ln472_reg_1163_pp0_iter17_reg;
        select_ln472_reg_1163_pp0_iter19_reg <= select_ln472_reg_1163_pp0_iter18_reg;
        select_ln472_reg_1163_pp0_iter20_reg <= select_ln472_reg_1163_pp0_iter19_reg;
        select_ln472_reg_1163_pp0_iter2_reg <= select_ln472_reg_1163_pp0_iter1_reg;
        select_ln472_reg_1163_pp0_iter3_reg <= select_ln472_reg_1163_pp0_iter2_reg;
        select_ln472_reg_1163_pp0_iter4_reg <= select_ln472_reg_1163_pp0_iter3_reg;
        select_ln472_reg_1163_pp0_iter5_reg <= select_ln472_reg_1163_pp0_iter4_reg;
        select_ln472_reg_1163_pp0_iter6_reg <= select_ln472_reg_1163_pp0_iter5_reg;
        select_ln472_reg_1163_pp0_iter7_reg <= select_ln472_reg_1163_pp0_iter6_reg;
        select_ln472_reg_1163_pp0_iter8_reg <= select_ln472_reg_1163_pp0_iter7_reg;
        select_ln472_reg_1163_pp0_iter9_reg <= select_ln472_reg_1163_pp0_iter8_reg;
        ush_2_reg_1324 <= ush_2_fu_928_p3;
        ush_reg_1304 <= ush_fu_867_p3;
        v351_load_reg_1258 <= v351_q0;
        val_2_reg_1335 <= val_2_fu_1051_p3;
        val_reg_1329 <= val_fu_990_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        outp0_dp_reg_1233 <= {{p_Val2_s_fu_748_p14[47:24]}};
        outp1_dp_reg_1238 <= outp1_dp_fu_788_p1;
        select_ln472_1_reg_1228 <= select_ln472_1_fu_741_p3;
        select_ln472_reg_1163_pp0_iter1_reg <= select_ln472_reg_1163;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln472_fu_671_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln473_reg_1158 <= icmp_ln473_fu_686_p2;
        select_ln472_reg_1163 <= select_ln472_fu_692_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_10_ce0 = 1'b1;
    end else begin
        acc_outp5_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_11_ce0 = 1'b1;
    end else begin
        acc_outp5_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_1_ce0 = 1'b1;
    end else begin
        acc_outp5_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_2_ce0 = 1'b1;
    end else begin
        acc_outp5_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_3_ce0 = 1'b1;
    end else begin
        acc_outp5_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_4_ce0 = 1'b1;
    end else begin
        acc_outp5_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_5_ce0 = 1'b1;
    end else begin
        acc_outp5_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_6_ce0 = 1'b1;
    end else begin
        acc_outp5_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_7_ce0 = 1'b1;
    end else begin
        acc_outp5_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_8_ce0 = 1'b1;
    end else begin
        acc_outp5_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_9_ce0 = 1'b1;
    end else begin
        acc_outp5_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        acc_outp5_V_ce0 = 1'b1;
    end else begin
        acc_outp5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln472_fu_671_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten7_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten7_load = indvar_flatten7_fu_160;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j22_load = 9'd0;
    end else begin
        ap_sig_allocacmp_j22_load = j22_fu_152;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_0_ce0 = 1'b1;
    end else begin
        v252_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_0_ce1 = 1'b1;
    end else begin
        v252_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_0_we0 = 1'b1;
    end else begin
        v252_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_0_we1 = 1'b1;
    end else begin
        v252_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_10_ce0 = 1'b1;
    end else begin
        v252_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_10_ce1 = 1'b1;
    end else begin
        v252_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_10_we0 = 1'b1;
    end else begin
        v252_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_10_we1 = 1'b1;
    end else begin
        v252_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_11_ce0 = 1'b1;
    end else begin
        v252_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_11_ce1 = 1'b1;
    end else begin
        v252_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd11) | ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd12) | ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd13) | ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd14) | (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd15))))))) begin
        v252_11_we0 = 1'b1;
    end else begin
        v252_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd11) | ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd12) | ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd13) | ((select_ln472_1_reg_1228_pp0_iter20_reg == 4'd14) | (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd15))))))) begin
        v252_11_we1 = 1'b1;
    end else begin
        v252_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_1_ce0 = 1'b1;
    end else begin
        v252_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_1_ce1 = 1'b1;
    end else begin
        v252_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_1_we0 = 1'b1;
    end else begin
        v252_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_1_we1 = 1'b1;
    end else begin
        v252_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_2_ce0 = 1'b1;
    end else begin
        v252_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_2_ce1 = 1'b1;
    end else begin
        v252_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_2_we0 = 1'b1;
    end else begin
        v252_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_2_we1 = 1'b1;
    end else begin
        v252_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_3_ce0 = 1'b1;
    end else begin
        v252_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_3_ce1 = 1'b1;
    end else begin
        v252_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_3_we0 = 1'b1;
    end else begin
        v252_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_3_we1 = 1'b1;
    end else begin
        v252_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_4_ce0 = 1'b1;
    end else begin
        v252_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_4_ce1 = 1'b1;
    end else begin
        v252_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_4_we0 = 1'b1;
    end else begin
        v252_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_4_we1 = 1'b1;
    end else begin
        v252_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_5_ce0 = 1'b1;
    end else begin
        v252_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_5_ce1 = 1'b1;
    end else begin
        v252_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_5_we0 = 1'b1;
    end else begin
        v252_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_5_we1 = 1'b1;
    end else begin
        v252_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_6_ce0 = 1'b1;
    end else begin
        v252_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_6_ce1 = 1'b1;
    end else begin
        v252_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_6_we0 = 1'b1;
    end else begin
        v252_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_6_we1 = 1'b1;
    end else begin
        v252_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_7_ce0 = 1'b1;
    end else begin
        v252_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_7_ce1 = 1'b1;
    end else begin
        v252_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_7_we0 = 1'b1;
    end else begin
        v252_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_7_we1 = 1'b1;
    end else begin
        v252_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_8_ce0 = 1'b1;
    end else begin
        v252_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_8_ce1 = 1'b1;
    end else begin
        v252_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_8_we0 = 1'b1;
    end else begin
        v252_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_8_we1 = 1'b1;
    end else begin
        v252_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_9_ce0 = 1'b1;
    end else begin
        v252_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_9_ce1 = 1'b1;
    end else begin
        v252_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_9_we0 = 1'b1;
    end else begin
        v252_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (select_ln472_1_reg_1228_pp0_iter20_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v252_9_we1 = 1'b1;
    end else begin
        v252_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v351_ce0 = 1'b1;
    end else begin
        v351_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_outp5_V_10_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_11_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_1_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_2_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_3_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_4_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_5_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_6_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_7_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_8_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_9_address0 = zext_ln473_fu_700_p1;

assign acc_outp5_V_address0 = zext_ln473_fu_700_p1;

assign add_ln346_2_fu_904_p2 = ($signed(zext_ln346_2_fu_900_p1) + $signed(9'd385));

assign add_ln346_fu_843_p2 = ($signed(zext_ln346_fu_839_p1) + $signed(9'd385));

assign add_ln472_1_fu_677_p2 = (ap_sig_allocacmp_indvar_flatten7_load + 13'd1);

assign add_ln472_fu_735_p2 = (i23_fu_156 + 4'd1);

assign add_ln473_fu_716_p2 = (select_ln472_fu_692_p3 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln472_fu_809_p1 = v351_load_reg_1258;

assign data_V_3_fu_875_p1 = outp1_f_reg_1284;

assign data_V_fu_814_p1 = outp0_f_reg_1279;

assign grp_fu_278_p_ce = 1'b1;

assign grp_fu_278_p_din0 = conv_i_reg_1263;

assign grp_fu_278_p_din1 = bitcast_ln472_fu_809_p1;

assign grp_fu_282_p_ce = 1'b1;

assign grp_fu_282_p_din0 = conv_i2_reg_1268;

assign grp_fu_282_p_din1 = bitcast_ln472_fu_809_p1;

assign grp_fu_286_p_ce = 1'b1;

assign grp_fu_286_p_din0 = sext_ln1616_fu_797_p1;

assign grp_fu_289_p_ce = 1'b1;

assign grp_fu_289_p_din0 = sext_ln1616_2_fu_801_p1;

assign grp_fu_292_p_ce = 1'b1;

assign grp_fu_292_p_din0 = sext_ln480_fu_1080_p1;

assign grp_fu_295_p_ce = 1'b1;

assign grp_fu_295_p_din0 = sext_ln483_fu_1084_p1;

assign icmp_ln472_fu_671_p2 = ((ap_sig_allocacmp_indvar_flatten7_load == 13'd4608) ? 1'b1 : 1'b0);

assign icmp_ln473_fu_686_p2 = ((ap_sig_allocacmp_j22_load == 9'd384) ? 1'b1 : 1'b0);

assign isNeg_2_fu_910_p3 = add_ln346_2_fu_904_p2[32'd8];

assign isNeg_fu_849_p3 = add_ln346_fu_843_p2[32'd8];

assign mantissa_2_fu_997_p4 = {{{{1'd1}, {p_Result_41_reg_1314}}}, {1'd0}};

assign mantissa_fu_936_p4 = {{{{1'd1}, {p_Result_39_reg_1294}}}, {1'd0}};

assign or_ln483_fu_1111_p2 = (shl_ln_fu_1088_p3 | 10'd1);

assign outp1_dp_fu_788_p1 = p_Val2_s_fu_748_p14[23:0];

assign p_Result_39_fu_835_p1 = data_V_fu_814_p1[22:0];

assign p_Result_41_fu_896_p1 = data_V_3_fu_875_p1[22:0];

assign p_Val2_s_fu_748_p13 = ((icmp_ln473_reg_1158[0:0] == 1'b1) ? add_ln472_fu_735_p2 : i23_fu_156);

assign r_V_56_fu_962_p2 = zext_ln15_fu_945_p1 << zext_ln1488_fu_952_p1;

assign r_V_57_fu_1017_p2 = zext_ln15_2_fu_1006_p1 >> zext_ln1488_3_fu_1013_p1;

assign r_V_58_fu_1023_p2 = zext_ln15_2_fu_1006_p1 << zext_ln1488_3_fu_1013_p1;

assign r_V_fu_956_p2 = zext_ln15_fu_945_p1 >> zext_ln1488_fu_952_p1;

assign result_V_20_fu_1058_p2 = (8'd0 - val_reg_1329);

assign result_V_23_fu_1069_p2 = (8'd0 - val_2_reg_1335);

assign result_V_24_fu_1074_p3 = ((p_Result_40_reg_1309_pp0_iter13_reg[0:0] == 1'b1) ? result_V_23_fu_1069_p2 : val_2_reg_1335);

assign result_V_fu_1063_p3 = ((p_Result_s_reg_1289_pp0_iter13_reg[0:0] == 1'b1) ? result_V_20_fu_1058_p2 : val_reg_1329);

assign select_ln472_1_fu_741_p3 = ((icmp_ln473_reg_1158[0:0] == 1'b1) ? add_ln472_fu_735_p2 : i23_fu_156);

assign select_ln472_fu_692_p3 = ((icmp_ln473_fu_686_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_j22_load);

assign sext_ln1488_2_fu_1010_p1 = $signed(ush_2_reg_1324);

assign sext_ln1488_fu_949_p1 = $signed(ush_reg_1304);

assign sext_ln1512_2_fu_924_p1 = $signed(sub_ln1512_2_fu_918_p2);

assign sext_ln1512_fu_863_p1 = $signed(sub_ln1512_fu_857_p2);

assign sext_ln1616_2_fu_801_p1 = $signed(outp1_dp_reg_1238);

assign sext_ln1616_fu_797_p1 = $signed(outp0_dp_reg_1233);

assign sext_ln480_fu_1080_p1 = $signed(result_V_reg_1341);

assign sext_ln483_fu_1084_p1 = $signed(result_V_24_reg_1346);

assign shl_ln_fu_1088_p3 = {{select_ln472_reg_1163_pp0_iter20_reg}, {1'd0}};

assign sub_ln1512_2_fu_918_p2 = (8'd127 - xs_exp_V_2_fu_886_p4);

assign sub_ln1512_fu_857_p2 = (8'd127 - xs_exp_V_fu_825_p4);

assign tmp_591_fu_1041_p4 = {{r_V_58_fu_1023_p2[31:24]}};

assign tmp_743_fu_1029_p3 = r_V_57_fu_1017_p2[32'd24];

assign tmp_fu_968_p3 = r_V_fu_956_p2[32'd24];

assign tmp_s_fu_980_p4 = {{r_V_56_fu_962_p2[31:24]}};

assign ush_2_fu_928_p3 = ((isNeg_2_fu_910_p3[0:0] == 1'b1) ? sext_ln1512_2_fu_924_p1 : add_ln346_2_fu_904_p2);

assign ush_fu_867_p3 = ((isNeg_fu_849_p3[0:0] == 1'b1) ? sext_ln1512_fu_863_p1 : add_ln346_fu_843_p2);

assign v252_0_address0 = zext_ln483_fu_1117_p1;

assign v252_0_address1 = zext_ln480_fu_1095_p1;

assign v252_0_d0 = conv1_reg_1377;

assign v252_0_d1 = conv_reg_1361;

assign v252_10_address0 = zext_ln483_fu_1117_p1;

assign v252_10_address1 = zext_ln480_fu_1095_p1;

assign v252_10_d0 = conv1_reg_1377;

assign v252_10_d1 = conv_reg_1361;

assign v252_11_address0 = zext_ln483_fu_1117_p1;

assign v252_11_address1 = zext_ln480_fu_1095_p1;

assign v252_11_d0 = conv1_reg_1377;

assign v252_11_d1 = conv_reg_1361;

assign v252_1_address0 = zext_ln483_fu_1117_p1;

assign v252_1_address1 = zext_ln480_fu_1095_p1;

assign v252_1_d0 = conv1_reg_1377;

assign v252_1_d1 = conv_reg_1361;

assign v252_2_address0 = zext_ln483_fu_1117_p1;

assign v252_2_address1 = zext_ln480_fu_1095_p1;

assign v252_2_d0 = conv1_reg_1377;

assign v252_2_d1 = conv_reg_1361;

assign v252_3_address0 = zext_ln483_fu_1117_p1;

assign v252_3_address1 = zext_ln480_fu_1095_p1;

assign v252_3_d0 = conv1_reg_1377;

assign v252_3_d1 = conv_reg_1361;

assign v252_4_address0 = zext_ln483_fu_1117_p1;

assign v252_4_address1 = zext_ln480_fu_1095_p1;

assign v252_4_d0 = conv1_reg_1377;

assign v252_4_d1 = conv_reg_1361;

assign v252_5_address0 = zext_ln483_fu_1117_p1;

assign v252_5_address1 = zext_ln480_fu_1095_p1;

assign v252_5_d0 = conv1_reg_1377;

assign v252_5_d1 = conv_reg_1361;

assign v252_6_address0 = zext_ln483_fu_1117_p1;

assign v252_6_address1 = zext_ln480_fu_1095_p1;

assign v252_6_d0 = conv1_reg_1377;

assign v252_6_d1 = conv_reg_1361;

assign v252_7_address0 = zext_ln483_fu_1117_p1;

assign v252_7_address1 = zext_ln480_fu_1095_p1;

assign v252_7_d0 = conv1_reg_1377;

assign v252_7_d1 = conv_reg_1361;

assign v252_8_address0 = zext_ln483_fu_1117_p1;

assign v252_8_address1 = zext_ln480_fu_1095_p1;

assign v252_8_d0 = conv1_reg_1377;

assign v252_8_d1 = conv_reg_1361;

assign v252_9_address0 = zext_ln483_fu_1117_p1;

assign v252_9_address1 = zext_ln480_fu_1095_p1;

assign v252_9_d0 = conv1_reg_1377;

assign v252_9_d1 = conv_reg_1361;

assign v351_address0 = zext_ln472_fu_805_p1;

assign val_2_fu_1051_p3 = ((isNeg_2_reg_1319[0:0] == 1'b1) ? zext_ln818_3_fu_1037_p1 : tmp_591_fu_1041_p4);

assign val_fu_990_p3 = ((isNeg_reg_1299[0:0] == 1'b1) ? zext_ln818_fu_976_p1 : tmp_s_fu_980_p4);

assign xs_exp_V_2_fu_886_p4 = {{data_V_3_fu_875_p1[30:23]}};

assign xs_exp_V_fu_825_p4 = {{data_V_fu_814_p1[30:23]}};

assign zext_ln1488_3_fu_1013_p1 = $unsigned(sext_ln1488_2_fu_1010_p1);

assign zext_ln1488_fu_952_p1 = $unsigned(sext_ln1488_fu_949_p1);

assign zext_ln15_2_fu_1006_p1 = mantissa_2_fu_997_p4;

assign zext_ln15_fu_945_p1 = mantissa_fu_936_p4;

assign zext_ln346_2_fu_900_p1 = xs_exp_V_2_fu_886_p4;

assign zext_ln346_fu_839_p1 = xs_exp_V_fu_825_p4;

assign zext_ln472_fu_805_p1 = select_ln472_1_reg_1228_pp0_iter5_reg;

assign zext_ln473_fu_700_p1 = select_ln472_fu_692_p3;

assign zext_ln480_fu_1095_p1 = shl_ln_fu_1088_p3;

assign zext_ln483_fu_1117_p1 = or_ln483_fu_1111_p2;

assign zext_ln818_3_fu_1037_p1 = tmp_743_fu_1029_p3;

assign zext_ln818_fu_976_p1 = tmp_fu_968_p3;

endmodule //Bert_layer_Linear_layer_ds2_Pipeline_l_scale_outp_i23_l_j22
