// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Bert_layer_Pipeline_l_S_i_j_0_i24_l_j23 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v364_0_address0,
        v364_0_ce0,
        v364_0_q0,
        v364_1_address0,
        v364_1_ce0,
        v364_1_q0,
        v364_2_address0,
        v364_2_ce0,
        v364_2_q0,
        v364_3_address0,
        v364_3_ce0,
        v364_3_q0,
        v364_4_address0,
        v364_4_ce0,
        v364_4_q0,
        v364_5_address0,
        v364_5_ce0,
        v364_5_q0,
        v364_6_address0,
        v364_6_ce0,
        v364_6_q0,
        v364_7_address0,
        v364_7_ce0,
        v364_7_q0,
        v364_8_address0,
        v364_8_ce0,
        v364_8_q0,
        v364_9_address0,
        v364_9_ce0,
        v364_9_q0,
        v364_10_address0,
        v364_10_ce0,
        v364_10_q0,
        v364_11_address0,
        v364_11_ce0,
        v364_11_q0,
        v360_address0,
        v360_ce0,
        v360_q0,
        v360_1_address0,
        v360_1_ce0,
        v360_1_q0,
        v360_2_address0,
        v360_2_ce0,
        v360_2_q0,
        v360_3_address0,
        v360_3_ce0,
        v360_3_q0,
        v360_4_address0,
        v360_4_ce0,
        v360_4_q0,
        v360_5_address0,
        v360_5_ce0,
        v360_5_q0,
        v360_6_address0,
        v360_6_ce0,
        v360_6_q0,
        v360_7_address0,
        v360_7_ce0,
        v360_7_q0,
        v360_8_address0,
        v360_8_ce0,
        v360_8_q0,
        v360_9_address0,
        v360_9_ce0,
        v360_9_q0,
        v360_10_address0,
        v360_10_ce0,
        v360_10_q0,
        v360_11_address0,
        v360_11_ce0,
        v360_11_q0,
        v365_address0,
        v365_ce0,
        v365_we0,
        v365_d0,
        v365_1_address0,
        v365_1_ce0,
        v365_1_we0,
        v365_1_d0,
        v365_2_address0,
        v365_2_ce0,
        v365_2_we0,
        v365_2_d0,
        v365_3_address0,
        v365_3_ce0,
        v365_3_we0,
        v365_3_d0,
        v365_4_address0,
        v365_4_ce0,
        v365_4_we0,
        v365_4_d0,
        v365_5_address0,
        v365_5_ce0,
        v365_5_we0,
        v365_5_d0,
        v365_6_address0,
        v365_6_ce0,
        v365_6_we0,
        v365_6_d0,
        v365_7_address0,
        v365_7_ce0,
        v365_7_we0,
        v365_7_d0,
        v365_8_address0,
        v365_8_ce0,
        v365_8_we0,
        v365_8_d0,
        v365_9_address0,
        v365_9_ce0,
        v365_9_we0,
        v365_9_d0,
        v365_10_address0,
        v365_10_ce0,
        v365_10_we0,
        v365_10_d0,
        v365_11_address0,
        v365_11_ce0,
        v365_11_we0,
        v365_11_d0,
        grp_fu_2476_p_din0,
        grp_fu_2476_p_din1,
        grp_fu_2476_p_opcode,
        grp_fu_2476_p_dout0,
        grp_fu_2476_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] v364_0_address0;
output   v364_0_ce0;
input  [31:0] v364_0_q0;
output  [9:0] v364_1_address0;
output   v364_1_ce0;
input  [31:0] v364_1_q0;
output  [9:0] v364_2_address0;
output   v364_2_ce0;
input  [31:0] v364_2_q0;
output  [9:0] v364_3_address0;
output   v364_3_ce0;
input  [31:0] v364_3_q0;
output  [9:0] v364_4_address0;
output   v364_4_ce0;
input  [31:0] v364_4_q0;
output  [9:0] v364_5_address0;
output   v364_5_ce0;
input  [31:0] v364_5_q0;
output  [9:0] v364_6_address0;
output   v364_6_ce0;
input  [31:0] v364_6_q0;
output  [9:0] v364_7_address0;
output   v364_7_ce0;
input  [31:0] v364_7_q0;
output  [9:0] v364_8_address0;
output   v364_8_ce0;
input  [31:0] v364_8_q0;
output  [9:0] v364_9_address0;
output   v364_9_ce0;
input  [31:0] v364_9_q0;
output  [9:0] v364_10_address0;
output   v364_10_ce0;
input  [31:0] v364_10_q0;
output  [9:0] v364_11_address0;
output   v364_11_ce0;
input  [31:0] v364_11_q0;
output  [9:0] v360_address0;
output   v360_ce0;
input  [31:0] v360_q0;
output  [9:0] v360_1_address0;
output   v360_1_ce0;
input  [31:0] v360_1_q0;
output  [9:0] v360_2_address0;
output   v360_2_ce0;
input  [31:0] v360_2_q0;
output  [9:0] v360_3_address0;
output   v360_3_ce0;
input  [31:0] v360_3_q0;
output  [9:0] v360_4_address0;
output   v360_4_ce0;
input  [31:0] v360_4_q0;
output  [9:0] v360_5_address0;
output   v360_5_ce0;
input  [31:0] v360_5_q0;
output  [9:0] v360_6_address0;
output   v360_6_ce0;
input  [31:0] v360_6_q0;
output  [9:0] v360_7_address0;
output   v360_7_ce0;
input  [31:0] v360_7_q0;
output  [9:0] v360_8_address0;
output   v360_8_ce0;
input  [31:0] v360_8_q0;
output  [9:0] v360_9_address0;
output   v360_9_ce0;
input  [31:0] v360_9_q0;
output  [9:0] v360_10_address0;
output   v360_10_ce0;
input  [31:0] v360_10_q0;
output  [9:0] v360_11_address0;
output   v360_11_ce0;
input  [31:0] v360_11_q0;
output  [9:0] v365_address0;
output   v365_ce0;
output   v365_we0;
output  [31:0] v365_d0;
output  [9:0] v365_1_address0;
output   v365_1_ce0;
output   v365_1_we0;
output  [31:0] v365_1_d0;
output  [9:0] v365_2_address0;
output   v365_2_ce0;
output   v365_2_we0;
output  [31:0] v365_2_d0;
output  [9:0] v365_3_address0;
output   v365_3_ce0;
output   v365_3_we0;
output  [31:0] v365_3_d0;
output  [9:0] v365_4_address0;
output   v365_4_ce0;
output   v365_4_we0;
output  [31:0] v365_4_d0;
output  [9:0] v365_5_address0;
output   v365_5_ce0;
output   v365_5_we0;
output  [31:0] v365_5_d0;
output  [9:0] v365_6_address0;
output   v365_6_ce0;
output   v365_6_we0;
output  [31:0] v365_6_d0;
output  [9:0] v365_7_address0;
output   v365_7_ce0;
output   v365_7_we0;
output  [31:0] v365_7_d0;
output  [9:0] v365_8_address0;
output   v365_8_ce0;
output   v365_8_we0;
output  [31:0] v365_8_d0;
output  [9:0] v365_9_address0;
output   v365_9_ce0;
output   v365_9_we0;
output  [31:0] v365_9_d0;
output  [9:0] v365_10_address0;
output   v365_10_ce0;
output   v365_10_we0;
output  [31:0] v365_10_d0;
output  [9:0] v365_11_address0;
output   v365_11_ce0;
output   v365_11_we0;
output  [31:0] v365_11_d0;
output  [31:0] grp_fu_2476_p_din0;
output  [31:0] grp_fu_2476_p_din1;
output  [0:0] grp_fu_2476_p_opcode;
input  [31:0] grp_fu_2476_p_dout0;
output   grp_fu_2476_p_ce;

reg ap_idle;
reg v364_0_ce0;
reg v364_1_ce0;
reg v364_2_ce0;
reg v364_3_ce0;
reg v364_4_ce0;
reg v364_5_ce0;
reg v364_6_ce0;
reg v364_7_ce0;
reg v364_8_ce0;
reg v364_9_ce0;
reg v364_10_ce0;
reg v364_11_ce0;
reg v360_ce0;
reg v360_1_ce0;
reg v360_2_ce0;
reg v360_3_ce0;
reg v360_4_ce0;
reg v360_5_ce0;
reg v360_6_ce0;
reg v360_7_ce0;
reg v360_8_ce0;
reg v360_9_ce0;
reg v360_10_ce0;
reg v360_11_ce0;
reg v365_ce0;
reg v365_we0;
reg v365_1_ce0;
reg v365_1_we0;
reg v365_2_ce0;
reg v365_2_we0;
reg v365_3_ce0;
reg v365_3_we0;
reg v365_4_ce0;
reg v365_4_we0;
reg v365_5_ce0;
reg v365_5_we0;
reg v365_6_ce0;
reg v365_6_we0;
reg v365_7_ce0;
reg v365_7_we0;
reg v365_8_ce0;
reg v365_8_we0;
reg v365_9_ce0;
reg v365_9_we0;
reg v365_10_ce0;
reg v365_10_we0;
reg v365_11_ce0;
reg v365_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln499_fu_630_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln500_fu_645_p2;
reg   [0:0] icmp_ln500_reg_809;
wire   [63:0] zext_ln500_fu_659_p1;
reg   [63:0] zext_ln500_reg_814;
reg   [63:0] zext_ln500_reg_814_pp0_iter1_reg;
reg   [63:0] zext_ln500_reg_814_pp0_iter2_reg;
reg   [63:0] zext_ln500_reg_814_pp0_iter3_reg;
reg   [63:0] zext_ln500_reg_814_pp0_iter4_reg;
reg   [63:0] zext_ln500_reg_814_pp0_iter5_reg;
reg   [63:0] zext_ln500_reg_814_pp0_iter6_reg;
wire   [3:0] select_ln499_1_fu_712_p3;
reg   [3:0] select_ln499_1_reg_950;
reg   [3:0] select_ln499_1_reg_950_pp0_iter2_reg;
reg   [3:0] select_ln499_1_reg_950_pp0_iter3_reg;
reg   [3:0] select_ln499_1_reg_950_pp0_iter4_reg;
reg   [3:0] select_ln499_1_reg_950_pp0_iter5_reg;
reg   [3:0] select_ln499_1_reg_950_pp0_iter6_reg;
wire   [31:0] v280_fu_719_p14;
reg   [31:0] v280_reg_954;
wire   [31:0] v281_fu_749_p14;
reg   [31:0] v281_reg_959;
reg   [31:0] v282_reg_964;
wire    ap_block_pp0_stage0;
reg   [9:0] j23_fu_128;
wire   [9:0] add_ln500_fu_687_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_j23_load;
reg   [3:0] i24_fu_132;
reg   [13:0] indvar_flatten14_fu_136;
wire   [13:0] add_ln499_1_fu_636_p2;
reg   [13:0] ap_sig_allocacmp_indvar_flatten14_load;
wire   [9:0] select_ln499_fu_651_p3;
wire   [3:0] add_ln499_fu_706_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_124_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_124_32_1_1_U10372(
    .din0(v364_0_q0),
    .din1(v364_1_q0),
    .din2(v364_2_q0),
    .din3(v364_3_q0),
    .din4(v364_4_q0),
    .din5(v364_5_q0),
    .din6(v364_6_q0),
    .din7(v364_7_q0),
    .din8(v364_8_q0),
    .din9(v364_9_q0),
    .din10(v364_10_q0),
    .din11(v364_11_q0),
    .din12(select_ln499_1_fu_712_p3),
    .dout(v280_fu_719_p14)
);

Bert_layer_mux_124_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_124_32_1_1_U10373(
    .din0(v360_q0),
    .din1(v360_1_q0),
    .din2(v360_2_q0),
    .din3(v360_3_q0),
    .din4(v360_4_q0),
    .din5(v360_5_q0),
    .din6(v360_6_q0),
    .din7(v360_7_q0),
    .din8(v360_8_q0),
    .din9(v360_9_q0),
    .din10(v360_10_q0),
    .din11(v360_11_q0),
    .din12(select_ln499_1_fu_712_p3),
    .dout(v281_fu_749_p14)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i24_fu_132 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i24_fu_132 <= select_ln499_1_fu_712_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln499_fu_630_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten14_fu_136 <= add_ln499_1_fu_636_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten14_fu_136 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln499_fu_630_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j23_fu_128 <= add_ln500_fu_687_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j23_fu_128 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln499_1_reg_950 <= select_ln499_1_fu_712_p3;
        v280_reg_954 <= v280_fu_719_p14;
        v281_reg_959 <= v281_fu_749_p14;
        zext_ln500_reg_814_pp0_iter1_reg[9 : 0] <= zext_ln500_reg_814[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        select_ln499_1_reg_950_pp0_iter2_reg <= select_ln499_1_reg_950;
        select_ln499_1_reg_950_pp0_iter3_reg <= select_ln499_1_reg_950_pp0_iter2_reg;
        select_ln499_1_reg_950_pp0_iter4_reg <= select_ln499_1_reg_950_pp0_iter3_reg;
        select_ln499_1_reg_950_pp0_iter5_reg <= select_ln499_1_reg_950_pp0_iter4_reg;
        select_ln499_1_reg_950_pp0_iter6_reg <= select_ln499_1_reg_950_pp0_iter5_reg;
        v282_reg_964 <= grp_fu_2476_p_dout0;
        zext_ln500_reg_814_pp0_iter2_reg[9 : 0] <= zext_ln500_reg_814_pp0_iter1_reg[9 : 0];
        zext_ln500_reg_814_pp0_iter3_reg[9 : 0] <= zext_ln500_reg_814_pp0_iter2_reg[9 : 0];
        zext_ln500_reg_814_pp0_iter4_reg[9 : 0] <= zext_ln500_reg_814_pp0_iter3_reg[9 : 0];
        zext_ln500_reg_814_pp0_iter5_reg[9 : 0] <= zext_ln500_reg_814_pp0_iter4_reg[9 : 0];
        zext_ln500_reg_814_pp0_iter6_reg[9 : 0] <= zext_ln500_reg_814_pp0_iter5_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln499_fu_630_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln500_reg_809 <= icmp_ln500_fu_645_p2;
        zext_ln500_reg_814[9 : 0] <= zext_ln500_fu_659_p1[9 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln499_fu_630_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten14_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten14_load = indvar_flatten14_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j23_load = 10'd0;
    end else begin
        ap_sig_allocacmp_j23_load = j23_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_10_ce0 = 1'b1;
    end else begin
        v360_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_11_ce0 = 1'b1;
    end else begin
        v360_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_1_ce0 = 1'b1;
    end else begin
        v360_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_2_ce0 = 1'b1;
    end else begin
        v360_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_3_ce0 = 1'b1;
    end else begin
        v360_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_4_ce0 = 1'b1;
    end else begin
        v360_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_5_ce0 = 1'b1;
    end else begin
        v360_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_6_ce0 = 1'b1;
    end else begin
        v360_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_7_ce0 = 1'b1;
    end else begin
        v360_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_8_ce0 = 1'b1;
    end else begin
        v360_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_9_ce0 = 1'b1;
    end else begin
        v360_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v360_ce0 = 1'b1;
    end else begin
        v360_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_0_ce0 = 1'b1;
    end else begin
        v364_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_10_ce0 = 1'b1;
    end else begin
        v364_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_11_ce0 = 1'b1;
    end else begin
        v364_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_1_ce0 = 1'b1;
    end else begin
        v364_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_2_ce0 = 1'b1;
    end else begin
        v364_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_3_ce0 = 1'b1;
    end else begin
        v364_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_4_ce0 = 1'b1;
    end else begin
        v364_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_5_ce0 = 1'b1;
    end else begin
        v364_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_6_ce0 = 1'b1;
    end else begin
        v364_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_7_ce0 = 1'b1;
    end else begin
        v364_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_8_ce0 = 1'b1;
    end else begin
        v364_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v364_9_ce0 = 1'b1;
    end else begin
        v364_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_10_ce0 = 1'b1;
    end else begin
        v365_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd10))) begin
        v365_10_we0 = 1'b1;
    end else begin
        v365_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_11_ce0 = 1'b1;
    end else begin
        v365_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & ((select_ln499_1_reg_950_pp0_iter6_reg == 4'd11) | ((select_ln499_1_reg_950_pp0_iter6_reg == 4'd12) | ((select_ln499_1_reg_950_pp0_iter6_reg == 4'd13) | ((select_ln499_1_reg_950_pp0_iter6_reg == 4'd14) | (select_ln499_1_reg_950_pp0_iter6_reg == 4'd15))))))) begin
        v365_11_we0 = 1'b1;
    end else begin
        v365_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_1_ce0 = 1'b1;
    end else begin
        v365_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd1))) begin
        v365_1_we0 = 1'b1;
    end else begin
        v365_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_2_ce0 = 1'b1;
    end else begin
        v365_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd2))) begin
        v365_2_we0 = 1'b1;
    end else begin
        v365_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_3_ce0 = 1'b1;
    end else begin
        v365_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd3))) begin
        v365_3_we0 = 1'b1;
    end else begin
        v365_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_4_ce0 = 1'b1;
    end else begin
        v365_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd4))) begin
        v365_4_we0 = 1'b1;
    end else begin
        v365_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_5_ce0 = 1'b1;
    end else begin
        v365_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd5))) begin
        v365_5_we0 = 1'b1;
    end else begin
        v365_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_6_ce0 = 1'b1;
    end else begin
        v365_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd6))) begin
        v365_6_we0 = 1'b1;
    end else begin
        v365_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_7_ce0 = 1'b1;
    end else begin
        v365_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd7))) begin
        v365_7_we0 = 1'b1;
    end else begin
        v365_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_8_ce0 = 1'b1;
    end else begin
        v365_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd8))) begin
        v365_8_we0 = 1'b1;
    end else begin
        v365_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_9_ce0 = 1'b1;
    end else begin
        v365_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd9))) begin
        v365_9_we0 = 1'b1;
    end else begin
        v365_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v365_ce0 = 1'b1;
    end else begin
        v365_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln499_1_reg_950_pp0_iter6_reg == 4'd0))) begin
        v365_we0 = 1'b1;
    end else begin
        v365_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln499_1_fu_636_p2 = (ap_sig_allocacmp_indvar_flatten14_load + 14'd1);

assign add_ln499_fu_706_p2 = (i24_fu_132 + 4'd1);

assign add_ln500_fu_687_p2 = (select_ln499_fu_651_p3 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_2476_p_ce = 1'b1;

assign grp_fu_2476_p_din0 = v280_reg_954;

assign grp_fu_2476_p_din1 = v281_reg_959;

assign grp_fu_2476_p_opcode = 2'd0;

assign icmp_ln499_fu_630_p2 = ((ap_sig_allocacmp_indvar_flatten14_load == 14'd9216) ? 1'b1 : 1'b0);

assign icmp_ln500_fu_645_p2 = ((ap_sig_allocacmp_j23_load == 10'd768) ? 1'b1 : 1'b0);

assign select_ln499_1_fu_712_p3 = ((icmp_ln500_reg_809[0:0] == 1'b1) ? add_ln499_fu_706_p2 : i24_fu_132);

assign select_ln499_fu_651_p3 = ((icmp_ln500_fu_645_p2[0:0] == 1'b1) ? 10'd0 : ap_sig_allocacmp_j23_load);

assign v360_10_address0 = zext_ln500_fu_659_p1;

assign v360_11_address0 = zext_ln500_fu_659_p1;

assign v360_1_address0 = zext_ln500_fu_659_p1;

assign v360_2_address0 = zext_ln500_fu_659_p1;

assign v360_3_address0 = zext_ln500_fu_659_p1;

assign v360_4_address0 = zext_ln500_fu_659_p1;

assign v360_5_address0 = zext_ln500_fu_659_p1;

assign v360_6_address0 = zext_ln500_fu_659_p1;

assign v360_7_address0 = zext_ln500_fu_659_p1;

assign v360_8_address0 = zext_ln500_fu_659_p1;

assign v360_9_address0 = zext_ln500_fu_659_p1;

assign v360_address0 = zext_ln500_fu_659_p1;

assign v364_0_address0 = zext_ln500_fu_659_p1;

assign v364_10_address0 = zext_ln500_fu_659_p1;

assign v364_11_address0 = zext_ln500_fu_659_p1;

assign v364_1_address0 = zext_ln500_fu_659_p1;

assign v364_2_address0 = zext_ln500_fu_659_p1;

assign v364_3_address0 = zext_ln500_fu_659_p1;

assign v364_4_address0 = zext_ln500_fu_659_p1;

assign v364_5_address0 = zext_ln500_fu_659_p1;

assign v364_6_address0 = zext_ln500_fu_659_p1;

assign v364_7_address0 = zext_ln500_fu_659_p1;

assign v364_8_address0 = zext_ln500_fu_659_p1;

assign v364_9_address0 = zext_ln500_fu_659_p1;

assign v365_10_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_10_d0 = v282_reg_964;

assign v365_11_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_11_d0 = v282_reg_964;

assign v365_1_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_1_d0 = v282_reg_964;

assign v365_2_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_2_d0 = v282_reg_964;

assign v365_3_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_3_d0 = v282_reg_964;

assign v365_4_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_4_d0 = v282_reg_964;

assign v365_5_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_5_d0 = v282_reg_964;

assign v365_6_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_6_d0 = v282_reg_964;

assign v365_7_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_7_d0 = v282_reg_964;

assign v365_8_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_8_d0 = v282_reg_964;

assign v365_9_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_9_d0 = v282_reg_964;

assign v365_address0 = zext_ln500_reg_814_pp0_iter6_reg;

assign v365_d0 = v282_reg_964;

assign zext_ln500_fu_659_p1 = select_ln499_fu_651_p3;

always @ (posedge ap_clk) begin
    zext_ln500_reg_814[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln500_reg_814_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln500_reg_814_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln500_reg_814_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln500_reg_814_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln500_reg_814_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln500_reg_814_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Bert_layer_Pipeline_l_S_i_j_0_i24_l_j23
