// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_scale_outp_i9_l_j9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v346_address0,
        v346_ce0,
        v346_q0,
        acc_outp2_V_address0,
        acc_outp2_V_ce0,
        acc_outp2_V_q0,
        acc_outp2_V_1_address0,
        acc_outp2_V_1_ce0,
        acc_outp2_V_1_q0,
        acc_outp2_V_2_address0,
        acc_outp2_V_2_ce0,
        acc_outp2_V_2_q0,
        acc_outp2_V_3_address0,
        acc_outp2_V_3_ce0,
        acc_outp2_V_3_q0,
        v125_address0,
        v125_ce0,
        v125_we0,
        v125_d0,
        v125_1_address0,
        v125_1_ce0,
        v125_1_we0,
        v125_1_d0,
        v125_2_address0,
        v125_2_ce0,
        v125_2_we0,
        v125_2_d0,
        v125_3_address0,
        v125_3_ce0,
        v125_3_we0,
        v125_3_d0,
        grp_fu_705_p_din0,
        grp_fu_705_p_din1,
        grp_fu_705_p_dout0,
        grp_fu_705_p_ce,
        grp_fu_713_p_din0,
        grp_fu_713_p_dout0,
        grp_fu_713_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v346_address0;
output   v346_ce0;
input  [31:0] v346_q0;
output  [7:0] acc_outp2_V_address0;
output   acc_outp2_V_ce0;
input  [23:0] acc_outp2_V_q0;
output  [7:0] acc_outp2_V_1_address0;
output   acc_outp2_V_1_ce0;
input  [23:0] acc_outp2_V_1_q0;
output  [7:0] acc_outp2_V_2_address0;
output   acc_outp2_V_2_ce0;
input  [23:0] acc_outp2_V_2_q0;
output  [7:0] acc_outp2_V_3_address0;
output   acc_outp2_V_3_ce0;
input  [23:0] acc_outp2_V_3_q0;
output  [7:0] v125_address0;
output   v125_ce0;
output   v125_we0;
output  [7:0] v125_d0;
output  [7:0] v125_1_address0;
output   v125_1_ce0;
output   v125_1_we0;
output  [7:0] v125_1_d0;
output  [7:0] v125_2_address0;
output   v125_2_ce0;
output   v125_2_we0;
output  [7:0] v125_2_d0;
output  [7:0] v125_3_address0;
output   v125_3_ce0;
output   v125_3_we0;
output  [7:0] v125_3_d0;
output  [31:0] grp_fu_705_p_din0;
output  [31:0] grp_fu_705_p_din1;
input  [31:0] grp_fu_705_p_dout0;
output   grp_fu_705_p_ce;
output  [31:0] grp_fu_713_p_din0;
input  [31:0] grp_fu_713_p_dout0;
output   grp_fu_713_p_ce;

reg ap_idle;
reg v346_ce0;
reg acc_outp2_V_ce0;
reg acc_outp2_V_1_ce0;
reg acc_outp2_V_2_ce0;
reg acc_outp2_V_3_ce0;
reg v125_ce0;
reg v125_we0;
reg v125_1_ce0;
reg v125_1_we0;
reg v125_2_ce0;
reg v125_2_we0;
reg v125_3_ce0;
reg v125_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln179_fu_260_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln179_1_fu_298_p3;
reg   [3:0] select_ln179_1_reg_557;
reg   [3:0] select_ln179_1_reg_557_pp0_iter1_reg;
reg   [3:0] select_ln179_1_reg_557_pp0_iter2_reg;
reg   [3:0] select_ln179_1_reg_557_pp0_iter3_reg;
reg   [3:0] select_ln179_1_reg_557_pp0_iter4_reg;
reg   [3:0] select_ln179_1_reg_557_pp0_iter5_reg;
reg   [3:0] select_ln179_1_reg_557_pp0_iter6_reg;
wire   [1:0] trunc_ln179_fu_306_p1;
reg   [1:0] trunc_ln179_reg_562;
reg   [1:0] trunc_ln179_reg_562_pp0_iter1_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter2_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter3_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter4_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter5_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter6_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter7_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter8_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter9_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter10_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter11_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter12_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter13_reg;
reg   [1:0] trunc_ln179_reg_562_pp0_iter14_reg;
wire   [7:0] add_ln182_fu_332_p2;
reg   [7:0] add_ln182_reg_567;
reg   [7:0] v125_addr_reg_592;
reg   [7:0] v125_addr_reg_592_pp0_iter2_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter3_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter4_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter5_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter6_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter7_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter8_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter9_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter10_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter11_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter12_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter13_reg;
reg   [7:0] v125_addr_reg_592_pp0_iter14_reg;
reg   [7:0] v125_1_addr_reg_597;
reg   [7:0] v125_1_addr_reg_597_pp0_iter2_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter3_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter4_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter5_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter6_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter7_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter8_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter9_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter10_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter11_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter12_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter13_reg;
reg   [7:0] v125_1_addr_reg_597_pp0_iter14_reg;
reg   [7:0] v125_2_addr_reg_602;
reg   [7:0] v125_2_addr_reg_602_pp0_iter2_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter3_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter4_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter5_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter6_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter7_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter8_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter9_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter10_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter11_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter12_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter13_reg;
reg   [7:0] v125_2_addr_reg_602_pp0_iter14_reg;
reg   [7:0] v125_3_addr_reg_607;
reg   [7:0] v125_3_addr_reg_607_pp0_iter2_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter3_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter4_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter5_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter6_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter7_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter8_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter9_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter10_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter11_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter12_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter13_reg;
reg   [7:0] v125_3_addr_reg_607_pp0_iter14_reg;
wire   [23:0] v102_V_fu_370_p6;
reg   [23:0] v102_V_reg_612;
wire  signed [31:0] sext_ln184_fu_383_p1;
reg   [31:0] v346_load_reg_627;
reg   [31:0] v104_reg_632;
wire   [31:0] bitcast_ln179_fu_391_p1;
reg   [31:0] v105_reg_642;
reg   [0:0] p_Result_s_reg_647;
reg   [0:0] p_Result_s_reg_647_pp0_iter14_reg;
wire   [22:0] p_Result_35_fu_416_p1;
reg   [22:0] p_Result_35_reg_652;
wire   [0:0] isNeg_fu_430_p3;
reg   [0:0] isNeg_reg_657;
wire   [8:0] ush_fu_448_p3;
reg   [8:0] ush_reg_662;
wire   [7:0] val_fu_510_p3;
reg   [7:0] val_reg_667;
wire   [63:0] zext_ln182_1_fu_359_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln179_fu_387_p1;
reg   [6:0] j9_fu_110;
wire   [6:0] add_ln180_fu_338_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_j9_load;
reg   [3:0] i9_fu_114;
reg   [3:0] ap_sig_allocacmp_i9_load;
reg   [9:0] indvar_flatten53_fu_118;
wire   [9:0] add_ln179_1_fu_266_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten53_load;
wire   [7:0] result_V_fu_522_p3;
wire   [0:0] icmp_ln180_fu_284_p2;
wire   [3:0] add_ln179_fu_278_p2;
wire   [1:0] p_cast21_mid2_v_fu_310_p4;
wire   [6:0] select_ln179_fu_290_p3;
wire   [7:0] tmp_s_fu_320_p3;
wire   [7:0] zext_ln182_fu_328_p1;
wire   [31:0] data_V_fu_395_p1;
wire   [7:0] xs_exp_V_fu_406_p4;
wire   [8:0] zext_ln346_fu_420_p1;
wire   [8:0] add_ln346_fu_424_p2;
wire   [7:0] sub_ln1512_fu_438_p2;
wire  signed [8:0] sext_ln1512_fu_444_p1;
wire   [24:0] mantissa_fu_456_p4;
wire  signed [31:0] sext_ln1488_fu_469_p1;
wire   [54:0] zext_ln15_fu_465_p1;
wire   [54:0] zext_ln1488_fu_472_p1;
wire   [54:0] r_V_fu_476_p2;
wire   [0:0] tmp_fu_488_p3;
wire   [54:0] r_V_52_fu_482_p2;
wire   [7:0] zext_ln818_1_fu_496_p1;
wire   [7:0] tmp_25_fu_500_p4;
wire   [7:0] result_V_9_fu_517_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_42_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_42_24_1_1_U3185(
    .din0(acc_outp2_V_q0),
    .din1(acc_outp2_V_1_q0),
    .din2(acc_outp2_V_2_q0),
    .din3(acc_outp2_V_3_q0),
    .din4(trunc_ln179_reg_562_pp0_iter1_reg),
    .dout(v102_V_fu_370_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln179_fu_260_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i9_fu_114 <= select_ln179_1_fu_298_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i9_fu_114 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln179_fu_260_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten53_fu_118 <= add_ln179_1_fu_266_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten53_fu_118 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln179_fu_260_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j9_fu_110 <= add_ln180_fu_338_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j9_fu_110 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln179_fu_260_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln182_reg_567 <= add_ln182_fu_332_p2;
        select_ln179_1_reg_557 <= select_ln179_1_fu_298_p3;
        trunc_ln179_reg_562 <= trunc_ln179_fu_306_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        isNeg_reg_657 <= add_ln346_fu_424_p2[32'd8];
        p_Result_35_reg_652 <= p_Result_35_fu_416_p1;
        p_Result_s_reg_647 <= data_V_fu_395_p1[32'd31];
        p_Result_s_reg_647_pp0_iter14_reg <= p_Result_s_reg_647;
        select_ln179_1_reg_557_pp0_iter2_reg <= select_ln179_1_reg_557_pp0_iter1_reg;
        select_ln179_1_reg_557_pp0_iter3_reg <= select_ln179_1_reg_557_pp0_iter2_reg;
        select_ln179_1_reg_557_pp0_iter4_reg <= select_ln179_1_reg_557_pp0_iter3_reg;
        select_ln179_1_reg_557_pp0_iter5_reg <= select_ln179_1_reg_557_pp0_iter4_reg;
        select_ln179_1_reg_557_pp0_iter6_reg <= select_ln179_1_reg_557_pp0_iter5_reg;
        trunc_ln179_reg_562_pp0_iter10_reg <= trunc_ln179_reg_562_pp0_iter9_reg;
        trunc_ln179_reg_562_pp0_iter11_reg <= trunc_ln179_reg_562_pp0_iter10_reg;
        trunc_ln179_reg_562_pp0_iter12_reg <= trunc_ln179_reg_562_pp0_iter11_reg;
        trunc_ln179_reg_562_pp0_iter13_reg <= trunc_ln179_reg_562_pp0_iter12_reg;
        trunc_ln179_reg_562_pp0_iter14_reg <= trunc_ln179_reg_562_pp0_iter13_reg;
        trunc_ln179_reg_562_pp0_iter2_reg <= trunc_ln179_reg_562_pp0_iter1_reg;
        trunc_ln179_reg_562_pp0_iter3_reg <= trunc_ln179_reg_562_pp0_iter2_reg;
        trunc_ln179_reg_562_pp0_iter4_reg <= trunc_ln179_reg_562_pp0_iter3_reg;
        trunc_ln179_reg_562_pp0_iter5_reg <= trunc_ln179_reg_562_pp0_iter4_reg;
        trunc_ln179_reg_562_pp0_iter6_reg <= trunc_ln179_reg_562_pp0_iter5_reg;
        trunc_ln179_reg_562_pp0_iter7_reg <= trunc_ln179_reg_562_pp0_iter6_reg;
        trunc_ln179_reg_562_pp0_iter8_reg <= trunc_ln179_reg_562_pp0_iter7_reg;
        trunc_ln179_reg_562_pp0_iter9_reg <= trunc_ln179_reg_562_pp0_iter8_reg;
        ush_reg_662 <= ush_fu_448_p3;
        v102_V_reg_612 <= v102_V_fu_370_p6;
        v104_reg_632 <= grp_fu_713_p_dout0;
        v105_reg_642 <= grp_fu_705_p_dout0;
        v125_1_addr_reg_597_pp0_iter10_reg <= v125_1_addr_reg_597_pp0_iter9_reg;
        v125_1_addr_reg_597_pp0_iter11_reg <= v125_1_addr_reg_597_pp0_iter10_reg;
        v125_1_addr_reg_597_pp0_iter12_reg <= v125_1_addr_reg_597_pp0_iter11_reg;
        v125_1_addr_reg_597_pp0_iter13_reg <= v125_1_addr_reg_597_pp0_iter12_reg;
        v125_1_addr_reg_597_pp0_iter14_reg <= v125_1_addr_reg_597_pp0_iter13_reg;
        v125_1_addr_reg_597_pp0_iter2_reg <= v125_1_addr_reg_597;
        v125_1_addr_reg_597_pp0_iter3_reg <= v125_1_addr_reg_597_pp0_iter2_reg;
        v125_1_addr_reg_597_pp0_iter4_reg <= v125_1_addr_reg_597_pp0_iter3_reg;
        v125_1_addr_reg_597_pp0_iter5_reg <= v125_1_addr_reg_597_pp0_iter4_reg;
        v125_1_addr_reg_597_pp0_iter6_reg <= v125_1_addr_reg_597_pp0_iter5_reg;
        v125_1_addr_reg_597_pp0_iter7_reg <= v125_1_addr_reg_597_pp0_iter6_reg;
        v125_1_addr_reg_597_pp0_iter8_reg <= v125_1_addr_reg_597_pp0_iter7_reg;
        v125_1_addr_reg_597_pp0_iter9_reg <= v125_1_addr_reg_597_pp0_iter8_reg;
        v125_2_addr_reg_602_pp0_iter10_reg <= v125_2_addr_reg_602_pp0_iter9_reg;
        v125_2_addr_reg_602_pp0_iter11_reg <= v125_2_addr_reg_602_pp0_iter10_reg;
        v125_2_addr_reg_602_pp0_iter12_reg <= v125_2_addr_reg_602_pp0_iter11_reg;
        v125_2_addr_reg_602_pp0_iter13_reg <= v125_2_addr_reg_602_pp0_iter12_reg;
        v125_2_addr_reg_602_pp0_iter14_reg <= v125_2_addr_reg_602_pp0_iter13_reg;
        v125_2_addr_reg_602_pp0_iter2_reg <= v125_2_addr_reg_602;
        v125_2_addr_reg_602_pp0_iter3_reg <= v125_2_addr_reg_602_pp0_iter2_reg;
        v125_2_addr_reg_602_pp0_iter4_reg <= v125_2_addr_reg_602_pp0_iter3_reg;
        v125_2_addr_reg_602_pp0_iter5_reg <= v125_2_addr_reg_602_pp0_iter4_reg;
        v125_2_addr_reg_602_pp0_iter6_reg <= v125_2_addr_reg_602_pp0_iter5_reg;
        v125_2_addr_reg_602_pp0_iter7_reg <= v125_2_addr_reg_602_pp0_iter6_reg;
        v125_2_addr_reg_602_pp0_iter8_reg <= v125_2_addr_reg_602_pp0_iter7_reg;
        v125_2_addr_reg_602_pp0_iter9_reg <= v125_2_addr_reg_602_pp0_iter8_reg;
        v125_3_addr_reg_607_pp0_iter10_reg <= v125_3_addr_reg_607_pp0_iter9_reg;
        v125_3_addr_reg_607_pp0_iter11_reg <= v125_3_addr_reg_607_pp0_iter10_reg;
        v125_3_addr_reg_607_pp0_iter12_reg <= v125_3_addr_reg_607_pp0_iter11_reg;
        v125_3_addr_reg_607_pp0_iter13_reg <= v125_3_addr_reg_607_pp0_iter12_reg;
        v125_3_addr_reg_607_pp0_iter14_reg <= v125_3_addr_reg_607_pp0_iter13_reg;
        v125_3_addr_reg_607_pp0_iter2_reg <= v125_3_addr_reg_607;
        v125_3_addr_reg_607_pp0_iter3_reg <= v125_3_addr_reg_607_pp0_iter2_reg;
        v125_3_addr_reg_607_pp0_iter4_reg <= v125_3_addr_reg_607_pp0_iter3_reg;
        v125_3_addr_reg_607_pp0_iter5_reg <= v125_3_addr_reg_607_pp0_iter4_reg;
        v125_3_addr_reg_607_pp0_iter6_reg <= v125_3_addr_reg_607_pp0_iter5_reg;
        v125_3_addr_reg_607_pp0_iter7_reg <= v125_3_addr_reg_607_pp0_iter6_reg;
        v125_3_addr_reg_607_pp0_iter8_reg <= v125_3_addr_reg_607_pp0_iter7_reg;
        v125_3_addr_reg_607_pp0_iter9_reg <= v125_3_addr_reg_607_pp0_iter8_reg;
        v125_addr_reg_592_pp0_iter10_reg <= v125_addr_reg_592_pp0_iter9_reg;
        v125_addr_reg_592_pp0_iter11_reg <= v125_addr_reg_592_pp0_iter10_reg;
        v125_addr_reg_592_pp0_iter12_reg <= v125_addr_reg_592_pp0_iter11_reg;
        v125_addr_reg_592_pp0_iter13_reg <= v125_addr_reg_592_pp0_iter12_reg;
        v125_addr_reg_592_pp0_iter14_reg <= v125_addr_reg_592_pp0_iter13_reg;
        v125_addr_reg_592_pp0_iter2_reg <= v125_addr_reg_592;
        v125_addr_reg_592_pp0_iter3_reg <= v125_addr_reg_592_pp0_iter2_reg;
        v125_addr_reg_592_pp0_iter4_reg <= v125_addr_reg_592_pp0_iter3_reg;
        v125_addr_reg_592_pp0_iter5_reg <= v125_addr_reg_592_pp0_iter4_reg;
        v125_addr_reg_592_pp0_iter6_reg <= v125_addr_reg_592_pp0_iter5_reg;
        v125_addr_reg_592_pp0_iter7_reg <= v125_addr_reg_592_pp0_iter6_reg;
        v125_addr_reg_592_pp0_iter8_reg <= v125_addr_reg_592_pp0_iter7_reg;
        v125_addr_reg_592_pp0_iter9_reg <= v125_addr_reg_592_pp0_iter8_reg;
        v346_load_reg_627 <= v346_q0;
        val_reg_667 <= val_fu_510_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln179_1_reg_557_pp0_iter1_reg <= select_ln179_1_reg_557;
        trunc_ln179_reg_562_pp0_iter1_reg <= trunc_ln179_reg_562;
        v125_1_addr_reg_597 <= zext_ln182_1_fu_359_p1;
        v125_2_addr_reg_602 <= zext_ln182_1_fu_359_p1;
        v125_3_addr_reg_607 <= zext_ln182_1_fu_359_p1;
        v125_addr_reg_592 <= zext_ln182_1_fu_359_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp2_V_1_ce0 = 1'b1;
    end else begin
        acc_outp2_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp2_V_2_ce0 = 1'b1;
    end else begin
        acc_outp2_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp2_V_3_ce0 = 1'b1;
    end else begin
        acc_outp2_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp2_V_ce0 = 1'b1;
    end else begin
        acc_outp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln179_fu_260_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i9_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i9_load = i9_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten53_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten53_load = indvar_flatten53_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j9_load = 7'd0;
    end else begin
        ap_sig_allocacmp_j9_load = j9_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        v125_1_ce0 = 1'b1;
    end else begin
        v125_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (trunc_ln179_reg_562_pp0_iter14_reg == 2'd1))) begin
        v125_1_we0 = 1'b1;
    end else begin
        v125_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        v125_2_ce0 = 1'b1;
    end else begin
        v125_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (trunc_ln179_reg_562_pp0_iter14_reg == 2'd2))) begin
        v125_2_we0 = 1'b1;
    end else begin
        v125_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        v125_3_ce0 = 1'b1;
    end else begin
        v125_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (trunc_ln179_reg_562_pp0_iter14_reg == 2'd3))) begin
        v125_3_we0 = 1'b1;
    end else begin
        v125_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        v125_ce0 = 1'b1;
    end else begin
        v125_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (trunc_ln179_reg_562_pp0_iter14_reg == 2'd0))) begin
        v125_we0 = 1'b1;
    end else begin
        v125_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v346_ce0 = 1'b1;
    end else begin
        v346_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_outp2_V_1_address0 = zext_ln182_1_fu_359_p1;

assign acc_outp2_V_2_address0 = zext_ln182_1_fu_359_p1;

assign acc_outp2_V_3_address0 = zext_ln182_1_fu_359_p1;

assign acc_outp2_V_address0 = zext_ln182_1_fu_359_p1;

assign add_ln179_1_fu_266_p2 = (ap_sig_allocacmp_indvar_flatten53_load + 10'd1);

assign add_ln179_fu_278_p2 = (ap_sig_allocacmp_i9_load + 4'd1);

assign add_ln180_fu_338_p2 = (select_ln179_fu_290_p3 + 7'd1);

assign add_ln182_fu_332_p2 = (tmp_s_fu_320_p3 + zext_ln182_fu_328_p1);

assign add_ln346_fu_424_p2 = ($signed(zext_ln346_fu_420_p1) + $signed(9'd385));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln179_fu_391_p1 = v346_load_reg_627;

assign data_V_fu_395_p1 = v105_reg_642;

assign grp_fu_705_p_ce = 1'b1;

assign grp_fu_705_p_din0 = v104_reg_632;

assign grp_fu_705_p_din1 = bitcast_ln179_fu_391_p1;

assign grp_fu_713_p_ce = 1'b1;

assign grp_fu_713_p_din0 = sext_ln184_fu_383_p1;

assign icmp_ln179_fu_260_p2 = ((ap_sig_allocacmp_indvar_flatten53_load == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_284_p2 = ((ap_sig_allocacmp_j9_load == 7'd64) ? 1'b1 : 1'b0);

assign isNeg_fu_430_p3 = add_ln346_fu_424_p2[32'd8];

assign mantissa_fu_456_p4 = {{{{1'd1}, {p_Result_35_reg_652}}}, {1'd0}};

assign p_Result_35_fu_416_p1 = data_V_fu_395_p1[22:0];

assign p_cast21_mid2_v_fu_310_p4 = {{select_ln179_1_fu_298_p3[3:2]}};

assign r_V_52_fu_482_p2 = zext_ln15_fu_465_p1 << zext_ln1488_fu_472_p1;

assign r_V_fu_476_p2 = zext_ln15_fu_465_p1 >> zext_ln1488_fu_472_p1;

assign result_V_9_fu_517_p2 = (8'd0 - val_reg_667);

assign result_V_fu_522_p3 = ((p_Result_s_reg_647_pp0_iter14_reg[0:0] == 1'b1) ? result_V_9_fu_517_p2 : val_reg_667);

assign select_ln179_1_fu_298_p3 = ((icmp_ln180_fu_284_p2[0:0] == 1'b1) ? add_ln179_fu_278_p2 : ap_sig_allocacmp_i9_load);

assign select_ln179_fu_290_p3 = ((icmp_ln180_fu_284_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_j9_load);

assign sext_ln1488_fu_469_p1 = $signed(ush_reg_662);

assign sext_ln1512_fu_444_p1 = $signed(sub_ln1512_fu_438_p2);

assign sext_ln184_fu_383_p1 = $signed(v102_V_reg_612);

assign sub_ln1512_fu_438_p2 = (8'd127 - xs_exp_V_fu_406_p4);

assign tmp_25_fu_500_p4 = {{r_V_52_fu_482_p2[31:24]}};

assign tmp_fu_488_p3 = r_V_fu_476_p2[32'd24];

assign tmp_s_fu_320_p3 = {{p_cast21_mid2_v_fu_310_p4}, {6'd0}};

assign trunc_ln179_fu_306_p1 = select_ln179_1_fu_298_p3[1:0];

assign ush_fu_448_p3 = ((isNeg_fu_430_p3[0:0] == 1'b1) ? sext_ln1512_fu_444_p1 : add_ln346_fu_424_p2);

assign v125_1_address0 = v125_1_addr_reg_597_pp0_iter14_reg;

assign v125_1_d0 = result_V_fu_522_p3;

assign v125_2_address0 = v125_2_addr_reg_602_pp0_iter14_reg;

assign v125_2_d0 = result_V_fu_522_p3;

assign v125_3_address0 = v125_3_addr_reg_607_pp0_iter14_reg;

assign v125_3_d0 = result_V_fu_522_p3;

assign v125_address0 = v125_addr_reg_592_pp0_iter14_reg;

assign v125_d0 = result_V_fu_522_p3;

assign v346_address0 = zext_ln179_fu_387_p1;

assign val_fu_510_p3 = ((isNeg_reg_657[0:0] == 1'b1) ? zext_ln818_1_fu_496_p1 : tmp_25_fu_500_p4);

assign xs_exp_V_fu_406_p4 = {{data_V_fu_395_p1[30:23]}};

assign zext_ln1488_fu_472_p1 = $unsigned(sext_ln1488_fu_469_p1);

assign zext_ln15_fu_465_p1 = mantissa_fu_456_p4;

assign zext_ln179_fu_387_p1 = select_ln179_1_reg_557_pp0_iter6_reg;

assign zext_ln182_1_fu_359_p1 = add_ln182_reg_567;

assign zext_ln182_fu_328_p1 = select_ln179_fu_290_p3;

assign zext_ln346_fu_420_p1 = xs_exp_V_fu_406_p4;

assign zext_ln818_1_fu_496_p1 = tmp_fu_488_p3;

endmodule //Bert_layer_Self_attention_Pipeline_l_scale_outp_i9_l_j9
