// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_init_block_AB_proc_HH_
#define _Bert_layer_init_block_AB_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_Bert_layer_sub_16ns_16ns_16_1_1.h"
#include "Bert_layer_Bert_layer_add_10ns_10ns_10_1_1.h"
#include "Bert_layer_Bert_layer_add_16ns_16ns_16_1_1.h"

namespace ap_rtl {

struct Bert_layer_init_block_AB_proc : public sc_module {
    // Port declarations 158
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<10> > v0_V_address0;
    sc_out< sc_logic > v0_V_ce0;
    sc_in< sc_lv<24> > v0_V_q0;
    sc_out< sc_lv<24> > block_A_loader_0_V_V_din;
    sc_in< sc_logic > block_A_loader_0_V_V_full_n;
    sc_out< sc_logic > block_A_loader_0_V_V_write;
    sc_out< sc_lv<10> > v0_1_V_address0;
    sc_out< sc_logic > v0_1_V_ce0;
    sc_in< sc_lv<24> > v0_1_V_q0;
    sc_out< sc_lv<24> > block_A_loader_1_V_V_din;
    sc_in< sc_logic > block_A_loader_1_V_V_full_n;
    sc_out< sc_logic > block_A_loader_1_V_V_write;
    sc_out< sc_lv<10> > v0_2_V_address0;
    sc_out< sc_logic > v0_2_V_ce0;
    sc_in< sc_lv<24> > v0_2_V_q0;
    sc_out< sc_lv<24> > block_A_loader_2_V_V_din;
    sc_in< sc_logic > block_A_loader_2_V_V_full_n;
    sc_out< sc_logic > block_A_loader_2_V_V_write;
    sc_out< sc_lv<10> > v0_3_V_address0;
    sc_out< sc_logic > v0_3_V_ce0;
    sc_in< sc_lv<24> > v0_3_V_q0;
    sc_out< sc_lv<24> > block_A_loader_3_V_V_din;
    sc_in< sc_logic > block_A_loader_3_V_V_full_n;
    sc_out< sc_logic > block_A_loader_3_V_V_write;
    sc_out< sc_lv<10> > v0_4_V_address0;
    sc_out< sc_logic > v0_4_V_ce0;
    sc_in< sc_lv<24> > v0_4_V_q0;
    sc_out< sc_lv<24> > block_A_loader_4_V_V_din;
    sc_in< sc_logic > block_A_loader_4_V_V_full_n;
    sc_out< sc_logic > block_A_loader_4_V_V_write;
    sc_out< sc_lv<10> > v0_5_V_address0;
    sc_out< sc_logic > v0_5_V_ce0;
    sc_in< sc_lv<24> > v0_5_V_q0;
    sc_out< sc_lv<24> > block_A_loader_5_V_V_din;
    sc_in< sc_logic > block_A_loader_5_V_V_full_n;
    sc_out< sc_logic > block_A_loader_5_V_V_write;
    sc_out< sc_lv<10> > v0_6_V_address0;
    sc_out< sc_logic > v0_6_V_ce0;
    sc_in< sc_lv<24> > v0_6_V_q0;
    sc_out< sc_lv<24> > block_A_loader_6_V_V_din;
    sc_in< sc_logic > block_A_loader_6_V_V_full_n;
    sc_out< sc_logic > block_A_loader_6_V_V_write;
    sc_out< sc_lv<10> > v0_7_V_address0;
    sc_out< sc_logic > v0_7_V_ce0;
    sc_in< sc_lv<24> > v0_7_V_q0;
    sc_out< sc_lv<24> > block_A_loader_7_V_V_din;
    sc_in< sc_logic > block_A_loader_7_V_V_full_n;
    sc_out< sc_logic > block_A_loader_7_V_V_write;
    sc_out< sc_lv<10> > v0_8_V_address0;
    sc_out< sc_logic > v0_8_V_ce0;
    sc_in< sc_lv<24> > v0_8_V_q0;
    sc_out< sc_lv<24> > block_A_loader_8_V_V_din;
    sc_in< sc_logic > block_A_loader_8_V_V_full_n;
    sc_out< sc_logic > block_A_loader_8_V_V_write;
    sc_out< sc_lv<10> > v0_9_V_address0;
    sc_out< sc_logic > v0_9_V_ce0;
    sc_in< sc_lv<24> > v0_9_V_q0;
    sc_out< sc_lv<24> > block_A_loader_9_V_V_din;
    sc_in< sc_logic > block_A_loader_9_V_V_full_n;
    sc_out< sc_logic > block_A_loader_9_V_V_write;
    sc_out< sc_lv<10> > v0_10_V_address0;
    sc_out< sc_logic > v0_10_V_ce0;
    sc_in< sc_lv<24> > v0_10_V_q0;
    sc_out< sc_lv<24> > block_A_loader_10_V_V_din;
    sc_in< sc_logic > block_A_loader_10_V_V_full_n;
    sc_out< sc_logic > block_A_loader_10_V_V_write;
    sc_out< sc_lv<10> > v0_11_V_address0;
    sc_out< sc_logic > v0_11_V_ce0;
    sc_in< sc_lv<24> > v0_11_V_q0;
    sc_out< sc_lv<24> > block_A_loader_11_V_V_din;
    sc_in< sc_logic > block_A_loader_11_V_V_full_n;
    sc_out< sc_logic > block_A_loader_11_V_V_write;
    sc_out< sc_lv<16> > v1_V_address0;
    sc_out< sc_logic > v1_V_ce0;
    sc_in< sc_lv<24> > v1_V_q0;
    sc_in< sc_lv<7> > indvars_iv28_0;
    sc_out< sc_lv<24> > block_B_loader_0_V_V_din;
    sc_in< sc_logic > block_B_loader_0_V_V_full_n;
    sc_out< sc_logic > block_B_loader_0_V_V_write;
    sc_out< sc_lv<16> > v1_1_V_address0;
    sc_out< sc_logic > v1_1_V_ce0;
    sc_in< sc_lv<24> > v1_1_V_q0;
    sc_out< sc_lv<24> > block_B_loader_1_V_V_din;
    sc_in< sc_logic > block_B_loader_1_V_V_full_n;
    sc_out< sc_logic > block_B_loader_1_V_V_write;
    sc_out< sc_lv<16> > v1_2_V_address0;
    sc_out< sc_logic > v1_2_V_ce0;
    sc_in< sc_lv<24> > v1_2_V_q0;
    sc_out< sc_lv<24> > block_B_loader_2_V_V_din;
    sc_in< sc_logic > block_B_loader_2_V_V_full_n;
    sc_out< sc_logic > block_B_loader_2_V_V_write;
    sc_out< sc_lv<16> > v1_3_V_address0;
    sc_out< sc_logic > v1_3_V_ce0;
    sc_in< sc_lv<24> > v1_3_V_q0;
    sc_out< sc_lv<24> > block_B_loader_3_V_V_din;
    sc_in< sc_logic > block_B_loader_3_V_V_full_n;
    sc_out< sc_logic > block_B_loader_3_V_V_write;
    sc_out< sc_lv<16> > v1_4_V_address0;
    sc_out< sc_logic > v1_4_V_ce0;
    sc_in< sc_lv<24> > v1_4_V_q0;
    sc_out< sc_lv<24> > block_B_loader_4_V_V_din;
    sc_in< sc_logic > block_B_loader_4_V_V_full_n;
    sc_out< sc_logic > block_B_loader_4_V_V_write;
    sc_out< sc_lv<16> > v1_5_V_address0;
    sc_out< sc_logic > v1_5_V_ce0;
    sc_in< sc_lv<24> > v1_5_V_q0;
    sc_out< sc_lv<24> > block_B_loader_5_V_V_din;
    sc_in< sc_logic > block_B_loader_5_V_V_full_n;
    sc_out< sc_logic > block_B_loader_5_V_V_write;
    sc_out< sc_lv<16> > v1_6_V_address0;
    sc_out< sc_logic > v1_6_V_ce0;
    sc_in< sc_lv<24> > v1_6_V_q0;
    sc_out< sc_lv<24> > block_B_loader_6_V_V_din;
    sc_in< sc_logic > block_B_loader_6_V_V_full_n;
    sc_out< sc_logic > block_B_loader_6_V_V_write;
    sc_out< sc_lv<16> > v1_7_V_address0;
    sc_out< sc_logic > v1_7_V_ce0;
    sc_in< sc_lv<24> > v1_7_V_q0;
    sc_out< sc_lv<24> > block_B_loader_7_V_V_din;
    sc_in< sc_logic > block_B_loader_7_V_V_full_n;
    sc_out< sc_logic > block_B_loader_7_V_V_write;
    sc_out< sc_lv<16> > v1_8_V_address0;
    sc_out< sc_logic > v1_8_V_ce0;
    sc_in< sc_lv<24> > v1_8_V_q0;
    sc_out< sc_lv<24> > block_B_loader_8_V_V_din;
    sc_in< sc_logic > block_B_loader_8_V_V_full_n;
    sc_out< sc_logic > block_B_loader_8_V_V_write;
    sc_out< sc_lv<16> > v1_9_V_address0;
    sc_out< sc_logic > v1_9_V_ce0;
    sc_in< sc_lv<24> > v1_9_V_q0;
    sc_out< sc_lv<24> > block_B_loader_9_V_V_din;
    sc_in< sc_logic > block_B_loader_9_V_V_full_n;
    sc_out< sc_logic > block_B_loader_9_V_V_write;
    sc_out< sc_lv<16> > v1_10_V_address0;
    sc_out< sc_logic > v1_10_V_ce0;
    sc_in< sc_lv<24> > v1_10_V_q0;
    sc_out< sc_lv<24> > block_B_loader_10_V_V_din;
    sc_in< sc_logic > block_B_loader_10_V_V_full_n;
    sc_out< sc_logic > block_B_loader_10_V_V_write;
    sc_out< sc_lv<16> > v1_11_V_address0;
    sc_out< sc_logic > v1_11_V_ce0;
    sc_in< sc_lv<24> > v1_11_V_q0;
    sc_out< sc_lv<24> > block_B_loader_11_V_V_din;
    sc_in< sc_logic > block_B_loader_11_V_V_full_n;
    sc_out< sc_logic > block_B_loader_11_V_V_write;
    sc_out< sc_lv<6> > indvars_iv28_0_c_din;
    sc_in< sc_logic > indvars_iv28_0_c_full_n;
    sc_out< sc_logic > indvars_iv28_0_c_write;
    sc_signal< sc_lv<10> > ap_var_for_const0;


    // Module declarations
    Bert_layer_init_block_AB_proc(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_init_block_AB_proc);

    ~Bert_layer_init_block_AB_proc();

    sc_trace_file* mVcdFile;

    Bert_layer_Bert_layer_sub_16ns_16ns_16_1_1<1,1,16,16,16>* Bert_layer_sub_16ns_16ns_16_1_1_U1;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2;
    Bert_layer_Bert_layer_add_16ns_16ns_16_1_1<1,1,16,16,16>* Bert_layer_add_16ns_16ns_16_1_1_U3;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > block_A_loader_0_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln25_reg_765;
    sc_signal< sc_logic > block_A_loader_1_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_2_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_3_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_4_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_5_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_6_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_7_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_8_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_9_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_10_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_11_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_0_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_1_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_2_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_3_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_4_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_5_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_6_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_7_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_8_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_9_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_10_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_11_V_V_blk_n;
    sc_signal< sc_logic > indvars_iv28_0_c_blk_n;
    sc_signal< sc_lv<10> > indvars_iv17_0_i_i_i_reg_665;
    sc_signal< sc_lv<16> > sub_ln31_fu_701_p2;
    sc_signal< sc_lv<16> > sub_ln31_reg_760;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln25_fu_707_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > add_ln25_fu_713_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<64> > zext_ln31_2_fu_744_p1;
    sc_signal< sc_lv<64> > zext_ln25_fu_719_p1;
    sc_signal< sc_lv<6> > empty_fu_676_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<14> > tmp_71_i_fu_689_p3;
    sc_signal< sc_lv<16> > sub_ln31_fu_701_p0;
    sc_signal< sc_lv<16> > sub_ln31_fu_701_p1;
    sc_signal< sc_lv<16> > add_ln31_fu_739_p0;
    sc_signal< sc_lv<16> > add_ln31_fu_739_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln31_fu_739_p0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_block_A_loader_0_V_V_blk_n();
    void thread_block_A_loader_0_V_V_din();
    void thread_block_A_loader_0_V_V_write();
    void thread_block_A_loader_10_V_V_blk_n();
    void thread_block_A_loader_10_V_V_din();
    void thread_block_A_loader_10_V_V_write();
    void thread_block_A_loader_11_V_V_blk_n();
    void thread_block_A_loader_11_V_V_din();
    void thread_block_A_loader_11_V_V_write();
    void thread_block_A_loader_1_V_V_blk_n();
    void thread_block_A_loader_1_V_V_din();
    void thread_block_A_loader_1_V_V_write();
    void thread_block_A_loader_2_V_V_blk_n();
    void thread_block_A_loader_2_V_V_din();
    void thread_block_A_loader_2_V_V_write();
    void thread_block_A_loader_3_V_V_blk_n();
    void thread_block_A_loader_3_V_V_din();
    void thread_block_A_loader_3_V_V_write();
    void thread_block_A_loader_4_V_V_blk_n();
    void thread_block_A_loader_4_V_V_din();
    void thread_block_A_loader_4_V_V_write();
    void thread_block_A_loader_5_V_V_blk_n();
    void thread_block_A_loader_5_V_V_din();
    void thread_block_A_loader_5_V_V_write();
    void thread_block_A_loader_6_V_V_blk_n();
    void thread_block_A_loader_6_V_V_din();
    void thread_block_A_loader_6_V_V_write();
    void thread_block_A_loader_7_V_V_blk_n();
    void thread_block_A_loader_7_V_V_din();
    void thread_block_A_loader_7_V_V_write();
    void thread_block_A_loader_8_V_V_blk_n();
    void thread_block_A_loader_8_V_V_din();
    void thread_block_A_loader_8_V_V_write();
    void thread_block_A_loader_9_V_V_blk_n();
    void thread_block_A_loader_9_V_V_din();
    void thread_block_A_loader_9_V_V_write();
    void thread_block_B_loader_0_V_V_blk_n();
    void thread_block_B_loader_0_V_V_din();
    void thread_block_B_loader_0_V_V_write();
    void thread_block_B_loader_10_V_V_blk_n();
    void thread_block_B_loader_10_V_V_din();
    void thread_block_B_loader_10_V_V_write();
    void thread_block_B_loader_11_V_V_blk_n();
    void thread_block_B_loader_11_V_V_din();
    void thread_block_B_loader_11_V_V_write();
    void thread_block_B_loader_1_V_V_blk_n();
    void thread_block_B_loader_1_V_V_din();
    void thread_block_B_loader_1_V_V_write();
    void thread_block_B_loader_2_V_V_blk_n();
    void thread_block_B_loader_2_V_V_din();
    void thread_block_B_loader_2_V_V_write();
    void thread_block_B_loader_3_V_V_blk_n();
    void thread_block_B_loader_3_V_V_din();
    void thread_block_B_loader_3_V_V_write();
    void thread_block_B_loader_4_V_V_blk_n();
    void thread_block_B_loader_4_V_V_din();
    void thread_block_B_loader_4_V_V_write();
    void thread_block_B_loader_5_V_V_blk_n();
    void thread_block_B_loader_5_V_V_din();
    void thread_block_B_loader_5_V_V_write();
    void thread_block_B_loader_6_V_V_blk_n();
    void thread_block_B_loader_6_V_V_din();
    void thread_block_B_loader_6_V_V_write();
    void thread_block_B_loader_7_V_V_blk_n();
    void thread_block_B_loader_7_V_V_din();
    void thread_block_B_loader_7_V_V_write();
    void thread_block_B_loader_8_V_V_blk_n();
    void thread_block_B_loader_8_V_V_din();
    void thread_block_B_loader_8_V_V_write();
    void thread_block_B_loader_9_V_V_blk_n();
    void thread_block_B_loader_9_V_V_din();
    void thread_block_B_loader_9_V_V_write();
    void thread_empty_fu_676_p1();
    void thread_icmp_ln25_fu_707_p2();
    void thread_indvars_iv28_0_c_blk_n();
    void thread_indvars_iv28_0_c_din();
    void thread_indvars_iv28_0_c_write();
    void thread_internal_ap_ready();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln31_fu_701_p0();
    void thread_sub_ln31_fu_701_p1();
    void thread_tmp_71_i_fu_689_p3();
    void thread_v0_10_V_address0();
    void thread_v0_10_V_ce0();
    void thread_v0_11_V_address0();
    void thread_v0_11_V_ce0();
    void thread_v0_1_V_address0();
    void thread_v0_1_V_ce0();
    void thread_v0_2_V_address0();
    void thread_v0_2_V_ce0();
    void thread_v0_3_V_address0();
    void thread_v0_3_V_ce0();
    void thread_v0_4_V_address0();
    void thread_v0_4_V_ce0();
    void thread_v0_5_V_address0();
    void thread_v0_5_V_ce0();
    void thread_v0_6_V_address0();
    void thread_v0_6_V_ce0();
    void thread_v0_7_V_address0();
    void thread_v0_7_V_ce0();
    void thread_v0_8_V_address0();
    void thread_v0_8_V_ce0();
    void thread_v0_9_V_address0();
    void thread_v0_9_V_ce0();
    void thread_v0_V_address0();
    void thread_v0_V_ce0();
    void thread_v1_10_V_address0();
    void thread_v1_10_V_ce0();
    void thread_v1_11_V_address0();
    void thread_v1_11_V_ce0();
    void thread_v1_1_V_address0();
    void thread_v1_1_V_ce0();
    void thread_v1_2_V_address0();
    void thread_v1_2_V_ce0();
    void thread_v1_3_V_address0();
    void thread_v1_3_V_ce0();
    void thread_v1_4_V_address0();
    void thread_v1_4_V_ce0();
    void thread_v1_5_V_address0();
    void thread_v1_5_V_ce0();
    void thread_v1_6_V_address0();
    void thread_v1_6_V_ce0();
    void thread_v1_7_V_address0();
    void thread_v1_7_V_ce0();
    void thread_v1_8_V_address0();
    void thread_v1_8_V_ce0();
    void thread_v1_9_V_address0();
    void thread_v1_9_V_ce0();
    void thread_v1_V_address0();
    void thread_v1_V_ce0();
    void thread_zext_ln25_fu_719_p1();
    void thread_zext_ln31_2_fu_744_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
