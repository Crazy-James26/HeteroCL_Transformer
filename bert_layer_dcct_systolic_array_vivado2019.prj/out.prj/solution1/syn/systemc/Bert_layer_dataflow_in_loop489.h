// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_dataflow_in_loop489_HH_
#define _Bert_layer_dataflow_in_loop489_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_init_block_AB_proc487.h"
#include "Bert_layer_systolic_array_k_12.h"
#include "Bert_layer_store_block_C_proc488.h"
#include "Bert_layer_fifo_w24_d2_A_x3.h"
#include "Bert_layer_fifo_w2_d3_A_x.h"
#include "Bert_layer_fifo_w4_d3_A.h"
#include "Bert_layer_start_for_systolic_array_k_12_U0.h"

namespace ap_rtl {

struct Bert_layer_dataflow_in_loop489 : public sc_module {
    // Port declarations 41
    sc_out< sc_lv<8> > v66_V_address0;
    sc_out< sc_logic > v66_V_ce0;
    sc_out< sc_lv<24> > v66_V_d0;
    sc_in< sc_lv<24> > v66_V_q0;
    sc_out< sc_logic > v66_V_we0;
    sc_out< sc_lv<8> > v66_V_address1;
    sc_out< sc_logic > v66_V_ce1;
    sc_out< sc_lv<24> > v66_V_d1;
    sc_in< sc_lv<24> > v66_V_q1;
    sc_out< sc_logic > v66_V_we1;
    sc_in< sc_lv<2> > ii;
    sc_out< sc_lv<10> > v67_V_address0;
    sc_out< sc_logic > v67_V_ce0;
    sc_out< sc_lv<24> > v67_V_d0;
    sc_in< sc_lv<24> > v67_V_q0;
    sc_out< sc_logic > v67_V_we0;
    sc_out< sc_lv<10> > v67_V_address1;
    sc_out< sc_logic > v67_V_ce1;
    sc_out< sc_lv<24> > v67_V_d1;
    sc_in< sc_lv<24> > v67_V_q1;
    sc_out< sc_logic > v67_V_we1;
    sc_in< sc_lv<5> > jj;
    sc_out< sc_lv<10> > v68_V_address0;
    sc_out< sc_logic > v68_V_ce0;
    sc_out< sc_lv<24> > v68_V_d0;
    sc_in< sc_lv<24> > v68_V_q0;
    sc_out< sc_logic > v68_V_we0;
    sc_out< sc_lv<10> > v68_V_address1;
    sc_out< sc_logic > v68_V_ce1;
    sc_out< sc_lv<24> > v68_V_d1;
    sc_in< sc_lv<24> > v68_V_q1;
    sc_out< sc_logic > v68_V_we1;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ii_ap_vld;
    sc_in< sc_logic > jj_ap_vld;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Bert_layer_dataflow_in_loop489(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_dataflow_in_loop489);

    ~Bert_layer_dataflow_in_loop489();

    sc_trace_file* mVcdFile;

    Bert_layer_init_block_AB_proc487* init_block_AB_proc487_U0;
    Bert_layer_systolic_array_k_12* systolic_array_k_12_U0;
    Bert_layer_store_block_C_proc488* store_block_C_proc488_U0;
    Bert_layer_fifo_w24_d2_A_x3* block_A_loader_0_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_A_loader_1_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_A_loader_2_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_A_loader_3_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_B_loader_0_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_B_loader_1_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_B_loader_2_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_B_loader_3_V_V_U;
    Bert_layer_fifo_w2_d3_A_x* ii_c_U;
    Bert_layer_fifo_w4_d3_A* jj_c_U;
    Bert_layer_fifo_w24_d2_A_x3* block_C_drainer_0_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_C_drainer_1_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_C_drainer_2_V_V_U;
    Bert_layer_fifo_w24_d2_A_x3* block_C_drainer_3_V_V_U;
    Bert_layer_start_for_systolic_array_k_12_U0* start_for_systolic_array_k_12_U0_U;
    sc_signal< sc_logic > init_block_AB_proc487_U0_ap_start;
    sc_signal< sc_logic > init_block_AB_proc487_U0_ap_done;
    sc_signal< sc_logic > init_block_AB_proc487_U0_ap_continue;
    sc_signal< sc_logic > init_block_AB_proc487_U0_ap_idle;
    sc_signal< sc_logic > init_block_AB_proc487_U0_ap_ready;
    sc_signal< sc_logic > init_block_AB_proc487_U0_start_out;
    sc_signal< sc_logic > init_block_AB_proc487_U0_start_write;
    sc_signal< sc_lv<8> > init_block_AB_proc487_U0_v66_V_address0;
    sc_signal< sc_logic > init_block_AB_proc487_U0_v66_V_ce0;
    sc_signal< sc_lv<8> > init_block_AB_proc487_U0_v66_V_address1;
    sc_signal< sc_logic > init_block_AB_proc487_U0_v66_V_ce1;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_A_loader_0_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_A_loader_0_V_V_write;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_A_loader_1_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_A_loader_1_V_V_write;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_A_loader_2_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_A_loader_2_V_V_write;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_A_loader_3_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_A_loader_3_V_V_write;
    sc_signal< sc_lv<10> > init_block_AB_proc487_U0_v67_V_address0;
    sc_signal< sc_logic > init_block_AB_proc487_U0_v67_V_ce0;
    sc_signal< sc_lv<10> > init_block_AB_proc487_U0_v67_V_address1;
    sc_signal< sc_logic > init_block_AB_proc487_U0_v67_V_ce1;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_B_loader_0_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_B_loader_0_V_V_write;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_B_loader_1_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_B_loader_1_V_V_write;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_B_loader_2_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_B_loader_2_V_V_write;
    sc_signal< sc_lv<24> > init_block_AB_proc487_U0_block_B_loader_3_V_V_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_block_B_loader_3_V_V_write;
    sc_signal< sc_lv<2> > init_block_AB_proc487_U0_ii_c_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_ii_c_write;
    sc_signal< sc_lv<4> > init_block_AB_proc487_U0_jj_c_din;
    sc_signal< sc_logic > init_block_AB_proc487_U0_jj_c_write;
    sc_signal< sc_logic > systolic_array_k_12_U0_A_loader_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_A_loader_1_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_A_loader_2_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_A_loader_3_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_B_loader_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_B_loader_1_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_B_loader_2_V_V_read;
    sc_signal< sc_logic > systolic_array_k_12_U0_B_loader_3_V_V_read;
    sc_signal< sc_lv<24> > systolic_array_k_12_U0_C_drainer_V_V_din;
    sc_signal< sc_logic > systolic_array_k_12_U0_C_drainer_V_V_write;
    sc_signal< sc_lv<24> > systolic_array_k_12_U0_C_drainer_1_V_V_din;
    sc_signal< sc_logic > systolic_array_k_12_U0_C_drainer_1_V_V_write;
    sc_signal< sc_lv<24> > systolic_array_k_12_U0_C_drainer_2_V_V_din;
    sc_signal< sc_logic > systolic_array_k_12_U0_C_drainer_2_V_V_write;
    sc_signal< sc_lv<24> > systolic_array_k_12_U0_C_drainer_3_V_V_din;
    sc_signal< sc_logic > systolic_array_k_12_U0_C_drainer_3_V_V_write;
    sc_signal< sc_logic > systolic_array_k_12_U0_ap_start;
    sc_signal< sc_logic > systolic_array_k_12_U0_ap_done;
    sc_signal< sc_logic > systolic_array_k_12_U0_ap_ready;
    sc_signal< sc_logic > systolic_array_k_12_U0_ap_idle;
    sc_signal< sc_logic > systolic_array_k_12_U0_ap_continue;
    sc_signal< sc_logic > store_block_C_proc488_U0_ap_start;
    sc_signal< sc_logic > store_block_C_proc488_U0_ap_done;
    sc_signal< sc_logic > store_block_C_proc488_U0_ap_continue;
    sc_signal< sc_logic > store_block_C_proc488_U0_ap_idle;
    sc_signal< sc_logic > store_block_C_proc488_U0_ap_ready;
    sc_signal< sc_logic > store_block_C_proc488_U0_jj_read;
    sc_signal< sc_logic > store_block_C_proc488_U0_ii_read;
    sc_signal< sc_lv<10> > store_block_C_proc488_U0_v68_V_address0;
    sc_signal< sc_logic > store_block_C_proc488_U0_v68_V_ce0;
    sc_signal< sc_logic > store_block_C_proc488_U0_v68_V_we0;
    sc_signal< sc_lv<24> > store_block_C_proc488_U0_v68_V_d0;
    sc_signal< sc_logic > store_block_C_proc488_U0_block_C_drainer_0_V_V9_read;
    sc_signal< sc_logic > store_block_C_proc488_U0_block_C_drainer_1_V_V10_read;
    sc_signal< sc_logic > store_block_C_proc488_U0_block_C_drainer_2_V_V11_read;
    sc_signal< sc_logic > store_block_C_proc488_U0_block_C_drainer_3_V_V12_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > block_A_loader_0_V_V_full_n;
    sc_signal< sc_lv<24> > block_A_loader_0_V_V_dout;
    sc_signal< sc_logic > block_A_loader_0_V_V_empty_n;
    sc_signal< sc_logic > block_A_loader_1_V_V_full_n;
    sc_signal< sc_lv<24> > block_A_loader_1_V_V_dout;
    sc_signal< sc_logic > block_A_loader_1_V_V_empty_n;
    sc_signal< sc_logic > block_A_loader_2_V_V_full_n;
    sc_signal< sc_lv<24> > block_A_loader_2_V_V_dout;
    sc_signal< sc_logic > block_A_loader_2_V_V_empty_n;
    sc_signal< sc_logic > block_A_loader_3_V_V_full_n;
    sc_signal< sc_lv<24> > block_A_loader_3_V_V_dout;
    sc_signal< sc_logic > block_A_loader_3_V_V_empty_n;
    sc_signal< sc_logic > block_B_loader_0_V_V_full_n;
    sc_signal< sc_lv<24> > block_B_loader_0_V_V_dout;
    sc_signal< sc_logic > block_B_loader_0_V_V_empty_n;
    sc_signal< sc_logic > block_B_loader_1_V_V_full_n;
    sc_signal< sc_lv<24> > block_B_loader_1_V_V_dout;
    sc_signal< sc_logic > block_B_loader_1_V_V_empty_n;
    sc_signal< sc_logic > block_B_loader_2_V_V_full_n;
    sc_signal< sc_lv<24> > block_B_loader_2_V_V_dout;
    sc_signal< sc_logic > block_B_loader_2_V_V_empty_n;
    sc_signal< sc_logic > block_B_loader_3_V_V_full_n;
    sc_signal< sc_lv<24> > block_B_loader_3_V_V_dout;
    sc_signal< sc_logic > block_B_loader_3_V_V_empty_n;
    sc_signal< sc_logic > ii_c_full_n;
    sc_signal< sc_lv<2> > ii_c_dout;
    sc_signal< sc_logic > ii_c_empty_n;
    sc_signal< sc_logic > jj_c_full_n;
    sc_signal< sc_lv<4> > jj_c_dout;
    sc_signal< sc_logic > jj_c_empty_n;
    sc_signal< sc_logic > block_C_drainer_0_V_V_full_n;
    sc_signal< sc_lv<24> > block_C_drainer_0_V_V_dout;
    sc_signal< sc_logic > block_C_drainer_0_V_V_empty_n;
    sc_signal< sc_logic > block_C_drainer_1_V_V_full_n;
    sc_signal< sc_lv<24> > block_C_drainer_1_V_V_dout;
    sc_signal< sc_logic > block_C_drainer_1_V_V_empty_n;
    sc_signal< sc_logic > block_C_drainer_2_V_V_full_n;
    sc_signal< sc_lv<24> > block_C_drainer_2_V_V_dout;
    sc_signal< sc_logic > block_C_drainer_2_V_V_empty_n;
    sc_signal< sc_logic > block_C_drainer_3_V_V_full_n;
    sc_signal< sc_lv<24> > block_C_drainer_3_V_V_dout;
    sc_signal< sc_logic > block_C_drainer_3_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_init_block_AB_proc487_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_init_block_AB_proc487_U0_ap_ready;
    sc_signal< sc_lv<2> > init_block_AB_proc487_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_store_block_C_proc488_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_store_block_C_proc488_U0_ap_ready;
    sc_signal< sc_lv<2> > store_block_C_proc488_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_systolic_array_k_12_U0_din;
    sc_signal< sc_logic > start_for_systolic_array_k_12_U0_full_n;
    sc_signal< sc_lv<1> > start_for_systolic_array_k_12_U0_dout;
    sc_signal< sc_logic > start_for_systolic_array_k_12_U0_empty_n;
    sc_signal< sc_logic > systolic_array_k_12_U0_start_full_n;
    sc_signal< sc_logic > systolic_array_k_12_U0_start_write;
    sc_signal< sc_logic > store_block_C_proc488_U0_start_full_n;
    sc_signal< sc_logic > store_block_C_proc488_U0_start_write;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_init_block_AB_proc487_U0_ap_ready();
    void thread_ap_sync_ready();
    void thread_ap_sync_store_block_C_proc488_U0_ap_ready();
    void thread_init_block_AB_proc487_U0_ap_continue();
    void thread_init_block_AB_proc487_U0_ap_start();
    void thread_start_for_systolic_array_k_12_U0_din();
    void thread_store_block_C_proc488_U0_ap_continue();
    void thread_store_block_C_proc488_U0_ap_start();
    void thread_store_block_C_proc488_U0_start_full_n();
    void thread_store_block_C_proc488_U0_start_write();
    void thread_systolic_array_k_12_U0_ap_continue();
    void thread_systolic_array_k_12_U0_ap_start();
    void thread_systolic_array_k_12_U0_start_full_n();
    void thread_systolic_array_k_12_U0_start_write();
    void thread_v66_V_address0();
    void thread_v66_V_address1();
    void thread_v66_V_ce0();
    void thread_v66_V_ce1();
    void thread_v66_V_d0();
    void thread_v66_V_d1();
    void thread_v66_V_we0();
    void thread_v66_V_we1();
    void thread_v67_V_address0();
    void thread_v67_V_address1();
    void thread_v67_V_ce0();
    void thread_v67_V_ce1();
    void thread_v67_V_d0();
    void thread_v67_V_d1();
    void thread_v67_V_we0();
    void thread_v67_V_we1();
    void thread_v68_V_address0();
    void thread_v68_V_address1();
    void thread_v68_V_ce0();
    void thread_v68_V_ce1();
    void thread_v68_V_d0();
    void thread_v68_V_d1();
    void thread_v68_V_we0();
    void thread_v68_V_we1();
};

}

using namespace ap_rtl;

#endif
