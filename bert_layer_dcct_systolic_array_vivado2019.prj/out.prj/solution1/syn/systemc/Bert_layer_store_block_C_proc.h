// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_store_block_C_proc_HH_
#define _Bert_layer_store_block_C_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_Bert_layer_sub_11ns_11ns_11_1_1.h"
#include "Bert_layer_Bert_layer_add_8ns_8ns_8_1_1.h"
#include "Bert_layer_Bert_layer_add_4ns_4ns_4_1_1.h"
#include "Bert_layer_Bert_layer_sub_14ns_14ns_14_1_1.h"
#include "Bert_layer_Bert_layer_add_11ns_11ns_11_1_1.h"
#include "Bert_layer_Bert_layer_add_14s_14ns_14_1_1.h"
#include "Bert_layer_Bert_layer_add_24ns_24ns_24_1_1.h"

namespace ap_rtl {

struct Bert_layer_store_block_C_proc : public sc_module {
    // Port declarations 51
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<6> > indvars_iv28_0_dout;
    sc_in< sc_logic > indvars_iv28_0_empty_n;
    sc_out< sc_logic > indvars_iv28_0_read;
    sc_out< sc_lv<14> > v3_V_address0;
    sc_out< sc_logic > v3_V_ce0;
    sc_out< sc_logic > v3_V_we0;
    sc_out< sc_lv<24> > v3_V_d0;
    sc_in< sc_lv<24> > v3_V_q0;
    sc_in< sc_lv<24> > block_C_drainer_0_V_V25_dout;
    sc_in< sc_logic > block_C_drainer_0_V_V25_empty_n;
    sc_out< sc_logic > block_C_drainer_0_V_V25_read;
    sc_in< sc_lv<24> > block_C_drainer_1_V_V26_dout;
    sc_in< sc_logic > block_C_drainer_1_V_V26_empty_n;
    sc_out< sc_logic > block_C_drainer_1_V_V26_read;
    sc_in< sc_lv<24> > block_C_drainer_2_V_V27_dout;
    sc_in< sc_logic > block_C_drainer_2_V_V27_empty_n;
    sc_out< sc_logic > block_C_drainer_2_V_V27_read;
    sc_in< sc_lv<24> > block_C_drainer_3_V_V28_dout;
    sc_in< sc_logic > block_C_drainer_3_V_V28_empty_n;
    sc_out< sc_logic > block_C_drainer_3_V_V28_read;
    sc_in< sc_lv<24> > block_C_drainer_4_V_V29_dout;
    sc_in< sc_logic > block_C_drainer_4_V_V29_empty_n;
    sc_out< sc_logic > block_C_drainer_4_V_V29_read;
    sc_in< sc_lv<24> > block_C_drainer_5_V_V30_dout;
    sc_in< sc_logic > block_C_drainer_5_V_V30_empty_n;
    sc_out< sc_logic > block_C_drainer_5_V_V30_read;
    sc_in< sc_lv<24> > block_C_drainer_6_V_V31_dout;
    sc_in< sc_logic > block_C_drainer_6_V_V31_empty_n;
    sc_out< sc_logic > block_C_drainer_6_V_V31_read;
    sc_in< sc_lv<24> > block_C_drainer_7_V_V32_dout;
    sc_in< sc_logic > block_C_drainer_7_V_V32_empty_n;
    sc_out< sc_logic > block_C_drainer_7_V_V32_read;
    sc_in< sc_lv<24> > block_C_drainer_8_V_V33_dout;
    sc_in< sc_logic > block_C_drainer_8_V_V33_empty_n;
    sc_out< sc_logic > block_C_drainer_8_V_V33_read;
    sc_in< sc_lv<24> > block_C_drainer_9_V_V34_dout;
    sc_in< sc_logic > block_C_drainer_9_V_V34_empty_n;
    sc_out< sc_logic > block_C_drainer_9_V_V34_read;
    sc_in< sc_lv<24> > block_C_drainer_10_V_V35_dout;
    sc_in< sc_logic > block_C_drainer_10_V_V35_empty_n;
    sc_out< sc_logic > block_C_drainer_10_V_V35_read;
    sc_in< sc_lv<24> > block_C_drainer_11_V_V36_dout;
    sc_in< sc_logic > block_C_drainer_11_V_V36_empty_n;
    sc_out< sc_logic > block_C_drainer_11_V_V36_read;
    sc_signal< sc_lv<4> > ap_var_for_const1;
    sc_signal< sc_lv<8> > ap_var_for_const0;


    // Module declarations
    Bert_layer_store_block_C_proc(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_store_block_C_proc);

    ~Bert_layer_store_block_C_proc();

    sc_trace_file* mVcdFile;

    Bert_layer_Bert_layer_sub_11ns_11ns_11_1_1<1,1,11,11,11>* Bert_layer_sub_11ns_11ns_11_1_1_U2094;
    Bert_layer_Bert_layer_add_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_add_8ns_8ns_8_1_1_U2095;
    Bert_layer_Bert_layer_add_4ns_4ns_4_1_1<1,1,4,4,4>* Bert_layer_add_4ns_4ns_4_1_1_U2096;
    Bert_layer_Bert_layer_sub_14ns_14ns_14_1_1<1,1,14,14,14>* Bert_layer_sub_14ns_14ns_14_1_1_U2097;
    Bert_layer_Bert_layer_add_11ns_11ns_11_1_1<1,1,11,11,11>* Bert_layer_add_11ns_11ns_11_1_1_U2098;
    Bert_layer_Bert_layer_add_14s_14ns_14_1_1<1,1,14,14,14>* Bert_layer_add_14s_14ns_14_1_1_U2099;
    Bert_layer_Bert_layer_add_4ns_4ns_4_1_1<1,1,4,4,4>* Bert_layer_add_4ns_4ns_4_1_1_U2100;
    Bert_layer_Bert_layer_add_24ns_24ns_24_1_1<1,1,24,24,24>* Bert_layer_add_24ns_24ns_24_1_1_U2101;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > indvars_iv28_0_blk_n;
    sc_signal< sc_logic > block_C_drainer_0_V_V25_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > icmp_ln38_reg_391;
    sc_signal< sc_lv<4> > select_ln38_1_reg_406;
    sc_signal< sc_logic > block_C_drainer_1_V_V26_blk_n;
    sc_signal< sc_logic > block_C_drainer_2_V_V27_blk_n;
    sc_signal< sc_logic > block_C_drainer_3_V_V28_blk_n;
    sc_signal< sc_logic > block_C_drainer_4_V_V29_blk_n;
    sc_signal< sc_logic > block_C_drainer_5_V_V30_blk_n;
    sc_signal< sc_logic > block_C_drainer_6_V_V31_blk_n;
    sc_signal< sc_logic > block_C_drainer_7_V_V32_blk_n;
    sc_signal< sc_logic > block_C_drainer_8_V_V33_blk_n;
    sc_signal< sc_logic > block_C_drainer_9_V_V34_blk_n;
    sc_signal< sc_logic > block_C_drainer_10_V_V35_blk_n;
    sc_signal< sc_logic > block_C_drainer_11_V_V36_blk_n;
    sc_signal< sc_lv<8> > indvar_flatten_reg_195;
    sc_signal< sc_lv<4> > indvars_iv24_0_t_i_i_reg_206;
    sc_signal< sc_lv<4> > indvars_iv20_0_i_i_reg_217;
    sc_signal< sc_lv<11> > empty_fu_281_p2;
    sc_signal< sc_lv<11> > empty_reg_386;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln38_fu_287_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<8> > add_ln38_1_fu_293_p2;
    sc_signal< sc_lv<8> > add_ln38_1_reg_395;
    sc_signal< sc_lv<4> > select_ln38_fu_311_p3;
    sc_signal< sc_lv<4> > select_ln38_reg_400;
    sc_signal< sc_lv<4> > select_ln38_1_fu_319_p3;
    sc_signal< bool > ap_predicate_op54_read_state3;
    sc_signal< bool > ap_predicate_op56_read_state3;
    sc_signal< bool > ap_predicate_op58_read_state3;
    sc_signal< bool > ap_predicate_op60_read_state3;
    sc_signal< bool > ap_predicate_op62_read_state3;
    sc_signal< bool > ap_predicate_op64_read_state3;
    sc_signal< bool > ap_predicate_op66_read_state3;
    sc_signal< bool > ap_predicate_op68_read_state3;
    sc_signal< bool > ap_predicate_op70_read_state3;
    sc_signal< bool > ap_predicate_op72_read_state3;
    sc_signal< bool > ap_predicate_op74_read_state3;
    sc_signal< bool > ap_predicate_op76_read_state3;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<14> > v3_V_addr_reg_473;
    sc_signal< sc_lv<4> > add_ln40_fu_374_p2;
    sc_signal< sc_lv<4> > add_ln40_reg_478;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten_phi_fu_199_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_indvars_iv24_0_t_i_i_phi_fu_210_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_indvars_iv20_0_i_i_phi_fu_221_p4;
    sc_signal< sc_lv<24> > ap_phi_reg_pp0_iter0_p_0_reg_228;
    sc_signal< sc_lv<24> > ap_phi_reg_pp0_iter1_p_0_reg_228;
    sc_signal< sc_lv<64> > zext_ln657_5_fu_369_p1;
    sc_signal< sc_lv<24> > add_ln657_fu_379_p2;
    sc_signal< sc_lv<10> > p_shl_i_fu_257_p3;
    sc_signal< sc_lv<8> > p_shl13_i_fu_269_p3;
    sc_signal< sc_lv<11> > empty_fu_281_p0;
    sc_signal< sc_lv<11> > empty_fu_281_p1;
    sc_signal< sc_lv<1> > icmp_ln40_fu_305_p2;
    sc_signal< sc_lv<4> > add_ln38_fu_299_p2;
    sc_signal< sc_lv<12> > tmp_8_fu_334_p3;
    sc_signal< sc_lv<14> > sub_ln657_fu_345_p0;
    sc_signal< sc_lv<14> > sub_ln657_fu_345_p1;
    sc_signal< sc_lv<11> > add_ln42_fu_354_p1;
    sc_signal< sc_lv<11> > add_ln42_fu_354_p2;
    sc_signal< sc_lv<14> > add_ln657_4_fu_363_p0;
    sc_signal< sc_lv<14> > sub_ln657_fu_345_p2;
    sc_signal< sc_lv<14> > add_ln657_4_fu_363_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_182;
    sc_signal< bool > ap_condition_327;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<8> ap_const_lv8_90;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln42_fu_354_p1();
    void thread_add_ln657_4_fu_363_p0();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_182();
    void thread_ap_condition_327();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_199_p4();
    void thread_ap_phi_mux_indvars_iv20_0_i_i_phi_fu_221_p4();
    void thread_ap_phi_mux_indvars_iv24_0_t_i_i_phi_fu_210_p4();
    void thread_ap_phi_reg_pp0_iter0_p_0_reg_228();
    void thread_ap_predicate_op54_read_state3();
    void thread_ap_predicate_op56_read_state3();
    void thread_ap_predicate_op58_read_state3();
    void thread_ap_predicate_op60_read_state3();
    void thread_ap_predicate_op62_read_state3();
    void thread_ap_predicate_op64_read_state3();
    void thread_ap_predicate_op66_read_state3();
    void thread_ap_predicate_op68_read_state3();
    void thread_ap_predicate_op70_read_state3();
    void thread_ap_predicate_op72_read_state3();
    void thread_ap_predicate_op74_read_state3();
    void thread_ap_predicate_op76_read_state3();
    void thread_ap_ready();
    void thread_block_C_drainer_0_V_V25_blk_n();
    void thread_block_C_drainer_0_V_V25_read();
    void thread_block_C_drainer_10_V_V35_blk_n();
    void thread_block_C_drainer_10_V_V35_read();
    void thread_block_C_drainer_11_V_V36_blk_n();
    void thread_block_C_drainer_11_V_V36_read();
    void thread_block_C_drainer_1_V_V26_blk_n();
    void thread_block_C_drainer_1_V_V26_read();
    void thread_block_C_drainer_2_V_V27_blk_n();
    void thread_block_C_drainer_2_V_V27_read();
    void thread_block_C_drainer_3_V_V28_blk_n();
    void thread_block_C_drainer_3_V_V28_read();
    void thread_block_C_drainer_4_V_V29_blk_n();
    void thread_block_C_drainer_4_V_V29_read();
    void thread_block_C_drainer_5_V_V30_blk_n();
    void thread_block_C_drainer_5_V_V30_read();
    void thread_block_C_drainer_6_V_V31_blk_n();
    void thread_block_C_drainer_6_V_V31_read();
    void thread_block_C_drainer_7_V_V32_blk_n();
    void thread_block_C_drainer_7_V_V32_read();
    void thread_block_C_drainer_8_V_V33_blk_n();
    void thread_block_C_drainer_8_V_V33_read();
    void thread_block_C_drainer_9_V_V34_blk_n();
    void thread_block_C_drainer_9_V_V34_read();
    void thread_empty_fu_281_p0();
    void thread_empty_fu_281_p1();
    void thread_icmp_ln38_fu_287_p2();
    void thread_icmp_ln40_fu_305_p2();
    void thread_indvars_iv28_0_blk_n();
    void thread_indvars_iv28_0_read();
    void thread_p_shl13_i_fu_269_p3();
    void thread_p_shl_i_fu_257_p3();
    void thread_select_ln38_1_fu_319_p3();
    void thread_select_ln38_fu_311_p3();
    void thread_sub_ln657_fu_345_p0();
    void thread_sub_ln657_fu_345_p1();
    void thread_tmp_8_fu_334_p3();
    void thread_v3_V_address0();
    void thread_v3_V_ce0();
    void thread_v3_V_d0();
    void thread_v3_V_we0();
    void thread_zext_ln657_5_fu_369_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
