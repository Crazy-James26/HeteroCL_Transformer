// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_systolic_array_k_3072_Loop_data_drain_AB_proc473_HH_
#define _Bert_layer_systolic_array_k_3072_Loop_data_drain_AB_proc473_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_Bert_layer_add_12ns_12ns_12_1_1.h"

namespace ap_rtl {

struct Bert_layer_systolic_array_k_3072_Loop_data_drain_AB_proc473 : public sc_module {
    // Port declarations 79
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > A_fifo_0_12_dout;
    sc_in< sc_logic > A_fifo_0_12_empty_n;
    sc_out< sc_logic > A_fifo_0_12_read;
    sc_in< sc_lv<24> > A_fifo_1_12_dout;
    sc_in< sc_logic > A_fifo_1_12_empty_n;
    sc_out< sc_logic > A_fifo_1_12_read;
    sc_in< sc_lv<24> > A_fifo_2_12_dout;
    sc_in< sc_logic > A_fifo_2_12_empty_n;
    sc_out< sc_logic > A_fifo_2_12_read;
    sc_in< sc_lv<24> > A_fifo_3_12_dout;
    sc_in< sc_logic > A_fifo_3_12_empty_n;
    sc_out< sc_logic > A_fifo_3_12_read;
    sc_in< sc_lv<24> > A_fifo_4_12_dout;
    sc_in< sc_logic > A_fifo_4_12_empty_n;
    sc_out< sc_logic > A_fifo_4_12_read;
    sc_in< sc_lv<24> > A_fifo_5_12_dout;
    sc_in< sc_logic > A_fifo_5_12_empty_n;
    sc_out< sc_logic > A_fifo_5_12_read;
    sc_in< sc_lv<24> > A_fifo_6_12_dout;
    sc_in< sc_logic > A_fifo_6_12_empty_n;
    sc_out< sc_logic > A_fifo_6_12_read;
    sc_in< sc_lv<24> > A_fifo_7_12_dout;
    sc_in< sc_logic > A_fifo_7_12_empty_n;
    sc_out< sc_logic > A_fifo_7_12_read;
    sc_in< sc_lv<24> > A_fifo_8_12_dout;
    sc_in< sc_logic > A_fifo_8_12_empty_n;
    sc_out< sc_logic > A_fifo_8_12_read;
    sc_in< sc_lv<24> > A_fifo_9_12_dout;
    sc_in< sc_logic > A_fifo_9_12_empty_n;
    sc_out< sc_logic > A_fifo_9_12_read;
    sc_in< sc_lv<24> > A_fifo_10_12_dout;
    sc_in< sc_logic > A_fifo_10_12_empty_n;
    sc_out< sc_logic > A_fifo_10_12_read;
    sc_in< sc_lv<24> > A_fifo_11_12_dout;
    sc_in< sc_logic > A_fifo_11_12_empty_n;
    sc_out< sc_logic > A_fifo_11_12_read;
    sc_in< sc_lv<24> > B_fifo_0_12_dout;
    sc_in< sc_logic > B_fifo_0_12_empty_n;
    sc_out< sc_logic > B_fifo_0_12_read;
    sc_in< sc_lv<24> > B_fifo_1_12_dout;
    sc_in< sc_logic > B_fifo_1_12_empty_n;
    sc_out< sc_logic > B_fifo_1_12_read;
    sc_in< sc_lv<24> > B_fifo_2_12_dout;
    sc_in< sc_logic > B_fifo_2_12_empty_n;
    sc_out< sc_logic > B_fifo_2_12_read;
    sc_in< sc_lv<24> > B_fifo_3_12_dout;
    sc_in< sc_logic > B_fifo_3_12_empty_n;
    sc_out< sc_logic > B_fifo_3_12_read;
    sc_in< sc_lv<24> > B_fifo_4_12_dout;
    sc_in< sc_logic > B_fifo_4_12_empty_n;
    sc_out< sc_logic > B_fifo_4_12_read;
    sc_in< sc_lv<24> > B_fifo_5_12_dout;
    sc_in< sc_logic > B_fifo_5_12_empty_n;
    sc_out< sc_logic > B_fifo_5_12_read;
    sc_in< sc_lv<24> > B_fifo_6_12_dout;
    sc_in< sc_logic > B_fifo_6_12_empty_n;
    sc_out< sc_logic > B_fifo_6_12_read;
    sc_in< sc_lv<24> > B_fifo_7_12_dout;
    sc_in< sc_logic > B_fifo_7_12_empty_n;
    sc_out< sc_logic > B_fifo_7_12_read;
    sc_in< sc_lv<24> > B_fifo_8_12_dout;
    sc_in< sc_logic > B_fifo_8_12_empty_n;
    sc_out< sc_logic > B_fifo_8_12_read;
    sc_in< sc_lv<24> > B_fifo_9_12_dout;
    sc_in< sc_logic > B_fifo_9_12_empty_n;
    sc_out< sc_logic > B_fifo_9_12_read;
    sc_in< sc_lv<24> > B_fifo_10_12_dout;
    sc_in< sc_logic > B_fifo_10_12_empty_n;
    sc_out< sc_logic > B_fifo_10_12_read;
    sc_in< sc_lv<24> > B_fifo_11_12_dout;
    sc_in< sc_logic > B_fifo_11_12_empty_n;
    sc_out< sc_logic > B_fifo_11_12_read;
    sc_signal< sc_lv<12> > ap_var_for_const0;


    // Module declarations
    Bert_layer_systolic_array_k_3072_Loop_data_drain_AB_proc473(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_systolic_array_k_3072_Loop_data_drain_AB_proc473);

    ~Bert_layer_systolic_array_k_3072_Loop_data_drain_AB_proc473();

    sc_trace_file* mVcdFile;

    Bert_layer_Bert_layer_add_12ns_12ns_12_1_1<1,1,12,12,12>* Bert_layer_add_12ns_12ns_12_1_1_U4739;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > A_fifo_0_12_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln101_reg_249;
    sc_signal< sc_logic > A_fifo_1_12_blk_n;
    sc_signal< sc_logic > A_fifo_2_12_blk_n;
    sc_signal< sc_logic > A_fifo_3_12_blk_n;
    sc_signal< sc_logic > A_fifo_4_12_blk_n;
    sc_signal< sc_logic > A_fifo_5_12_blk_n;
    sc_signal< sc_logic > A_fifo_6_12_blk_n;
    sc_signal< sc_logic > A_fifo_7_12_blk_n;
    sc_signal< sc_logic > A_fifo_8_12_blk_n;
    sc_signal< sc_logic > A_fifo_9_12_blk_n;
    sc_signal< sc_logic > A_fifo_10_12_blk_n;
    sc_signal< sc_logic > A_fifo_11_12_blk_n;
    sc_signal< sc_logic > B_fifo_0_12_blk_n;
    sc_signal< sc_logic > B_fifo_1_12_blk_n;
    sc_signal< sc_logic > B_fifo_2_12_blk_n;
    sc_signal< sc_logic > B_fifo_3_12_blk_n;
    sc_signal< sc_logic > B_fifo_4_12_blk_n;
    sc_signal< sc_logic > B_fifo_5_12_blk_n;
    sc_signal< sc_logic > B_fifo_6_12_blk_n;
    sc_signal< sc_logic > B_fifo_7_12_blk_n;
    sc_signal< sc_logic > B_fifo_8_12_blk_n;
    sc_signal< sc_logic > B_fifo_9_12_blk_n;
    sc_signal< sc_logic > B_fifo_10_12_blk_n;
    sc_signal< sc_logic > B_fifo_11_12_blk_n;
    sc_signal< sc_lv<12> > k_reg_226;
    sc_signal< sc_lv<1> > icmp_ln101_fu_237_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<12> > k_5_fu_243_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<12> ap_const_lv12_C00;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_fifo_0_12_blk_n();
    void thread_A_fifo_0_12_read();
    void thread_A_fifo_10_12_blk_n();
    void thread_A_fifo_10_12_read();
    void thread_A_fifo_11_12_blk_n();
    void thread_A_fifo_11_12_read();
    void thread_A_fifo_1_12_blk_n();
    void thread_A_fifo_1_12_read();
    void thread_A_fifo_2_12_blk_n();
    void thread_A_fifo_2_12_read();
    void thread_A_fifo_3_12_blk_n();
    void thread_A_fifo_3_12_read();
    void thread_A_fifo_4_12_blk_n();
    void thread_A_fifo_4_12_read();
    void thread_A_fifo_5_12_blk_n();
    void thread_A_fifo_5_12_read();
    void thread_A_fifo_6_12_blk_n();
    void thread_A_fifo_6_12_read();
    void thread_A_fifo_7_12_blk_n();
    void thread_A_fifo_7_12_read();
    void thread_A_fifo_8_12_blk_n();
    void thread_A_fifo_8_12_read();
    void thread_A_fifo_9_12_blk_n();
    void thread_A_fifo_9_12_read();
    void thread_B_fifo_0_12_blk_n();
    void thread_B_fifo_0_12_read();
    void thread_B_fifo_10_12_blk_n();
    void thread_B_fifo_10_12_read();
    void thread_B_fifo_11_12_blk_n();
    void thread_B_fifo_11_12_read();
    void thread_B_fifo_1_12_blk_n();
    void thread_B_fifo_1_12_read();
    void thread_B_fifo_2_12_blk_n();
    void thread_B_fifo_2_12_read();
    void thread_B_fifo_3_12_blk_n();
    void thread_B_fifo_3_12_read();
    void thread_B_fifo_4_12_blk_n();
    void thread_B_fifo_4_12_read();
    void thread_B_fifo_5_12_blk_n();
    void thread_B_fifo_5_12_read();
    void thread_B_fifo_6_12_blk_n();
    void thread_B_fifo_6_12_read();
    void thread_B_fifo_7_12_blk_n();
    void thread_B_fifo_7_12_read();
    void thread_B_fifo_8_12_blk_n();
    void thread_B_fifo_8_12_read();
    void thread_B_fifo_9_12_blk_n();
    void thread_B_fifo_9_12_read();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_icmp_ln101_fu_237_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
