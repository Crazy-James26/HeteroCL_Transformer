// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_systolic_array_k_12_Loop_data_drain_C_proc327_HH_
#define _Bert_layer_systolic_array_k_12_Loop_data_drain_C_proc327_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_Bert_layer_add_3ns_3ns_3_1_1.h"
#include "Bert_layer_Bert_layer_mux_42_24_1_1.h"

namespace ap_rtl {

struct Bert_layer_systolic_array_k_12_Loop_data_drain_C_proc327 : public sc_module {
    // Port declarations 67
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > C_0_0_V_dout;
    sc_in< sc_logic > C_0_0_V_empty_n;
    sc_out< sc_logic > C_0_0_V_read;
    sc_in< sc_lv<24> > C_0_1_V_dout;
    sc_in< sc_logic > C_0_1_V_empty_n;
    sc_out< sc_logic > C_0_1_V_read;
    sc_in< sc_lv<24> > C_0_2_V_dout;
    sc_in< sc_logic > C_0_2_V_empty_n;
    sc_out< sc_logic > C_0_2_V_read;
    sc_in< sc_lv<24> > C_0_3_V_dout;
    sc_in< sc_logic > C_0_3_V_empty_n;
    sc_out< sc_logic > C_0_3_V_read;
    sc_out< sc_lv<24> > C_drainer_V_V_din;
    sc_in< sc_logic > C_drainer_V_V_full_n;
    sc_out< sc_logic > C_drainer_V_V_write;
    sc_in< sc_lv<24> > C_1_0_V_dout;
    sc_in< sc_logic > C_1_0_V_empty_n;
    sc_out< sc_logic > C_1_0_V_read;
    sc_in< sc_lv<24> > C_1_1_V_dout;
    sc_in< sc_logic > C_1_1_V_empty_n;
    sc_out< sc_logic > C_1_1_V_read;
    sc_in< sc_lv<24> > C_1_2_V_dout;
    sc_in< sc_logic > C_1_2_V_empty_n;
    sc_out< sc_logic > C_1_2_V_read;
    sc_in< sc_lv<24> > C_1_3_V_dout;
    sc_in< sc_logic > C_1_3_V_empty_n;
    sc_out< sc_logic > C_1_3_V_read;
    sc_out< sc_lv<24> > C_drainer_1_V_V_din;
    sc_in< sc_logic > C_drainer_1_V_V_full_n;
    sc_out< sc_logic > C_drainer_1_V_V_write;
    sc_in< sc_lv<24> > C_2_0_V_dout;
    sc_in< sc_logic > C_2_0_V_empty_n;
    sc_out< sc_logic > C_2_0_V_read;
    sc_in< sc_lv<24> > C_2_1_V_dout;
    sc_in< sc_logic > C_2_1_V_empty_n;
    sc_out< sc_logic > C_2_1_V_read;
    sc_in< sc_lv<24> > C_2_2_V_dout;
    sc_in< sc_logic > C_2_2_V_empty_n;
    sc_out< sc_logic > C_2_2_V_read;
    sc_in< sc_lv<24> > C_2_3_V_dout;
    sc_in< sc_logic > C_2_3_V_empty_n;
    sc_out< sc_logic > C_2_3_V_read;
    sc_out< sc_lv<24> > C_drainer_2_V_V_din;
    sc_in< sc_logic > C_drainer_2_V_V_full_n;
    sc_out< sc_logic > C_drainer_2_V_V_write;
    sc_in< sc_lv<24> > C_3_0_V_dout;
    sc_in< sc_logic > C_3_0_V_empty_n;
    sc_out< sc_logic > C_3_0_V_read;
    sc_in< sc_lv<24> > C_3_1_V_dout;
    sc_in< sc_logic > C_3_1_V_empty_n;
    sc_out< sc_logic > C_3_1_V_read;
    sc_in< sc_lv<24> > C_3_2_V_dout;
    sc_in< sc_logic > C_3_2_V_empty_n;
    sc_out< sc_logic > C_3_2_V_read;
    sc_in< sc_lv<24> > C_3_3_V_dout;
    sc_in< sc_logic > C_3_3_V_empty_n;
    sc_out< sc_logic > C_3_3_V_read;
    sc_out< sc_lv<24> > C_drainer_3_V_V_din;
    sc_in< sc_logic > C_drainer_3_V_V_full_n;
    sc_out< sc_logic > C_drainer_3_V_V_write;
    sc_signal< sc_lv<3> > ap_var_for_const0;


    // Module declarations
    Bert_layer_systolic_array_k_12_Loop_data_drain_C_proc327(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_systolic_array_k_12_Loop_data_drain_C_proc327);

    ~Bert_layer_systolic_array_k_12_Loop_data_drain_C_proc327();

    sc_trace_file* mVcdFile;

    Bert_layer_Bert_layer_add_3ns_3ns_3_1_1<1,1,3,3,3>* Bert_layer_add_3ns_3ns_3_1_1_U2774;
    Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>* Bert_layer_mux_42_24_1_1_U2775;
    Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>* Bert_layer_mux_42_24_1_1_U2776;
    Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>* Bert_layer_mux_42_24_1_1_U2777;
    Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>* Bert_layer_mux_42_24_1_1_U2778;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > C_0_0_V_blk_n;
    sc_signal< sc_logic > C_0_1_V_blk_n;
    sc_signal< sc_logic > C_0_2_V_blk_n;
    sc_signal< sc_logic > C_0_3_V_blk_n;
    sc_signal< sc_logic > C_drainer_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln213_reg_351;
    sc_signal< sc_logic > C_1_0_V_blk_n;
    sc_signal< sc_logic > C_1_1_V_blk_n;
    sc_signal< sc_logic > C_1_2_V_blk_n;
    sc_signal< sc_logic > C_1_3_V_blk_n;
    sc_signal< sc_logic > C_drainer_1_V_V_blk_n;
    sc_signal< sc_logic > C_2_0_V_blk_n;
    sc_signal< sc_logic > C_2_1_V_blk_n;
    sc_signal< sc_logic > C_2_2_V_blk_n;
    sc_signal< sc_logic > C_2_3_V_blk_n;
    sc_signal< sc_logic > C_drainer_2_V_V_blk_n;
    sc_signal< sc_logic > C_3_0_V_blk_n;
    sc_signal< sc_logic > C_3_1_V_blk_n;
    sc_signal< sc_logic > C_3_2_V_blk_n;
    sc_signal< sc_logic > C_3_3_V_blk_n;
    sc_signal< sc_logic > C_drainer_3_V_V_blk_n;
    sc_signal< sc_lv<3> > n_reg_204;
    sc_signal< sc_lv<24> > C_0_0_V_read_reg_271;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<24> > C_0_1_V_read_reg_276;
    sc_signal< sc_lv<24> > C_0_2_V_read_reg_281;
    sc_signal< sc_lv<24> > C_0_3_V_read_reg_286;
    sc_signal< sc_lv<24> > C_1_0_V_read_reg_291;
    sc_signal< sc_lv<24> > C_1_1_V_read_reg_296;
    sc_signal< sc_lv<24> > C_1_2_V_read_reg_301;
    sc_signal< sc_lv<24> > C_1_3_V_read_reg_306;
    sc_signal< sc_lv<24> > C_2_0_V_read_reg_311;
    sc_signal< sc_lv<24> > C_2_1_V_read_reg_316;
    sc_signal< sc_lv<24> > C_2_2_V_read_reg_321;
    sc_signal< sc_lv<24> > C_2_3_V_read_reg_326;
    sc_signal< sc_lv<24> > C_3_0_V_read_reg_331;
    sc_signal< sc_lv<24> > C_3_1_V_read_reg_336;
    sc_signal< sc_lv<24> > C_3_2_V_read_reg_341;
    sc_signal< sc_lv<24> > C_3_3_V_read_reg_346;
    sc_signal< sc_lv<1> > icmp_ln213_fu_215_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > add_ln213_fu_221_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<24> > tmp_fu_231_p6;
    sc_signal< sc_lv<24> > tmp_reg_360;
    sc_signal< sc_lv<24> > tmp_s_fu_241_p6;
    sc_signal< sc_lv<24> > tmp_s_reg_365;
    sc_signal< sc_lv<24> > tmp_23_fu_251_p6;
    sc_signal< sc_lv<24> > tmp_23_reg_370;
    sc_signal< sc_lv<24> > tmp_24_fu_261_p6;
    sc_signal< sc_lv<24> > tmp_24_reg_375;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<2> > trunc_ln108_fu_227_p1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_C_0_0_V_blk_n();
    void thread_C_0_0_V_read();
    void thread_C_0_1_V_blk_n();
    void thread_C_0_1_V_read();
    void thread_C_0_2_V_blk_n();
    void thread_C_0_2_V_read();
    void thread_C_0_3_V_blk_n();
    void thread_C_0_3_V_read();
    void thread_C_1_0_V_blk_n();
    void thread_C_1_0_V_read();
    void thread_C_1_1_V_blk_n();
    void thread_C_1_1_V_read();
    void thread_C_1_2_V_blk_n();
    void thread_C_1_2_V_read();
    void thread_C_1_3_V_blk_n();
    void thread_C_1_3_V_read();
    void thread_C_2_0_V_blk_n();
    void thread_C_2_0_V_read();
    void thread_C_2_1_V_blk_n();
    void thread_C_2_1_V_read();
    void thread_C_2_2_V_blk_n();
    void thread_C_2_2_V_read();
    void thread_C_2_3_V_blk_n();
    void thread_C_2_3_V_read();
    void thread_C_3_0_V_blk_n();
    void thread_C_3_0_V_read();
    void thread_C_3_1_V_blk_n();
    void thread_C_3_1_V_read();
    void thread_C_3_2_V_blk_n();
    void thread_C_3_2_V_read();
    void thread_C_3_3_V_blk_n();
    void thread_C_3_3_V_read();
    void thread_C_drainer_1_V_V_blk_n();
    void thread_C_drainer_1_V_V_din();
    void thread_C_drainer_1_V_V_write();
    void thread_C_drainer_2_V_V_blk_n();
    void thread_C_drainer_2_V_V_din();
    void thread_C_drainer_2_V_V_write();
    void thread_C_drainer_3_V_V_blk_n();
    void thread_C_drainer_3_V_V_din();
    void thread_C_drainer_3_V_V_write();
    void thread_C_drainer_V_V_blk_n();
    void thread_C_drainer_V_V_din();
    void thread_C_drainer_V_V_write();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_icmp_ln213_fu_215_p2();
    void thread_trunc_ln108_fu_227_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
