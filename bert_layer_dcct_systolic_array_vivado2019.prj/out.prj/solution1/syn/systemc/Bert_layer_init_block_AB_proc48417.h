// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_init_block_AB_proc48417_HH_
#define _Bert_layer_init_block_AB_proc48417_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_Bert_layer_add_7ns_7ns_7_1_1.h"
#include "Bert_layer_Bert_layer_add_10ns_10ns_10_1_1.h"

namespace ap_rtl {

struct Bert_layer_init_block_AB_proc48417 : public sc_module {
    // Port declarations 54
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<10> > v20_V_address0;
    sc_out< sc_logic > v20_V_ce0;
    sc_in< sc_lv<24> > v20_V_q0;
    sc_out< sc_lv<10> > v20_V_address1;
    sc_out< sc_logic > v20_V_ce1;
    sc_in< sc_lv<24> > v20_V_q1;
    sc_in< sc_lv<2> > ii;
    sc_out< sc_lv<24> > block_A_loader_0_V_V1_din;
    sc_in< sc_logic > block_A_loader_0_V_V1_full_n;
    sc_out< sc_logic > block_A_loader_0_V_V1_write;
    sc_out< sc_lv<24> > block_A_loader_1_V_V2_din;
    sc_in< sc_logic > block_A_loader_1_V_V2_full_n;
    sc_out< sc_logic > block_A_loader_1_V_V2_write;
    sc_out< sc_lv<24> > block_A_loader_2_V_V3_din;
    sc_in< sc_logic > block_A_loader_2_V_V3_full_n;
    sc_out< sc_logic > block_A_loader_2_V_V3_write;
    sc_out< sc_lv<24> > block_A_loader_3_V_V4_din;
    sc_in< sc_logic > block_A_loader_3_V_V4_full_n;
    sc_out< sc_logic > block_A_loader_3_V_V4_write;
    sc_out< sc_lv<10> > v21_V_address0;
    sc_out< sc_logic > v21_V_ce0;
    sc_in< sc_lv<24> > v21_V_q0;
    sc_out< sc_lv<10> > v21_V_address1;
    sc_out< sc_logic > v21_V_ce1;
    sc_in< sc_lv<24> > v21_V_q1;
    sc_in< sc_lv<2> > jj;
    sc_out< sc_lv<24> > block_B_loader_0_V_V5_din;
    sc_in< sc_logic > block_B_loader_0_V_V5_full_n;
    sc_out< sc_logic > block_B_loader_0_V_V5_write;
    sc_out< sc_lv<24> > block_B_loader_1_V_V6_din;
    sc_in< sc_logic > block_B_loader_1_V_V6_full_n;
    sc_out< sc_logic > block_B_loader_1_V_V6_write;
    sc_out< sc_lv<24> > block_B_loader_2_V_V7_din;
    sc_in< sc_logic > block_B_loader_2_V_V7_full_n;
    sc_out< sc_logic > block_B_loader_2_V_V7_write;
    sc_out< sc_lv<24> > block_B_loader_3_V_V8_din;
    sc_in< sc_logic > block_B_loader_3_V_V8_full_n;
    sc_out< sc_logic > block_B_loader_3_V_V8_write;
    sc_out< sc_lv<2> > ii_out_din;
    sc_in< sc_logic > ii_out_full_n;
    sc_out< sc_logic > ii_out_write;
    sc_out< sc_lv<2> > jj_out_din;
    sc_in< sc_logic > jj_out_full_n;
    sc_out< sc_logic > jj_out_write;
    sc_signal< sc_lv<7> > ap_var_for_const0;


    // Module declarations
    Bert_layer_init_block_AB_proc48417(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_init_block_AB_proc48417);

    ~Bert_layer_init_block_AB_proc48417();

    sc_trace_file* mVcdFile;

    Bert_layer_Bert_layer_add_7ns_7ns_7_1_1<1,1,7,7,7>* Bert_layer_add_7ns_7ns_7_1_1_U2241;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2242;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2243;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2244;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2245;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > block_A_loader_0_V_V1_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln71_reg_526;
    sc_signal< sc_logic > block_A_loader_1_V_V2_blk_n;
    sc_signal< sc_logic > block_A_loader_2_V_V3_blk_n;
    sc_signal< sc_logic > block_A_loader_3_V_V4_blk_n;
    sc_signal< sc_logic > block_B_loader_0_V_V5_blk_n;
    sc_signal< sc_logic > block_B_loader_1_V_V6_blk_n;
    sc_signal< sc_logic > block_B_loader_2_V_V7_blk_n;
    sc_signal< sc_logic > block_B_loader_3_V_V8_blk_n;
    sc_signal< sc_logic > ii_out_blk_n;
    sc_signal< sc_logic > jj_out_blk_n;
    sc_signal< sc_lv<7> > k_reg_264;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<10> > tmp_29_fu_298_p3;
    sc_signal< sc_lv<10> > tmp_29_reg_496;
    sc_signal< sc_lv<4> > or_ln74_1_fu_306_p2;
    sc_signal< sc_lv<4> > or_ln74_1_reg_501;
    sc_signal< sc_lv<10> > tmp_30_fu_318_p3;
    sc_signal< sc_lv<10> > tmp_30_reg_506;
    sc_signal< sc_lv<10> > tmp_31_fu_332_p3;
    sc_signal< sc_lv<10> > tmp_31_reg_511;
    sc_signal< sc_lv<4> > or_ln77_1_fu_340_p2;
    sc_signal< sc_lv<4> > or_ln77_1_reg_516;
    sc_signal< sc_lv<10> > tmp_32_fu_352_p3;
    sc_signal< sc_lv<10> > tmp_32_reg_521;
    sc_signal< sc_lv<1> > icmp_ln71_fu_360_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > add_ln71_fu_366_p2;
    sc_signal< sc_lv<7> > add_ln71_reg_530;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<10> > zext_ln74_fu_372_p1;
    sc_signal< sc_lv<10> > zext_ln74_reg_535;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<24> > v20_V_load_reg_581;
    sc_signal< sc_lv<24> > v20_V_load_1_reg_586;
    sc_signal< sc_lv<24> > v21_V_load_reg_591;
    sc_signal< sc_lv<24> > v21_V_load_1_reg_596;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<7> > ap_phi_mux_k_phi_fu_268_p4;
    sc_signal< sc_lv<64> > zext_ln74_1_fu_385_p1;
    sc_signal< sc_lv<64> > zext_ln74_2_fu_395_p1;
    sc_signal< sc_lv<64> > zext_ln77_fu_409_p1;
    sc_signal< sc_lv<64> > zext_ln77_1_fu_419_p1;
    sc_signal< sc_lv<64> > zext_ln74_3_fu_441_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln74_4_fu_450_p1;
    sc_signal< sc_lv<64> > zext_ln77_2_fu_472_p1;
    sc_signal< sc_lv<64> > zext_ln77_3_fu_481_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<4> > tmp_fu_276_p3;
    sc_signal< sc_lv<4> > or_ln74_fu_292_p2;
    sc_signal< sc_lv<4> > or_ln74_2_fu_312_p2;
    sc_signal< sc_lv<4> > tmp_s_fu_284_p3;
    sc_signal< sc_lv<4> > or_ln77_fu_326_p2;
    sc_signal< sc_lv<4> > or_ln77_2_fu_346_p2;
    sc_signal< sc_lv<10> > tmp_33_fu_376_p4;
    sc_signal< sc_lv<10> > add_ln74_fu_390_p2;
    sc_signal< sc_lv<10> > tmp_36_fu_400_p4;
    sc_signal< sc_lv<10> > add_ln77_fu_414_p2;
    sc_signal< sc_lv<3> > tmp_34_fu_424_p4;
    sc_signal< sc_lv<10> > tmp_35_fu_433_p3;
    sc_signal< sc_lv<10> > add_ln74_1_fu_446_p2;
    sc_signal< sc_lv<3> > tmp_37_fu_455_p4;
    sc_signal< sc_lv<10> > tmp_38_fu_464_p3;
    sc_signal< sc_lv<10> > add_ln77_1_fu_477_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_k_phi_fu_268_p4();
    void thread_ap_ready();
    void thread_block_A_loader_0_V_V1_blk_n();
    void thread_block_A_loader_0_V_V1_din();
    void thread_block_A_loader_0_V_V1_write();
    void thread_block_A_loader_1_V_V2_blk_n();
    void thread_block_A_loader_1_V_V2_din();
    void thread_block_A_loader_1_V_V2_write();
    void thread_block_A_loader_2_V_V3_blk_n();
    void thread_block_A_loader_2_V_V3_din();
    void thread_block_A_loader_2_V_V3_write();
    void thread_block_A_loader_3_V_V4_blk_n();
    void thread_block_A_loader_3_V_V4_din();
    void thread_block_A_loader_3_V_V4_write();
    void thread_block_B_loader_0_V_V5_blk_n();
    void thread_block_B_loader_0_V_V5_din();
    void thread_block_B_loader_0_V_V5_write();
    void thread_block_B_loader_1_V_V6_blk_n();
    void thread_block_B_loader_1_V_V6_din();
    void thread_block_B_loader_1_V_V6_write();
    void thread_block_B_loader_2_V_V7_blk_n();
    void thread_block_B_loader_2_V_V7_din();
    void thread_block_B_loader_2_V_V7_write();
    void thread_block_B_loader_3_V_V8_blk_n();
    void thread_block_B_loader_3_V_V8_din();
    void thread_block_B_loader_3_V_V8_write();
    void thread_icmp_ln71_fu_360_p2();
    void thread_ii_out_blk_n();
    void thread_ii_out_din();
    void thread_ii_out_write();
    void thread_internal_ap_ready();
    void thread_jj_out_blk_n();
    void thread_jj_out_din();
    void thread_jj_out_write();
    void thread_or_ln74_1_fu_306_p2();
    void thread_or_ln74_2_fu_312_p2();
    void thread_or_ln74_fu_292_p2();
    void thread_or_ln77_1_fu_340_p2();
    void thread_or_ln77_2_fu_346_p2();
    void thread_or_ln77_fu_326_p2();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_29_fu_298_p3();
    void thread_tmp_30_fu_318_p3();
    void thread_tmp_31_fu_332_p3();
    void thread_tmp_32_fu_352_p3();
    void thread_tmp_33_fu_376_p4();
    void thread_tmp_34_fu_424_p4();
    void thread_tmp_35_fu_433_p3();
    void thread_tmp_36_fu_400_p4();
    void thread_tmp_37_fu_455_p4();
    void thread_tmp_38_fu_464_p3();
    void thread_tmp_fu_276_p3();
    void thread_tmp_s_fu_284_p3();
    void thread_v20_V_address0();
    void thread_v20_V_address1();
    void thread_v20_V_ce0();
    void thread_v20_V_ce1();
    void thread_v21_V_address0();
    void thread_v21_V_address1();
    void thread_v21_V_ce0();
    void thread_v21_V_ce1();
    void thread_zext_ln74_1_fu_385_p1();
    void thread_zext_ln74_2_fu_395_p1();
    void thread_zext_ln74_3_fu_441_p1();
    void thread_zext_ln74_4_fu_450_p1();
    void thread_zext_ln74_fu_372_p1();
    void thread_zext_ln77_1_fu_419_p1();
    void thread_zext_ln77_2_fu_472_p1();
    void thread_zext_ln77_3_fu_481_p1();
    void thread_zext_ln77_fu_409_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
