// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_init_block_AB_proc487_HH_
#define _Bert_layer_init_block_AB_proc487_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_Bert_layer_sub_9ns_9ns_9_1_1.h"
#include "Bert_layer_Bert_layer_sub_8ns_8ns_8_1_1.h"
#include "Bert_layer_Bert_layer_add_4ns_4ns_4_1_1.h"
#include "Bert_layer_Bert_layer_add_8ns_8ns_8_1_1.h"

namespace ap_rtl {

struct Bert_layer_init_block_AB_proc487 : public sc_module {
    // Port declarations 54
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<8> > v66_V_address0;
    sc_out< sc_logic > v66_V_ce0;
    sc_in< sc_lv<24> > v66_V_q0;
    sc_out< sc_lv<8> > v66_V_address1;
    sc_out< sc_logic > v66_V_ce1;
    sc_in< sc_lv<24> > v66_V_q1;
    sc_in< sc_lv<2> > ii;
    sc_out< sc_lv<24> > block_A_loader_0_V_V_din;
    sc_in< sc_logic > block_A_loader_0_V_V_full_n;
    sc_out< sc_logic > block_A_loader_0_V_V_write;
    sc_out< sc_lv<24> > block_A_loader_1_V_V_din;
    sc_in< sc_logic > block_A_loader_1_V_V_full_n;
    sc_out< sc_logic > block_A_loader_1_V_V_write;
    sc_out< sc_lv<24> > block_A_loader_2_V_V_din;
    sc_in< sc_logic > block_A_loader_2_V_V_full_n;
    sc_out< sc_logic > block_A_loader_2_V_V_write;
    sc_out< sc_lv<24> > block_A_loader_3_V_V_din;
    sc_in< sc_logic > block_A_loader_3_V_V_full_n;
    sc_out< sc_logic > block_A_loader_3_V_V_write;
    sc_out< sc_lv<10> > v67_V_address0;
    sc_out< sc_logic > v67_V_ce0;
    sc_in< sc_lv<24> > v67_V_q0;
    sc_out< sc_lv<10> > v67_V_address1;
    sc_out< sc_logic > v67_V_ce1;
    sc_in< sc_lv<24> > v67_V_q1;
    sc_in< sc_lv<5> > jj;
    sc_out< sc_lv<24> > block_B_loader_0_V_V_din;
    sc_in< sc_logic > block_B_loader_0_V_V_full_n;
    sc_out< sc_logic > block_B_loader_0_V_V_write;
    sc_out< sc_lv<24> > block_B_loader_1_V_V_din;
    sc_in< sc_logic > block_B_loader_1_V_V_full_n;
    sc_out< sc_logic > block_B_loader_1_V_V_write;
    sc_out< sc_lv<24> > block_B_loader_2_V_V_din;
    sc_in< sc_logic > block_B_loader_2_V_V_full_n;
    sc_out< sc_logic > block_B_loader_2_V_V_write;
    sc_out< sc_lv<24> > block_B_loader_3_V_V_din;
    sc_in< sc_logic > block_B_loader_3_V_V_full_n;
    sc_out< sc_logic > block_B_loader_3_V_V_write;
    sc_out< sc_lv<2> > ii_c_din;
    sc_in< sc_logic > ii_c_full_n;
    sc_out< sc_logic > ii_c_write;
    sc_out< sc_lv<4> > jj_c_din;
    sc_in< sc_logic > jj_c_full_n;
    sc_out< sc_logic > jj_c_write;
    sc_signal< sc_lv<4> > ap_var_for_const0;


    // Module declarations
    Bert_layer_init_block_AB_proc487(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_init_block_AB_proc487);

    ~Bert_layer_init_block_AB_proc487();

    sc_trace_file* mVcdFile;

    Bert_layer_Bert_layer_sub_9ns_9ns_9_1_1<1,1,9,9,9>* Bert_layer_sub_9ns_9ns_9_1_1_U2597;
    Bert_layer_Bert_layer_sub_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_sub_8ns_8ns_8_1_1_U2598;
    Bert_layer_Bert_layer_sub_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_sub_8ns_8ns_8_1_1_U2599;
    Bert_layer_Bert_layer_sub_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_sub_8ns_8ns_8_1_1_U2600;
    Bert_layer_Bert_layer_add_4ns_4ns_4_1_1<1,1,4,4,4>* Bert_layer_add_4ns_4ns_4_1_1_U2601;
    Bert_layer_Bert_layer_add_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_add_8ns_8ns_8_1_1_U2602;
    Bert_layer_Bert_layer_add_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_add_8ns_8ns_8_1_1_U2603;
    Bert_layer_Bert_layer_add_8ns_8ns_8_1_1<1,1,8,8,8>* Bert_layer_add_8ns_8ns_8_1_1_U2604;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > block_A_loader_0_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln117_reg_622;
    sc_signal< sc_logic > block_A_loader_1_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_2_V_V_blk_n;
    sc_signal< sc_logic > block_A_loader_3_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_0_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_1_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_2_V_V_blk_n;
    sc_signal< sc_logic > block_B_loader_3_V_V_blk_n;
    sc_signal< sc_logic > ii_c_blk_n;
    sc_signal< sc_logic > jj_c_blk_n;
    sc_signal< sc_lv<4> > k_reg_279;
    sc_signal< sc_lv<4> > empty_fu_291_p1;
    sc_signal< sc_lv<4> > empty_reg_581;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<9> > sub_ln120_fu_328_p2;
    sc_signal< sc_lv<9> > sub_ln120_reg_586;
    sc_signal< sc_lv<8> > sub_ln120_1_fu_368_p2;
    sc_signal< sc_lv<8> > sub_ln120_1_reg_592;
    sc_signal< sc_lv<8> > sub_ln120_2_fu_400_p2;
    sc_signal< sc_lv<8> > sub_ln120_2_reg_597;
    sc_signal< sc_lv<8> > sub_ln120_3_fu_432_p2;
    sc_signal< sc_lv<8> > sub_ln120_3_reg_602;
    sc_signal< sc_lv<6> > or_ln123_fu_438_p2;
    sc_signal< sc_lv<6> > or_ln123_reg_607;
    sc_signal< sc_lv<6> > or_ln123_1_fu_444_p2;
    sc_signal< sc_lv<6> > or_ln123_1_reg_612;
    sc_signal< sc_lv<6> > or_ln123_2_fu_450_p2;
    sc_signal< sc_lv<6> > or_ln123_2_reg_617;
    sc_signal< sc_lv<1> > icmp_ln117_fu_456_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > add_ln117_fu_462_p2;
    sc_signal< sc_lv<4> > add_ln117_reg_626;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > zext_ln120_5_fu_468_p1;
    sc_signal< sc_lv<8> > zext_ln120_5_reg_631;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<24> > v66_V_load_reg_677;
    sc_signal< sc_lv<24> > v66_V_load_1_reg_682;
    sc_signal< sc_lv<24> > v67_V_load_reg_687;
    sc_signal< sc_lv<24> > v67_V_load_1_reg_692;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > ap_phi_mux_k_phi_fu_283_p4;
    sc_signal< sc_lv<64> > sext_ln120_fu_498_p1;
    sc_signal< sc_lv<64> > zext_ln120_6_fu_508_p1;
    sc_signal< sc_lv<64> > zext_ln123_fu_522_p1;
    sc_signal< sc_lv<64> > zext_ln123_1_fu_534_p1;
    sc_signal< sc_lv<64> > zext_ln120_7_fu_543_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln120_8_fu_552_p1;
    sc_signal< sc_lv<64> > zext_ln123_2_fu_564_p1;
    sc_signal< sc_lv<64> > zext_ln123_3_fu_576_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<8> > tmp_33_i_fu_304_p3;
    sc_signal< sc_lv<6> > tmp_34_i_fu_316_p3;
    sc_signal< sc_lv<9> > sub_ln120_fu_328_p0;
    sc_signal< sc_lv<9> > sub_ln120_fu_328_p1;
    sc_signal< sc_lv<4> > tmp_i_fu_296_p3;
    sc_signal< sc_lv<4> > or_ln120_fu_342_p2;
    sc_signal< sc_lv<6> > tmp_37_i_fu_356_p3;
    sc_signal< sc_lv<8> > sub_ln120_1_fu_368_p0;
    sc_signal< sc_lv<8> > sub_ln120_1_fu_368_p1;
    sc_signal< sc_lv<4> > or_ln120_1_fu_374_p2;
    sc_signal< sc_lv<6> > tmp_39_i_fu_388_p3;
    sc_signal< sc_lv<8> > sub_ln120_2_fu_400_p0;
    sc_signal< sc_lv<8> > sub_ln120_2_fu_400_p1;
    sc_signal< sc_lv<4> > or_ln120_2_fu_406_p2;
    sc_signal< sc_lv<6> > tmp_41_i_fu_420_p3;
    sc_signal< sc_lv<8> > sub_ln120_3_fu_432_p0;
    sc_signal< sc_lv<8> > sub_ln120_3_fu_432_p1;
    sc_signal< sc_lv<6> > tmp_35_i_fu_334_p3;
    sc_signal< sc_lv<4> > trunc_ln120_fu_472_p1;
    sc_signal< sc_lv<5> > tmp_fu_481_p4;
    sc_signal< sc_lv<4> > or_ln120_3_fu_475_p2;
    sc_signal< sc_lv<9> > tmp_9_fu_490_p3;
    sc_signal< sc_lv<8> > add_ln120_fu_503_p1;
    sc_signal< sc_lv<8> > add_ln120_fu_503_p2;
    sc_signal< sc_lv<10> > tmp_45_i_fu_513_p4;
    sc_signal< sc_lv<10> > tmp_46_i_fu_527_p3;
    sc_signal< sc_lv<8> > add_ln120_1_fu_539_p2;
    sc_signal< sc_lv<8> > add_ln120_2_fu_548_p2;
    sc_signal< sc_lv<10> > tmp_47_i_fu_557_p3;
    sc_signal< sc_lv<10> > tmp_48_i_fu_569_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<6> ap_const_lv6_3;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln120_fu_503_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_k_phi_fu_283_p4();
    void thread_ap_ready();
    void thread_block_A_loader_0_V_V_blk_n();
    void thread_block_A_loader_0_V_V_din();
    void thread_block_A_loader_0_V_V_write();
    void thread_block_A_loader_1_V_V_blk_n();
    void thread_block_A_loader_1_V_V_din();
    void thread_block_A_loader_1_V_V_write();
    void thread_block_A_loader_2_V_V_blk_n();
    void thread_block_A_loader_2_V_V_din();
    void thread_block_A_loader_2_V_V_write();
    void thread_block_A_loader_3_V_V_blk_n();
    void thread_block_A_loader_3_V_V_din();
    void thread_block_A_loader_3_V_V_write();
    void thread_block_B_loader_0_V_V_blk_n();
    void thread_block_B_loader_0_V_V_din();
    void thread_block_B_loader_0_V_V_write();
    void thread_block_B_loader_1_V_V_blk_n();
    void thread_block_B_loader_1_V_V_din();
    void thread_block_B_loader_1_V_V_write();
    void thread_block_B_loader_2_V_V_blk_n();
    void thread_block_B_loader_2_V_V_din();
    void thread_block_B_loader_2_V_V_write();
    void thread_block_B_loader_3_V_V_blk_n();
    void thread_block_B_loader_3_V_V_din();
    void thread_block_B_loader_3_V_V_write();
    void thread_empty_fu_291_p1();
    void thread_icmp_ln117_fu_456_p2();
    void thread_ii_c_blk_n();
    void thread_ii_c_din();
    void thread_ii_c_write();
    void thread_internal_ap_ready();
    void thread_jj_c_blk_n();
    void thread_jj_c_din();
    void thread_jj_c_write();
    void thread_or_ln120_1_fu_374_p2();
    void thread_or_ln120_2_fu_406_p2();
    void thread_or_ln120_3_fu_475_p2();
    void thread_or_ln120_fu_342_p2();
    void thread_or_ln123_1_fu_444_p2();
    void thread_or_ln123_2_fu_450_p2();
    void thread_or_ln123_fu_438_p2();
    void thread_real_start();
    void thread_sext_ln120_fu_498_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln120_1_fu_368_p0();
    void thread_sub_ln120_1_fu_368_p1();
    void thread_sub_ln120_2_fu_400_p0();
    void thread_sub_ln120_2_fu_400_p1();
    void thread_sub_ln120_3_fu_432_p0();
    void thread_sub_ln120_3_fu_432_p1();
    void thread_sub_ln120_fu_328_p0();
    void thread_sub_ln120_fu_328_p1();
    void thread_tmp_33_i_fu_304_p3();
    void thread_tmp_34_i_fu_316_p3();
    void thread_tmp_35_i_fu_334_p3();
    void thread_tmp_37_i_fu_356_p3();
    void thread_tmp_39_i_fu_388_p3();
    void thread_tmp_41_i_fu_420_p3();
    void thread_tmp_45_i_fu_513_p4();
    void thread_tmp_46_i_fu_527_p3();
    void thread_tmp_47_i_fu_557_p3();
    void thread_tmp_48_i_fu_569_p3();
    void thread_tmp_9_fu_490_p3();
    void thread_tmp_fu_481_p4();
    void thread_tmp_i_fu_296_p3();
    void thread_trunc_ln120_fu_472_p1();
    void thread_v66_V_address0();
    void thread_v66_V_address1();
    void thread_v66_V_ce0();
    void thread_v66_V_ce1();
    void thread_v67_V_address0();
    void thread_v67_V_address1();
    void thread_v67_V_ce0();
    void thread_v67_V_ce1();
    void thread_zext_ln120_5_fu_468_p1();
    void thread_zext_ln120_6_fu_508_p1();
    void thread_zext_ln120_7_fu_543_p1();
    void thread_zext_ln120_8_fu_552_p1();
    void thread_zext_ln123_1_fu_534_p1();
    void thread_zext_ln123_2_fu_564_p1();
    void thread_zext_ln123_3_fu_576_p1();
    void thread_zext_ln123_fu_522_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
