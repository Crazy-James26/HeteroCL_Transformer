// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_ST_fsm_state1 = "1";
const sc_lv<3> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_ST_fsm_state4 = "100";
const sc_lv<32> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_boolean_1 = true;
const sc_lv<32> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv32_1 = "1";
const bool Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_boolean_0 = false;
const sc_lv<1> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv1_0 = "0";
const sc_lv<1> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv1_1 = "1";
const sc_lv<3> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv3_0 = "000";
const sc_lv<3> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv3_4 = "100";
const sc_lv<3> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv3_1 = "1";
const sc_lv<32> Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::ap_const_lv32_2 = "10";

Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Bert_layer_add_3ns_3ns_3_1_1_U2415 = new Bert_layer_Bert_layer_add_3ns_3ns_3_1_1<1,1,3,3,3>("Bert_layer_add_3ns_3ns_3_1_1_U2415");
    Bert_layer_add_3ns_3ns_3_1_1_U2415->din0(n_reg_204);
    Bert_layer_add_3ns_3ns_3_1_1_U2415->din1(ap_var_for_const0);
    Bert_layer_add_3ns_3ns_3_1_1_U2415->dout(add_ln162_fu_221_p2);
    Bert_layer_mux_42_24_1_1_U2416 = new Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>("Bert_layer_mux_42_24_1_1_U2416");
    Bert_layer_mux_42_24_1_1_U2416->din0(C_0_0_V_read_reg_271);
    Bert_layer_mux_42_24_1_1_U2416->din1(C_0_1_V_read_reg_276);
    Bert_layer_mux_42_24_1_1_U2416->din2(C_0_2_V_read_reg_281);
    Bert_layer_mux_42_24_1_1_U2416->din3(C_0_3_V_read_reg_286);
    Bert_layer_mux_42_24_1_1_U2416->din4(trunc_ln108_fu_227_p1);
    Bert_layer_mux_42_24_1_1_U2416->dout(tmp_fu_231_p6);
    Bert_layer_mux_42_24_1_1_U2417 = new Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>("Bert_layer_mux_42_24_1_1_U2417");
    Bert_layer_mux_42_24_1_1_U2417->din0(C_1_0_V_read_reg_291);
    Bert_layer_mux_42_24_1_1_U2417->din1(C_1_1_V_read_reg_296);
    Bert_layer_mux_42_24_1_1_U2417->din2(C_1_2_V_read_reg_301);
    Bert_layer_mux_42_24_1_1_U2417->din3(C_1_3_V_read_reg_306);
    Bert_layer_mux_42_24_1_1_U2417->din4(trunc_ln108_fu_227_p1);
    Bert_layer_mux_42_24_1_1_U2417->dout(tmp_s_fu_241_p6);
    Bert_layer_mux_42_24_1_1_U2418 = new Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>("Bert_layer_mux_42_24_1_1_U2418");
    Bert_layer_mux_42_24_1_1_U2418->din0(C_2_0_V_read_reg_311);
    Bert_layer_mux_42_24_1_1_U2418->din1(C_2_1_V_read_reg_316);
    Bert_layer_mux_42_24_1_1_U2418->din2(C_2_2_V_read_reg_321);
    Bert_layer_mux_42_24_1_1_U2418->din3(C_2_3_V_read_reg_326);
    Bert_layer_mux_42_24_1_1_U2418->din4(trunc_ln108_fu_227_p1);
    Bert_layer_mux_42_24_1_1_U2418->dout(tmp_11_fu_251_p6);
    Bert_layer_mux_42_24_1_1_U2419 = new Bert_layer_Bert_layer_mux_42_24_1_1<1,1,24,24,24,24,2,24>("Bert_layer_mux_42_24_1_1_U2419");
    Bert_layer_mux_42_24_1_1_U2419->din0(C_3_0_V_read_reg_331);
    Bert_layer_mux_42_24_1_1_U2419->din1(C_3_1_V_read_reg_336);
    Bert_layer_mux_42_24_1_1_U2419->din2(C_3_2_V_read_reg_341);
    Bert_layer_mux_42_24_1_1_U2419->din3(C_3_3_V_read_reg_346);
    Bert_layer_mux_42_24_1_1_U2419->din4(trunc_ln108_fu_227_p1);
    Bert_layer_mux_42_24_1_1_U2419->dout(tmp_12_fu_261_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_0_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );

    SC_METHOD(thread_C_0_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_0_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_1_V_empty_n );

    SC_METHOD(thread_C_0_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_0_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_2_V_empty_n );

    SC_METHOD(thread_C_0_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_0_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_3_V_empty_n );

    SC_METHOD(thread_C_0_3_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_1_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_1_0_V_empty_n );

    SC_METHOD(thread_C_1_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_1_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_1_1_V_empty_n );

    SC_METHOD(thread_C_1_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_1_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_1_2_V_empty_n );

    SC_METHOD(thread_C_1_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_1_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_1_3_V_empty_n );

    SC_METHOD(thread_C_1_3_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_2_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_2_0_V_empty_n );

    SC_METHOD(thread_C_2_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_2_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_2_1_V_empty_n );

    SC_METHOD(thread_C_2_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_2_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_2_2_V_empty_n );

    SC_METHOD(thread_C_2_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_2_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_2_3_V_empty_n );

    SC_METHOD(thread_C_2_3_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_3_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_3_0_V_empty_n );

    SC_METHOD(thread_C_3_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_3_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_3_1_V_empty_n );

    SC_METHOD(thread_C_3_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_3_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_3_2_V_empty_n );

    SC_METHOD(thread_C_3_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_3_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_3_3_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_C_drainer_1_V_V_blk_n);
    sensitive << ( C_drainer_1_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_C_drainer_1_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( tmp_s_reg_365 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_C_drainer_1_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_C_drainer_2_V_V_blk_n);
    sensitive << ( C_drainer_2_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_C_drainer_2_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( tmp_11_reg_370 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_C_drainer_2_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_C_drainer_3_V_V_blk_n);
    sensitive << ( C_drainer_3_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_C_drainer_3_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( tmp_12_reg_375 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_C_drainer_3_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_C_drainer_V_V_blk_n);
    sensitive << ( C_drainer_V_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_C_drainer_V_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( tmp_reg_360 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_C_drainer_V_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( C_drainer_V_V_full_n );
    sensitive << ( C_drainer_1_V_V_full_n );
    sensitive << ( C_drainer_2_V_V_full_n );
    sensitive << ( C_drainer_3_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( C_drainer_V_V_full_n );
    sensitive << ( C_drainer_1_V_V_full_n );
    sensitive << ( C_drainer_2_V_V_full_n );
    sensitive << ( C_drainer_3_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( C_drainer_V_V_full_n );
    sensitive << ( C_drainer_1_V_V_full_n );
    sensitive << ( C_drainer_2_V_V_full_n );
    sensitive << ( C_drainer_3_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( C_drainer_V_V_full_n );
    sensitive << ( C_drainer_1_V_V_full_n );
    sensitive << ( C_drainer_2_V_V_full_n );
    sensitive << ( C_drainer_3_V_V_full_n );
    sensitive << ( icmp_ln162_reg_351 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln162_fu_215_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln162_fu_215_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( n_reg_204 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_trunc_ln108_fu_227_p1);
    sensitive << ( n_reg_204 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_0_0_V_empty_n );
    sensitive << ( C_0_1_V_empty_n );
    sensitive << ( C_0_2_V_empty_n );
    sensitive << ( C_0_3_V_empty_n );
    sensitive << ( C_1_0_V_empty_n );
    sensitive << ( C_1_1_V_empty_n );
    sensitive << ( C_1_2_V_empty_n );
    sensitive << ( C_1_3_V_empty_n );
    sensitive << ( C_2_0_V_empty_n );
    sensitive << ( C_2_1_V_empty_n );
    sensitive << ( C_2_2_V_empty_n );
    sensitive << ( C_2_3_V_empty_n );
    sensitive << ( C_3_0_V_empty_n );
    sensitive << ( C_3_1_V_empty_n );
    sensitive << ( C_3_2_V_empty_n );
    sensitive << ( C_3_3_V_empty_n );
    sensitive << ( icmp_ln162_fu_215_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, C_0_0_V_dout, "(port)C_0_0_V_dout");
    sc_trace(mVcdFile, C_0_0_V_empty_n, "(port)C_0_0_V_empty_n");
    sc_trace(mVcdFile, C_0_0_V_read, "(port)C_0_0_V_read");
    sc_trace(mVcdFile, C_0_1_V_dout, "(port)C_0_1_V_dout");
    sc_trace(mVcdFile, C_0_1_V_empty_n, "(port)C_0_1_V_empty_n");
    sc_trace(mVcdFile, C_0_1_V_read, "(port)C_0_1_V_read");
    sc_trace(mVcdFile, C_0_2_V_dout, "(port)C_0_2_V_dout");
    sc_trace(mVcdFile, C_0_2_V_empty_n, "(port)C_0_2_V_empty_n");
    sc_trace(mVcdFile, C_0_2_V_read, "(port)C_0_2_V_read");
    sc_trace(mVcdFile, C_0_3_V_dout, "(port)C_0_3_V_dout");
    sc_trace(mVcdFile, C_0_3_V_empty_n, "(port)C_0_3_V_empty_n");
    sc_trace(mVcdFile, C_0_3_V_read, "(port)C_0_3_V_read");
    sc_trace(mVcdFile, C_drainer_V_V_din, "(port)C_drainer_V_V_din");
    sc_trace(mVcdFile, C_drainer_V_V_full_n, "(port)C_drainer_V_V_full_n");
    sc_trace(mVcdFile, C_drainer_V_V_write, "(port)C_drainer_V_V_write");
    sc_trace(mVcdFile, C_1_0_V_dout, "(port)C_1_0_V_dout");
    sc_trace(mVcdFile, C_1_0_V_empty_n, "(port)C_1_0_V_empty_n");
    sc_trace(mVcdFile, C_1_0_V_read, "(port)C_1_0_V_read");
    sc_trace(mVcdFile, C_1_1_V_dout, "(port)C_1_1_V_dout");
    sc_trace(mVcdFile, C_1_1_V_empty_n, "(port)C_1_1_V_empty_n");
    sc_trace(mVcdFile, C_1_1_V_read, "(port)C_1_1_V_read");
    sc_trace(mVcdFile, C_1_2_V_dout, "(port)C_1_2_V_dout");
    sc_trace(mVcdFile, C_1_2_V_empty_n, "(port)C_1_2_V_empty_n");
    sc_trace(mVcdFile, C_1_2_V_read, "(port)C_1_2_V_read");
    sc_trace(mVcdFile, C_1_3_V_dout, "(port)C_1_3_V_dout");
    sc_trace(mVcdFile, C_1_3_V_empty_n, "(port)C_1_3_V_empty_n");
    sc_trace(mVcdFile, C_1_3_V_read, "(port)C_1_3_V_read");
    sc_trace(mVcdFile, C_drainer_1_V_V_din, "(port)C_drainer_1_V_V_din");
    sc_trace(mVcdFile, C_drainer_1_V_V_full_n, "(port)C_drainer_1_V_V_full_n");
    sc_trace(mVcdFile, C_drainer_1_V_V_write, "(port)C_drainer_1_V_V_write");
    sc_trace(mVcdFile, C_2_0_V_dout, "(port)C_2_0_V_dout");
    sc_trace(mVcdFile, C_2_0_V_empty_n, "(port)C_2_0_V_empty_n");
    sc_trace(mVcdFile, C_2_0_V_read, "(port)C_2_0_V_read");
    sc_trace(mVcdFile, C_2_1_V_dout, "(port)C_2_1_V_dout");
    sc_trace(mVcdFile, C_2_1_V_empty_n, "(port)C_2_1_V_empty_n");
    sc_trace(mVcdFile, C_2_1_V_read, "(port)C_2_1_V_read");
    sc_trace(mVcdFile, C_2_2_V_dout, "(port)C_2_2_V_dout");
    sc_trace(mVcdFile, C_2_2_V_empty_n, "(port)C_2_2_V_empty_n");
    sc_trace(mVcdFile, C_2_2_V_read, "(port)C_2_2_V_read");
    sc_trace(mVcdFile, C_2_3_V_dout, "(port)C_2_3_V_dout");
    sc_trace(mVcdFile, C_2_3_V_empty_n, "(port)C_2_3_V_empty_n");
    sc_trace(mVcdFile, C_2_3_V_read, "(port)C_2_3_V_read");
    sc_trace(mVcdFile, C_drainer_2_V_V_din, "(port)C_drainer_2_V_V_din");
    sc_trace(mVcdFile, C_drainer_2_V_V_full_n, "(port)C_drainer_2_V_V_full_n");
    sc_trace(mVcdFile, C_drainer_2_V_V_write, "(port)C_drainer_2_V_V_write");
    sc_trace(mVcdFile, C_3_0_V_dout, "(port)C_3_0_V_dout");
    sc_trace(mVcdFile, C_3_0_V_empty_n, "(port)C_3_0_V_empty_n");
    sc_trace(mVcdFile, C_3_0_V_read, "(port)C_3_0_V_read");
    sc_trace(mVcdFile, C_3_1_V_dout, "(port)C_3_1_V_dout");
    sc_trace(mVcdFile, C_3_1_V_empty_n, "(port)C_3_1_V_empty_n");
    sc_trace(mVcdFile, C_3_1_V_read, "(port)C_3_1_V_read");
    sc_trace(mVcdFile, C_3_2_V_dout, "(port)C_3_2_V_dout");
    sc_trace(mVcdFile, C_3_2_V_empty_n, "(port)C_3_2_V_empty_n");
    sc_trace(mVcdFile, C_3_2_V_read, "(port)C_3_2_V_read");
    sc_trace(mVcdFile, C_3_3_V_dout, "(port)C_3_3_V_dout");
    sc_trace(mVcdFile, C_3_3_V_empty_n, "(port)C_3_3_V_empty_n");
    sc_trace(mVcdFile, C_3_3_V_read, "(port)C_3_3_V_read");
    sc_trace(mVcdFile, C_drainer_3_V_V_din, "(port)C_drainer_3_V_V_din");
    sc_trace(mVcdFile, C_drainer_3_V_V_full_n, "(port)C_drainer_3_V_V_full_n");
    sc_trace(mVcdFile, C_drainer_3_V_V_write, "(port)C_drainer_3_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, C_0_0_V_blk_n, "C_0_0_V_blk_n");
    sc_trace(mVcdFile, C_0_1_V_blk_n, "C_0_1_V_blk_n");
    sc_trace(mVcdFile, C_0_2_V_blk_n, "C_0_2_V_blk_n");
    sc_trace(mVcdFile, C_0_3_V_blk_n, "C_0_3_V_blk_n");
    sc_trace(mVcdFile, C_drainer_V_V_blk_n, "C_drainer_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln162_reg_351, "icmp_ln162_reg_351");
    sc_trace(mVcdFile, C_1_0_V_blk_n, "C_1_0_V_blk_n");
    sc_trace(mVcdFile, C_1_1_V_blk_n, "C_1_1_V_blk_n");
    sc_trace(mVcdFile, C_1_2_V_blk_n, "C_1_2_V_blk_n");
    sc_trace(mVcdFile, C_1_3_V_blk_n, "C_1_3_V_blk_n");
    sc_trace(mVcdFile, C_drainer_1_V_V_blk_n, "C_drainer_1_V_V_blk_n");
    sc_trace(mVcdFile, C_2_0_V_blk_n, "C_2_0_V_blk_n");
    sc_trace(mVcdFile, C_2_1_V_blk_n, "C_2_1_V_blk_n");
    sc_trace(mVcdFile, C_2_2_V_blk_n, "C_2_2_V_blk_n");
    sc_trace(mVcdFile, C_2_3_V_blk_n, "C_2_3_V_blk_n");
    sc_trace(mVcdFile, C_drainer_2_V_V_blk_n, "C_drainer_2_V_V_blk_n");
    sc_trace(mVcdFile, C_3_0_V_blk_n, "C_3_0_V_blk_n");
    sc_trace(mVcdFile, C_3_1_V_blk_n, "C_3_1_V_blk_n");
    sc_trace(mVcdFile, C_3_2_V_blk_n, "C_3_2_V_blk_n");
    sc_trace(mVcdFile, C_3_3_V_blk_n, "C_3_3_V_blk_n");
    sc_trace(mVcdFile, C_drainer_3_V_V_blk_n, "C_drainer_3_V_V_blk_n");
    sc_trace(mVcdFile, n_reg_204, "n_reg_204");
    sc_trace(mVcdFile, C_0_0_V_read_reg_271, "C_0_0_V_read_reg_271");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, C_0_1_V_read_reg_276, "C_0_1_V_read_reg_276");
    sc_trace(mVcdFile, C_0_2_V_read_reg_281, "C_0_2_V_read_reg_281");
    sc_trace(mVcdFile, C_0_3_V_read_reg_286, "C_0_3_V_read_reg_286");
    sc_trace(mVcdFile, C_1_0_V_read_reg_291, "C_1_0_V_read_reg_291");
    sc_trace(mVcdFile, C_1_1_V_read_reg_296, "C_1_1_V_read_reg_296");
    sc_trace(mVcdFile, C_1_2_V_read_reg_301, "C_1_2_V_read_reg_301");
    sc_trace(mVcdFile, C_1_3_V_read_reg_306, "C_1_3_V_read_reg_306");
    sc_trace(mVcdFile, C_2_0_V_read_reg_311, "C_2_0_V_read_reg_311");
    sc_trace(mVcdFile, C_2_1_V_read_reg_316, "C_2_1_V_read_reg_316");
    sc_trace(mVcdFile, C_2_2_V_read_reg_321, "C_2_2_V_read_reg_321");
    sc_trace(mVcdFile, C_2_3_V_read_reg_326, "C_2_3_V_read_reg_326");
    sc_trace(mVcdFile, C_3_0_V_read_reg_331, "C_3_0_V_read_reg_331");
    sc_trace(mVcdFile, C_3_1_V_read_reg_336, "C_3_1_V_read_reg_336");
    sc_trace(mVcdFile, C_3_2_V_read_reg_341, "C_3_2_V_read_reg_341");
    sc_trace(mVcdFile, C_3_3_V_read_reg_346, "C_3_3_V_read_reg_346");
    sc_trace(mVcdFile, icmp_ln162_fu_215_p2, "icmp_ln162_fu_215_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln162_fu_221_p2, "add_ln162_fu_221_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_fu_231_p6, "tmp_fu_231_p6");
    sc_trace(mVcdFile, tmp_reg_360, "tmp_reg_360");
    sc_trace(mVcdFile, tmp_s_fu_241_p6, "tmp_s_fu_241_p6");
    sc_trace(mVcdFile, tmp_s_reg_365, "tmp_s_reg_365");
    sc_trace(mVcdFile, tmp_11_fu_251_p6, "tmp_11_fu_251_p6");
    sc_trace(mVcdFile, tmp_11_reg_370, "tmp_11_reg_370");
    sc_trace(mVcdFile, tmp_12_fu_261_p6, "tmp_12_fu_261_p6");
    sc_trace(mVcdFile, tmp_12_reg_375, "tmp_12_reg_375");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln108_fu_227_p1, "trunc_ln108_fu_227_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::~Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete Bert_layer_add_3ns_3ns_3_1_1_U2415;
    delete Bert_layer_mux_42_24_1_1_U2416;
    delete Bert_layer_mux_42_24_1_1_U2417;
    delete Bert_layer_mux_42_24_1_1_U2418;
    delete Bert_layer_mux_42_24_1_1_U2419;
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv3_1;
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        n_reg_204 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_215_p2.read()))) {
        n_reg_204 = add_ln162_fu_221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_0_0_V_read_reg_271 = C_0_0_V_dout.read();
        C_0_1_V_read_reg_276 = C_0_1_V_dout.read();
        C_0_2_V_read_reg_281 = C_0_2_V_dout.read();
        C_0_3_V_read_reg_286 = C_0_3_V_dout.read();
        C_1_0_V_read_reg_291 = C_1_0_V_dout.read();
        C_1_1_V_read_reg_296 = C_1_1_V_dout.read();
        C_1_2_V_read_reg_301 = C_1_2_V_dout.read();
        C_1_3_V_read_reg_306 = C_1_3_V_dout.read();
        C_2_0_V_read_reg_311 = C_2_0_V_dout.read();
        C_2_1_V_read_reg_316 = C_2_1_V_dout.read();
        C_2_2_V_read_reg_321 = C_2_2_V_dout.read();
        C_2_3_V_read_reg_326 = C_2_3_V_dout.read();
        C_3_0_V_read_reg_331 = C_3_0_V_dout.read();
        C_3_1_V_read_reg_336 = C_3_1_V_dout.read();
        C_3_2_V_read_reg_341 = C_3_2_V_dout.read();
        C_3_3_V_read_reg_346 = C_3_3_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln162_reg_351 = icmp_ln162_fu_215_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln162_fu_215_p2.read()))) {
        tmp_11_reg_370 = tmp_11_fu_251_p6.read();
        tmp_12_reg_375 = tmp_12_fu_261_p6.read();
        tmp_reg_360 = tmp_fu_231_p6.read();
        tmp_s_reg_365 = tmp_s_fu_241_p6.read();
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_0_0_V_blk_n = C_0_0_V_empty_n.read();
    } else {
        C_0_0_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_0_0_V_read = ap_const_logic_1;
    } else {
        C_0_0_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_0_1_V_blk_n = C_0_1_V_empty_n.read();
    } else {
        C_0_1_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_0_1_V_read = ap_const_logic_1;
    } else {
        C_0_1_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_0_2_V_blk_n = C_0_2_V_empty_n.read();
    } else {
        C_0_2_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_0_2_V_read = ap_const_logic_1;
    } else {
        C_0_2_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_0_3_V_blk_n = C_0_3_V_empty_n.read();
    } else {
        C_0_3_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_0_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_0_3_V_read = ap_const_logic_1;
    } else {
        C_0_3_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_1_0_V_blk_n = C_1_0_V_empty_n.read();
    } else {
        C_1_0_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_1_0_V_read = ap_const_logic_1;
    } else {
        C_1_0_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_1_1_V_blk_n = C_1_1_V_empty_n.read();
    } else {
        C_1_1_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_1_1_V_read = ap_const_logic_1;
    } else {
        C_1_1_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_1_2_V_blk_n = C_1_2_V_empty_n.read();
    } else {
        C_1_2_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_1_2_V_read = ap_const_logic_1;
    } else {
        C_1_2_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_1_3_V_blk_n = C_1_3_V_empty_n.read();
    } else {
        C_1_3_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_1_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_1_3_V_read = ap_const_logic_1;
    } else {
        C_1_3_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_2_0_V_blk_n = C_2_0_V_empty_n.read();
    } else {
        C_2_0_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_2_0_V_read = ap_const_logic_1;
    } else {
        C_2_0_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_2_1_V_blk_n = C_2_1_V_empty_n.read();
    } else {
        C_2_1_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_2_1_V_read = ap_const_logic_1;
    } else {
        C_2_1_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_2_2_V_blk_n = C_2_2_V_empty_n.read();
    } else {
        C_2_2_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_2_2_V_read = ap_const_logic_1;
    } else {
        C_2_2_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_2_3_V_blk_n = C_2_3_V_empty_n.read();
    } else {
        C_2_3_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_2_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_2_3_V_read = ap_const_logic_1;
    } else {
        C_2_3_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_3_0_V_blk_n = C_3_0_V_empty_n.read();
    } else {
        C_3_0_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_3_0_V_read = ap_const_logic_1;
    } else {
        C_3_0_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_3_1_V_blk_n = C_3_1_V_empty_n.read();
    } else {
        C_3_1_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_3_1_V_read = ap_const_logic_1;
    } else {
        C_3_1_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_3_2_V_blk_n = C_3_2_V_empty_n.read();
    } else {
        C_3_2_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_3_2_V_read = ap_const_logic_1;
    } else {
        C_3_2_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_3_3_V_blk_n = C_3_3_V_empty_n.read();
    } else {
        C_3_3_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_3_3_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
        C_3_3_V_read = ap_const_logic_1;
    } else {
        C_3_3_V_read = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0))) {
        C_drainer_1_V_V_blk_n = C_drainer_1_V_V_full_n.read();
    } else {
        C_drainer_1_V_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_1_V_V_din() {
    C_drainer_1_V_V_din = tmp_s_reg_365.read();
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_1_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        C_drainer_1_V_V_write = ap_const_logic_1;
    } else {
        C_drainer_1_V_V_write = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_2_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0))) {
        C_drainer_2_V_V_blk_n = C_drainer_2_V_V_full_n.read();
    } else {
        C_drainer_2_V_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_2_V_V_din() {
    C_drainer_2_V_V_din = tmp_11_reg_370.read();
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_2_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        C_drainer_2_V_V_write = ap_const_logic_1;
    } else {
        C_drainer_2_V_V_write = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_3_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0))) {
        C_drainer_3_V_V_blk_n = C_drainer_3_V_V_full_n.read();
    } else {
        C_drainer_3_V_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_3_V_V_din() {
    C_drainer_3_V_V_din = tmp_12_reg_375.read();
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_3_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        C_drainer_3_V_V_write = ap_const_logic_1;
    } else {
        C_drainer_3_V_V_write = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0))) {
        C_drainer_V_V_blk_n = C_drainer_V_V_full_n.read();
    } else {
        C_drainer_V_V_blk_n = ap_const_logic_1;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_V_V_din() {
    C_drainer_V_V_din = tmp_reg_360.read();
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_C_drainer_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        C_drainer_V_V_write = ap_const_logic_1;
    } else {
        C_drainer_V_V_write = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_1_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_2_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_3_V_V_full_n.read()))));
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_1_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_2_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_3_V_V_full_n.read()))));
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_1_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_2_V_V_full_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_3_V_V_full_n.read()))));
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read()));
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_V_V_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_1_V_V_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_2_V_V_full_n.read())) || (esl_seteq<1,1,1>(icmp_ln162_reg_351.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, C_drainer_3_V_V_full_n.read())));
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln162_fu_215_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_icmp_ln162_fu_215_p2() {
    icmp_ln162_fu_215_p2 = (!n_reg_204.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_204.read() == ap_const_lv3_4);
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_trunc_ln108_fu_227_p1() {
    trunc_ln108_fu_227_p1 = n_reg_204.read().range(2-1, 0);
}

void Bert_layer_systolic_array_k_64_Loop_data_drain_C_proc308::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_0_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_1_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_2_3_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_0_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_1_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_2_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, C_3_3_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln162_fu_215_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln162_fu_215_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

