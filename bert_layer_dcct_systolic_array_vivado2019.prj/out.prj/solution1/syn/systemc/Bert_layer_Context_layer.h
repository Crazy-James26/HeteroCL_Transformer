// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Bert_layer_Context_layer_HH_
#define _Bert_layer_Context_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_dataflow_parent_loop_proc.h"
#include "Bert_layer_Bert_layer_add_10ns_10ns_10_1_1.h"
#include "Bert_layer_Bert_layer_add_4ns_4ns_4_1_1.h"
#include "Bert_layer_Bert_layer_add_7ns_7ns_7_1_1.h"
#include "Bert_layer_Bert_layer_add_2ns_2ns_2_1_1.h"

namespace ap_rtl {

struct Bert_layer_Context_layer : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > v66_V_address0;
    sc_out< sc_logic > v66_V_ce0;
    sc_in< sc_lv<24> > v66_V_q0;
    sc_out< sc_lv<8> > v66_V_address1;
    sc_out< sc_logic > v66_V_ce1;
    sc_in< sc_lv<24> > v66_V_q1;
    sc_out< sc_lv<10> > v67_V_address0;
    sc_out< sc_logic > v67_V_ce0;
    sc_in< sc_lv<24> > v67_V_q0;
    sc_out< sc_lv<10> > v67_V_address1;
    sc_out< sc_logic > v67_V_ce1;
    sc_in< sc_lv<24> > v67_V_q1;
    sc_out< sc_lv<10> > v68_V_address0;
    sc_out< sc_logic > v68_V_ce0;
    sc_out< sc_logic > v68_V_we0;
    sc_out< sc_lv<24> > v68_V_d0;
    sc_in< sc_lv<24> > v68_V_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<24> > ap_var_for_const0;
    sc_signal< sc_lv<10> > ap_var_for_const2;
    sc_signal< sc_lv<4> > ap_var_for_const3;
    sc_signal< sc_lv<7> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;


    // Module declarations
    Bert_layer_Context_layer(sc_module_name name);
    SC_HAS_PROCESS(Bert_layer_Context_layer);

    ~Bert_layer_Context_layer();

    sc_trace_file* mVcdFile;

    Bert_layer_dataflow_parent_loop_proc* grp_dataflow_parent_loop_proc_fu_127;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2923;
    Bert_layer_Bert_layer_add_4ns_4ns_4_1_1<1,1,4,4,4>* Bert_layer_add_4ns_4ns_4_1_1_U2924;
    Bert_layer_Bert_layer_add_7ns_7ns_7_1_1<1,1,7,7,7>* Bert_layer_add_7ns_7ns_7_1_1_U2925;
    Bert_layer_Bert_layer_add_10ns_10ns_10_1_1<1,1,10,10,10>* Bert_layer_add_10ns_10ns_10_1_1_U2926;
    Bert_layer_Bert_layer_add_2ns_2ns_2_1_1<1,1,2,2,2>* Bert_layer_add_2ns_2ns_2_1_1_U2927;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvar_flatten_reg_82;
    sc_signal< sc_lv<4> > v70_reg_93;
    sc_signal< sc_lv<7> > v71_reg_104;
    sc_signal< sc_lv<1> > icmp_ln119_fu_139_p2;
    sc_signal< sc_lv<1> > icmp_ln119_reg_218;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > add_ln119_1_fu_145_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > select_ln119_fu_163_p3;
    sc_signal< sc_lv<7> > select_ln119_reg_227;
    sc_signal< sc_lv<4> > select_ln119_1_fu_171_p3;
    sc_signal< sc_lv<4> > select_ln119_1_reg_232;
    sc_signal< sc_lv<7> > add_ln120_fu_179_p2;
    sc_signal< sc_lv<2> > add_ln111_fu_212_p2;
    sc_signal< sc_lv<2> > add_ln111_reg_246;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<8> > grp_dataflow_parent_loop_proc_fu_127_v66_V_address0;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v66_V_ce0;
    sc_signal< sc_lv<24> > grp_dataflow_parent_loop_proc_fu_127_v66_V_d0;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v66_V_we0;
    sc_signal< sc_lv<8> > grp_dataflow_parent_loop_proc_fu_127_v66_V_address1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v66_V_ce1;
    sc_signal< sc_lv<24> > grp_dataflow_parent_loop_proc_fu_127_v66_V_d1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v66_V_we1;
    sc_signal< sc_lv<10> > grp_dataflow_parent_loop_proc_fu_127_v67_V_address0;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v67_V_ce0;
    sc_signal< sc_lv<24> > grp_dataflow_parent_loop_proc_fu_127_v67_V_d0;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v67_V_we0;
    sc_signal< sc_lv<10> > grp_dataflow_parent_loop_proc_fu_127_v67_V_address1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v67_V_ce1;
    sc_signal< sc_lv<24> > grp_dataflow_parent_loop_proc_fu_127_v67_V_d1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v67_V_we1;
    sc_signal< sc_lv<10> > grp_dataflow_parent_loop_proc_fu_127_v68_V_address0;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v68_V_ce0;
    sc_signal< sc_lv<24> > grp_dataflow_parent_loop_proc_fu_127_v68_V_d0;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v68_V_we0;
    sc_signal< sc_lv<10> > grp_dataflow_parent_loop_proc_fu_127_v68_V_address1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v68_V_ce1;
    sc_signal< sc_lv<24> > grp_dataflow_parent_loop_proc_fu_127_v68_V_d1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_v68_V_we1;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_ap_start;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_ap_done;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_ap_ready;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_ap_idle;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_ap_continue;
    sc_signal< sc_lv<4> > ap_phi_mux_v70_phi_fu_97_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ii_reg_115;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_sync_grp_dataflow_parent_loop_proc_fu_127_ap_ready;
    sc_signal< sc_logic > ap_sync_grp_dataflow_parent_loop_proc_fu_127_ap_done;
    sc_signal< bool > ap_block_state6_on_subcall_done;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_dataflow_parent_loop_proc_fu_127_ap_start_reg;
    sc_signal< sc_lv<1> > icmp_ln111_fu_206_p2;
    sc_signal< sc_logic > ap_sync_reg_grp_dataflow_parent_loop_proc_fu_127_ap_ready;
    sc_signal< sc_logic > ap_sync_reg_grp_dataflow_parent_loop_proc_fu_127_ap_done;
    sc_signal< sc_lv<64> > zext_ln158_11_fu_201_p1;
    sc_signal< sc_lv<1> > icmp_ln120_fu_157_p2;
    sc_signal< sc_lv<4> > add_ln119_fu_151_p2;
    sc_signal< sc_lv<7> > add_ln120_fu_179_p0;
    sc_signal< sc_lv<10> > add_ln158_fu_195_p0;
    sc_signal< sc_lv<10> > add_ln158_fu_195_p1;
    sc_signal< sc_lv<10> > add_ln158_fu_195_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<5> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_clk_no_reset_();
    void thread_add_ln120_fu_179_p0();
    void thread_add_ln158_fu_195_p0();
    void thread_add_ln158_fu_195_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state6_on_subcall_done();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_v70_phi_fu_97_p4();
    void thread_ap_ready();
    void thread_ap_sync_grp_dataflow_parent_loop_proc_fu_127_ap_done();
    void thread_ap_sync_grp_dataflow_parent_loop_proc_fu_127_ap_ready();
    void thread_grp_dataflow_parent_loop_proc_fu_127_ap_continue();
    void thread_grp_dataflow_parent_loop_proc_fu_127_ap_start();
    void thread_icmp_ln111_fu_206_p2();
    void thread_icmp_ln119_fu_139_p2();
    void thread_icmp_ln120_fu_157_p2();
    void thread_select_ln119_1_fu_171_p3();
    void thread_select_ln119_fu_163_p3();
    void thread_v66_V_address0();
    void thread_v66_V_address1();
    void thread_v66_V_ce0();
    void thread_v66_V_ce1();
    void thread_v67_V_address0();
    void thread_v67_V_address1();
    void thread_v67_V_ce0();
    void thread_v67_V_ce1();
    void thread_v68_V_address0();
    void thread_v68_V_ce0();
    void thread_v68_V_d0();
    void thread_v68_V_we0();
    void thread_zext_ln158_11_fu_201_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
