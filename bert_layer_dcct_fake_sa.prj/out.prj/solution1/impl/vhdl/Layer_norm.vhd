-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Layer_norm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v137_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v137_ce0 : OUT STD_LOGIC;
    v137_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v138_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v138_ce0 : OUT STD_LOGIC;
    v138_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v139_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v139_ce0 : OUT STD_LOGIC;
    v139_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v140_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_0_V_ce0 : OUT STD_LOGIC;
    v140_0_V_we0 : OUT STD_LOGIC;
    v140_0_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_1_V_ce0 : OUT STD_LOGIC;
    v140_1_V_we0 : OUT STD_LOGIC;
    v140_1_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_2_V_ce0 : OUT STD_LOGIC;
    v140_2_V_we0 : OUT STD_LOGIC;
    v140_2_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_3_V_ce0 : OUT STD_LOGIC;
    v140_3_V_we0 : OUT STD_LOGIC;
    v140_3_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_4_V_ce0 : OUT STD_LOGIC;
    v140_4_V_we0 : OUT STD_LOGIC;
    v140_4_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_5_V_ce0 : OUT STD_LOGIC;
    v140_5_V_we0 : OUT STD_LOGIC;
    v140_5_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_6_V_ce0 : OUT STD_LOGIC;
    v140_6_V_we0 : OUT STD_LOGIC;
    v140_6_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_7_V_ce0 : OUT STD_LOGIC;
    v140_7_V_we0 : OUT STD_LOGIC;
    v140_7_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_8_V_ce0 : OUT STD_LOGIC;
    v140_8_V_we0 : OUT STD_LOGIC;
    v140_8_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_9_V_ce0 : OUT STD_LOGIC;
    v140_9_V_we0 : OUT STD_LOGIC;
    v140_9_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_10_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_10_V_ce0 : OUT STD_LOGIC;
    v140_10_V_we0 : OUT STD_LOGIC;
    v140_10_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v140_11_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v140_11_V_ce0 : OUT STD_LOGIC;
    v140_11_V_we0 : OUT STD_LOGIC;
    v140_11_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of Layer_norm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_44400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000100010000000000000000000000";
    constant ap_const_lv64_3EE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv14_2400 : STD_LOGIC_VECTOR (13 downto 0) := "10010000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_451 : STD_LOGIC_VECTOR (13 downto 0);
    signal i8_0_reg_462 : STD_LOGIC_VECTOR (3 downto 0);
    signal j6_0_reg_473 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten21_reg_484 : STD_LOGIC_VECTOR (13 downto 0);
    signal i9_0_reg_495 : STD_LOGIC_VECTOR (3 downto 0);
    signal j7_0_reg_506 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_563 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln304_reg_1102 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state38_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state39_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state40_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state41_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state42_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state43_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state44_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state45_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state46_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state47_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state48_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state49_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state50_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state51_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state52_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state53_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state54_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state55_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state56_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state57_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state58_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state59_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state60_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state61_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state62_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state63_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_state64_pp1_stage0_iter26 : BOOLEAN;
    signal ap_block_state65_pp1_stage0_iter27 : BOOLEAN;
    signal ap_block_state66_pp1_stage0_iter28 : BOOLEAN;
    signal ap_block_state67_pp1_stage0_iter29 : BOOLEAN;
    signal ap_block_state68_pp1_stage0_iter30 : BOOLEAN;
    signal ap_block_state69_pp1_stage0_iter31 : BOOLEAN;
    signal ap_block_state70_pp1_stage0_iter32 : BOOLEAN;
    signal ap_block_state71_pp1_stage0_iter33 : BOOLEAN;
    signal ap_block_state72_pp1_stage0_iter34 : BOOLEAN;
    signal ap_block_state73_pp1_stage0_iter35 : BOOLEAN;
    signal ap_block_state74_pp1_stage0_iter36 : BOOLEAN;
    signal ap_block_state75_pp1_stage0_iter37 : BOOLEAN;
    signal ap_block_state76_pp1_stage0_iter38 : BOOLEAN;
    signal ap_block_state77_pp1_stage0_iter39 : BOOLEAN;
    signal ap_block_state78_pp1_stage0_iter40 : BOOLEAN;
    signal ap_block_state79_pp1_stage0_iter41 : BOOLEAN;
    signal ap_block_state80_pp1_stage0_iter42 : BOOLEAN;
    signal ap_block_state81_pp1_stage0_iter43 : BOOLEAN;
    signal ap_block_state82_pp1_stage0_iter44 : BOOLEAN;
    signal ap_block_state83_pp1_stage0_iter45 : BOOLEAN;
    signal ap_block_state84_pp1_stage0_iter46 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal icmp_ln329_reg_1176 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_571 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state31_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_577 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state9_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal icmp_ln329_reg_1176_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_583 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln304_reg_1102_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal icmp_ln329_reg_1176_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln305_1_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln305_1_reg_1157_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter37 : STD_LOGIC := '0';
    signal icmp_ln329_reg_1176_pp1_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v142_fu_602_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln300_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal v144_fu_619_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln304_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln304_fu_636_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln304_reg_1106 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln307_fu_654_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln307_reg_1111 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln307_1_fu_662_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln307_1_reg_1117 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln307_fu_712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln307_reg_1130 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln307_reg_1130_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln307_reg_1130_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln307_reg_1130_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln307_reg_1130_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mean_addr_1_reg_1136 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_addr_1_reg_1136_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_addr_1_reg_1136_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_addr_1_reg_1136_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_1141 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_1141_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_1141_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_1141_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal j6_fu_716_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j6_reg_1146 : STD_LOGIC_VECTOR (9 downto 0);
    signal mean2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln305_1_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln305_1_reg_1157_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln305_1_reg_1157_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln305_1_reg_1157_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v157_reg_1161 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state32_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal v158_reg_1166 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal v161_reg_1171 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln329_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal icmp_ln329_reg_1176_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_1176_pp1_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln329_fu_732_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln333_fu_750_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_reg_1185_pp1_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln333_2_fu_758_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter35_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter36_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter37_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter38_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter39_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter40_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter41_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter42_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter43_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter44_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln333_2_reg_1191_pp1_iter45_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln333_fu_766_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln333_reg_1198_pp1_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal j7_fu_771_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal grp_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal v171_mid2_v_v_reg_1218 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_558_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v171_mid2_v_reg_1223 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v171_mid2_reg_1228 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln332_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter36_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter37_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter38_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter39_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter40_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter41_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter42_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter43_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter44_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln332_reg_1243_pp1_iter45_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal v165_reg_1265 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_553_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v172_reg_1270 : STD_LOGIC_VECTOR (31 downto 0);
    signal v174_reg_1280 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v175_reg_1285 : STD_LOGIC_VECTOR (31 downto 0);
    signal v175_reg_1285_pp1_iter43_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal v175_reg_1285_pp1_iter44_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal man_V_4_fu_875_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_reg_1291 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_1296 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_913_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_1308 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_927_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln583_reg_1321 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln583_reg_1321_pp1_iter45_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln581_fu_931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_reg_1327 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_fu_1034_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln585_1_reg_1332 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln603_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_reg_1337 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state38 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter46 : STD_LOGIC := '0';
    signal mean_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_ce0 : STD_LOGIC;
    signal mean_we0 : STD_LOGIC;
    signal mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mean2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_ce0 : STD_LOGIC;
    signal mean2_we0 : STD_LOGIC;
    signal mean2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal var_ce0 : STD_LOGIC;
    signal var_we0 : STD_LOGIC;
    signal v142_0_reg_429 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln296_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v144_0_reg_440 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_455_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i8_0_phi_fu_466_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j6_0_phi_fu_477_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_i9_0_phi_fu_499_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln297_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln301_fu_625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln307_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln333_4_fu_814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal v176_V_fu_1067_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_517_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_517_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_530_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_536_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln305_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i8_fu_642_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_670_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_20_fu_681_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln307_1_fu_677_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln307_2_fu_688_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln307_fu_692_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln307_3_fu_698_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln307_fu_701_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln330_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i9_fu_738_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_51_fu_777_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_52_fu_788_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln333_1_fu_784_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln333_2_fu_795_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln333_3_fu_805_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln333_fu_799_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln333_fu_808_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_839_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_853_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_5_fu_857_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_95_fu_865_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_831_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_3_fu_869_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_827_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_849_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_889_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_fu_901_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_907_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln586_fu_944_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_948_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_960_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_968_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln582_fu_986_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln585_2_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_fu_953_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln585_fu_1020_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln581_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581cast_fu_1059_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln604_fu_1062_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_517_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp1_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component Bert_layer_faddfsrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fadd_3g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fmul_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fdiv_3hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fptrunsc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fpext_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Bert_layer_fsqrt_tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_dadd_6udo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Softmax_layer_inpfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mean_U : component Softmax_layer_inpfYi
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean_address0,
        ce0 => mean_ce0,
        we0 => mean_we0,
        d0 => mean_d0,
        q0 => mean_q0);

    mean2_U : component Softmax_layer_inpfYi
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean2_address0,
        ce0 => mean2_ce0,
        we0 => mean2_we0,
        d0 => mean2_d0,
        q0 => mean2_q0);

    var_U : component Softmax_layer_inpfYi
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => var_address0,
        ce0 => var_ce0,
        we0 => var_we0,
        d0 => grp_fu_517_p2,
        q0 => var_q0);

    Bert_layer_faddfsrcU_U982 : component Bert_layer_faddfsrcU
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_517_p0,
        din1 => grp_fu_517_p1,
        opcode => grp_fu_517_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_517_p2);

    Bert_layer_fadd_3g8j_U983 : component Bert_layer_fadd_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_589,
        din1 => v174_reg_1280,
        ce => ap_const_logic_1,
        dout => grp_fu_526_p2);

    Bert_layer_fmul_3eOg_U984 : component Bert_layer_fmul_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_530_p0,
        din1 => grp_fu_530_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_530_p2);

    Bert_layer_fdiv_3hbi_U985 : component Bert_layer_fdiv_3hbi
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_536_p0,
        din1 => grp_fu_536_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_536_p2);

    Bert_layer_fptrunsc4_U986 : component Bert_layer_fptrunsc4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v171_mid2_v_reg_1223,
        ce => ap_const_logic_1,
        dout => grp_fu_543_p1);

    Bert_layer_fpext_ibs_U987 : component Bert_layer_fpext_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => var_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_546_p1);

    Bert_layer_fpext_ibs_U988 : component Bert_layer_fpext_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v175_reg_1285,
        ce => ap_const_logic_1,
        dout => grp_fu_550_p1);

    Bert_layer_fsqrt_tde_U989 : component Bert_layer_fsqrt_tde
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => v171_mid2_reg_1228,
        ce => ap_const_logic_1,
        dout => grp_fu_553_p2);

    Bert_layer_dadd_6udo_U990 : component Bert_layer_dadd_6udo
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v171_mid2_v_v_reg_1218,
        din1 => ap_const_lv64_3EE4F8B588E368F1,
        ce => ap_const_logic_1,
        dout => grp_fu_558_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln300_fu_613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((icmp_ln300_fu_613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state38) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state38)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state38);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter44 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter45 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter46 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    ap_enable_reg_pp1_iter46 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    i8_0_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln300_fu_613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i8_0_reg_462 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then 
                i8_0_reg_462 <= select_ln307_1_reg_1117;
            end if; 
        end if;
    end process;

    i9_0_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                i9_0_reg_495 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln329_reg_1176 = ap_const_lv1_0))) then 
                i9_0_reg_495 <= select_ln333_2_reg_1191;
            end if; 
        end if;
    end process;

    indvar_flatten21_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                indvar_flatten21_reg_484 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln329_fu_726_p2 = ap_const_lv1_0))) then 
                indvar_flatten21_reg_484 <= add_ln329_fu_732_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln300_fu_613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten_reg_451 <= ap_const_lv14_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then 
                indvar_flatten_reg_451 <= add_ln304_reg_1106;
            end if; 
        end if;
    end process;

    j6_0_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln300_fu_613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j6_0_reg_473 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then 
                j6_0_reg_473 <= j6_reg_1146;
            end if; 
        end if;
    end process;

    j7_0_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                j7_0_reg_506 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln329_fu_726_p2 = ap_const_lv1_0))) then 
                j7_0_reg_506 <= j7_fu_771_p2;
            end if; 
        end if;
    end process;

    v142_0_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln296_fu_596_p2 = ap_const_lv1_0))) then 
                v142_0_reg_429 <= v142_fu_602_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                v142_0_reg_429 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    v144_0_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln296_fu_596_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v144_0_reg_440 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln300_fu_613_p2 = ap_const_lv1_0))) then 
                v144_0_reg_440 <= v144_fu_619_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln304_reg_1106 <= add_ln304_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter44_reg = ap_const_lv1_0))) then
                and_ln603_reg_1337 <= and_ln603_fu_1053_p2;
                select_ln585_1_reg_1332 <= select_ln585_1_fu_1034_p3;
                sext_ln581_reg_1327 <= sext_ln581_fu_931_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln304_reg_1102 <= icmp_ln304_fu_630_p2;
                icmp_ln304_reg_1102_pp0_iter1_reg <= icmp_ln304_reg_1102;
                icmp_ln305_1_reg_1157_pp0_iter2_reg <= icmp_ln305_1_reg_1157;
                icmp_ln305_1_reg_1157_pp0_iter3_reg <= icmp_ln305_1_reg_1157_pp0_iter2_reg;
                icmp_ln305_1_reg_1157_pp0_iter4_reg <= icmp_ln305_1_reg_1157_pp0_iter3_reg;
                icmp_ln305_1_reg_1157_pp0_iter5_reg <= icmp_ln305_1_reg_1157_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then
                icmp_ln305_1_reg_1157 <= icmp_ln305_1_fu_721_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln329_reg_1176 <= icmp_ln329_fu_726_p2;
                icmp_ln329_reg_1176_pp1_iter1_reg <= icmp_ln329_reg_1176;
                select_ln333_2_reg_1191_pp1_iter1_reg <= select_ln333_2_reg_1191;
                select_ln333_reg_1185_pp1_iter1_reg <= select_ln333_reg_1185;
                    zext_ln333_reg_1198_pp1_iter1_reg(3 downto 0) <= zext_ln333_reg_1198(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln329_reg_1176_pp1_iter10_reg <= icmp_ln329_reg_1176_pp1_iter9_reg;
                icmp_ln329_reg_1176_pp1_iter11_reg <= icmp_ln329_reg_1176_pp1_iter10_reg;
                icmp_ln329_reg_1176_pp1_iter12_reg <= icmp_ln329_reg_1176_pp1_iter11_reg;
                icmp_ln329_reg_1176_pp1_iter13_reg <= icmp_ln329_reg_1176_pp1_iter12_reg;
                icmp_ln329_reg_1176_pp1_iter14_reg <= icmp_ln329_reg_1176_pp1_iter13_reg;
                icmp_ln329_reg_1176_pp1_iter15_reg <= icmp_ln329_reg_1176_pp1_iter14_reg;
                icmp_ln329_reg_1176_pp1_iter16_reg <= icmp_ln329_reg_1176_pp1_iter15_reg;
                icmp_ln329_reg_1176_pp1_iter17_reg <= icmp_ln329_reg_1176_pp1_iter16_reg;
                icmp_ln329_reg_1176_pp1_iter18_reg <= icmp_ln329_reg_1176_pp1_iter17_reg;
                icmp_ln329_reg_1176_pp1_iter19_reg <= icmp_ln329_reg_1176_pp1_iter18_reg;
                icmp_ln329_reg_1176_pp1_iter20_reg <= icmp_ln329_reg_1176_pp1_iter19_reg;
                icmp_ln329_reg_1176_pp1_iter21_reg <= icmp_ln329_reg_1176_pp1_iter20_reg;
                icmp_ln329_reg_1176_pp1_iter22_reg <= icmp_ln329_reg_1176_pp1_iter21_reg;
                icmp_ln329_reg_1176_pp1_iter23_reg <= icmp_ln329_reg_1176_pp1_iter22_reg;
                icmp_ln329_reg_1176_pp1_iter24_reg <= icmp_ln329_reg_1176_pp1_iter23_reg;
                icmp_ln329_reg_1176_pp1_iter25_reg <= icmp_ln329_reg_1176_pp1_iter24_reg;
                icmp_ln329_reg_1176_pp1_iter26_reg <= icmp_ln329_reg_1176_pp1_iter25_reg;
                icmp_ln329_reg_1176_pp1_iter27_reg <= icmp_ln329_reg_1176_pp1_iter26_reg;
                icmp_ln329_reg_1176_pp1_iter28_reg <= icmp_ln329_reg_1176_pp1_iter27_reg;
                icmp_ln329_reg_1176_pp1_iter29_reg <= icmp_ln329_reg_1176_pp1_iter28_reg;
                icmp_ln329_reg_1176_pp1_iter2_reg <= icmp_ln329_reg_1176_pp1_iter1_reg;
                icmp_ln329_reg_1176_pp1_iter30_reg <= icmp_ln329_reg_1176_pp1_iter29_reg;
                icmp_ln329_reg_1176_pp1_iter31_reg <= icmp_ln329_reg_1176_pp1_iter30_reg;
                icmp_ln329_reg_1176_pp1_iter32_reg <= icmp_ln329_reg_1176_pp1_iter31_reg;
                icmp_ln329_reg_1176_pp1_iter33_reg <= icmp_ln329_reg_1176_pp1_iter32_reg;
                icmp_ln329_reg_1176_pp1_iter34_reg <= icmp_ln329_reg_1176_pp1_iter33_reg;
                icmp_ln329_reg_1176_pp1_iter35_reg <= icmp_ln329_reg_1176_pp1_iter34_reg;
                icmp_ln329_reg_1176_pp1_iter36_reg <= icmp_ln329_reg_1176_pp1_iter35_reg;
                icmp_ln329_reg_1176_pp1_iter37_reg <= icmp_ln329_reg_1176_pp1_iter36_reg;
                icmp_ln329_reg_1176_pp1_iter38_reg <= icmp_ln329_reg_1176_pp1_iter37_reg;
                icmp_ln329_reg_1176_pp1_iter39_reg <= icmp_ln329_reg_1176_pp1_iter38_reg;
                icmp_ln329_reg_1176_pp1_iter3_reg <= icmp_ln329_reg_1176_pp1_iter2_reg;
                icmp_ln329_reg_1176_pp1_iter40_reg <= icmp_ln329_reg_1176_pp1_iter39_reg;
                icmp_ln329_reg_1176_pp1_iter41_reg <= icmp_ln329_reg_1176_pp1_iter40_reg;
                icmp_ln329_reg_1176_pp1_iter42_reg <= icmp_ln329_reg_1176_pp1_iter41_reg;
                icmp_ln329_reg_1176_pp1_iter43_reg <= icmp_ln329_reg_1176_pp1_iter42_reg;
                icmp_ln329_reg_1176_pp1_iter44_reg <= icmp_ln329_reg_1176_pp1_iter43_reg;
                icmp_ln329_reg_1176_pp1_iter4_reg <= icmp_ln329_reg_1176_pp1_iter3_reg;
                icmp_ln329_reg_1176_pp1_iter5_reg <= icmp_ln329_reg_1176_pp1_iter4_reg;
                icmp_ln329_reg_1176_pp1_iter6_reg <= icmp_ln329_reg_1176_pp1_iter5_reg;
                icmp_ln329_reg_1176_pp1_iter7_reg <= icmp_ln329_reg_1176_pp1_iter6_reg;
                icmp_ln329_reg_1176_pp1_iter8_reg <= icmp_ln329_reg_1176_pp1_iter7_reg;
                icmp_ln329_reg_1176_pp1_iter9_reg <= icmp_ln329_reg_1176_pp1_iter8_reg;
                select_ln333_2_reg_1191_pp1_iter10_reg <= select_ln333_2_reg_1191_pp1_iter9_reg;
                select_ln333_2_reg_1191_pp1_iter11_reg <= select_ln333_2_reg_1191_pp1_iter10_reg;
                select_ln333_2_reg_1191_pp1_iter12_reg <= select_ln333_2_reg_1191_pp1_iter11_reg;
                select_ln333_2_reg_1191_pp1_iter13_reg <= select_ln333_2_reg_1191_pp1_iter12_reg;
                select_ln333_2_reg_1191_pp1_iter14_reg <= select_ln333_2_reg_1191_pp1_iter13_reg;
                select_ln333_2_reg_1191_pp1_iter15_reg <= select_ln333_2_reg_1191_pp1_iter14_reg;
                select_ln333_2_reg_1191_pp1_iter16_reg <= select_ln333_2_reg_1191_pp1_iter15_reg;
                select_ln333_2_reg_1191_pp1_iter17_reg <= select_ln333_2_reg_1191_pp1_iter16_reg;
                select_ln333_2_reg_1191_pp1_iter18_reg <= select_ln333_2_reg_1191_pp1_iter17_reg;
                select_ln333_2_reg_1191_pp1_iter19_reg <= select_ln333_2_reg_1191_pp1_iter18_reg;
                select_ln333_2_reg_1191_pp1_iter20_reg <= select_ln333_2_reg_1191_pp1_iter19_reg;
                select_ln333_2_reg_1191_pp1_iter21_reg <= select_ln333_2_reg_1191_pp1_iter20_reg;
                select_ln333_2_reg_1191_pp1_iter22_reg <= select_ln333_2_reg_1191_pp1_iter21_reg;
                select_ln333_2_reg_1191_pp1_iter23_reg <= select_ln333_2_reg_1191_pp1_iter22_reg;
                select_ln333_2_reg_1191_pp1_iter24_reg <= select_ln333_2_reg_1191_pp1_iter23_reg;
                select_ln333_2_reg_1191_pp1_iter25_reg <= select_ln333_2_reg_1191_pp1_iter24_reg;
                select_ln333_2_reg_1191_pp1_iter26_reg <= select_ln333_2_reg_1191_pp1_iter25_reg;
                select_ln333_2_reg_1191_pp1_iter27_reg <= select_ln333_2_reg_1191_pp1_iter26_reg;
                select_ln333_2_reg_1191_pp1_iter28_reg <= select_ln333_2_reg_1191_pp1_iter27_reg;
                select_ln333_2_reg_1191_pp1_iter29_reg <= select_ln333_2_reg_1191_pp1_iter28_reg;
                select_ln333_2_reg_1191_pp1_iter2_reg <= select_ln333_2_reg_1191_pp1_iter1_reg;
                select_ln333_2_reg_1191_pp1_iter30_reg <= select_ln333_2_reg_1191_pp1_iter29_reg;
                select_ln333_2_reg_1191_pp1_iter31_reg <= select_ln333_2_reg_1191_pp1_iter30_reg;
                select_ln333_2_reg_1191_pp1_iter32_reg <= select_ln333_2_reg_1191_pp1_iter31_reg;
                select_ln333_2_reg_1191_pp1_iter33_reg <= select_ln333_2_reg_1191_pp1_iter32_reg;
                select_ln333_2_reg_1191_pp1_iter34_reg <= select_ln333_2_reg_1191_pp1_iter33_reg;
                select_ln333_2_reg_1191_pp1_iter35_reg <= select_ln333_2_reg_1191_pp1_iter34_reg;
                select_ln333_2_reg_1191_pp1_iter36_reg <= select_ln333_2_reg_1191_pp1_iter35_reg;
                select_ln333_2_reg_1191_pp1_iter37_reg <= select_ln333_2_reg_1191_pp1_iter36_reg;
                select_ln333_2_reg_1191_pp1_iter38_reg <= select_ln333_2_reg_1191_pp1_iter37_reg;
                select_ln333_2_reg_1191_pp1_iter39_reg <= select_ln333_2_reg_1191_pp1_iter38_reg;
                select_ln333_2_reg_1191_pp1_iter3_reg <= select_ln333_2_reg_1191_pp1_iter2_reg;
                select_ln333_2_reg_1191_pp1_iter40_reg <= select_ln333_2_reg_1191_pp1_iter39_reg;
                select_ln333_2_reg_1191_pp1_iter41_reg <= select_ln333_2_reg_1191_pp1_iter40_reg;
                select_ln333_2_reg_1191_pp1_iter42_reg <= select_ln333_2_reg_1191_pp1_iter41_reg;
                select_ln333_2_reg_1191_pp1_iter43_reg <= select_ln333_2_reg_1191_pp1_iter42_reg;
                select_ln333_2_reg_1191_pp1_iter44_reg <= select_ln333_2_reg_1191_pp1_iter43_reg;
                select_ln333_2_reg_1191_pp1_iter45_reg <= select_ln333_2_reg_1191_pp1_iter44_reg;
                select_ln333_2_reg_1191_pp1_iter4_reg <= select_ln333_2_reg_1191_pp1_iter3_reg;
                select_ln333_2_reg_1191_pp1_iter5_reg <= select_ln333_2_reg_1191_pp1_iter4_reg;
                select_ln333_2_reg_1191_pp1_iter6_reg <= select_ln333_2_reg_1191_pp1_iter5_reg;
                select_ln333_2_reg_1191_pp1_iter7_reg <= select_ln333_2_reg_1191_pp1_iter6_reg;
                select_ln333_2_reg_1191_pp1_iter8_reg <= select_ln333_2_reg_1191_pp1_iter7_reg;
                select_ln333_2_reg_1191_pp1_iter9_reg <= select_ln333_2_reg_1191_pp1_iter8_reg;
                select_ln333_reg_1185_pp1_iter10_reg <= select_ln333_reg_1185_pp1_iter9_reg;
                select_ln333_reg_1185_pp1_iter11_reg <= select_ln333_reg_1185_pp1_iter10_reg;
                select_ln333_reg_1185_pp1_iter12_reg <= select_ln333_reg_1185_pp1_iter11_reg;
                select_ln333_reg_1185_pp1_iter13_reg <= select_ln333_reg_1185_pp1_iter12_reg;
                select_ln333_reg_1185_pp1_iter14_reg <= select_ln333_reg_1185_pp1_iter13_reg;
                select_ln333_reg_1185_pp1_iter15_reg <= select_ln333_reg_1185_pp1_iter14_reg;
                select_ln333_reg_1185_pp1_iter2_reg <= select_ln333_reg_1185_pp1_iter1_reg;
                select_ln333_reg_1185_pp1_iter3_reg <= select_ln333_reg_1185_pp1_iter2_reg;
                select_ln333_reg_1185_pp1_iter4_reg <= select_ln333_reg_1185_pp1_iter3_reg;
                select_ln333_reg_1185_pp1_iter5_reg <= select_ln333_reg_1185_pp1_iter4_reg;
                select_ln333_reg_1185_pp1_iter6_reg <= select_ln333_reg_1185_pp1_iter5_reg;
                select_ln333_reg_1185_pp1_iter7_reg <= select_ln333_reg_1185_pp1_iter6_reg;
                select_ln333_reg_1185_pp1_iter8_reg <= select_ln333_reg_1185_pp1_iter7_reg;
                select_ln333_reg_1185_pp1_iter9_reg <= select_ln333_reg_1185_pp1_iter8_reg;
                trunc_ln583_reg_1321_pp1_iter45_reg <= trunc_ln583_reg_1321;
                v175_reg_1285_pp1_iter43_reg <= v175_reg_1285;
                v175_reg_1285_pp1_iter44_reg <= v175_reg_1285_pp1_iter43_reg;
                    zext_ln332_reg_1243_pp1_iter17_reg(9 downto 0) <= zext_ln332_reg_1243(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter18_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter17_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter19_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter18_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter20_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter19_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter21_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter20_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter22_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter21_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter23_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter22_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter24_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter23_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter25_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter24_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter26_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter25_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter27_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter26_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter28_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter27_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter29_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter28_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter30_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter29_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter31_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter30_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter32_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter31_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter33_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter32_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter34_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter33_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter35_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter34_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter36_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter35_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter37_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter36_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter38_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter37_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter39_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter38_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter40_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter39_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter41_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter40_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter42_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter41_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter43_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter42_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter44_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter43_reg(9 downto 0);
                    zext_ln332_reg_1243_pp1_iter45_reg(9 downto 0) <= zext_ln332_reg_1243_pp1_iter44_reg(9 downto 0);
                    zext_ln333_reg_1198_pp1_iter10_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter9_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter2_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter1_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter3_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter2_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter4_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter3_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter5_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter4_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter6_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter5_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter7_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter6_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter8_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter7_reg(3 downto 0);
                    zext_ln333_reg_1198_pp1_iter9_reg(3 downto 0) <= zext_ln333_reg_1198_pp1_iter8_reg(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter43_reg = ap_const_lv1_0))) then
                icmp_ln571_reg_1296 <= icmp_ln571_fu_883_p2;
                icmp_ln581_reg_1302 <= icmp_ln581_fu_895_p2;
                icmp_ln582_reg_1315 <= icmp_ln582_fu_921_p2;
                man_V_4_reg_1291 <= man_V_4_fu_875_p3;
                sh_amt_reg_1308 <= sh_amt_fu_913_p3;
                trunc_ln583_reg_1321 <= trunc_ln583_fu_927_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then
                j6_reg_1146 <= j6_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then
                mean2_addr_1_reg_1141 <= zext_ln307_reg_1130(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mean2_addr_1_reg_1141_pp0_iter1_reg <= mean2_addr_1_reg_1141;
                mean2_addr_1_reg_1141_pp0_iter2_reg <= mean2_addr_1_reg_1141_pp0_iter1_reg;
                mean2_addr_1_reg_1141_pp0_iter3_reg <= mean2_addr_1_reg_1141_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln304_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mean_addr_1_reg_1136 <= zext_ln307_fu_712_p1(4 - 1 downto 0);
                    zext_ln307_reg_1130(3 downto 0) <= zext_ln307_fu_712_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mean_addr_1_reg_1136_pp0_iter1_reg <= mean_addr_1_reg_1136;
                mean_addr_1_reg_1136_pp0_iter2_reg <= mean_addr_1_reg_1136_pp0_iter1_reg;
                mean_addr_1_reg_1136_pp0_iter3_reg <= mean_addr_1_reg_1136_pp0_iter2_reg;
                    zext_ln307_reg_1130_pp0_iter1_reg(3 downto 0) <= zext_ln307_reg_1130(3 downto 0);
                    zext_ln307_reg_1130_pp0_iter2_reg(3 downto 0) <= zext_ln307_reg_1130_pp0_iter1_reg(3 downto 0);
                    zext_ln307_reg_1130_pp0_iter3_reg(3 downto 0) <= zext_ln307_reg_1130_pp0_iter2_reg(3 downto 0);
                    zext_ln307_reg_1130_pp0_iter4_reg(3 downto 0) <= zext_ln307_reg_1130_pp0_iter3_reg(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (icmp_ln329_reg_1176_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln304_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_563 <= v137_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (icmp_ln329_reg_1176_pp1_iter11_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0)))) then
                reg_571 <= mean_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (icmp_ln329_reg_1176_pp1_iter20_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0)))) then
                reg_577 <= grp_fu_530_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln304_reg_1102_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (icmp_ln329_reg_1176_pp1_iter16_reg = ap_const_lv1_0)))) then
                reg_583 <= grp_fu_517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln305_1_reg_1157_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter37 = ap_const_logic_1) and (icmp_ln329_reg_1176_pp1_iter36_reg = ap_const_lv1_0)))) then
                reg_589 <= grp_fu_536_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln304_fu_630_p2 = ap_const_lv1_0))) then
                select_ln307_1_reg_1117 <= select_ln307_1_fu_662_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln304_fu_630_p2 = ap_const_lv1_0))) then
                select_ln307_reg_1111 <= select_ln307_fu_654_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln329_fu_726_p2 = ap_const_lv1_0))) then
                select_ln333_2_reg_1191 <= select_ln333_2_fu_758_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln329_fu_726_p2 = ap_const_lv1_0))) then
                select_ln333_reg_1185 <= select_ln333_fu_750_p3;
                    zext_ln333_reg_1198(3 downto 0) <= zext_ln333_fu_766_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102_pp0_iter1_reg = ap_const_lv1_0))) then
                v157_reg_1161 <= grp_fu_517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln305_1_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                v158_reg_1166 <= grp_fu_536_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln305_1_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                v161_reg_1171 <= grp_fu_530_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter16_reg = ap_const_lv1_0))) then
                v165_reg_1265 <= v138_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter8_reg = ap_const_lv1_0))) then
                v171_mid2_reg_1228 <= grp_fu_543_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter6_reg = ap_const_lv1_0))) then
                v171_mid2_v_reg_1223 <= grp_fu_558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter1_reg = ap_const_lv1_0))) then
                v171_mid2_v_v_reg_1218 <= grp_fu_546_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter20_reg = ap_const_lv1_0))) then
                v172_reg_1270 <= grp_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter36_reg = ap_const_lv1_0))) then
                v174_reg_1280 <= v139_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter41_reg = ap_const_lv1_0))) then
                v175_reg_1285 <= grp_fu_526_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln329_reg_1176_pp1_iter15_reg = ap_const_lv1_0))) then
                    zext_ln332_reg_1243(9 downto 0) <= zext_ln332_fu_819_p1(9 downto 0);
            end if;
        end if;
    end process;
    zext_ln307_reg_1130(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln307_reg_1130_pp0_iter1_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln307_reg_1130_pp0_iter2_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln307_reg_1130_pp0_iter3_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln307_reg_1130_pp0_iter4_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter1_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter2_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter3_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter4_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter5_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter6_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter7_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter8_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter9_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln333_reg_1198_pp1_iter10_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter19_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter20_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter21_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter22_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter23_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter24_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter25_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter26_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter27_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter28_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter29_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter30_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter31_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter32_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter33_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter34_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter35_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter36_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter37_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter38_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter39_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter40_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter41_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter42_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter43_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter44_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln332_reg_1243_pp1_iter45_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, icmp_ln300_fu_613_p2, ap_CS_fsm_state3, icmp_ln304_fu_630_p2, ap_enable_reg_pp0_iter4, icmp_ln329_fu_726_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter5, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter45, ap_enable_reg_pp1_iter46, icmp_ln296_fu_596_p2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln296_fu_596_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln300_fu_613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln304_fu_630_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln304_fu_630_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln329_fu_726_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter45 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter45 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln329_fu_726_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_889_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_849_p1));
    add_ln304_fu_636_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_455_p4) + unsigned(ap_const_lv14_1));
    add_ln307_fu_701_p2 <= std_logic_vector(unsigned(sub_ln307_fu_692_p2) + unsigned(zext_ln307_3_fu_698_p1));
    add_ln329_fu_732_p2 <= std_logic_vector(unsigned(indvar_flatten21_reg_484) + unsigned(ap_const_lv14_1));
    add_ln333_fu_808_p2 <= std_logic_vector(unsigned(zext_ln333_3_fu_805_p1) + unsigned(sub_ln333_fu_799_p2));
    add_ln581_fu_901_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_889_p2));
    and_ln581_fu_1003_p2 <= (xor_ln582_fu_997_p2 and icmp_ln581_reg_1302);
    and_ln582_fu_981_p2 <= (xor_ln571_fu_976_p2 and icmp_ln582_reg_1315);
    and_ln585_2_fu_1028_p2 <= (icmp_ln585_fu_934_p2 and and_ln581_fu_1003_p2);
    and_ln585_fu_1014_p2 <= (xor_ln585_fu_1008_p2 and and_ln581_fu_1003_p2);
    and_ln603_fu_1053_p2 <= (xor_ln581_fu_1047_p2 and icmp_ln603_fu_939_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state37 <= ap_CS_fsm(9);
    ap_CS_fsm_state85 <= ap_CS_fsm(11);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp1_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp1_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp1_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp1_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp1_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp1_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp1_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp1_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp1_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp1_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp1_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp1_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp1_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp1_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp1_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp1_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp1_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp1_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp1_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp1_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp1_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln304_fu_630_p2)
    begin
        if ((icmp_ln304_fu_630_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state38_assign_proc : process(icmp_ln329_fu_726_p2)
    begin
        if ((icmp_ln329_fu_726_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state38 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter37, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27, ap_enable_reg_pp1_iter28, ap_enable_reg_pp1_iter29, ap_enable_reg_pp1_iter30, ap_enable_reg_pp1_iter31, ap_enable_reg_pp1_iter32, ap_enable_reg_pp1_iter33, ap_enable_reg_pp1_iter34, ap_enable_reg_pp1_iter35, ap_enable_reg_pp1_iter36, ap_enable_reg_pp1_iter38, ap_enable_reg_pp1_iter39, ap_enable_reg_pp1_iter40, ap_enable_reg_pp1_iter41, ap_enable_reg_pp1_iter42, ap_enable_reg_pp1_iter43, ap_enable_reg_pp1_iter44, ap_enable_reg_pp1_iter45, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_enable_reg_pp1_iter46 = ap_const_logic_0) and (ap_enable_reg_pp1_iter45 = ap_const_logic_0) and (ap_enable_reg_pp1_iter44 = ap_const_logic_0) and (ap_enable_reg_pp1_iter43 = ap_const_logic_0) and (ap_enable_reg_pp1_iter42 = ap_const_logic_0) and (ap_enable_reg_pp1_iter41 = ap_const_logic_0) and (ap_enable_reg_pp1_iter40 = ap_const_logic_0) and (ap_enable_reg_pp1_iter39 = ap_const_logic_0) and (ap_enable_reg_pp1_iter38 = ap_const_logic_0) and (ap_enable_reg_pp1_iter36 = ap_const_logic_0) and (ap_enable_reg_pp1_iter35 = ap_const_logic_0) and (ap_enable_reg_pp1_iter34 = ap_const_logic_0) and (ap_enable_reg_pp1_iter33 = ap_const_logic_0) and (ap_enable_reg_pp1_iter32 = ap_const_logic_0) and (ap_enable_reg_pp1_iter31 = ap_const_logic_0) and (ap_enable_reg_pp1_iter30 = ap_const_logic_0) and (ap_enable_reg_pp1_iter29 = ap_const_logic_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter37 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i8_0_phi_fu_466_p4_assign_proc : process(i8_0_reg_462, icmp_ln304_reg_1102, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln307_1_reg_1117, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then 
            ap_phi_mux_i8_0_phi_fu_466_p4 <= select_ln307_1_reg_1117;
        else 
            ap_phi_mux_i8_0_phi_fu_466_p4 <= i8_0_reg_462;
        end if; 
    end process;


    ap_phi_mux_i9_0_phi_fu_499_p4_assign_proc : process(i9_0_reg_495, icmp_ln329_reg_1176, ap_CS_fsm_pp1_stage0, select_ln333_2_reg_1191, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln329_reg_1176 = ap_const_lv1_0))) then 
            ap_phi_mux_i9_0_phi_fu_499_p4 <= select_ln333_2_reg_1191;
        else 
            ap_phi_mux_i9_0_phi_fu_499_p4 <= i9_0_reg_495;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_455_p4_assign_proc : process(indvar_flatten_reg_451, icmp_ln304_reg_1102, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, add_ln304_reg_1106, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_455_p4 <= add_ln304_reg_1106;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_455_p4 <= indvar_flatten_reg_451;
        end if; 
    end process;


    ap_phi_mux_j6_0_phi_fu_477_p4_assign_proc : process(j6_0_reg_473, icmp_ln304_reg_1102, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, j6_reg_1146, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0))) then 
            ap_phi_mux_j6_0_phi_fu_477_p4 <= j6_reg_1146;
        else 
            ap_phi_mux_j6_0_phi_fu_477_p4 <= j6_0_reg_473;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_948_p2 <= std_logic_vector(shift_right(signed(man_V_4_reg_1291),to_integer(unsigned('0' & zext_ln586_fu_944_p1(31-1 downto 0)))));
    bitcast_ln696_fu_957_p1 <= v175_reg_1285_pp1_iter44_reg;
    exp_tmp_V_fu_839_p4 <= ireg_V_fu_823_p1(62 downto 52);

    grp_fu_517_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln304_reg_1102, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, icmp_ln305_1_reg_1157_pp0_iter4_reg, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, icmp_ln329_reg_1176_pp1_iter12_reg, ap_enable_reg_pp1_iter13, ap_block_pp0_stage3_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage4_00001, ap_block_pp1_stage0_00001)
    begin
        if ((((icmp_ln305_1_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001)) or ((ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (icmp_ln329_reg_1176_pp1_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_00001)))) then 
            grp_fu_517_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln304_reg_1102 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001)))) then 
            grp_fu_517_opcode <= ap_const_lv2_0;
        else 
            grp_fu_517_opcode <= "XX";
        end if; 
    end process;


    grp_fu_517_p0_assign_proc : process(reg_563, ap_enable_reg_pp0_iter0, mean_q0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, mean2_q0, ap_CS_fsm_pp0_stage4, v158_reg_1166, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter13, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1))) then 
            grp_fu_517_p0 <= reg_563;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_517_p0 <= v158_reg_1166;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_517_p0 <= mean2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_517_p0 <= mean_q0;
        else 
            grp_fu_517_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_517_p1_assign_proc : process(reg_563, ap_enable_reg_pp0_iter0, reg_571, ap_CS_fsm_pp0_stage3, reg_577, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, v161_reg_1171, ap_enable_reg_pp1_iter13, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1))) then 
            grp_fu_517_p1 <= reg_571;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_517_p1 <= v161_reg_1171;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_517_p1 <= reg_577;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_517_p1 <= reg_563;
        else 
            grp_fu_517_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_530_p0_assign_proc : process(v137_q0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, reg_589, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, v165_reg_1265, ap_enable_reg_pp1_iter18, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            grp_fu_530_p0 <= v165_reg_1265;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_530_p0 <= reg_589;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_530_p0 <= v137_q0;
        else 
            grp_fu_530_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_530_p1_assign_proc : process(v137_q0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, reg_583, reg_589, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter18, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            grp_fu_530_p1 <= reg_583;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_530_p1 <= reg_589;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_530_p1 <= v137_q0;
        else 
            grp_fu_530_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_536_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, reg_577, ap_CS_fsm_pp0_stage5, reg_583, ap_enable_reg_pp0_iter1, v157_reg_1161, ap_enable_reg_pp1_iter22, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_1))) then 
            grp_fu_536_p0 <= reg_577;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_536_p0 <= v157_reg_1161;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_536_p0 <= reg_583;
        else 
            grp_fu_536_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_536_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, v172_reg_1270, ap_enable_reg_pp1_iter22, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_1))) then 
            grp_fu_536_p1 <= v172_reg_1270;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_536_p1 <= ap_const_lv32_44400000;
        else 
            grp_fu_536_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i8_fu_642_p2 <= std_logic_vector(unsigned(ap_phi_mux_i8_0_phi_fu_466_p4) + unsigned(ap_const_lv4_1));
    i9_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_i9_0_phi_fu_499_p4));
    icmp_ln296_fu_596_p2 <= "1" when (v142_0_reg_429 = ap_const_lv4_C) else "0";
    icmp_ln300_fu_613_p2 <= "1" when (v144_0_reg_440 = ap_const_lv4_C) else "0";
    icmp_ln304_fu_630_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_455_p4 = ap_const_lv14_2400) else "0";
    icmp_ln305_1_fu_721_p2 <= "1" when (j6_reg_1146 = ap_const_lv10_300) else "0";
    icmp_ln305_fu_648_p2 <= "1" when (ap_phi_mux_j6_0_phi_fu_477_p4 = ap_const_lv10_300) else "0";
    icmp_ln329_fu_726_p2 <= "1" when (indvar_flatten21_reg_484 = ap_const_lv14_2400) else "0";
    icmp_ln330_fu_744_p2 <= "1" when (j7_0_reg_506 = ap_const_lv10_300) else "0";
    icmp_ln571_fu_883_p2 <= "1" when (trunc_ln556_fu_827_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_895_p2 <= "1" when (signed(F2_fu_889_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln582_fu_921_p2 <= "1" when (F2_fu_889_p2 = ap_const_lv12_10) else "0";
    icmp_ln585_fu_934_p2 <= "1" when (unsigned(sh_amt_reg_1308) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_939_p2 <= "1" when (unsigned(sh_amt_reg_1308) < unsigned(ap_const_lv12_18)) else "0";
    ireg_V_fu_823_p1 <= grp_fu_550_p1;
    j6_fu_716_p2 <= std_logic_vector(unsigned(select_ln307_reg_1111) + unsigned(ap_const_lv10_1));
    j7_fu_771_p2 <= std_logic_vector(unsigned(select_ln333_fu_750_p3) + unsigned(ap_const_lv10_1));
    man_V_3_fu_869_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_95_fu_865_p1));
    man_V_4_fu_875_p3 <= 
        man_V_3_fu_869_p2 when (p_Result_s_fu_831_p3(0) = '1') else 
        p_Result_95_fu_865_p1;

    mean2_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, zext_ln307_reg_1130, mean2_addr_1_reg_1141, mean2_addr_1_reg_1141_pp0_iter3_reg, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, zext_ln301_fu_625_p1, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            mean2_address0 <= mean2_addr_1_reg_1141_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            mean2_address0 <= mean2_addr_1_reg_1141;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            mean2_address0 <= zext_ln307_reg_1130(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean2_address0 <= zext_ln301_fu_625_p1(4 - 1 downto 0);
        else 
            mean2_address0 <= "XXXX";
        end if; 
    end process;


    mean2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            mean2_ce0 <= ap_const_logic_1;
        else 
            mean2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean2_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, grp_fu_517_p2, ap_enable_reg_pp0_iter1, grp_fu_536_p2, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, ap_block_pp0_stage2, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            mean2_d0 <= grp_fu_536_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            mean2_d0 <= grp_fu_517_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean2_d0 <= ap_const_lv32_0;
        else 
            mean2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean2_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter1, icmp_ln304_reg_1102_pp0_iter1_reg, icmp_ln300_fu_613_p2, ap_CS_fsm_state3, icmp_ln305_1_reg_1157_pp0_iter4_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln300_fu_613_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln304_reg_1102_pp0_iter1_reg = ap_const_lv1_0)) or ((icmp_ln305_1_reg_1157_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            mean2_we0 <= ap_const_logic_1;
        else 
            mean2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, zext_ln307_fu_712_p1, mean_addr_1_reg_1136, mean_addr_1_reg_1136_pp0_iter3_reg, zext_ln333_reg_1198_pp1_iter10_reg, ap_enable_reg_pp1_iter11, ap_block_pp1_stage0, zext_ln297_fu_608_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1))) then 
            mean_address0 <= zext_ln333_reg_1198_pp1_iter10_reg(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            mean_address0 <= mean_addr_1_reg_1136_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            mean_address0 <= mean_addr_1_reg_1136;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            mean_address0 <= zext_ln307_fu_712_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_address0 <= zext_ln297_fu_608_p1(4 - 1 downto 0);
        else 
            mean_address0 <= "XXXX";
        end if; 
    end process;


    mean_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, ap_enable_reg_pp1_iter11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            mean_ce0 <= ap_const_logic_1;
        else 
            mean_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_d0_assign_proc : process(ap_CS_fsm_pp0_stage5, grp_fu_517_p2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_fu_536_p2, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, ap_block_pp0_stage1, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            mean_d0 <= grp_fu_536_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            mean_d0 <= grp_fu_517_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_d0 <= ap_const_lv32_0;
        else 
            mean_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean_we0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, icmp_ln304_reg_1102_pp0_iter1_reg, ap_enable_reg_pp0_iter3, icmp_ln305_1_reg_1157_pp0_iter3_reg, ap_CS_fsm_state2, icmp_ln296_fu_596_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln296_fu_596_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln304_reg_1102_pp0_iter1_reg = ap_const_lv1_0)) or ((icmp_ln305_1_reg_1157_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            mean_we0 <= ap_const_logic_1;
        else 
            mean_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln581_fu_1042_p2 <= (or_ln582_fu_993_p2 or icmp_ln581_reg_1302);
    or_ln582_fu_993_p2 <= (icmp_ln582_reg_1315 or icmp_ln571_reg_1296);
    p_Result_95_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_857_p3),54));
    p_Result_s_fu_831_p3 <= ireg_V_fu_823_p1(63 downto 63);
    select_ln307_1_fu_662_p3 <= 
        i8_fu_642_p2 when (icmp_ln305_fu_648_p2(0) = '1') else 
        ap_phi_mux_i8_0_phi_fu_466_p4;
    select_ln307_fu_654_p3 <= 
        ap_const_lv10_0 when (icmp_ln305_fu_648_p2(0) = '1') else 
        ap_phi_mux_j6_0_phi_fu_477_p4;
    select_ln333_2_fu_758_p3 <= 
        i9_fu_738_p2 when (icmp_ln330_fu_744_p2(0) = '1') else 
        ap_phi_mux_i9_0_phi_fu_499_p4;
    select_ln333_fu_750_p3 <= 
        ap_const_lv10_0 when (icmp_ln330_fu_744_p2(0) = '1') else 
        j7_0_reg_506;
    select_ln582_fu_986_p3 <= 
        trunc_ln583_reg_1321 when (and_ln582_fu_981_p2(0) = '1') else 
        ap_const_lv24_0;
    select_ln585_1_fu_1034_p3 <= 
        trunc_ln586_fu_953_p1 when (and_ln585_2_fu_1028_p2(0) = '1') else 
        select_ln585_fu_1020_p3;
    select_ln585_fu_1020_p3 <= 
        select_ln588_fu_968_p3 when (and_ln585_fu_1014_p2(0) = '1') else 
        select_ln582_fu_986_p3;
    select_ln588_fu_968_p3 <= 
        ap_const_lv24_FFFFFF when (tmp_54_fu_960_p3(0) = '1') else 
        ap_const_lv24_0;
        sext_ln307_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln307_fu_701_p2),64));

        sext_ln581_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_1308),32));

    sext_ln581cast_fu_1059_p1 <= sext_ln581_reg_1327(24 - 1 downto 0);
    sh_amt_fu_913_p3 <= 
        add_ln581_fu_901_p2 when (icmp_ln581_fu_895_p2(0) = '1') else 
        sub_ln581_fu_907_p2;
    shl_ln604_fu_1062_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_1321_pp1_iter45_reg),to_integer(unsigned('0' & sext_ln581cast_fu_1059_p1(24-1 downto 0)))));
    sub_ln307_fu_692_p2 <= std_logic_vector(unsigned(zext_ln307_1_fu_677_p1) - unsigned(zext_ln307_2_fu_688_p1));
    sub_ln333_fu_799_p2 <= std_logic_vector(unsigned(zext_ln333_1_fu_784_p1) - unsigned(zext_ln333_2_fu_795_p1));
    sub_ln581_fu_907_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_889_p2));
    tmp_20_fu_681_p3 <= (select_ln307_1_reg_1117 & ap_const_lv8_0);
    tmp_51_fu_777_p3 <= (select_ln333_2_reg_1191_pp1_iter10_reg & ap_const_lv10_0);
    tmp_52_fu_788_p3 <= (select_ln333_2_reg_1191_pp1_iter10_reg & ap_const_lv8_0);
    tmp_54_fu_960_p3 <= bitcast_ln696_fu_957_p1(31 downto 31);
    tmp_5_fu_857_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_853_p1);
    tmp_fu_670_p3 <= (select_ln307_1_reg_1117 & ap_const_lv10_0);
    trunc_ln556_fu_827_p1 <= ireg_V_fu_823_p1(63 - 1 downto 0);
    trunc_ln565_fu_853_p1 <= ireg_V_fu_823_p1(52 - 1 downto 0);
    trunc_ln583_fu_927_p1 <= man_V_4_fu_875_p3(24 - 1 downto 0);
    trunc_ln586_fu_953_p1 <= ashr_ln586_fu_948_p2(24 - 1 downto 0);

    v137_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp1_iter11, ap_block_pp1_stage0, sext_ln307_fu_707_p1, ap_block_pp0_stage1, zext_ln333_4_fu_814_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1))) then 
            v137_address0 <= zext_ln333_4_fu_814_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            v137_address0 <= sext_ln307_fu_707_p1(14 - 1 downto 0);
        else 
            v137_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    v137_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter11)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            v137_ce0 <= ap_const_logic_1;
        else 
            v137_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v138_address0 <= zext_ln332_fu_819_p1(10 - 1 downto 0);

    v138_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1))) then 
            v138_ce0 <= ap_const_logic_1;
        else 
            v138_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v139_address0 <= zext_ln332_reg_1243_pp1_iter35_reg(10 - 1 downto 0);

    v139_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter36)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter36 = ap_const_logic_1))) then 
            v139_ce0 <= ap_const_logic_1;
        else 
            v139_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_0_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_0_V_ce0 <= ap_const_logic_1;
        else 
            v140_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_0_V_d0 <= v176_V_fu_1067_p3;

    v140_0_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_0_V_we0 <= ap_const_logic_1;
        else 
            v140_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_10_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_10_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_10_V_ce0 <= ap_const_logic_1;
        else 
            v140_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_10_V_d0 <= v176_V_fu_1067_p3;

    v140_10_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_10_V_we0 <= ap_const_logic_1;
        else 
            v140_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_11_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_11_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_11_V_ce0 <= ap_const_logic_1;
        else 
            v140_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_11_V_d0 <= v176_V_fu_1067_p3;

    v140_11_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1) and ((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_B) or ((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_C) or ((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_D) or ((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_E) or (select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_F))))))) then 
            v140_11_V_we0 <= ap_const_logic_1;
        else 
            v140_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_1_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_1_V_ce0 <= ap_const_logic_1;
        else 
            v140_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_1_V_d0 <= v176_V_fu_1067_p3;

    v140_1_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_1_V_we0 <= ap_const_logic_1;
        else 
            v140_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_2_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_2_V_ce0 <= ap_const_logic_1;
        else 
            v140_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_2_V_d0 <= v176_V_fu_1067_p3;

    v140_2_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_2_V_we0 <= ap_const_logic_1;
        else 
            v140_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_3_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_3_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_3_V_ce0 <= ap_const_logic_1;
        else 
            v140_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_3_V_d0 <= v176_V_fu_1067_p3;

    v140_3_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_3_V_we0 <= ap_const_logic_1;
        else 
            v140_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_4_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_4_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_4_V_ce0 <= ap_const_logic_1;
        else 
            v140_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_4_V_d0 <= v176_V_fu_1067_p3;

    v140_4_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_4_V_we0 <= ap_const_logic_1;
        else 
            v140_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_5_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_5_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_5_V_ce0 <= ap_const_logic_1;
        else 
            v140_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_5_V_d0 <= v176_V_fu_1067_p3;

    v140_5_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_5_V_we0 <= ap_const_logic_1;
        else 
            v140_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_6_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_6_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_6_V_ce0 <= ap_const_logic_1;
        else 
            v140_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_6_V_d0 <= v176_V_fu_1067_p3;

    v140_6_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_6_V_we0 <= ap_const_logic_1;
        else 
            v140_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_7_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_7_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_7_V_ce0 <= ap_const_logic_1;
        else 
            v140_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_7_V_d0 <= v176_V_fu_1067_p3;

    v140_7_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_7_V_we0 <= ap_const_logic_1;
        else 
            v140_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_8_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_8_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_8_V_ce0 <= ap_const_logic_1;
        else 
            v140_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_8_V_d0 <= v176_V_fu_1067_p3;

    v140_8_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_8_V_we0 <= ap_const_logic_1;
        else 
            v140_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_9_V_address0 <= zext_ln332_reg_1243_pp1_iter45_reg(10 - 1 downto 0);

    v140_9_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_9_V_ce0 <= ap_const_logic_1;
        else 
            v140_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v140_9_V_d0 <= v176_V_fu_1067_p3;

    v140_9_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, select_ln333_2_reg_1191_pp1_iter45_reg, ap_enable_reg_pp1_iter46)
    begin
        if (((select_ln333_2_reg_1191_pp1_iter45_reg = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter46 = ap_const_logic_1))) then 
            v140_9_V_we0 <= ap_const_logic_1;
        else 
            v140_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v142_fu_602_p2 <= std_logic_vector(unsigned(v142_0_reg_429) + unsigned(ap_const_lv4_1));
    v144_fu_619_p2 <= std_logic_vector(unsigned(v144_0_reg_440) + unsigned(ap_const_lv4_1));
    v176_V_fu_1067_p3 <= 
        shl_ln604_fu_1062_p2 when (and_ln603_reg_1337(0) = '1') else 
        select_ln585_1_reg_1332;

    var_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, zext_ln307_reg_1130_pp0_iter4_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln333_fu_766_p1, ap_enable_reg_pp0_iter5, ap_block_pp1_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            var_address0 <= zext_ln333_fu_766_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            var_address0 <= zext_ln307_reg_1130_pp0_iter4_reg(4 - 1 downto 0);
        else 
            var_address0 <= "XXXX";
        end if; 
    end process;


    var_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            var_ce0 <= ap_const_logic_1;
        else 
            var_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln305_1_reg_1157_pp0_iter5_reg, ap_enable_reg_pp0_iter5)
    begin
        if (((icmp_ln305_1_reg_1157_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            var_we0 <= ap_const_logic_1;
        else 
            var_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln571_fu_976_p2 <= (icmp_ln571_reg_1296 xor ap_const_lv1_1);
    xor_ln581_fu_1047_p2 <= (or_ln581_fu_1042_p2 xor ap_const_lv1_1);
    xor_ln582_fu_997_p2 <= (or_ln582_fu_993_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1008_p2 <= (icmp_ln585_fu_934_p2 xor ap_const_lv1_1);
    zext_ln297_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v142_0_reg_429),64));
    zext_ln301_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v144_0_reg_440),64));
    zext_ln307_1_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_670_p3),15));
    zext_ln307_2_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_681_p3),15));
    zext_ln307_3_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln307_reg_1111),15));
    zext_ln307_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln307_1_reg_1117),64));
    zext_ln332_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln333_reg_1185_pp1_iter15_reg),64));
    zext_ln333_1_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_777_p3),15));
    zext_ln333_2_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_788_p3),15));
    zext_ln333_3_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln333_reg_1185_pp1_iter10_reg),15));
    zext_ln333_4_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln333_fu_808_p2),64));
    zext_ln333_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln333_2_fu_758_p3),64));
    zext_ln461_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_839_p4),12));
    zext_ln586_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_931_p1),54));
end behav;
