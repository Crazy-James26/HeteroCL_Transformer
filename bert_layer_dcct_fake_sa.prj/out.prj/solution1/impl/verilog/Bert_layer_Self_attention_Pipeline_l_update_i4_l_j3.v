// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_update_i4_l_j3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_sumRow_address0,
        inp_sumRow_ce0,
        inp_sumRow_q0,
        v100_address0,
        v100_ce0,
        v100_q0,
        v101_V_address0,
        v101_V_ce0,
        v101_V_we0,
        v101_V_d0,
        v101_V_1_address0,
        v101_V_1_ce0,
        v101_V_1_we0,
        v101_V_1_d0,
        grp_fu_2235_p_din0,
        grp_fu_2235_p_din1,
        grp_fu_2235_p_dout0,
        grp_fu_2235_p_ce,
        grp_fu_2239_p_din0,
        grp_fu_2239_p_dout0,
        grp_fu_2239_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] inp_sumRow_address0;
output   inp_sumRow_ce0;
input  [31:0] inp_sumRow_q0;
output  [7:0] v100_address0;
output   v100_ce0;
input  [31:0] v100_q0;
output  [6:0] v101_V_address0;
output   v101_V_ce0;
output   v101_V_we0;
output  [23:0] v101_V_d0;
output  [6:0] v101_V_1_address0;
output   v101_V_1_ce0;
output   v101_V_1_we0;
output  [23:0] v101_V_1_d0;
output  [31:0] grp_fu_2235_p_din0;
output  [31:0] grp_fu_2235_p_din1;
input  [31:0] grp_fu_2235_p_dout0;
output   grp_fu_2235_p_ce;
output  [31:0] grp_fu_2239_p_din0;
input  [63:0] grp_fu_2239_p_dout0;
output   grp_fu_2239_p_ce;

reg ap_idle;
reg inp_sumRow_ce0;
reg v100_ce0;
reg v101_V_ce0;
reg v101_V_we0;
reg v101_V_1_ce0;
reg v101_V_1_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln122_fu_179_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln122_fu_209_p3;
reg   [3:0] select_ln122_reg_586;
reg   [3:0] select_ln122_reg_586_pp0_iter1_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter2_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter3_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter4_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter5_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter6_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter7_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter8_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter9_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter10_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter11_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter12_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter13_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter14_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter15_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter16_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter17_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter18_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter19_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter20_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter21_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter22_reg;
reg   [3:0] select_ln122_reg_586_pp0_iter23_reg;
wire   [3:0] select_ln122_2_fu_217_p3;
reg   [3:0] select_ln122_2_reg_592;
reg   [2:0] zext_ln129_mid2_v_reg_599;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter1_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter2_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter3_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter4_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter5_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter6_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter7_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter8_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter9_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter10_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter11_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter12_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter13_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter14_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter15_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter16_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter17_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter18_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter19_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter20_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter21_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter22_reg;
reg   [2:0] zext_ln129_mid2_v_reg_599_pp0_iter23_reg;
wire   [0:0] trunc_ln122_fu_235_p1;
reg   [0:0] trunc_ln122_reg_605;
reg   [0:0] trunc_ln122_reg_605_pp0_iter1_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter2_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter3_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter4_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter5_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter6_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter7_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter8_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter9_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter10_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter11_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter12_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter13_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter14_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter15_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter16_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter17_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter18_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter19_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter20_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter21_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter22_reg;
reg   [0:0] trunc_ln122_reg_605_pp0_iter23_reg;
reg   [31:0] inp_sumRow_load_reg_619;
reg   [31:0] v62_reg_624;
reg   [31:0] v64_reg_629;
reg   [31:0] v64_reg_629_pp0_iter19_reg;
reg   [31:0] v64_reg_629_pp0_iter20_reg;
reg   [31:0] v64_reg_629_pp0_iter21_reg;
reg   [31:0] v64_reg_629_pp0_iter22_reg;
reg   [0:0] p_Result_s_reg_635;
reg   [10:0] exp_tmp_reg_640;
wire   [51:0] trunc_ln600_fu_328_p1;
reg   [51:0] trunc_ln600_reg_645;
wire   [0:0] icmp_ln606_fu_332_p2;
reg   [0:0] icmp_ln606_reg_650;
reg   [0:0] icmp_ln606_reg_650_pp0_iter21_reg;
reg   [0:0] icmp_ln606_reg_650_pp0_iter22_reg;
wire   [53:0] man_V_2_fu_358_p3;
reg   [53:0] man_V_2_reg_657;
reg   [53:0] man_V_2_reg_657_pp0_iter22_reg;
wire  signed [11:0] sh_amt_fu_389_p3;
reg  signed [11:0] sh_amt_reg_662;
wire   [0:0] icmp_ln617_fu_397_p2;
reg   [0:0] icmp_ln617_reg_669;
wire   [23:0] trunc_ln618_fu_403_p1;
reg   [23:0] trunc_ln618_reg_674;
wire   [0:0] and_ln616_fu_418_p2;
reg   [0:0] and_ln616_reg_680;
reg   [0:0] and_ln616_reg_680_pp0_iter22_reg;
wire  signed [31:0] sext_ln616_fu_424_p1;
reg  signed [31:0] sext_ln616_reg_685;
wire   [0:0] icmp_ln620_fu_427_p2;
reg   [0:0] icmp_ln620_reg_690;
wire   [23:0] select_ln617_fu_464_p3;
reg   [23:0] select_ln617_reg_695;
wire   [23:0] v65_V_fu_515_p3;
reg   [23:0] v65_V_reg_700;
wire   [63:0] zext_ln122_fu_260_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln125_3_fu_297_p1;
wire   [63:0] zext_ln129_1_fu_555_p1;
reg   [3:0] j3_fu_90;
wire   [3:0] add_ln123_fu_239_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j3_load;
reg   [3:0] i4_fu_94;
reg   [3:0] ap_sig_allocacmp_i4_load;
reg   [7:0] indvar_flatten7_fu_98;
wire   [7:0] add_ln122_1_fu_185_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten7_load;
wire   [0:0] icmp_ln123_fu_203_p2;
wire   [3:0] add_ln122_fu_197_p2;
wire   [5:0] tmp_fu_271_p3;
wire   [7:0] p_shl_fu_264_p3;
wire   [7:0] zext_ln125_fu_278_p1;
wire   [7:0] sub_ln125_fu_282_p2;
wire   [7:0] zext_ln125_2_fu_288_p1;
wire   [7:0] add_ln125_fu_291_p2;
wire   [63:0] ireg_fu_302_p1;
wire   [62:0] trunc_ln590_fu_306_p1;
wire   [52:0] p_Result_33_fu_341_p3;
wire   [53:0] zext_ln604_fu_348_p1;
wire   [53:0] man_V_1_fu_352_p2;
wire   [11:0] zext_ln501_fu_338_p1;
wire   [11:0] F2_fu_365_p2;
wire   [0:0] icmp_ln616_fu_371_p2;
wire   [11:0] add_ln616_fu_377_p2;
wire   [11:0] sub_ln616_fu_383_p2;
wire   [0:0] or_ln617_fu_407_p2;
wire   [0:0] xor_ln617_fu_412_p2;
wire   [23:0] sext_ln616cast_fu_437_p1;
wire   [0:0] icmp_ln638_fu_432_p2;
wire   [23:0] shl_ln639_fu_441_p2;
wire   [0:0] xor_ln606_fu_454_p2;
wire   [0:0] and_ln617_fu_459_p2;
wire   [23:0] select_ln638_fu_446_p3;
wire   [53:0] zext_ln621_fu_471_p1;
wire   [53:0] ashr_ln621_fu_474_p2;
wire   [31:0] bitcast_ln768_fu_483_p1;
wire   [0:0] tmp_28_fu_486_p3;
wire   [23:0] trunc_ln621_fu_479_p1;
wire   [23:0] select_ln623_fu_494_p3;
wire   [23:0] select_ln620_fu_502_p3;
wire   [23:0] select_ln616_fu_509_p3;
wire   [4:0] tmp_19_fu_529_p3;
wire   [6:0] tmp_s_fu_522_p3;
wire   [6:0] zext_ln129_fu_536_p1;
wire   [6:0] sub_ln129_fu_540_p2;
wire   [6:0] zext_ln125_1_fu_546_p1;
wire   [6:0] add_ln129_fu_549_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln122_fu_179_p2 == 1'd0))) begin
            i4_fu_94 <= select_ln122_2_fu_217_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i4_fu_94 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln122_fu_179_p2 == 1'd0))) begin
            indvar_flatten7_fu_98 <= add_ln122_1_fu_185_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten7_fu_98 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln122_fu_179_p2 == 1'd0))) begin
            j3_fu_90 <= add_ln123_fu_239_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j3_fu_90 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_650 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln616_reg_680 <= and_ln616_fu_418_p2;
        icmp_ln617_reg_669 <= icmp_ln617_fu_397_p2;
        man_V_2_reg_657 <= man_V_2_fu_358_p3;
        sh_amt_reg_662 <= sh_amt_fu_389_p3;
        trunc_ln618_reg_674 <= trunc_ln618_fu_403_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln616_reg_680_pp0_iter22_reg <= and_ln616_reg_680;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        exp_tmp_reg_640 <= {{ireg_fu_302_p1[62:52]}};
        icmp_ln606_reg_650 <= icmp_ln606_fu_332_p2;
        icmp_ln606_reg_650_pp0_iter21_reg <= icmp_ln606_reg_650;
        icmp_ln606_reg_650_pp0_iter22_reg <= icmp_ln606_reg_650_pp0_iter21_reg;
        inp_sumRow_load_reg_619 <= inp_sumRow_q0;
        man_V_2_reg_657_pp0_iter22_reg <= man_V_2_reg_657;
        p_Result_s_reg_635 <= ireg_fu_302_p1[32'd63];
        select_ln122_reg_586_pp0_iter10_reg <= select_ln122_reg_586_pp0_iter9_reg;
        select_ln122_reg_586_pp0_iter11_reg <= select_ln122_reg_586_pp0_iter10_reg;
        select_ln122_reg_586_pp0_iter12_reg <= select_ln122_reg_586_pp0_iter11_reg;
        select_ln122_reg_586_pp0_iter13_reg <= select_ln122_reg_586_pp0_iter12_reg;
        select_ln122_reg_586_pp0_iter14_reg <= select_ln122_reg_586_pp0_iter13_reg;
        select_ln122_reg_586_pp0_iter15_reg <= select_ln122_reg_586_pp0_iter14_reg;
        select_ln122_reg_586_pp0_iter16_reg <= select_ln122_reg_586_pp0_iter15_reg;
        select_ln122_reg_586_pp0_iter17_reg <= select_ln122_reg_586_pp0_iter16_reg;
        select_ln122_reg_586_pp0_iter18_reg <= select_ln122_reg_586_pp0_iter17_reg;
        select_ln122_reg_586_pp0_iter19_reg <= select_ln122_reg_586_pp0_iter18_reg;
        select_ln122_reg_586_pp0_iter20_reg <= select_ln122_reg_586_pp0_iter19_reg;
        select_ln122_reg_586_pp0_iter21_reg <= select_ln122_reg_586_pp0_iter20_reg;
        select_ln122_reg_586_pp0_iter22_reg <= select_ln122_reg_586_pp0_iter21_reg;
        select_ln122_reg_586_pp0_iter23_reg <= select_ln122_reg_586_pp0_iter22_reg;
        select_ln122_reg_586_pp0_iter2_reg <= select_ln122_reg_586_pp0_iter1_reg;
        select_ln122_reg_586_pp0_iter3_reg <= select_ln122_reg_586_pp0_iter2_reg;
        select_ln122_reg_586_pp0_iter4_reg <= select_ln122_reg_586_pp0_iter3_reg;
        select_ln122_reg_586_pp0_iter5_reg <= select_ln122_reg_586_pp0_iter4_reg;
        select_ln122_reg_586_pp0_iter6_reg <= select_ln122_reg_586_pp0_iter5_reg;
        select_ln122_reg_586_pp0_iter7_reg <= select_ln122_reg_586_pp0_iter6_reg;
        select_ln122_reg_586_pp0_iter8_reg <= select_ln122_reg_586_pp0_iter7_reg;
        select_ln122_reg_586_pp0_iter9_reg <= select_ln122_reg_586_pp0_iter8_reg;
        trunc_ln122_reg_605_pp0_iter10_reg <= trunc_ln122_reg_605_pp0_iter9_reg;
        trunc_ln122_reg_605_pp0_iter11_reg <= trunc_ln122_reg_605_pp0_iter10_reg;
        trunc_ln122_reg_605_pp0_iter12_reg <= trunc_ln122_reg_605_pp0_iter11_reg;
        trunc_ln122_reg_605_pp0_iter13_reg <= trunc_ln122_reg_605_pp0_iter12_reg;
        trunc_ln122_reg_605_pp0_iter14_reg <= trunc_ln122_reg_605_pp0_iter13_reg;
        trunc_ln122_reg_605_pp0_iter15_reg <= trunc_ln122_reg_605_pp0_iter14_reg;
        trunc_ln122_reg_605_pp0_iter16_reg <= trunc_ln122_reg_605_pp0_iter15_reg;
        trunc_ln122_reg_605_pp0_iter17_reg <= trunc_ln122_reg_605_pp0_iter16_reg;
        trunc_ln122_reg_605_pp0_iter18_reg <= trunc_ln122_reg_605_pp0_iter17_reg;
        trunc_ln122_reg_605_pp0_iter19_reg <= trunc_ln122_reg_605_pp0_iter18_reg;
        trunc_ln122_reg_605_pp0_iter20_reg <= trunc_ln122_reg_605_pp0_iter19_reg;
        trunc_ln122_reg_605_pp0_iter21_reg <= trunc_ln122_reg_605_pp0_iter20_reg;
        trunc_ln122_reg_605_pp0_iter22_reg <= trunc_ln122_reg_605_pp0_iter21_reg;
        trunc_ln122_reg_605_pp0_iter23_reg <= trunc_ln122_reg_605_pp0_iter22_reg;
        trunc_ln122_reg_605_pp0_iter2_reg <= trunc_ln122_reg_605_pp0_iter1_reg;
        trunc_ln122_reg_605_pp0_iter3_reg <= trunc_ln122_reg_605_pp0_iter2_reg;
        trunc_ln122_reg_605_pp0_iter4_reg <= trunc_ln122_reg_605_pp0_iter3_reg;
        trunc_ln122_reg_605_pp0_iter5_reg <= trunc_ln122_reg_605_pp0_iter4_reg;
        trunc_ln122_reg_605_pp0_iter6_reg <= trunc_ln122_reg_605_pp0_iter5_reg;
        trunc_ln122_reg_605_pp0_iter7_reg <= trunc_ln122_reg_605_pp0_iter6_reg;
        trunc_ln122_reg_605_pp0_iter8_reg <= trunc_ln122_reg_605_pp0_iter7_reg;
        trunc_ln122_reg_605_pp0_iter9_reg <= trunc_ln122_reg_605_pp0_iter8_reg;
        trunc_ln600_reg_645 <= trunc_ln600_fu_328_p1;
        v62_reg_624 <= v100_q0;
        v64_reg_629 <= grp_fu_2235_p_dout0;
        v64_reg_629_pp0_iter19_reg <= v64_reg_629;
        v64_reg_629_pp0_iter20_reg <= v64_reg_629_pp0_iter19_reg;
        v64_reg_629_pp0_iter21_reg <= v64_reg_629_pp0_iter20_reg;
        v64_reg_629_pp0_iter22_reg <= v64_reg_629_pp0_iter21_reg;
        v65_V_reg_700 <= v65_V_fu_515_p3;
        zext_ln129_mid2_v_reg_599_pp0_iter10_reg <= zext_ln129_mid2_v_reg_599_pp0_iter9_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter11_reg <= zext_ln129_mid2_v_reg_599_pp0_iter10_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter12_reg <= zext_ln129_mid2_v_reg_599_pp0_iter11_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter13_reg <= zext_ln129_mid2_v_reg_599_pp0_iter12_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter14_reg <= zext_ln129_mid2_v_reg_599_pp0_iter13_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter15_reg <= zext_ln129_mid2_v_reg_599_pp0_iter14_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter16_reg <= zext_ln129_mid2_v_reg_599_pp0_iter15_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter17_reg <= zext_ln129_mid2_v_reg_599_pp0_iter16_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter18_reg <= zext_ln129_mid2_v_reg_599_pp0_iter17_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter19_reg <= zext_ln129_mid2_v_reg_599_pp0_iter18_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter20_reg <= zext_ln129_mid2_v_reg_599_pp0_iter19_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter21_reg <= zext_ln129_mid2_v_reg_599_pp0_iter20_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter22_reg <= zext_ln129_mid2_v_reg_599_pp0_iter21_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter23_reg <= zext_ln129_mid2_v_reg_599_pp0_iter22_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter2_reg <= zext_ln129_mid2_v_reg_599_pp0_iter1_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter3_reg <= zext_ln129_mid2_v_reg_599_pp0_iter2_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter4_reg <= zext_ln129_mid2_v_reg_599_pp0_iter3_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter5_reg <= zext_ln129_mid2_v_reg_599_pp0_iter4_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter6_reg <= zext_ln129_mid2_v_reg_599_pp0_iter5_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter7_reg <= zext_ln129_mid2_v_reg_599_pp0_iter6_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter8_reg <= zext_ln129_mid2_v_reg_599_pp0_iter7_reg;
        zext_ln129_mid2_v_reg_599_pp0_iter9_reg <= zext_ln129_mid2_v_reg_599_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln122_reg_586_pp0_iter1_reg <= select_ln122_reg_586;
        trunc_ln122_reg_605_pp0_iter1_reg <= trunc_ln122_reg_605;
        zext_ln129_mid2_v_reg_599_pp0_iter1_reg <= zext_ln129_mid2_v_reg_599;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_650_pp0_iter21_reg == 1'd0) & (1'd1 == and_ln616_reg_680) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln620_reg_690 <= icmp_ln620_fu_427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln122_fu_179_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln122_2_reg_592 <= select_ln122_2_fu_217_p3;
        select_ln122_reg_586 <= select_ln122_fu_209_p3;
        trunc_ln122_reg_605 <= trunc_ln122_fu_235_p1;
        zext_ln129_mid2_v_reg_599 <= {{select_ln122_2_fu_217_p3[3:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_650_pp0_iter21_reg == 1'd0) & (1'd0 == and_ln616_reg_680) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln617_reg_695 <= select_ln617_fu_464_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_650_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln616_reg_685 <= sext_ln616_fu_424_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln122_fu_179_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i4_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i4_load = i4_fu_94;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten7_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten7_load = indvar_flatten7_fu_98;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j3_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j3_load = j3_fu_90;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v100_ce0 = 1'b1;
    end else begin
        v100_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_1_ce0 = 1'b1;
    end else begin
        v101_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln122_reg_605_pp0_iter23_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_1_we0 = 1'b1;
    end else begin
        v101_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_ce0 = 1'b1;
    end else begin
        v101_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (trunc_ln122_reg_605_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v101_V_we0 = 1'b1;
    end else begin
        v101_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_365_p2 = (12'd1075 - zext_ln501_fu_338_p1);

assign add_ln122_1_fu_185_p2 = (ap_sig_allocacmp_indvar_flatten7_load + 8'd1);

assign add_ln122_fu_197_p2 = (ap_sig_allocacmp_i4_load + 4'd1);

assign add_ln123_fu_239_p2 = (select_ln122_fu_209_p3 + 4'd1);

assign add_ln125_fu_291_p2 = (sub_ln125_fu_282_p2 + zext_ln125_2_fu_288_p1);

assign add_ln129_fu_549_p2 = (sub_ln129_fu_540_p2 + zext_ln125_1_fu_546_p1);

assign add_ln616_fu_377_p2 = ($signed(F2_fu_365_p2) + $signed(12'd4080));

assign and_ln616_fu_418_p2 = (xor_ln617_fu_412_p2 & icmp_ln616_fu_371_p2);

assign and_ln617_fu_459_p2 = (xor_ln606_fu_454_p2 & icmp_ln617_reg_669);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln621_fu_474_p2 = $signed(man_V_2_reg_657_pp0_iter22_reg) >>> zext_ln621_fu_471_p1;

assign bitcast_ln768_fu_483_p1 = v64_reg_629_pp0_iter22_reg;

assign grp_fu_2235_p_ce = 1'b1;

assign grp_fu_2235_p_din0 = v62_reg_624;

assign grp_fu_2235_p_din1 = inp_sumRow_load_reg_619;

assign grp_fu_2239_p_ce = 1'b1;

assign grp_fu_2239_p_din0 = v64_reg_629;

assign icmp_ln122_fu_179_p2 = ((ap_sig_allocacmp_indvar_flatten7_load == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_203_p2 = ((ap_sig_allocacmp_j3_load == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln606_fu_332_p2 = ((trunc_ln590_fu_306_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_371_p2 = (($signed(F2_fu_365_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_397_p2 = ((F2_fu_365_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_427_p2 = ((sh_amt_reg_662 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_432_p2 = ((sh_amt_reg_662 < 12'd24) ? 1'b1 : 1'b0);

assign inp_sumRow_address0 = zext_ln122_fu_260_p1;

assign ireg_fu_302_p1 = grp_fu_2239_p_dout0;

assign man_V_1_fu_352_p2 = (54'd0 - zext_ln604_fu_348_p1);

assign man_V_2_fu_358_p3 = ((p_Result_s_reg_635[0:0] == 1'b1) ? man_V_1_fu_352_p2 : zext_ln604_fu_348_p1);

assign or_ln617_fu_407_p2 = (icmp_ln617_fu_397_p2 | icmp_ln606_reg_650);

assign p_Result_33_fu_341_p3 = {{1'd1}, {trunc_ln600_reg_645}};

assign p_shl_fu_264_p3 = {{select_ln122_2_reg_592}, {4'd0}};

assign select_ln122_2_fu_217_p3 = ((icmp_ln123_fu_203_p2[0:0] == 1'b1) ? add_ln122_fu_197_p2 : ap_sig_allocacmp_i4_load);

assign select_ln122_fu_209_p3 = ((icmp_ln123_fu_203_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j3_load);

assign select_ln616_fu_509_p3 = ((and_ln616_reg_680_pp0_iter22_reg[0:0] == 1'b1) ? select_ln620_fu_502_p3 : select_ln617_reg_695);

assign select_ln617_fu_464_p3 = ((and_ln617_fu_459_p2[0:0] == 1'b1) ? trunc_ln618_reg_674 : select_ln638_fu_446_p3);

assign select_ln620_fu_502_p3 = ((icmp_ln620_reg_690[0:0] == 1'b1) ? trunc_ln621_fu_479_p1 : select_ln623_fu_494_p3);

assign select_ln623_fu_494_p3 = ((tmp_28_fu_486_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln638_fu_446_p3 = ((icmp_ln638_fu_432_p2[0:0] == 1'b1) ? shl_ln639_fu_441_p2 : 24'd0);

assign sext_ln616_fu_424_p1 = sh_amt_reg_662;

assign sext_ln616cast_fu_437_p1 = sext_ln616_fu_424_p1[23:0];

assign sh_amt_fu_389_p3 = ((icmp_ln616_fu_371_p2[0:0] == 1'b1) ? add_ln616_fu_377_p2 : sub_ln616_fu_383_p2);

assign shl_ln639_fu_441_p2 = trunc_ln618_reg_674 << sext_ln616cast_fu_437_p1;

assign sub_ln125_fu_282_p2 = (p_shl_fu_264_p3 - zext_ln125_fu_278_p1);

assign sub_ln129_fu_540_p2 = (tmp_s_fu_522_p3 - zext_ln129_fu_536_p1);

assign sub_ln616_fu_383_p2 = (12'd16 - F2_fu_365_p2);

assign tmp_19_fu_529_p3 = {{zext_ln129_mid2_v_reg_599_pp0_iter23_reg}, {2'd0}};

assign tmp_28_fu_486_p3 = bitcast_ln768_fu_483_p1[32'd31];

assign tmp_fu_271_p3 = {{select_ln122_2_reg_592}, {2'd0}};

assign tmp_s_fu_522_p3 = {{zext_ln129_mid2_v_reg_599_pp0_iter23_reg}, {4'd0}};

assign trunc_ln122_fu_235_p1 = select_ln122_2_fu_217_p3[0:0];

assign trunc_ln590_fu_306_p1 = ireg_fu_302_p1[62:0];

assign trunc_ln600_fu_328_p1 = ireg_fu_302_p1[51:0];

assign trunc_ln618_fu_403_p1 = man_V_2_fu_358_p3[23:0];

assign trunc_ln621_fu_479_p1 = ashr_ln621_fu_474_p2[23:0];

assign v100_address0 = zext_ln125_3_fu_297_p1;

assign v101_V_1_address0 = zext_ln129_1_fu_555_p1;

assign v101_V_1_d0 = v65_V_reg_700;

assign v101_V_address0 = zext_ln129_1_fu_555_p1;

assign v101_V_d0 = v65_V_reg_700;

assign v65_V_fu_515_p3 = ((icmp_ln606_reg_650_pp0_iter22_reg[0:0] == 1'b1) ? 24'd0 : select_ln616_fu_509_p3);

assign xor_ln606_fu_454_p2 = (icmp_ln606_reg_650_pp0_iter21_reg ^ 1'd1);

assign xor_ln617_fu_412_p2 = (or_ln617_fu_407_p2 ^ 1'd1);

assign zext_ln122_fu_260_p1 = select_ln122_2_reg_592;

assign zext_ln125_1_fu_546_p1 = select_ln122_reg_586_pp0_iter23_reg;

assign zext_ln125_2_fu_288_p1 = select_ln122_reg_586;

assign zext_ln125_3_fu_297_p1 = add_ln125_fu_291_p2;

assign zext_ln125_fu_278_p1 = tmp_fu_271_p3;

assign zext_ln129_1_fu_555_p1 = add_ln129_fu_549_p2;

assign zext_ln129_fu_536_p1 = tmp_19_fu_529_p3;

assign zext_ln501_fu_338_p1 = exp_tmp_reg_640;

assign zext_ln604_fu_348_p1 = p_Result_33_fu_341_p3;

assign zext_ln621_fu_471_p1 = $unsigned(sext_ln616_reg_685);

endmodule //Bert_layer_Self_attention_Pipeline_l_update_i4_l_j3
