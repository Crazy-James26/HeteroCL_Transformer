// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Layer_norm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v137_address0,
        v137_ce0,
        v137_q0,
        v138_address0,
        v138_ce0,
        v138_q0,
        v139_address0,
        v139_ce0,
        v139_q0,
        v140_0_V_address0,
        v140_0_V_ce0,
        v140_0_V_we0,
        v140_0_V_d0,
        v140_1_V_address0,
        v140_1_V_ce0,
        v140_1_V_we0,
        v140_1_V_d0,
        v140_2_V_address0,
        v140_2_V_ce0,
        v140_2_V_we0,
        v140_2_V_d0,
        v140_3_V_address0,
        v140_3_V_ce0,
        v140_3_V_we0,
        v140_3_V_d0,
        v140_4_V_address0,
        v140_4_V_ce0,
        v140_4_V_we0,
        v140_4_V_d0,
        v140_5_V_address0,
        v140_5_V_ce0,
        v140_5_V_we0,
        v140_5_V_d0,
        v140_6_V_address0,
        v140_6_V_ce0,
        v140_6_V_we0,
        v140_6_V_d0,
        v140_7_V_address0,
        v140_7_V_ce0,
        v140_7_V_we0,
        v140_7_V_d0,
        v140_8_V_address0,
        v140_8_V_ce0,
        v140_8_V_we0,
        v140_8_V_d0,
        v140_9_V_address0,
        v140_9_V_ce0,
        v140_9_V_we0,
        v140_9_V_d0,
        v140_10_V_address0,
        v140_10_V_ce0,
        v140_10_V_we0,
        v140_10_V_d0,
        v140_11_V_address0,
        v140_11_V_ce0,
        v140_11_V_we0,
        v140_11_V_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_pp0_stage0 = 12'd8;
parameter    ap_ST_fsm_pp0_stage1 = 12'd16;
parameter    ap_ST_fsm_pp0_stage2 = 12'd32;
parameter    ap_ST_fsm_pp0_stage3 = 12'd64;
parameter    ap_ST_fsm_pp0_stage4 = 12'd128;
parameter    ap_ST_fsm_pp0_stage5 = 12'd256;
parameter    ap_ST_fsm_state37 = 12'd512;
parameter    ap_ST_fsm_pp1_stage0 = 12'd1024;
parameter    ap_ST_fsm_state85 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v137_address0;
output   v137_ce0;
input  [31:0] v137_q0;
output  [9:0] v138_address0;
output   v138_ce0;
input  [31:0] v138_q0;
output  [9:0] v139_address0;
output   v139_ce0;
input  [31:0] v139_q0;
output  [9:0] v140_0_V_address0;
output   v140_0_V_ce0;
output   v140_0_V_we0;
output  [23:0] v140_0_V_d0;
output  [9:0] v140_1_V_address0;
output   v140_1_V_ce0;
output   v140_1_V_we0;
output  [23:0] v140_1_V_d0;
output  [9:0] v140_2_V_address0;
output   v140_2_V_ce0;
output   v140_2_V_we0;
output  [23:0] v140_2_V_d0;
output  [9:0] v140_3_V_address0;
output   v140_3_V_ce0;
output   v140_3_V_we0;
output  [23:0] v140_3_V_d0;
output  [9:0] v140_4_V_address0;
output   v140_4_V_ce0;
output   v140_4_V_we0;
output  [23:0] v140_4_V_d0;
output  [9:0] v140_5_V_address0;
output   v140_5_V_ce0;
output   v140_5_V_we0;
output  [23:0] v140_5_V_d0;
output  [9:0] v140_6_V_address0;
output   v140_6_V_ce0;
output   v140_6_V_we0;
output  [23:0] v140_6_V_d0;
output  [9:0] v140_7_V_address0;
output   v140_7_V_ce0;
output   v140_7_V_we0;
output  [23:0] v140_7_V_d0;
output  [9:0] v140_8_V_address0;
output   v140_8_V_ce0;
output   v140_8_V_we0;
output  [23:0] v140_8_V_d0;
output  [9:0] v140_9_V_address0;
output   v140_9_V_ce0;
output   v140_9_V_we0;
output  [23:0] v140_9_V_d0;
output  [9:0] v140_10_V_address0;
output   v140_10_V_ce0;
output   v140_10_V_we0;
output  [23:0] v140_10_V_d0;
output  [9:0] v140_11_V_address0;
output   v140_11_V_ce0;
output   v140_11_V_we0;
output  [23:0] v140_11_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] v137_address0;
reg v137_ce0;
reg v138_ce0;
reg v139_ce0;
reg v140_0_V_ce0;
reg v140_0_V_we0;
reg v140_1_V_ce0;
reg v140_1_V_we0;
reg v140_2_V_ce0;
reg v140_2_V_we0;
reg v140_3_V_ce0;
reg v140_3_V_we0;
reg v140_4_V_ce0;
reg v140_4_V_we0;
reg v140_5_V_ce0;
reg v140_5_V_we0;
reg v140_6_V_ce0;
reg v140_6_V_we0;
reg v140_7_V_ce0;
reg v140_7_V_we0;
reg v140_8_V_ce0;
reg v140_8_V_we0;
reg v140_9_V_ce0;
reg v140_9_V_we0;
reg v140_10_V_ce0;
reg v140_10_V_we0;
reg v140_11_V_ce0;
reg v140_11_V_we0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] indvar_flatten_reg_451;
reg   [3:0] i8_0_reg_462;
reg   [9:0] j6_0_reg_473;
reg   [13:0] indvar_flatten21_reg_484;
reg   [3:0] i9_0_reg_495;
reg   [9:0] j7_0_reg_506;
reg   [31:0] reg_563;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state18_pp0_stage2_iter2;
wire    ap_block_state24_pp0_stage2_iter3;
wire    ap_block_state30_pp0_stage2_iter4;
wire    ap_block_state36_pp0_stage2_iter5;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln304_reg_1102;
wire    ap_block_state38_pp1_stage0_iter0;
wire    ap_block_state39_pp1_stage0_iter1;
wire    ap_block_state40_pp1_stage0_iter2;
wire    ap_block_state41_pp1_stage0_iter3;
wire    ap_block_state42_pp1_stage0_iter4;
wire    ap_block_state43_pp1_stage0_iter5;
wire    ap_block_state44_pp1_stage0_iter6;
wire    ap_block_state45_pp1_stage0_iter7;
wire    ap_block_state46_pp1_stage0_iter8;
wire    ap_block_state47_pp1_stage0_iter9;
wire    ap_block_state48_pp1_stage0_iter10;
wire    ap_block_state49_pp1_stage0_iter11;
wire    ap_block_state50_pp1_stage0_iter12;
wire    ap_block_state51_pp1_stage0_iter13;
wire    ap_block_state52_pp1_stage0_iter14;
wire    ap_block_state53_pp1_stage0_iter15;
wire    ap_block_state54_pp1_stage0_iter16;
wire    ap_block_state55_pp1_stage0_iter17;
wire    ap_block_state56_pp1_stage0_iter18;
wire    ap_block_state57_pp1_stage0_iter19;
wire    ap_block_state58_pp1_stage0_iter20;
wire    ap_block_state59_pp1_stage0_iter21;
wire    ap_block_state60_pp1_stage0_iter22;
wire    ap_block_state61_pp1_stage0_iter23;
wire    ap_block_state62_pp1_stage0_iter24;
wire    ap_block_state63_pp1_stage0_iter25;
wire    ap_block_state64_pp1_stage0_iter26;
wire    ap_block_state65_pp1_stage0_iter27;
wire    ap_block_state66_pp1_stage0_iter28;
wire    ap_block_state67_pp1_stage0_iter29;
wire    ap_block_state68_pp1_stage0_iter30;
wire    ap_block_state69_pp1_stage0_iter31;
wire    ap_block_state70_pp1_stage0_iter32;
wire    ap_block_state71_pp1_stage0_iter33;
wire    ap_block_state72_pp1_stage0_iter34;
wire    ap_block_state73_pp1_stage0_iter35;
wire    ap_block_state74_pp1_stage0_iter36;
wire    ap_block_state75_pp1_stage0_iter37;
wire    ap_block_state76_pp1_stage0_iter38;
wire    ap_block_state77_pp1_stage0_iter39;
wire    ap_block_state78_pp1_stage0_iter40;
wire    ap_block_state79_pp1_stage0_iter41;
wire    ap_block_state80_pp1_stage0_iter42;
wire    ap_block_state81_pp1_stage0_iter43;
wire    ap_block_state82_pp1_stage0_iter44;
wire    ap_block_state83_pp1_stage0_iter45;
wire    ap_block_state84_pp1_stage0_iter46;
wire    ap_block_pp1_stage0_11001;
reg    ap_enable_reg_pp1_iter12;
reg   [0:0] icmp_ln329_reg_1176;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter11_reg;
wire   [31:0] mean_q0;
reg   [31:0] reg_571;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state19_pp0_stage3_iter2;
wire    ap_block_state25_pp0_stage3_iter3;
wire    ap_block_state31_pp0_stage3_iter4;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_530_p2;
reg   [31:0] reg_577;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state21_pp0_stage5_iter2;
wire    ap_block_state27_pp0_stage5_iter3;
wire    ap_block_state33_pp0_stage5_iter4;
wire    ap_block_pp0_stage5_11001;
reg    ap_enable_reg_pp1_iter21;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter20_reg;
wire   [31:0] grp_fu_517_p2;
reg   [31:0] reg_583;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state17_pp0_stage1_iter2;
wire    ap_block_state23_pp0_stage1_iter3;
wire    ap_block_state29_pp0_stage1_iter4;
wire    ap_block_state35_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln304_reg_1102_pp0_iter1_reg;
reg    ap_enable_reg_pp1_iter17;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter16_reg;
wire   [31:0] grp_fu_536_p2;
reg   [31:0] reg_589;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln305_1_reg_1157;
reg   [0:0] icmp_ln305_1_reg_1157_pp0_iter3_reg;
reg    ap_enable_reg_pp1_iter37;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter36_reg;
wire   [3:0] v142_fu_602_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln300_fu_613_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] v144_fu_619_p2;
wire   [0:0] icmp_ln304_fu_630_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state16_pp0_stage0_iter2;
wire    ap_block_state22_pp0_stage0_iter3;
wire    ap_block_state28_pp0_stage0_iter4;
wire    ap_block_state34_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [13:0] add_ln304_fu_636_p2;
reg   [13:0] add_ln304_reg_1106;
wire   [9:0] select_ln307_fu_654_p3;
reg   [9:0] select_ln307_reg_1111;
wire   [3:0] select_ln307_1_fu_662_p3;
reg   [3:0] select_ln307_1_reg_1117;
wire   [63:0] zext_ln307_fu_712_p1;
reg   [63:0] zext_ln307_reg_1130;
reg   [63:0] zext_ln307_reg_1130_pp0_iter1_reg;
reg   [63:0] zext_ln307_reg_1130_pp0_iter2_reg;
reg   [63:0] zext_ln307_reg_1130_pp0_iter3_reg;
reg   [63:0] zext_ln307_reg_1130_pp0_iter4_reg;
reg   [3:0] mean_addr_1_reg_1136;
reg   [3:0] mean_addr_1_reg_1136_pp0_iter1_reg;
reg   [3:0] mean_addr_1_reg_1136_pp0_iter2_reg;
reg   [3:0] mean_addr_1_reg_1136_pp0_iter3_reg;
reg   [3:0] mean2_addr_1_reg_1141;
reg   [3:0] mean2_addr_1_reg_1141_pp0_iter1_reg;
reg   [3:0] mean2_addr_1_reg_1141_pp0_iter2_reg;
reg   [3:0] mean2_addr_1_reg_1141_pp0_iter3_reg;
wire   [9:0] j6_fu_716_p2;
reg   [9:0] j6_reg_1146;
wire   [31:0] mean2_q0;
wire   [0:0] icmp_ln305_1_fu_721_p2;
reg   [0:0] icmp_ln305_1_reg_1157_pp0_iter2_reg;
reg   [0:0] icmp_ln305_1_reg_1157_pp0_iter4_reg;
reg   [0:0] icmp_ln305_1_reg_1157_pp0_iter5_reg;
reg   [31:0] v157_reg_1161;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state20_pp0_stage4_iter2;
wire    ap_block_state26_pp0_stage4_iter3;
wire    ap_block_state32_pp0_stage4_iter4;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] v158_reg_1166;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] v161_reg_1171;
wire   [0:0] icmp_ln329_fu_726_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter1_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter2_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter3_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter4_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter5_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter6_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter7_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter8_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter9_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter10_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter12_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter13_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter14_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter15_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter17_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter18_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter19_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter21_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter22_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter23_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter24_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter25_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter26_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter27_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter28_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter29_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter30_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter31_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter32_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter33_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter34_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter35_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter37_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter38_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter39_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter40_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter41_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter42_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter43_reg;
reg   [0:0] icmp_ln329_reg_1176_pp1_iter44_reg;
wire   [13:0] add_ln329_fu_732_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [9:0] select_ln333_fu_750_p3;
reg   [9:0] select_ln333_reg_1185;
reg   [9:0] select_ln333_reg_1185_pp1_iter1_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter2_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter3_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter4_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter5_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter6_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter7_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter8_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter9_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter10_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter11_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter12_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter13_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter14_reg;
reg   [9:0] select_ln333_reg_1185_pp1_iter15_reg;
wire   [3:0] select_ln333_2_fu_758_p3;
reg   [3:0] select_ln333_2_reg_1191;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter1_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter2_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter3_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter4_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter5_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter6_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter7_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter8_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter9_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter10_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter11_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter12_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter13_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter14_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter15_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter16_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter17_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter18_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter19_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter20_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter21_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter22_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter23_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter24_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter25_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter26_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter27_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter28_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter29_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter30_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter31_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter32_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter33_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter34_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter35_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter36_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter37_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter38_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter39_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter40_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter41_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter42_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter43_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter44_reg;
reg   [3:0] select_ln333_2_reg_1191_pp1_iter45_reg;
wire   [63:0] zext_ln333_fu_766_p1;
reg   [63:0] zext_ln333_reg_1198;
reg   [63:0] zext_ln333_reg_1198_pp1_iter1_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter2_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter3_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter4_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter5_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter6_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter7_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter8_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter9_reg;
reg   [63:0] zext_ln333_reg_1198_pp1_iter10_reg;
wire   [9:0] j7_fu_771_p2;
wire   [31:0] var_q0;
reg    ap_enable_reg_pp1_iter1;
wire   [63:0] grp_fu_546_p1;
reg   [63:0] v171_mid2_v_v_reg_1218;
wire   [63:0] grp_fu_558_p2;
reg   [63:0] v171_mid2_v_reg_1223;
wire   [31:0] grp_fu_543_p1;
reg   [31:0] v171_mid2_reg_1228;
wire   [63:0] zext_ln332_fu_819_p1;
reg   [63:0] zext_ln332_reg_1243;
reg   [63:0] zext_ln332_reg_1243_pp1_iter17_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter18_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter19_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter20_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter21_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter22_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter23_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter24_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter25_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter26_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter27_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter28_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter29_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter30_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter31_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter32_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter33_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter34_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter35_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter36_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter37_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter38_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter39_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter40_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter41_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter42_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter43_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter44_reg;
reg   [63:0] zext_ln332_reg_1243_pp1_iter45_reg;
reg   [31:0] v165_reg_1265;
wire   [31:0] grp_fu_553_p2;
reg   [31:0] v172_reg_1270;
reg   [31:0] v174_reg_1280;
wire   [31:0] grp_fu_526_p2;
reg   [31:0] v175_reg_1285;
reg   [31:0] v175_reg_1285_pp1_iter43_reg;
reg   [31:0] v175_reg_1285_pp1_iter44_reg;
wire   [53:0] man_V_4_fu_875_p3;
reg   [53:0] man_V_4_reg_1291;
wire   [0:0] icmp_ln571_fu_883_p2;
reg   [0:0] icmp_ln571_reg_1296;
wire   [0:0] icmp_ln581_fu_895_p2;
reg   [0:0] icmp_ln581_reg_1302;
wire  signed [11:0] sh_amt_fu_913_p3;
reg  signed [11:0] sh_amt_reg_1308;
wire   [0:0] icmp_ln582_fu_921_p2;
reg   [0:0] icmp_ln582_reg_1315;
wire   [23:0] trunc_ln583_fu_927_p1;
reg   [23:0] trunc_ln583_reg_1321;
reg   [23:0] trunc_ln583_reg_1321_pp1_iter45_reg;
wire  signed [31:0] sext_ln581_fu_931_p1;
reg  signed [31:0] sext_ln581_reg_1327;
wire   [23:0] select_ln585_1_fu_1034_p3;
reg   [23:0] select_ln585_1_reg_1332;
wire   [0:0] and_ln603_fu_1053_p2;
reg   [0:0] and_ln603_reg_1337;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter5;
wire    ap_CS_fsm_state37;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state38;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
reg    ap_enable_reg_pp1_iter26;
reg    ap_enable_reg_pp1_iter27;
reg    ap_enable_reg_pp1_iter28;
reg    ap_enable_reg_pp1_iter29;
reg    ap_enable_reg_pp1_iter30;
reg    ap_enable_reg_pp1_iter31;
reg    ap_enable_reg_pp1_iter32;
reg    ap_enable_reg_pp1_iter33;
reg    ap_enable_reg_pp1_iter34;
reg    ap_enable_reg_pp1_iter35;
reg    ap_enable_reg_pp1_iter36;
reg    ap_enable_reg_pp1_iter38;
reg    ap_enable_reg_pp1_iter39;
reg    ap_enable_reg_pp1_iter40;
reg    ap_enable_reg_pp1_iter41;
reg    ap_enable_reg_pp1_iter42;
reg    ap_enable_reg_pp1_iter43;
reg    ap_enable_reg_pp1_iter44;
reg    ap_enable_reg_pp1_iter45;
reg    ap_enable_reg_pp1_iter46;
reg   [3:0] mean_address0;
reg    mean_ce0;
reg    mean_we0;
reg   [31:0] mean_d0;
reg   [3:0] mean2_address0;
reg    mean2_ce0;
reg    mean2_we0;
reg   [31:0] mean2_d0;
reg   [3:0] var_address0;
reg    var_ce0;
reg    var_we0;
reg   [3:0] v142_0_reg_429;
wire   [0:0] icmp_ln296_fu_596_p2;
reg   [3:0] v144_0_reg_440;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_455_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i8_0_phi_fu_466_p4;
reg   [9:0] ap_phi_mux_j6_0_phi_fu_477_p4;
reg   [3:0] ap_phi_mux_i9_0_phi_fu_499_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln297_fu_608_p1;
wire   [63:0] zext_ln301_fu_625_p1;
wire  signed [63:0] sext_ln307_fu_707_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln333_4_fu_814_p1;
wire    ap_block_pp0_stage4;
wire   [23:0] v176_V_fu_1067_p3;
reg   [31:0] grp_fu_517_p0;
reg   [31:0] grp_fu_517_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] grp_fu_530_p0;
reg   [31:0] grp_fu_530_p1;
reg   [31:0] grp_fu_536_p0;
reg   [31:0] grp_fu_536_p1;
wire   [0:0] icmp_ln305_fu_648_p2;
wire   [3:0] i8_fu_642_p2;
wire   [13:0] tmp_fu_670_p3;
wire   [11:0] tmp_20_fu_681_p3;
wire   [14:0] zext_ln307_1_fu_677_p1;
wire   [14:0] zext_ln307_2_fu_688_p1;
wire   [14:0] sub_ln307_fu_692_p2;
wire   [14:0] zext_ln307_3_fu_698_p1;
wire   [14:0] add_ln307_fu_701_p2;
wire   [0:0] icmp_ln330_fu_744_p2;
wire   [3:0] i9_fu_738_p2;
wire   [13:0] tmp_51_fu_777_p3;
wire   [11:0] tmp_52_fu_788_p3;
wire   [14:0] zext_ln333_1_fu_784_p1;
wire   [14:0] zext_ln333_2_fu_795_p1;
wire   [14:0] zext_ln333_3_fu_805_p1;
wire   [14:0] sub_ln333_fu_799_p2;
wire   [14:0] add_ln333_fu_808_p2;
wire   [63:0] grp_fu_550_p1;
wire   [63:0] ireg_V_fu_823_p1;
wire   [10:0] exp_tmp_V_fu_839_p4;
wire   [51:0] trunc_ln565_fu_853_p1;
wire   [52:0] tmp_5_fu_857_p3;
wire   [53:0] p_Result_95_fu_865_p1;
wire   [0:0] p_Result_s_fu_831_p3;
wire   [53:0] man_V_3_fu_869_p2;
wire   [62:0] trunc_ln556_fu_827_p1;
wire   [11:0] zext_ln461_fu_849_p1;
wire   [11:0] F2_fu_889_p2;
wire   [11:0] add_ln581_fu_901_p2;
wire   [11:0] sub_ln581_fu_907_p2;
wire   [53:0] zext_ln586_fu_944_p1;
wire   [53:0] ashr_ln586_fu_948_p2;
wire   [31:0] bitcast_ln696_fu_957_p1;
wire   [0:0] tmp_54_fu_960_p3;
wire   [0:0] xor_ln571_fu_976_p2;
wire   [0:0] and_ln582_fu_981_p2;
wire   [0:0] or_ln582_fu_993_p2;
wire   [0:0] xor_ln582_fu_997_p2;
wire   [0:0] icmp_ln585_fu_934_p2;
wire   [0:0] and_ln581_fu_1003_p2;
wire   [0:0] xor_ln585_fu_1008_p2;
wire   [0:0] and_ln585_fu_1014_p2;
wire   [23:0] select_ln588_fu_968_p3;
wire   [23:0] select_ln582_fu_986_p3;
wire   [0:0] and_ln585_2_fu_1028_p2;
wire   [23:0] trunc_ln586_fu_953_p1;
wire   [23:0] select_ln585_fu_1020_p3;
wire   [0:0] or_ln581_fu_1042_p2;
wire   [0:0] icmp_ln603_fu_939_p2;
wire   [0:0] xor_ln581_fu_1047_p2;
wire   [23:0] sext_ln581cast_fu_1059_p1;
wire   [23:0] shl_ln604_fu_1062_p2;
reg   [1:0] grp_fu_517_opcode;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp1_stage0_00001;
wire    ap_CS_fsm_state85;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp1_iter28 = 1'b0;
#0 ap_enable_reg_pp1_iter29 = 1'b0;
#0 ap_enable_reg_pp1_iter30 = 1'b0;
#0 ap_enable_reg_pp1_iter31 = 1'b0;
#0 ap_enable_reg_pp1_iter32 = 1'b0;
#0 ap_enable_reg_pp1_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter34 = 1'b0;
#0 ap_enable_reg_pp1_iter35 = 1'b0;
#0 ap_enable_reg_pp1_iter36 = 1'b0;
#0 ap_enable_reg_pp1_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter39 = 1'b0;
#0 ap_enable_reg_pp1_iter40 = 1'b0;
#0 ap_enable_reg_pp1_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter42 = 1'b0;
#0 ap_enable_reg_pp1_iter43 = 1'b0;
#0 ap_enable_reg_pp1_iter44 = 1'b0;
#0 ap_enable_reg_pp1_iter45 = 1'b0;
#0 ap_enable_reg_pp1_iter46 = 1'b0;
end

Softmax_layer_inpfYi #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
mean_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_address0),
    .ce0(mean_ce0),
    .we0(mean_we0),
    .d0(mean_d0),
    .q0(mean_q0)
);

Softmax_layer_inpfYi #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
mean2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean2_address0),
    .ce0(mean2_ce0),
    .we0(mean2_we0),
    .d0(mean2_d0),
    .q0(mean2_q0)
);

Softmax_layer_inpfYi #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
var_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(var_address0),
    .ce0(var_ce0),
    .we0(var_we0),
    .d0(grp_fu_517_p2),
    .q0(var_q0)
);

Bert_layer_faddfsrcU #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_faddfsrcU_U982(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_517_p0),
    .din1(grp_fu_517_p1),
    .opcode(grp_fu_517_opcode),
    .ce(1'b1),
    .dout(grp_fu_517_p2)
);

Bert_layer_fadd_3g8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fadd_3g8j_U983(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_589),
    .din1(v174_reg_1280),
    .ce(1'b1),
    .dout(grp_fu_526_p2)
);

Bert_layer_fmul_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fmul_3eOg_U984(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_530_p0),
    .din1(grp_fu_530_p1),
    .ce(1'b1),
    .dout(grp_fu_530_p2)
);

Bert_layer_fdiv_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fdiv_3hbi_U985(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_536_p0),
    .din1(grp_fu_536_p1),
    .ce(1'b1),
    .dout(grp_fu_536_p2)
);

Bert_layer_fptrunsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Bert_layer_fptrunsc4_U986(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v171_mid2_v_reg_1223),
    .ce(1'b1),
    .dout(grp_fu_543_p1)
);

Bert_layer_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Bert_layer_fpext_ibs_U987(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(var_q0),
    .ce(1'b1),
    .dout(grp_fu_546_p1)
);

Bert_layer_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Bert_layer_fpext_ibs_U988(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v175_reg_1285),
    .ce(1'b1),
    .dout(grp_fu_550_p1)
);

Bert_layer_fsqrt_tde #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fsqrt_tde_U989(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(v171_mid2_reg_1228),
    .ce(1'b1),
    .dout(grp_fu_553_p2)
);

Bert_layer_dadd_6udo #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Bert_layer_dadd_6udo_U990(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v171_mid2_v_v_reg_1218),
    .din1(64'd4532020583610935537),
    .ce(1'b1),
    .dout(grp_fu_558_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln300_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((icmp_ln300_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state38)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter46 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln300_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i8_0_reg_462 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        i8_0_reg_462 <= select_ln307_1_reg_1117;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i9_0_reg_495 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln329_reg_1176 == 1'd0))) begin
        i9_0_reg_495 <= select_ln333_2_reg_1191;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        indvar_flatten21_reg_484 <= 14'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln329_fu_726_p2 == 1'd0))) begin
        indvar_flatten21_reg_484 <= add_ln329_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln300_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_451 <= 14'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        indvar_flatten_reg_451 <= add_ln304_reg_1106;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln300_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j6_0_reg_473 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        j6_0_reg_473 <= j6_reg_1146;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        j7_0_reg_506 <= 10'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln329_fu_726_p2 == 1'd0))) begin
        j7_0_reg_506 <= j7_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln296_fu_596_p2 == 1'd0))) begin
        v142_0_reg_429 <= v142_fu_602_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v142_0_reg_429 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln296_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        v144_0_reg_440 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln300_fu_613_p2 == 1'd0))) begin
        v144_0_reg_440 <= v144_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln304_reg_1106 <= add_ln304_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter44_reg == 1'd0))) begin
        and_ln603_reg_1337 <= and_ln603_fu_1053_p2;
        select_ln585_1_reg_1332 <= select_ln585_1_fu_1034_p3;
        sext_ln581_reg_1327 <= sext_ln581_fu_931_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln304_reg_1102 <= icmp_ln304_fu_630_p2;
        icmp_ln304_reg_1102_pp0_iter1_reg <= icmp_ln304_reg_1102;
        icmp_ln305_1_reg_1157_pp0_iter2_reg <= icmp_ln305_1_reg_1157;
        icmp_ln305_1_reg_1157_pp0_iter3_reg <= icmp_ln305_1_reg_1157_pp0_iter2_reg;
        icmp_ln305_1_reg_1157_pp0_iter4_reg <= icmp_ln305_1_reg_1157_pp0_iter3_reg;
        icmp_ln305_1_reg_1157_pp0_iter5_reg <= icmp_ln305_1_reg_1157_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln304_reg_1102 == 1'd0))) begin
        icmp_ln305_1_reg_1157 <= icmp_ln305_1_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln329_reg_1176 <= icmp_ln329_fu_726_p2;
        icmp_ln329_reg_1176_pp1_iter1_reg <= icmp_ln329_reg_1176;
        select_ln333_2_reg_1191_pp1_iter1_reg <= select_ln333_2_reg_1191;
        select_ln333_reg_1185_pp1_iter1_reg <= select_ln333_reg_1185;
        zext_ln333_reg_1198_pp1_iter1_reg[3 : 0] <= zext_ln333_reg_1198[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln329_reg_1176_pp1_iter10_reg <= icmp_ln329_reg_1176_pp1_iter9_reg;
        icmp_ln329_reg_1176_pp1_iter11_reg <= icmp_ln329_reg_1176_pp1_iter10_reg;
        icmp_ln329_reg_1176_pp1_iter12_reg <= icmp_ln329_reg_1176_pp1_iter11_reg;
        icmp_ln329_reg_1176_pp1_iter13_reg <= icmp_ln329_reg_1176_pp1_iter12_reg;
        icmp_ln329_reg_1176_pp1_iter14_reg <= icmp_ln329_reg_1176_pp1_iter13_reg;
        icmp_ln329_reg_1176_pp1_iter15_reg <= icmp_ln329_reg_1176_pp1_iter14_reg;
        icmp_ln329_reg_1176_pp1_iter16_reg <= icmp_ln329_reg_1176_pp1_iter15_reg;
        icmp_ln329_reg_1176_pp1_iter17_reg <= icmp_ln329_reg_1176_pp1_iter16_reg;
        icmp_ln329_reg_1176_pp1_iter18_reg <= icmp_ln329_reg_1176_pp1_iter17_reg;
        icmp_ln329_reg_1176_pp1_iter19_reg <= icmp_ln329_reg_1176_pp1_iter18_reg;
        icmp_ln329_reg_1176_pp1_iter20_reg <= icmp_ln329_reg_1176_pp1_iter19_reg;
        icmp_ln329_reg_1176_pp1_iter21_reg <= icmp_ln329_reg_1176_pp1_iter20_reg;
        icmp_ln329_reg_1176_pp1_iter22_reg <= icmp_ln329_reg_1176_pp1_iter21_reg;
        icmp_ln329_reg_1176_pp1_iter23_reg <= icmp_ln329_reg_1176_pp1_iter22_reg;
        icmp_ln329_reg_1176_pp1_iter24_reg <= icmp_ln329_reg_1176_pp1_iter23_reg;
        icmp_ln329_reg_1176_pp1_iter25_reg <= icmp_ln329_reg_1176_pp1_iter24_reg;
        icmp_ln329_reg_1176_pp1_iter26_reg <= icmp_ln329_reg_1176_pp1_iter25_reg;
        icmp_ln329_reg_1176_pp1_iter27_reg <= icmp_ln329_reg_1176_pp1_iter26_reg;
        icmp_ln329_reg_1176_pp1_iter28_reg <= icmp_ln329_reg_1176_pp1_iter27_reg;
        icmp_ln329_reg_1176_pp1_iter29_reg <= icmp_ln329_reg_1176_pp1_iter28_reg;
        icmp_ln329_reg_1176_pp1_iter2_reg <= icmp_ln329_reg_1176_pp1_iter1_reg;
        icmp_ln329_reg_1176_pp1_iter30_reg <= icmp_ln329_reg_1176_pp1_iter29_reg;
        icmp_ln329_reg_1176_pp1_iter31_reg <= icmp_ln329_reg_1176_pp1_iter30_reg;
        icmp_ln329_reg_1176_pp1_iter32_reg <= icmp_ln329_reg_1176_pp1_iter31_reg;
        icmp_ln329_reg_1176_pp1_iter33_reg <= icmp_ln329_reg_1176_pp1_iter32_reg;
        icmp_ln329_reg_1176_pp1_iter34_reg <= icmp_ln329_reg_1176_pp1_iter33_reg;
        icmp_ln329_reg_1176_pp1_iter35_reg <= icmp_ln329_reg_1176_pp1_iter34_reg;
        icmp_ln329_reg_1176_pp1_iter36_reg <= icmp_ln329_reg_1176_pp1_iter35_reg;
        icmp_ln329_reg_1176_pp1_iter37_reg <= icmp_ln329_reg_1176_pp1_iter36_reg;
        icmp_ln329_reg_1176_pp1_iter38_reg <= icmp_ln329_reg_1176_pp1_iter37_reg;
        icmp_ln329_reg_1176_pp1_iter39_reg <= icmp_ln329_reg_1176_pp1_iter38_reg;
        icmp_ln329_reg_1176_pp1_iter3_reg <= icmp_ln329_reg_1176_pp1_iter2_reg;
        icmp_ln329_reg_1176_pp1_iter40_reg <= icmp_ln329_reg_1176_pp1_iter39_reg;
        icmp_ln329_reg_1176_pp1_iter41_reg <= icmp_ln329_reg_1176_pp1_iter40_reg;
        icmp_ln329_reg_1176_pp1_iter42_reg <= icmp_ln329_reg_1176_pp1_iter41_reg;
        icmp_ln329_reg_1176_pp1_iter43_reg <= icmp_ln329_reg_1176_pp1_iter42_reg;
        icmp_ln329_reg_1176_pp1_iter44_reg <= icmp_ln329_reg_1176_pp1_iter43_reg;
        icmp_ln329_reg_1176_pp1_iter4_reg <= icmp_ln329_reg_1176_pp1_iter3_reg;
        icmp_ln329_reg_1176_pp1_iter5_reg <= icmp_ln329_reg_1176_pp1_iter4_reg;
        icmp_ln329_reg_1176_pp1_iter6_reg <= icmp_ln329_reg_1176_pp1_iter5_reg;
        icmp_ln329_reg_1176_pp1_iter7_reg <= icmp_ln329_reg_1176_pp1_iter6_reg;
        icmp_ln329_reg_1176_pp1_iter8_reg <= icmp_ln329_reg_1176_pp1_iter7_reg;
        icmp_ln329_reg_1176_pp1_iter9_reg <= icmp_ln329_reg_1176_pp1_iter8_reg;
        select_ln333_2_reg_1191_pp1_iter10_reg <= select_ln333_2_reg_1191_pp1_iter9_reg;
        select_ln333_2_reg_1191_pp1_iter11_reg <= select_ln333_2_reg_1191_pp1_iter10_reg;
        select_ln333_2_reg_1191_pp1_iter12_reg <= select_ln333_2_reg_1191_pp1_iter11_reg;
        select_ln333_2_reg_1191_pp1_iter13_reg <= select_ln333_2_reg_1191_pp1_iter12_reg;
        select_ln333_2_reg_1191_pp1_iter14_reg <= select_ln333_2_reg_1191_pp1_iter13_reg;
        select_ln333_2_reg_1191_pp1_iter15_reg <= select_ln333_2_reg_1191_pp1_iter14_reg;
        select_ln333_2_reg_1191_pp1_iter16_reg <= select_ln333_2_reg_1191_pp1_iter15_reg;
        select_ln333_2_reg_1191_pp1_iter17_reg <= select_ln333_2_reg_1191_pp1_iter16_reg;
        select_ln333_2_reg_1191_pp1_iter18_reg <= select_ln333_2_reg_1191_pp1_iter17_reg;
        select_ln333_2_reg_1191_pp1_iter19_reg <= select_ln333_2_reg_1191_pp1_iter18_reg;
        select_ln333_2_reg_1191_pp1_iter20_reg <= select_ln333_2_reg_1191_pp1_iter19_reg;
        select_ln333_2_reg_1191_pp1_iter21_reg <= select_ln333_2_reg_1191_pp1_iter20_reg;
        select_ln333_2_reg_1191_pp1_iter22_reg <= select_ln333_2_reg_1191_pp1_iter21_reg;
        select_ln333_2_reg_1191_pp1_iter23_reg <= select_ln333_2_reg_1191_pp1_iter22_reg;
        select_ln333_2_reg_1191_pp1_iter24_reg <= select_ln333_2_reg_1191_pp1_iter23_reg;
        select_ln333_2_reg_1191_pp1_iter25_reg <= select_ln333_2_reg_1191_pp1_iter24_reg;
        select_ln333_2_reg_1191_pp1_iter26_reg <= select_ln333_2_reg_1191_pp1_iter25_reg;
        select_ln333_2_reg_1191_pp1_iter27_reg <= select_ln333_2_reg_1191_pp1_iter26_reg;
        select_ln333_2_reg_1191_pp1_iter28_reg <= select_ln333_2_reg_1191_pp1_iter27_reg;
        select_ln333_2_reg_1191_pp1_iter29_reg <= select_ln333_2_reg_1191_pp1_iter28_reg;
        select_ln333_2_reg_1191_pp1_iter2_reg <= select_ln333_2_reg_1191_pp1_iter1_reg;
        select_ln333_2_reg_1191_pp1_iter30_reg <= select_ln333_2_reg_1191_pp1_iter29_reg;
        select_ln333_2_reg_1191_pp1_iter31_reg <= select_ln333_2_reg_1191_pp1_iter30_reg;
        select_ln333_2_reg_1191_pp1_iter32_reg <= select_ln333_2_reg_1191_pp1_iter31_reg;
        select_ln333_2_reg_1191_pp1_iter33_reg <= select_ln333_2_reg_1191_pp1_iter32_reg;
        select_ln333_2_reg_1191_pp1_iter34_reg <= select_ln333_2_reg_1191_pp1_iter33_reg;
        select_ln333_2_reg_1191_pp1_iter35_reg <= select_ln333_2_reg_1191_pp1_iter34_reg;
        select_ln333_2_reg_1191_pp1_iter36_reg <= select_ln333_2_reg_1191_pp1_iter35_reg;
        select_ln333_2_reg_1191_pp1_iter37_reg <= select_ln333_2_reg_1191_pp1_iter36_reg;
        select_ln333_2_reg_1191_pp1_iter38_reg <= select_ln333_2_reg_1191_pp1_iter37_reg;
        select_ln333_2_reg_1191_pp1_iter39_reg <= select_ln333_2_reg_1191_pp1_iter38_reg;
        select_ln333_2_reg_1191_pp1_iter3_reg <= select_ln333_2_reg_1191_pp1_iter2_reg;
        select_ln333_2_reg_1191_pp1_iter40_reg <= select_ln333_2_reg_1191_pp1_iter39_reg;
        select_ln333_2_reg_1191_pp1_iter41_reg <= select_ln333_2_reg_1191_pp1_iter40_reg;
        select_ln333_2_reg_1191_pp1_iter42_reg <= select_ln333_2_reg_1191_pp1_iter41_reg;
        select_ln333_2_reg_1191_pp1_iter43_reg <= select_ln333_2_reg_1191_pp1_iter42_reg;
        select_ln333_2_reg_1191_pp1_iter44_reg <= select_ln333_2_reg_1191_pp1_iter43_reg;
        select_ln333_2_reg_1191_pp1_iter45_reg <= select_ln333_2_reg_1191_pp1_iter44_reg;
        select_ln333_2_reg_1191_pp1_iter4_reg <= select_ln333_2_reg_1191_pp1_iter3_reg;
        select_ln333_2_reg_1191_pp1_iter5_reg <= select_ln333_2_reg_1191_pp1_iter4_reg;
        select_ln333_2_reg_1191_pp1_iter6_reg <= select_ln333_2_reg_1191_pp1_iter5_reg;
        select_ln333_2_reg_1191_pp1_iter7_reg <= select_ln333_2_reg_1191_pp1_iter6_reg;
        select_ln333_2_reg_1191_pp1_iter8_reg <= select_ln333_2_reg_1191_pp1_iter7_reg;
        select_ln333_2_reg_1191_pp1_iter9_reg <= select_ln333_2_reg_1191_pp1_iter8_reg;
        select_ln333_reg_1185_pp1_iter10_reg <= select_ln333_reg_1185_pp1_iter9_reg;
        select_ln333_reg_1185_pp1_iter11_reg <= select_ln333_reg_1185_pp1_iter10_reg;
        select_ln333_reg_1185_pp1_iter12_reg <= select_ln333_reg_1185_pp1_iter11_reg;
        select_ln333_reg_1185_pp1_iter13_reg <= select_ln333_reg_1185_pp1_iter12_reg;
        select_ln333_reg_1185_pp1_iter14_reg <= select_ln333_reg_1185_pp1_iter13_reg;
        select_ln333_reg_1185_pp1_iter15_reg <= select_ln333_reg_1185_pp1_iter14_reg;
        select_ln333_reg_1185_pp1_iter2_reg <= select_ln333_reg_1185_pp1_iter1_reg;
        select_ln333_reg_1185_pp1_iter3_reg <= select_ln333_reg_1185_pp1_iter2_reg;
        select_ln333_reg_1185_pp1_iter4_reg <= select_ln333_reg_1185_pp1_iter3_reg;
        select_ln333_reg_1185_pp1_iter5_reg <= select_ln333_reg_1185_pp1_iter4_reg;
        select_ln333_reg_1185_pp1_iter6_reg <= select_ln333_reg_1185_pp1_iter5_reg;
        select_ln333_reg_1185_pp1_iter7_reg <= select_ln333_reg_1185_pp1_iter6_reg;
        select_ln333_reg_1185_pp1_iter8_reg <= select_ln333_reg_1185_pp1_iter7_reg;
        select_ln333_reg_1185_pp1_iter9_reg <= select_ln333_reg_1185_pp1_iter8_reg;
        trunc_ln583_reg_1321_pp1_iter45_reg <= trunc_ln583_reg_1321;
        v175_reg_1285_pp1_iter43_reg <= v175_reg_1285;
        v175_reg_1285_pp1_iter44_reg <= v175_reg_1285_pp1_iter43_reg;
        zext_ln332_reg_1243_pp1_iter17_reg[9 : 0] <= zext_ln332_reg_1243[9 : 0];
        zext_ln332_reg_1243_pp1_iter18_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter17_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter19_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter18_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter20_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter19_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter21_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter20_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter22_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter21_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter23_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter22_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter24_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter23_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter25_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter24_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter26_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter25_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter27_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter26_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter28_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter27_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter29_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter28_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter30_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter29_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter31_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter30_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter32_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter31_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter33_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter32_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter34_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter33_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter35_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter34_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter36_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter35_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter37_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter36_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter38_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter37_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter39_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter38_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter40_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter39_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter41_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter40_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter42_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter41_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter43_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter42_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter44_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter43_reg[9 : 0];
        zext_ln332_reg_1243_pp1_iter45_reg[9 : 0] <= zext_ln332_reg_1243_pp1_iter44_reg[9 : 0];
        zext_ln333_reg_1198_pp1_iter10_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter9_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter2_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter1_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter3_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter2_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter4_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter3_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter5_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter4_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter6_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter5_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter7_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter6_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter8_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter7_reg[3 : 0];
        zext_ln333_reg_1198_pp1_iter9_reg[3 : 0] <= zext_ln333_reg_1198_pp1_iter8_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter43_reg == 1'd0))) begin
        icmp_ln571_reg_1296 <= icmp_ln571_fu_883_p2;
        icmp_ln581_reg_1302 <= icmp_ln581_fu_895_p2;
        icmp_ln582_reg_1315 <= icmp_ln582_fu_921_p2;
        man_V_4_reg_1291 <= man_V_4_fu_875_p3;
        sh_amt_reg_1308 <= sh_amt_fu_913_p3;
        trunc_ln583_reg_1321 <= trunc_ln583_fu_927_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        j6_reg_1146 <= j6_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln304_reg_1102 == 1'd0))) begin
        mean2_addr_1_reg_1141 <= zext_ln307_reg_1130;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mean2_addr_1_reg_1141_pp0_iter1_reg <= mean2_addr_1_reg_1141;
        mean2_addr_1_reg_1141_pp0_iter2_reg <= mean2_addr_1_reg_1141_pp0_iter1_reg;
        mean2_addr_1_reg_1141_pp0_iter3_reg <= mean2_addr_1_reg_1141_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln304_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mean_addr_1_reg_1136 <= zext_ln307_fu_712_p1;
        zext_ln307_reg_1130[3 : 0] <= zext_ln307_fu_712_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mean_addr_1_reg_1136_pp0_iter1_reg <= mean_addr_1_reg_1136;
        mean_addr_1_reg_1136_pp0_iter2_reg <= mean_addr_1_reg_1136_pp0_iter1_reg;
        mean_addr_1_reg_1136_pp0_iter3_reg <= mean_addr_1_reg_1136_pp0_iter2_reg;
        zext_ln307_reg_1130_pp0_iter1_reg[3 : 0] <= zext_ln307_reg_1130[3 : 0];
        zext_ln307_reg_1130_pp0_iter2_reg[3 : 0] <= zext_ln307_reg_1130_pp0_iter1_reg[3 : 0];
        zext_ln307_reg_1130_pp0_iter3_reg[3 : 0] <= zext_ln307_reg_1130_pp0_iter2_reg[3 : 0];
        zext_ln307_reg_1130_pp0_iter4_reg[3 : 0] <= zext_ln307_reg_1130_pp0_iter3_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter12 == 1'b1) & (icmp_ln329_reg_1176_pp1_iter11_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln304_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_563 <= v137_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter12 == 1'b1) & (icmp_ln329_reg_1176_pp1_iter11_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0)))) begin
        reg_571 <= mean_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1) & (icmp_ln329_reg_1176_pp1_iter20_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0)))) begin
        reg_577 <= grp_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln304_reg_1102_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter17 == 1'b1) & (icmp_ln329_reg_1176_pp1_iter16_reg == 1'd0)))) begin
        reg_583 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln305_1_reg_1157_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter37 == 1'b1) & (icmp_ln329_reg_1176_pp1_iter36_reg == 1'd0)))) begin
        reg_589 <= grp_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln304_fu_630_p2 == 1'd0))) begin
        select_ln307_1_reg_1117 <= select_ln307_1_fu_662_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln304_fu_630_p2 == 1'd0))) begin
        select_ln307_reg_1111 <= select_ln307_fu_654_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln329_fu_726_p2 == 1'd0))) begin
        select_ln333_2_reg_1191 <= select_ln333_2_fu_758_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln329_fu_726_p2 == 1'd0))) begin
        select_ln333_reg_1185 <= select_ln333_fu_750_p3;
        zext_ln333_reg_1198[3 : 0] <= zext_ln333_fu_766_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102_pp0_iter1_reg == 1'd0))) begin
        v157_reg_1161 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_1_reg_1157_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        v158_reg_1166 <= grp_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_1_reg_1157_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v161_reg_1171 <= grp_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter16_reg == 1'd0))) begin
        v165_reg_1265 <= v138_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter8_reg == 1'd0))) begin
        v171_mid2_reg_1228 <= grp_fu_543_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter6_reg == 1'd0))) begin
        v171_mid2_v_reg_1223 <= grp_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter1_reg == 1'd0))) begin
        v171_mid2_v_v_reg_1218 <= grp_fu_546_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter20_reg == 1'd0))) begin
        v172_reg_1270 <= grp_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter36_reg == 1'd0))) begin
        v174_reg_1280 <= v139_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter41_reg == 1'd0))) begin
        v175_reg_1285 <= grp_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln329_reg_1176_pp1_iter15_reg == 1'd0))) begin
        zext_ln332_reg_1243[9 : 0] <= zext_ln332_fu_819_p1[9 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln304_fu_630_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln329_fu_726_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter46 == 1'b0) & (ap_enable_reg_pp1_iter45 == 1'b0) & (ap_enable_reg_pp1_iter44 == 1'b0) & (ap_enable_reg_pp1_iter43 == 1'b0) & (ap_enable_reg_pp1_iter42 == 1'b0) & (ap_enable_reg_pp1_iter41 == 1'b0) & (ap_enable_reg_pp1_iter40 == 1'b0) & (ap_enable_reg_pp1_iter39 == 1'b0) & (ap_enable_reg_pp1_iter38 == 1'b0) & (ap_enable_reg_pp1_iter36 == 1'b0) & (ap_enable_reg_pp1_iter35 == 1'b0) & (ap_enable_reg_pp1_iter34 == 1'b0) & (ap_enable_reg_pp1_iter33 == 1'b0) & (ap_enable_reg_pp1_iter32 == 1'b0) & (ap_enable_reg_pp1_iter31 == 1'b0) & (ap_enable_reg_pp1_iter30 == 1'b0) & (ap_enable_reg_pp1_iter29 == 1'b0) & (ap_enable_reg_pp1_iter28 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter37 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        ap_phi_mux_i8_0_phi_fu_466_p4 = select_ln307_1_reg_1117;
    end else begin
        ap_phi_mux_i8_0_phi_fu_466_p4 = i8_0_reg_462;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln329_reg_1176 == 1'd0))) begin
        ap_phi_mux_i9_0_phi_fu_499_p4 = select_ln333_2_reg_1191;
    end else begin
        ap_phi_mux_i9_0_phi_fu_499_p4 = i9_0_reg_495;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_455_p4 = add_ln304_reg_1106;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_455_p4 = indvar_flatten_reg_451;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0))) begin
        ap_phi_mux_j6_0_phi_fu_477_p4 = j6_reg_1146;
    end else begin
        ap_phi_mux_j6_0_phi_fu_477_p4 = j6_0_reg_473;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln305_1_reg_1157_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_00001)) | ((ap_enable_reg_pp1_iter13 == 1'b1) & (icmp_ln329_reg_1176_pp1_iter12_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_00001)))) begin
        grp_fu_517_opcode = 2'd1;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage0_00001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln304_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage3_00001)))) begin
        grp_fu_517_opcode = 2'd0;
    end else begin
        grp_fu_517_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter13 == 1'b1))) begin
        grp_fu_517_p0 = reg_563;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_517_p0 = v158_reg_1166;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_517_p0 = mean2_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_517_p0 = mean_q0;
    end else begin
        grp_fu_517_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter13 == 1'b1))) begin
        grp_fu_517_p1 = reg_571;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_517_p1 = v161_reg_1171;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_517_p1 = reg_577;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_517_p1 = reg_563;
    end else begin
        grp_fu_517_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        grp_fu_530_p0 = v165_reg_1265;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_530_p0 = reg_589;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_530_p0 = v137_q0;
    end else begin
        grp_fu_530_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        grp_fu_530_p1 = reg_583;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_530_p1 = reg_589;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_530_p1 = v137_q0;
    end else begin
        grp_fu_530_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter22 == 1'b1))) begin
        grp_fu_536_p0 = reg_577;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_536_p0 = v157_reg_1161;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_536_p0 = reg_583;
    end else begin
        grp_fu_536_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter22 == 1'b1))) begin
        grp_fu_536_p1 = v172_reg_1270;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_536_p1 = 32'd1145044992;
    end else begin
        grp_fu_536_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mean2_address0 = mean2_addr_1_reg_1141_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mean2_address0 = mean2_addr_1_reg_1141;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        mean2_address0 = zext_ln307_reg_1130;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mean2_address0 = zext_ln301_fu_625_p1;
    end else begin
        mean2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        mean2_ce0 = 1'b1;
    end else begin
        mean2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mean2_d0 = grp_fu_536_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mean2_d0 = grp_fu_517_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mean2_d0 = 32'd0;
    end else begin
        mean2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln300_fu_613_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln304_reg_1102_pp0_iter1_reg == 1'd0)) | ((icmp_ln305_1_reg_1157_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        mean2_we0 = 1'b1;
    end else begin
        mean2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        mean_address0 = zext_ln333_reg_1198_pp1_iter10_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mean_address0 = mean_addr_1_reg_1136_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mean_address0 = mean_addr_1_reg_1136;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mean_address0 = zext_ln307_fu_712_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mean_address0 = zext_ln297_fu_608_p1;
    end else begin
        mean_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        mean_ce0 = 1'b1;
    end else begin
        mean_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mean_d0 = grp_fu_536_p2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mean_d0 = grp_fu_517_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mean_d0 = 32'd0;
    end else begin
        mean_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln296_fu_596_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln304_reg_1102_pp0_iter1_reg == 1'd0)) | ((icmp_ln305_1_reg_1157_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        mean_we0 = 1'b1;
    end else begin
        mean_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        v137_address0 = zext_ln333_4_fu_814_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v137_address0 = sext_ln307_fu_707_p1;
    end else begin
        v137_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v137_ce0 = 1'b1;
    end else begin
        v137_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter16 == 1'b1))) begin
        v138_ce0 = 1'b1;
    end else begin
        v138_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter36 == 1'b1))) begin
        v139_ce0 = 1'b1;
    end else begin
        v139_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_0_V_ce0 = 1'b1;
    end else begin
        v140_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_0_V_we0 = 1'b1;
    end else begin
        v140_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_10_V_ce0 = 1'b1;
    end else begin
        v140_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd10) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_10_V_we0 = 1'b1;
    end else begin
        v140_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_11_V_ce0 = 1'b1;
    end else begin
        v140_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1) & ((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd11) | ((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd12) | ((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd13) | ((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd14) | (select_ln333_2_reg_1191_pp1_iter45_reg == 4'd15))))))) begin
        v140_11_V_we0 = 1'b1;
    end else begin
        v140_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_1_V_ce0 = 1'b1;
    end else begin
        v140_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_1_V_we0 = 1'b1;
    end else begin
        v140_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_2_V_ce0 = 1'b1;
    end else begin
        v140_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_2_V_we0 = 1'b1;
    end else begin
        v140_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_3_V_ce0 = 1'b1;
    end else begin
        v140_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_3_V_we0 = 1'b1;
    end else begin
        v140_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_4_V_ce0 = 1'b1;
    end else begin
        v140_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_4_V_we0 = 1'b1;
    end else begin
        v140_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_5_V_ce0 = 1'b1;
    end else begin
        v140_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_5_V_we0 = 1'b1;
    end else begin
        v140_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_6_V_ce0 = 1'b1;
    end else begin
        v140_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_6_V_we0 = 1'b1;
    end else begin
        v140_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_7_V_ce0 = 1'b1;
    end else begin
        v140_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd7) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_7_V_we0 = 1'b1;
    end else begin
        v140_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_8_V_ce0 = 1'b1;
    end else begin
        v140_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd8) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_8_V_we0 = 1'b1;
    end else begin
        v140_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_9_V_ce0 = 1'b1;
    end else begin
        v140_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln333_2_reg_1191_pp1_iter45_reg == 4'd9) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter46 == 1'b1))) begin
        v140_9_V_we0 = 1'b1;
    end else begin
        v140_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        var_address0 = zext_ln333_fu_766_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        var_address0 = zext_ln307_reg_1130_pp0_iter4_reg;
    end else begin
        var_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        var_ce0 = 1'b1;
    end else begin
        var_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_1_reg_1157_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        var_we0 = 1'b1;
    end else begin
        var_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln296_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln300_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln304_fu_630_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln304_fu_630_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln329_fu_726_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter45 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter46 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter45 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter46 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln329_fu_726_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_889_p2 = (12'd1075 - zext_ln461_fu_849_p1);

assign add_ln304_fu_636_p2 = (ap_phi_mux_indvar_flatten_phi_fu_455_p4 + 14'd1);

assign add_ln307_fu_701_p2 = (sub_ln307_fu_692_p2 + zext_ln307_3_fu_698_p1);

assign add_ln329_fu_732_p2 = (indvar_flatten21_reg_484 + 14'd1);

assign add_ln333_fu_808_p2 = (zext_ln333_3_fu_805_p1 + sub_ln333_fu_799_p2);

assign add_ln581_fu_901_p2 = ($signed(12'd4080) + $signed(F2_fu_889_p2));

assign and_ln581_fu_1003_p2 = (xor_ln582_fu_997_p2 & icmp_ln581_reg_1302);

assign and_ln582_fu_981_p2 = (xor_ln571_fu_976_p2 & icmp_ln582_reg_1315);

assign and_ln585_2_fu_1028_p2 = (icmp_ln585_fu_934_p2 & and_ln581_fu_1003_p2);

assign and_ln585_fu_1014_p2 = (xor_ln585_fu_1008_p2 & and_ln581_fu_1003_p2);

assign and_ln603_fu_1053_p2 = (xor_ln581_fu_1047_p2 & icmp_ln603_fu_939_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp1_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp1_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp1_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp1_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp1_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp1_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp1_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp1_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp1_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp1_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp1_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp1_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp1_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp1_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp1_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ashr_ln586_fu_948_p2 = $signed(man_V_4_reg_1291) >>> zext_ln586_fu_944_p1;

assign bitcast_ln696_fu_957_p1 = v175_reg_1285_pp1_iter44_reg;

assign exp_tmp_V_fu_839_p4 = {{ireg_V_fu_823_p1[62:52]}};

assign i8_fu_642_p2 = (ap_phi_mux_i8_0_phi_fu_466_p4 + 4'd1);

assign i9_fu_738_p2 = (4'd1 + ap_phi_mux_i9_0_phi_fu_499_p4);

assign icmp_ln296_fu_596_p2 = ((v142_0_reg_429 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln300_fu_613_p2 = ((v144_0_reg_440 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln304_fu_630_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_455_p4 == 14'd9216) ? 1'b1 : 1'b0);

assign icmp_ln305_1_fu_721_p2 = ((j6_reg_1146 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln305_fu_648_p2 = ((ap_phi_mux_j6_0_phi_fu_477_p4 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln329_fu_726_p2 = ((indvar_flatten21_reg_484 == 14'd9216) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_744_p2 = ((j7_0_reg_506 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_883_p2 = ((trunc_ln556_fu_827_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_895_p2 = (($signed(F2_fu_889_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_921_p2 = ((F2_fu_889_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_934_p2 = ((sh_amt_reg_1308 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_939_p2 = ((sh_amt_reg_1308 < 12'd24) ? 1'b1 : 1'b0);

assign ireg_V_fu_823_p1 = grp_fu_550_p1;

assign j6_fu_716_p2 = (select_ln307_reg_1111 + 10'd1);

assign j7_fu_771_p2 = (select_ln333_fu_750_p3 + 10'd1);

assign man_V_3_fu_869_p2 = (54'd0 - p_Result_95_fu_865_p1);

assign man_V_4_fu_875_p3 = ((p_Result_s_fu_831_p3[0:0] === 1'b1) ? man_V_3_fu_869_p2 : p_Result_95_fu_865_p1);

assign or_ln581_fu_1042_p2 = (or_ln582_fu_993_p2 | icmp_ln581_reg_1302);

assign or_ln582_fu_993_p2 = (icmp_ln582_reg_1315 | icmp_ln571_reg_1296);

assign p_Result_95_fu_865_p1 = tmp_5_fu_857_p3;

assign p_Result_s_fu_831_p3 = ireg_V_fu_823_p1[32'd63];

assign select_ln307_1_fu_662_p3 = ((icmp_ln305_fu_648_p2[0:0] === 1'b1) ? i8_fu_642_p2 : ap_phi_mux_i8_0_phi_fu_466_p4);

assign select_ln307_fu_654_p3 = ((icmp_ln305_fu_648_p2[0:0] === 1'b1) ? 10'd0 : ap_phi_mux_j6_0_phi_fu_477_p4);

assign select_ln333_2_fu_758_p3 = ((icmp_ln330_fu_744_p2[0:0] === 1'b1) ? i9_fu_738_p2 : ap_phi_mux_i9_0_phi_fu_499_p4);

assign select_ln333_fu_750_p3 = ((icmp_ln330_fu_744_p2[0:0] === 1'b1) ? 10'd0 : j7_0_reg_506);

assign select_ln582_fu_986_p3 = ((and_ln582_fu_981_p2[0:0] === 1'b1) ? trunc_ln583_reg_1321 : 24'd0);

assign select_ln585_1_fu_1034_p3 = ((and_ln585_2_fu_1028_p2[0:0] === 1'b1) ? trunc_ln586_fu_953_p1 : select_ln585_fu_1020_p3);

assign select_ln585_fu_1020_p3 = ((and_ln585_fu_1014_p2[0:0] === 1'b1) ? select_ln588_fu_968_p3 : select_ln582_fu_986_p3);

assign select_ln588_fu_968_p3 = ((tmp_54_fu_960_p3[0:0] === 1'b1) ? 24'd16777215 : 24'd0);

assign sext_ln307_fu_707_p1 = $signed(add_ln307_fu_701_p2);

assign sext_ln581_fu_931_p1 = sh_amt_reg_1308;

assign sext_ln581cast_fu_1059_p1 = sext_ln581_reg_1327[23:0];

assign sh_amt_fu_913_p3 = ((icmp_ln581_fu_895_p2[0:0] === 1'b1) ? add_ln581_fu_901_p2 : sub_ln581_fu_907_p2);

assign shl_ln604_fu_1062_p2 = trunc_ln583_reg_1321_pp1_iter45_reg << sext_ln581cast_fu_1059_p1;

assign sub_ln307_fu_692_p2 = (zext_ln307_1_fu_677_p1 - zext_ln307_2_fu_688_p1);

assign sub_ln333_fu_799_p2 = (zext_ln333_1_fu_784_p1 - zext_ln333_2_fu_795_p1);

assign sub_ln581_fu_907_p2 = (12'd16 - F2_fu_889_p2);

assign tmp_20_fu_681_p3 = {{select_ln307_1_reg_1117}, {8'd0}};

assign tmp_51_fu_777_p3 = {{select_ln333_2_reg_1191_pp1_iter10_reg}, {10'd0}};

assign tmp_52_fu_788_p3 = {{select_ln333_2_reg_1191_pp1_iter10_reg}, {8'd0}};

assign tmp_54_fu_960_p3 = bitcast_ln696_fu_957_p1[32'd31];

assign tmp_5_fu_857_p3 = {{1'd1}, {trunc_ln565_fu_853_p1}};

assign tmp_fu_670_p3 = {{select_ln307_1_reg_1117}, {10'd0}};

assign trunc_ln556_fu_827_p1 = ireg_V_fu_823_p1[62:0];

assign trunc_ln565_fu_853_p1 = ireg_V_fu_823_p1[51:0];

assign trunc_ln583_fu_927_p1 = man_V_4_fu_875_p3[23:0];

assign trunc_ln586_fu_953_p1 = ashr_ln586_fu_948_p2[23:0];

assign v138_address0 = zext_ln332_fu_819_p1;

assign v139_address0 = zext_ln332_reg_1243_pp1_iter35_reg;

assign v140_0_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_0_V_d0 = v176_V_fu_1067_p3;

assign v140_10_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_10_V_d0 = v176_V_fu_1067_p3;

assign v140_11_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_11_V_d0 = v176_V_fu_1067_p3;

assign v140_1_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_1_V_d0 = v176_V_fu_1067_p3;

assign v140_2_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_2_V_d0 = v176_V_fu_1067_p3;

assign v140_3_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_3_V_d0 = v176_V_fu_1067_p3;

assign v140_4_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_4_V_d0 = v176_V_fu_1067_p3;

assign v140_5_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_5_V_d0 = v176_V_fu_1067_p3;

assign v140_6_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_6_V_d0 = v176_V_fu_1067_p3;

assign v140_7_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_7_V_d0 = v176_V_fu_1067_p3;

assign v140_8_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_8_V_d0 = v176_V_fu_1067_p3;

assign v140_9_V_address0 = zext_ln332_reg_1243_pp1_iter45_reg;

assign v140_9_V_d0 = v176_V_fu_1067_p3;

assign v142_fu_602_p2 = (v142_0_reg_429 + 4'd1);

assign v144_fu_619_p2 = (v144_0_reg_440 + 4'd1);

assign v176_V_fu_1067_p3 = ((and_ln603_reg_1337[0:0] === 1'b1) ? shl_ln604_fu_1062_p2 : select_ln585_1_reg_1332);

assign xor_ln571_fu_976_p2 = (icmp_ln571_reg_1296 ^ 1'd1);

assign xor_ln581_fu_1047_p2 = (or_ln581_fu_1042_p2 ^ 1'd1);

assign xor_ln582_fu_997_p2 = (or_ln582_fu_993_p2 ^ 1'd1);

assign xor_ln585_fu_1008_p2 = (icmp_ln585_fu_934_p2 ^ 1'd1);

assign zext_ln297_fu_608_p1 = v142_0_reg_429;

assign zext_ln301_fu_625_p1 = v144_0_reg_440;

assign zext_ln307_1_fu_677_p1 = tmp_fu_670_p3;

assign zext_ln307_2_fu_688_p1 = tmp_20_fu_681_p3;

assign zext_ln307_3_fu_698_p1 = select_ln307_reg_1111;

assign zext_ln307_fu_712_p1 = select_ln307_1_reg_1117;

assign zext_ln332_fu_819_p1 = select_ln333_reg_1185_pp1_iter15_reg;

assign zext_ln333_1_fu_784_p1 = tmp_51_fu_777_p3;

assign zext_ln333_2_fu_795_p1 = tmp_52_fu_788_p3;

assign zext_ln333_3_fu_805_p1 = select_ln333_reg_1185_pp1_iter10_reg;

assign zext_ln333_4_fu_814_p1 = add_ln333_fu_808_p2;

assign zext_ln333_fu_766_p1 = select_ln333_2_fu_758_p3;

assign zext_ln461_fu_849_p1 = exp_tmp_V_fu_839_p4;

assign zext_ln586_fu_944_p1 = $unsigned(sext_ln581_fu_931_p1);

always @ (posedge ap_clk) begin
    zext_ln307_reg_1130[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln307_reg_1130_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln307_reg_1130_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln307_reg_1130_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln307_reg_1130_pp0_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter7_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter8_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter9_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln333_reg_1198_pp1_iter10_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter32_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter33_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter34_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter35_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter36_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter37_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter38_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter39_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter40_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter41_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter42_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter43_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter44_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln332_reg_1243_pp1_iter45_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Layer_norm
