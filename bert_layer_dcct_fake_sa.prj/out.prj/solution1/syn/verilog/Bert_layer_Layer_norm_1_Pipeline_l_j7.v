// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Layer_norm_1_Pipeline_l_j7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v264_0_address0,
        v264_0_ce0,
        v264_0_we0,
        v264_0_d0,
        sub_ln328,
        v137_address0,
        v137_ce0,
        v137_q0,
        v262_address0,
        v262_ce0,
        v262_q0,
        v167,
        v172,
        v263_address0,
        v263_ce0,
        v263_q0,
        i9,
        v264_1_address0,
        v264_1_ce0,
        v264_1_we0,
        v264_1_d0,
        v264_2_address0,
        v264_2_ce0,
        v264_2_we0,
        v264_2_d0,
        v264_3_address0,
        v264_3_ce0,
        v264_3_we0,
        v264_3_d0,
        v264_4_address0,
        v264_4_ce0,
        v264_4_we0,
        v264_4_d0,
        v264_5_address0,
        v264_5_ce0,
        v264_5_we0,
        v264_5_d0,
        v264_6_address0,
        v264_6_ce0,
        v264_6_we0,
        v264_6_d0,
        v264_7_address0,
        v264_7_ce0,
        v264_7_we0,
        v264_7_d0,
        v264_8_address0,
        v264_8_ce0,
        v264_8_we0,
        v264_8_d0,
        v264_9_address0,
        v264_9_ce0,
        v264_9_we0,
        v264_9_d0,
        v264_10_address0,
        v264_10_ce0,
        v264_10_we0,
        v264_10_d0,
        v264_11_address0,
        v264_11_ce0,
        v264_11_we0,
        v264_11_d0,
        grp_fu_437_p_din0,
        grp_fu_437_p_din1,
        grp_fu_437_p_opcode,
        grp_fu_437_p_dout0,
        grp_fu_437_p_ce,
        grp_fu_449_p_din0,
        grp_fu_449_p_din1,
        grp_fu_449_p_opcode,
        grp_fu_449_p_dout0,
        grp_fu_449_p_ce,
        grp_fu_441_p_din0,
        grp_fu_441_p_din1,
        grp_fu_441_p_dout0,
        grp_fu_441_p_ce,
        grp_fu_445_p_din0,
        grp_fu_445_p_din1,
        grp_fu_445_p_dout0,
        grp_fu_445_p_ce,
        grp_fu_211_p_din0,
        grp_fu_211_p_dout0,
        grp_fu_211_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] v264_0_address0;
output   v264_0_ce0;
output   v264_0_we0;
output  [23:0] v264_0_d0;
input  [13:0] sub_ln328;
output  [13:0] v137_address0;
output   v137_ce0;
input  [31:0] v137_q0;
output  [9:0] v262_address0;
output   v262_ce0;
input  [31:0] v262_q0;
input  [31:0] v167;
input  [31:0] v172;
output  [9:0] v263_address0;
output   v263_ce0;
input  [31:0] v263_q0;
input  [3:0] i9;
output  [9:0] v264_1_address0;
output   v264_1_ce0;
output   v264_1_we0;
output  [23:0] v264_1_d0;
output  [9:0] v264_2_address0;
output   v264_2_ce0;
output   v264_2_we0;
output  [23:0] v264_2_d0;
output  [9:0] v264_3_address0;
output   v264_3_ce0;
output   v264_3_we0;
output  [23:0] v264_3_d0;
output  [9:0] v264_4_address0;
output   v264_4_ce0;
output   v264_4_we0;
output  [23:0] v264_4_d0;
output  [9:0] v264_5_address0;
output   v264_5_ce0;
output   v264_5_we0;
output  [23:0] v264_5_d0;
output  [9:0] v264_6_address0;
output   v264_6_ce0;
output   v264_6_we0;
output  [23:0] v264_6_d0;
output  [9:0] v264_7_address0;
output   v264_7_ce0;
output   v264_7_we0;
output  [23:0] v264_7_d0;
output  [9:0] v264_8_address0;
output   v264_8_ce0;
output   v264_8_we0;
output  [23:0] v264_8_d0;
output  [9:0] v264_9_address0;
output   v264_9_ce0;
output   v264_9_we0;
output  [23:0] v264_9_d0;
output  [9:0] v264_10_address0;
output   v264_10_ce0;
output   v264_10_we0;
output  [23:0] v264_10_d0;
output  [9:0] v264_11_address0;
output   v264_11_ce0;
output   v264_11_we0;
output  [23:0] v264_11_d0;
output  [31:0] grp_fu_437_p_din0;
output  [31:0] grp_fu_437_p_din1;
output  [0:0] grp_fu_437_p_opcode;
input  [31:0] grp_fu_437_p_dout0;
output   grp_fu_437_p_ce;
output  [31:0] grp_fu_449_p_din0;
output  [31:0] grp_fu_449_p_din1;
output  [1:0] grp_fu_449_p_opcode;
input  [31:0] grp_fu_449_p_dout0;
output   grp_fu_449_p_ce;
output  [31:0] grp_fu_441_p_din0;
output  [31:0] grp_fu_441_p_din1;
input  [31:0] grp_fu_441_p_dout0;
output   grp_fu_441_p_ce;
output  [31:0] grp_fu_445_p_din0;
output  [31:0] grp_fu_445_p_din1;
input  [31:0] grp_fu_445_p_dout0;
output   grp_fu_445_p_ce;
output  [31:0] grp_fu_211_p_din0;
input  [63:0] grp_fu_211_p_dout0;
output   grp_fu_211_p_ce;

reg ap_idle;
reg v264_0_ce0;
reg v264_0_we0;
reg v137_ce0;
reg v262_ce0;
reg v263_ce0;
reg v264_1_ce0;
reg v264_1_we0;
reg v264_2_ce0;
reg v264_2_we0;
reg v264_3_ce0;
reg v264_3_we0;
reg v264_4_ce0;
reg v264_4_we0;
reg v264_5_ce0;
reg v264_5_we0;
reg v264_6_ce0;
reg v264_6_we0;
reg v264_7_ce0;
reg v264_7_we0;
reg v264_8_ce0;
reg v264_8_we0;
reg v264_9_ce0;
reg v264_9_we0;
reg v264_10_ce0;
reg v264_10_we0;
reg v264_11_ce0;
reg v264_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln325_fu_382_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] i9_read_reg_653;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] j7_2_reg_667;
reg   [9:0] j7_2_reg_667_pp0_iter1_reg;
reg   [9:0] j7_2_reg_667_pp0_iter2_reg;
reg   [9:0] j7_2_reg_667_pp0_iter3_reg;
reg   [9:0] j7_2_reg_667_pp0_iter4_reg;
reg   [31:0] v166_reg_681;
wire   [63:0] zext_ln325_fu_414_p1;
reg   [63:0] zext_ln325_reg_686;
reg   [63:0] zext_ln325_reg_686_pp0_iter6_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter7_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter8_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter9_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter10_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter11_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter12_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter13_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter14_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter15_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter16_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter17_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter18_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter19_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter20_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter21_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter22_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter23_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter24_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter25_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter26_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter27_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter28_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter29_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter30_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter31_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter32_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter33_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter34_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter35_reg;
reg   [63:0] zext_ln325_reg_686_pp0_iter36_reg;
reg   [31:0] v262_load_reg_708;
reg   [31:0] v168_reg_713;
wire   [31:0] v165_fu_418_p1;
reg   [31:0] v169_reg_723;
reg   [31:0] v173_reg_733;
reg   [31:0] v263_load_reg_738;
wire   [31:0] v174_fu_422_p1;
reg   [31:0] v175_reg_748;
reg   [31:0] v175_reg_748_pp0_iter32_reg;
reg   [31:0] v175_reg_748_pp0_iter33_reg;
reg   [31:0] v175_reg_748_pp0_iter34_reg;
reg   [31:0] v175_reg_748_pp0_iter35_reg;
reg   [0:0] p_Result_s_reg_754;
reg   [10:0] exp_tmp_reg_759;
wire   [51:0] trunc_ln600_fu_452_p1;
reg   [51:0] trunc_ln600_reg_764;
wire   [0:0] icmp_ln606_fu_456_p2;
reg   [0:0] icmp_ln606_reg_769;
reg   [0:0] icmp_ln606_reg_769_pp0_iter34_reg;
reg   [0:0] icmp_ln606_reg_769_pp0_iter35_reg;
wire   [53:0] man_V_6_fu_482_p3;
reg   [53:0] man_V_6_reg_776;
reg   [53:0] man_V_6_reg_776_pp0_iter35_reg;
wire  signed [11:0] sh_amt_fu_513_p3;
reg  signed [11:0] sh_amt_reg_781;
wire   [0:0] icmp_ln617_fu_521_p2;
reg   [0:0] icmp_ln617_reg_788;
wire   [23:0] trunc_ln618_fu_527_p1;
reg   [23:0] trunc_ln618_reg_793;
wire   [0:0] and_ln616_fu_542_p2;
reg   [0:0] and_ln616_reg_799;
reg   [0:0] and_ln616_reg_799_pp0_iter35_reg;
wire  signed [31:0] sext_ln616_fu_548_p1;
reg  signed [31:0] sext_ln616_reg_804;
wire   [0:0] icmp_ln620_fu_551_p2;
reg   [0:0] icmp_ln620_reg_809;
wire   [23:0] select_ln617_fu_588_p3;
reg   [23:0] select_ln617_reg_814;
wire   [23:0] v176_V_fu_639_p3;
reg   [23:0] v176_V_reg_819;
wire   [63:0] zext_ln328_2_fu_404_p1;
wire    ap_block_pp0_stage0;
reg   [9:0] j7_fu_132;
wire   [9:0] add_ln325_fu_388_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_j7_2;
wire   [13:0] zext_ln328_fu_394_p1;
wire   [13:0] add_ln328_fu_398_p2;
wire   [63:0] ireg_fu_426_p1;
wire   [62:0] trunc_ln590_fu_430_p1;
wire   [52:0] p_Result_44_fu_465_p3;
wire   [53:0] zext_ln604_fu_472_p1;
wire   [53:0] man_V_5_fu_476_p2;
wire   [11:0] zext_ln501_fu_462_p1;
wire   [11:0] F2_fu_489_p2;
wire   [0:0] icmp_ln616_fu_495_p2;
wire   [11:0] add_ln616_fu_501_p2;
wire   [11:0] sub_ln616_fu_507_p2;
wire   [0:0] or_ln617_fu_531_p2;
wire   [0:0] xor_ln617_fu_536_p2;
wire   [23:0] sext_ln616cast_fu_561_p1;
wire   [0:0] icmp_ln638_fu_556_p2;
wire   [23:0] shl_ln639_fu_565_p2;
wire   [0:0] xor_ln606_fu_578_p2;
wire   [0:0] and_ln617_fu_583_p2;
wire   [23:0] select_ln638_fu_570_p3;
wire   [53:0] zext_ln621_fu_595_p1;
wire   [53:0] ashr_ln621_fu_598_p2;
wire   [31:0] bitcast_ln768_fu_607_p1;
wire   [0:0] tmp_fu_610_p3;
wire   [23:0] trunc_ln621_fu_603_p1;
wire   [23:0] select_ln623_fu_618_p3;
wire   [23:0] select_ln620_fu_626_p3;
wire   [23:0] select_ln616_fu_633_p3;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln325_fu_382_p2 == 1'd0))) begin
            j7_fu_132 <= add_ln325_fu_388_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j7_fu_132 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_769 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln616_reg_799 <= and_ln616_fu_542_p2;
        icmp_ln617_reg_788 <= icmp_ln617_fu_521_p2;
        man_V_6_reg_776 <= man_V_6_fu_482_p3;
        sh_amt_reg_781 <= sh_amt_fu_513_p3;
        trunc_ln618_reg_793 <= trunc_ln618_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln616_reg_799_pp0_iter35_reg <= and_ln616_reg_799;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        exp_tmp_reg_759 <= {{ireg_fu_426_p1[62:52]}};
        icmp_ln606_reg_769 <= icmp_ln606_fu_456_p2;
        icmp_ln606_reg_769_pp0_iter34_reg <= icmp_ln606_reg_769;
        icmp_ln606_reg_769_pp0_iter35_reg <= icmp_ln606_reg_769_pp0_iter34_reg;
        j7_2_reg_667_pp0_iter2_reg <= j7_2_reg_667_pp0_iter1_reg;
        j7_2_reg_667_pp0_iter3_reg <= j7_2_reg_667_pp0_iter2_reg;
        j7_2_reg_667_pp0_iter4_reg <= j7_2_reg_667_pp0_iter3_reg;
        man_V_6_reg_776_pp0_iter35_reg <= man_V_6_reg_776;
        p_Result_s_reg_754 <= ireg_fu_426_p1[32'd63];
        trunc_ln600_reg_764 <= trunc_ln600_fu_452_p1;
        v168_reg_713 <= grp_fu_437_p_dout0;
        v169_reg_723 <= grp_fu_441_p_dout0;
        v173_reg_733 <= grp_fu_445_p_dout0;
        v175_reg_748 <= grp_fu_449_p_dout0;
        v175_reg_748_pp0_iter32_reg <= v175_reg_748;
        v175_reg_748_pp0_iter33_reg <= v175_reg_748_pp0_iter32_reg;
        v175_reg_748_pp0_iter34_reg <= v175_reg_748_pp0_iter33_reg;
        v175_reg_748_pp0_iter35_reg <= v175_reg_748_pp0_iter34_reg;
        v176_V_reg_819 <= v176_V_fu_639_p3;
        v262_load_reg_708 <= v262_q0;
        v263_load_reg_738 <= v263_q0;
        zext_ln325_reg_686[9 : 0] <= zext_ln325_fu_414_p1[9 : 0];
        zext_ln325_reg_686_pp0_iter10_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter9_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter11_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter10_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter12_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter11_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter13_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter12_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter14_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter13_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter15_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter14_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter16_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter15_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter17_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter16_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter18_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter17_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter19_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter18_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter20_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter19_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter21_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter20_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter22_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter21_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter23_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter22_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter24_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter23_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter25_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter24_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter26_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter25_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter27_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter26_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter28_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter27_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter29_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter28_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter30_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter29_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter31_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter30_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter32_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter31_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter33_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter32_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter34_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter33_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter35_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter34_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter36_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter35_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter6_reg[9 : 0] <= zext_ln325_reg_686[9 : 0];
        zext_ln325_reg_686_pp0_iter7_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter6_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter8_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter7_reg[9 : 0];
        zext_ln325_reg_686_pp0_iter9_reg[9 : 0] <= zext_ln325_reg_686_pp0_iter8_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        j7_2_reg_667 <= ap_sig_allocacmp_j7_2;
        j7_2_reg_667_pp0_iter1_reg <= j7_2_reg_667;
        v166_reg_681 <= v137_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_769_pp0_iter34_reg == 1'd0) & (1'd1 == and_ln616_reg_799) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln620_reg_809 <= icmp_ln620_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_769_pp0_iter34_reg == 1'd0) & (1'd0 == and_ln616_reg_799) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln617_reg_814 <= select_ln617_fu_588_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_769_pp0_iter34_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln616_reg_804 <= sext_ln616_fu_548_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln325_fu_382_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j7_2 = 10'd0;
    end else begin
        ap_sig_allocacmp_j7_2 = j7_fu_132;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v137_ce0 = 1'b1;
    end else begin
        v137_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v262_ce0 = 1'b1;
    end else begin
        v262_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v263_ce0 = 1'b1;
    end else begin
        v263_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_0_ce0 = 1'b1;
    end else begin
        v264_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_0_we0 = 1'b1;
    end else begin
        v264_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_10_ce0 = 1'b1;
    end else begin
        v264_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_10_we0 = 1'b1;
    end else begin
        v264_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_11_ce0 = 1'b1;
    end else begin
        v264_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1) & ((i9_read_reg_653 == 4'd11) | ((i9_read_reg_653 == 4'd12) | ((i9_read_reg_653 == 4'd13) | ((i9_read_reg_653 == 4'd14) | (i9_read_reg_653 == 4'd15))))))) begin
        v264_11_we0 = 1'b1;
    end else begin
        v264_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_1_ce0 = 1'b1;
    end else begin
        v264_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_1_we0 = 1'b1;
    end else begin
        v264_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_2_ce0 = 1'b1;
    end else begin
        v264_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_2_we0 = 1'b1;
    end else begin
        v264_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_3_ce0 = 1'b1;
    end else begin
        v264_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_3_we0 = 1'b1;
    end else begin
        v264_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_4_ce0 = 1'b1;
    end else begin
        v264_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_4_we0 = 1'b1;
    end else begin
        v264_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_5_ce0 = 1'b1;
    end else begin
        v264_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_5_we0 = 1'b1;
    end else begin
        v264_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_6_ce0 = 1'b1;
    end else begin
        v264_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_6_we0 = 1'b1;
    end else begin
        v264_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_7_ce0 = 1'b1;
    end else begin
        v264_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_7_we0 = 1'b1;
    end else begin
        v264_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_8_ce0 = 1'b1;
    end else begin
        v264_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_8_we0 = 1'b1;
    end else begin
        v264_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_9_ce0 = 1'b1;
    end else begin
        v264_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_653 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        v264_9_we0 = 1'b1;
    end else begin
        v264_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_489_p2 = (12'd1075 - zext_ln501_fu_462_p1);

assign add_ln325_fu_388_p2 = (ap_sig_allocacmp_j7_2 + 10'd1);

assign add_ln328_fu_398_p2 = (sub_ln328 + zext_ln328_fu_394_p1);

assign add_ln616_fu_501_p2 = ($signed(F2_fu_489_p2) + $signed(12'd4080));

assign and_ln616_fu_542_p2 = (xor_ln617_fu_536_p2 & icmp_ln616_fu_495_p2);

assign and_ln617_fu_583_p2 = (xor_ln606_fu_578_p2 & icmp_ln617_reg_788);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln621_fu_598_p2 = $signed(man_V_6_reg_776_pp0_iter35_reg) >>> zext_ln621_fu_595_p1;

assign bitcast_ln768_fu_607_p1 = v175_reg_748_pp0_iter35_reg;

assign grp_fu_211_p_ce = 1'b1;

assign grp_fu_211_p_din0 = v175_reg_748;

assign grp_fu_437_p_ce = 1'b1;

assign grp_fu_437_p_din0 = v166_reg_681;

assign grp_fu_437_p_din1 = v167;

assign grp_fu_437_p_opcode = 2'd1;

assign grp_fu_441_p_ce = 1'b1;

assign grp_fu_441_p_din0 = v165_fu_418_p1;

assign grp_fu_441_p_din1 = v168_reg_713;

assign grp_fu_445_p_ce = 1'b1;

assign grp_fu_445_p_din0 = v169_reg_723;

assign grp_fu_445_p_din1 = v172;

assign grp_fu_449_p_ce = 1'b1;

assign grp_fu_449_p_din0 = v173_reg_733;

assign grp_fu_449_p_din1 = v174_fu_422_p1;

assign grp_fu_449_p_opcode = 2'd0;

assign i9_read_reg_653 = i9;

assign icmp_ln325_fu_382_p2 = ((ap_sig_allocacmp_j7_2 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln606_fu_456_p2 = ((trunc_ln590_fu_430_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_495_p2 = (($signed(F2_fu_489_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_521_p2 = ((F2_fu_489_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_551_p2 = ((sh_amt_reg_781 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_556_p2 = ((sh_amt_reg_781 < 12'd24) ? 1'b1 : 1'b0);

assign ireg_fu_426_p1 = grp_fu_211_p_dout0;

assign man_V_5_fu_476_p2 = (54'd0 - zext_ln604_fu_472_p1);

assign man_V_6_fu_482_p3 = ((p_Result_s_reg_754[0:0] == 1'b1) ? man_V_5_fu_476_p2 : zext_ln604_fu_472_p1);

assign or_ln617_fu_531_p2 = (icmp_ln617_fu_521_p2 | icmp_ln606_reg_769);

assign p_Result_44_fu_465_p3 = {{1'd1}, {trunc_ln600_reg_764}};

assign select_ln616_fu_633_p3 = ((and_ln616_reg_799_pp0_iter35_reg[0:0] == 1'b1) ? select_ln620_fu_626_p3 : select_ln617_reg_814);

assign select_ln617_fu_588_p3 = ((and_ln617_fu_583_p2[0:0] == 1'b1) ? trunc_ln618_reg_793 : select_ln638_fu_570_p3);

assign select_ln620_fu_626_p3 = ((icmp_ln620_reg_809[0:0] == 1'b1) ? trunc_ln621_fu_603_p1 : select_ln623_fu_618_p3);

assign select_ln623_fu_618_p3 = ((tmp_fu_610_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln638_fu_570_p3 = ((icmp_ln638_fu_556_p2[0:0] == 1'b1) ? shl_ln639_fu_565_p2 : 24'd0);

assign sext_ln616_fu_548_p1 = sh_amt_reg_781;

assign sext_ln616cast_fu_561_p1 = sext_ln616_fu_548_p1[23:0];

assign sh_amt_fu_513_p3 = ((icmp_ln616_fu_495_p2[0:0] == 1'b1) ? add_ln616_fu_501_p2 : sub_ln616_fu_507_p2);

assign shl_ln639_fu_565_p2 = trunc_ln618_reg_793 << sext_ln616cast_fu_561_p1;

assign sub_ln616_fu_507_p2 = (12'd16 - F2_fu_489_p2);

assign tmp_fu_610_p3 = bitcast_ln768_fu_607_p1[32'd31];

assign trunc_ln590_fu_430_p1 = ireg_fu_426_p1[62:0];

assign trunc_ln600_fu_452_p1 = ireg_fu_426_p1[51:0];

assign trunc_ln618_fu_527_p1 = man_V_6_fu_482_p3[23:0];

assign trunc_ln621_fu_603_p1 = ashr_ln621_fu_598_p2[23:0];

assign v137_address0 = zext_ln328_2_fu_404_p1;

assign v165_fu_418_p1 = v262_load_reg_708;

assign v174_fu_422_p1 = v263_load_reg_738;

assign v176_V_fu_639_p3 = ((icmp_ln606_reg_769_pp0_iter35_reg[0:0] == 1'b1) ? 24'd0 : select_ln616_fu_633_p3);

assign v262_address0 = zext_ln325_fu_414_p1;

assign v263_address0 = zext_ln325_reg_686_pp0_iter24_reg;

assign v264_0_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_0_d0 = v176_V_reg_819;

assign v264_10_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_10_d0 = v176_V_reg_819;

assign v264_11_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_11_d0 = v176_V_reg_819;

assign v264_1_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_1_d0 = v176_V_reg_819;

assign v264_2_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_2_d0 = v176_V_reg_819;

assign v264_3_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_3_d0 = v176_V_reg_819;

assign v264_4_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_4_d0 = v176_V_reg_819;

assign v264_5_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_5_d0 = v176_V_reg_819;

assign v264_6_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_6_d0 = v176_V_reg_819;

assign v264_7_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_7_d0 = v176_V_reg_819;

assign v264_8_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_8_d0 = v176_V_reg_819;

assign v264_9_address0 = zext_ln325_reg_686_pp0_iter36_reg;

assign v264_9_d0 = v176_V_reg_819;

assign xor_ln606_fu_578_p2 = (icmp_ln606_reg_769_pp0_iter34_reg ^ 1'd1);

assign xor_ln617_fu_536_p2 = (or_ln617_fu_531_p2 ^ 1'd1);

assign zext_ln325_fu_414_p1 = j7_2_reg_667_pp0_iter4_reg;

assign zext_ln328_2_fu_404_p1 = add_ln328_fu_398_p2;

assign zext_ln328_fu_394_p1 = ap_sig_allocacmp_j7_2;

assign zext_ln501_fu_462_p1 = exp_tmp_reg_759;

assign zext_ln604_fu_472_p1 = p_Result_44_fu_465_p3;

assign zext_ln621_fu_595_p1 = $unsigned(sext_ln616_reg_804);

always @ (posedge ap_clk) begin
    zext_ln325_reg_686[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter7_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter8_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter32_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter33_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter34_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter35_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln325_reg_686_pp0_iter36_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Layer_norm_1_Pipeline_l_j7
