// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Context_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v66_V_address0,
        v66_V_ce0,
        v66_V_q0,
        v66_V_address1,
        v66_V_ce1,
        v66_V_q1,
        v67_V_address0,
        v67_V_ce0,
        v67_V_q0,
        v67_V_address1,
        v67_V_ce1,
        v67_V_q1,
        v68_V_address0,
        v68_V_ce0,
        v68_V_we0,
        v68_V_d0,
        v68_V_q0,
        v68_V_address1,
        v68_V_ce1,
        v68_V_we1,
        v68_V_d1,
        v68_V_q1
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_pp0_stage0 = 20'd8;
parameter    ap_ST_fsm_pp0_stage1 = 20'd16;
parameter    ap_ST_fsm_pp0_stage2 = 20'd32;
parameter    ap_ST_fsm_pp0_stage3 = 20'd64;
parameter    ap_ST_fsm_pp0_stage4 = 20'd128;
parameter    ap_ST_fsm_pp0_stage5 = 20'd256;
parameter    ap_ST_fsm_pp0_stage6 = 20'd512;
parameter    ap_ST_fsm_pp0_stage7 = 20'd1024;
parameter    ap_ST_fsm_pp0_stage8 = 20'd2048;
parameter    ap_ST_fsm_pp0_stage9 = 20'd4096;
parameter    ap_ST_fsm_pp0_stage10 = 20'd8192;
parameter    ap_ST_fsm_pp0_stage11 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage12 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage13 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage14 = 20'd131072;
parameter    ap_ST_fsm_pp0_stage15 = 20'd262144;
parameter    ap_ST_fsm_state21 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] v66_V_address0;
output   v66_V_ce0;
input  [23:0] v66_V_q0;
output  [7:0] v66_V_address1;
output   v66_V_ce1;
input  [23:0] v66_V_q1;
output  [9:0] v67_V_address0;
output   v67_V_ce0;
input  [23:0] v67_V_q0;
output  [9:0] v67_V_address1;
output   v67_V_ce1;
input  [23:0] v67_V_q1;
output  [9:0] v68_V_address0;
output   v68_V_ce0;
output   v68_V_we0;
output  [23:0] v68_V_d0;
input  [23:0] v68_V_q0;
output  [9:0] v68_V_address1;
output   v68_V_ce1;
output   v68_V_we1;
output  [23:0] v68_V_d1;
input  [23:0] v68_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] v66_V_address0;
reg v66_V_ce0;
reg[7:0] v66_V_address1;
reg v66_V_ce1;
reg[9:0] v67_V_address0;
reg v67_V_ce0;
reg[9:0] v67_V_address1;
reg v67_V_ce1;
reg[9:0] v68_V_address0;
reg v68_V_ce0;
reg v68_V_we0;
reg[23:0] v68_V_d0;
reg[9:0] v68_V_address1;
reg v68_V_ce1;
reg v68_V_we1;
reg[23:0] v68_V_d1;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten67_reg_370;
reg   [1:0] i_outer1_0_reg_381;
reg   [8:0] indvar_flatten_reg_392;
reg   [4:0] j_outer2_0_reg_403;
reg   [3:0] k2_0_reg_414;
reg   [23:0] reg_425;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln150_reg_1565;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [23:0] reg_430;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [23:0] reg_434;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state10_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state12_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [23:0] reg_438;
reg   [23:0] reg_442;
reg   [23:0] reg_446;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state11_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state13_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [23:0] reg_450;
wire   [0:0] icmp_ln145_fu_454_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] v70_fu_460_p2;
reg   [3:0] v70_reg_1547;
wire   [10:0] zext_ln146_fu_474_p1;
reg   [10:0] zext_ln146_reg_1552;
wire   [6:0] v71_fu_484_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln150_fu_534_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state20_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [9:0] add_ln150_fu_540_p2;
reg   [9:0] add_ln150_reg_1569;
wire   [1:0] select_ln150_1_fu_566_p3;
reg   [1:0] select_ln150_1_reg_1574;
wire   [3:0] select_ln151_fu_634_p3;
reg   [3:0] select_ln151_reg_1584;
wire   [5:0] select_ln151_1_fu_662_p3;
reg   [5:0] select_ln151_1_reg_1594;
wire   [5:0] select_ln151_2_fu_684_p3;
reg   [5:0] select_ln151_2_reg_1603;
wire   [5:0] select_ln151_3_fu_706_p3;
reg   [5:0] select_ln151_3_reg_1612;
wire   [5:0] select_ln151_4_fu_728_p3;
reg   [5:0] select_ln151_4_reg_1621;
wire   [4:0] select_ln151_5_fu_736_p3;
reg   [4:0] select_ln151_5_reg_1630;
wire   [8:0] select_ln151_6_fu_783_p3;
reg   [8:0] select_ln151_6_reg_1640;
wire   [3:0] zext_ln158_1_mid2_v_fu_791_p3;
reg   [3:0] zext_ln158_1_mid2_v_reg_1645;
wire   [3:0] or_ln150_fu_798_p2;
reg   [3:0] or_ln150_reg_1650;
wire   [3:0] or_ln150_1_fu_834_p2;
reg   [3:0] or_ln150_1_reg_1658;
reg   [9:0] v68_V_addr_1_reg_1666;
reg   [9:0] v68_V_addr_5_reg_1671;
wire   [8:0] zext_ln158_8_fu_892_p1;
reg   [8:0] zext_ln158_8_reg_1676;
wire   [3:0] or_ln150_2_fu_935_p2;
reg   [3:0] or_ln150_2_reg_1701;
reg   [9:0] v68_V_addr_9_reg_1709;
reg   [9:0] v68_V_addr_13_reg_1714;
reg   [23:0] v66_V_load_1_reg_1734;
reg   [23:0] v66_V_load_2_reg_1739;
reg   [9:0] v68_V_addr_2_reg_1744;
reg   [9:0] v68_V_addr_6_reg_1749;
wire  signed [71:0] sext_ln1118_fu_1054_p1;
reg  signed [71:0] sext_ln1118_reg_1754;
wire  signed [71:0] sext_ln1118_93_fu_1058_p1;
reg  signed [71:0] sext_ln1118_93_reg_1760;
reg   [23:0] trunc_ln_reg_1767;
wire  signed [71:0] sext_ln1118_94_fu_1086_p1;
reg  signed [71:0] sext_ln1118_94_reg_1772;
reg   [23:0] trunc_ln708_s_reg_1779;
reg   [9:0] v68_V_addr_10_reg_1784;
reg   [9:0] v68_V_addr_14_reg_1789;
wire   [23:0] add_ln703_fu_1124_p2;
reg   [23:0] add_ln703_reg_1794;
wire   [23:0] add_ln703_573_fu_1129_p2;
reg   [23:0] add_ln703_573_reg_1799;
wire  signed [71:0] sext_ln1118_95_fu_1142_p1;
reg  signed [71:0] sext_ln1118_95_reg_1804;
reg   [23:0] trunc_ln708_569_reg_1811;
wire  signed [71:0] sext_ln1118_96_fu_1169_p1;
reg  signed [71:0] sext_ln1118_96_reg_1816;
reg   [23:0] trunc_ln708_570_reg_1823;
reg   [9:0] v68_V_addr_3_reg_1828;
reg   [9:0] v68_V_addr_7_reg_1833;
wire   [23:0] add_ln703_574_fu_1206_p2;
reg   [23:0] add_ln703_574_reg_1838;
wire   [23:0] add_ln703_575_fu_1211_p2;
reg   [23:0] add_ln703_575_reg_1843;
wire  signed [71:0] sext_ln1118_97_fu_1223_p1;
reg  signed [71:0] sext_ln1118_97_reg_1848;
reg   [23:0] trunc_ln708_571_reg_1854;
reg   [23:0] trunc_ln708_572_reg_1859;
reg   [9:0] v68_V_addr_11_reg_1864;
reg   [9:0] v68_V_addr_15_reg_1869;
wire   [23:0] add_ln703_576_fu_1275_p2;
reg   [23:0] add_ln703_576_reg_1874;
wire   [23:0] add_ln703_577_fu_1280_p2;
reg   [23:0] add_ln703_577_reg_1879;
reg   [23:0] trunc_ln708_573_reg_1884;
reg   [23:0] trunc_ln708_574_reg_1889;
reg   [9:0] v68_V_addr_4_reg_1894;
reg   [9:0] v68_V_addr_8_reg_1899;
wire   [23:0] add_ln703_578_fu_1331_p2;
reg   [23:0] add_ln703_578_reg_1904;
wire   [23:0] add_ln703_579_fu_1336_p2;
reg   [23:0] add_ln703_579_reg_1909;
wire  signed [71:0] sext_ln1118_98_fu_1348_p1;
reg  signed [71:0] sext_ln1118_98_reg_1914;
reg   [23:0] trunc_ln708_575_reg_1920;
reg   [23:0] trunc_ln708_576_reg_1925;
reg   [9:0] v68_V_addr_12_reg_1930;
reg   [9:0] v68_V_addr_16_reg_1936;
wire   [23:0] add_ln703_580_fu_1400_p2;
reg   [23:0] add_ln703_580_reg_1942;
wire   [23:0] add_ln703_581_fu_1405_p2;
reg   [23:0] add_ln703_581_reg_1947;
reg   [23:0] trunc_ln708_577_reg_1952;
reg   [23:0] trunc_ln708_578_reg_1957;
wire   [23:0] add_ln703_582_fu_1438_p2;
reg   [23:0] add_ln703_582_reg_1962;
wire   [23:0] add_ln703_583_fu_1443_p2;
reg   [23:0] add_ln703_583_reg_1967;
wire  signed [71:0] sext_ln1118_99_fu_1456_p1;
reg  signed [71:0] sext_ln1118_99_reg_1972;
reg   [23:0] trunc_ln708_579_reg_1978;
reg   [23:0] trunc_ln708_580_reg_1983;
wire   [23:0] add_ln703_584_fu_1490_p2;
reg   [23:0] add_ln703_584_reg_1988;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state14_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [23:0] add_ln703_585_fu_1495_p2;
reg   [23:0] add_ln703_585_reg_1993;
reg   [23:0] trunc_ln708_581_reg_1998;
reg   [23:0] trunc_ln708_582_reg_2003;
wire   [23:0] add_ln703_586_fu_1528_p2;
reg   [23:0] add_ln703_586_reg_2008;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state15_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [23:0] add_ln703_587_fu_1533_p2;
reg   [23:0] add_ln703_587_reg_2013;
wire   [3:0] k2_fu_1538_p2;
reg   [3:0] k2_reg_2018;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state19_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage15_subdone;
reg   [3:0] v70_0_reg_348;
wire   [0:0] icmp_ln146_fu_478_p2;
reg   [6:0] v71_0_reg_359;
reg   [9:0] ap_phi_mux_indvar_flatten67_phi_fu_374_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_i_outer1_0_phi_fu_385_p4;
reg   [8:0] ap_phi_mux_indvar_flatten_phi_fu_396_p4;
reg   [4:0] ap_phi_mux_j_outer2_0_phi_fu_407_p4;
reg   [3:0] ap_phi_mux_k2_0_phi_fu_418_p4;
wire   [63:0] zext_ln203_6_fu_499_p1;
wire  signed [63:0] sext_ln158_fu_772_p1;
wire   [63:0] tmp_29_fu_870_p5;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_33_fu_881_p5;
wire  signed [63:0] sext_ln158_1_fu_901_p1;
wire  signed [63:0] sext_ln158_2_fu_912_p1;
wire   [63:0] tmp_45_fu_917_p4;
wire   [63:0] tmp_46_fu_926_p4;
wire   [63:0] tmp_37_fu_970_p5;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_41_fu_981_p5;
wire  signed [63:0] sext_ln158_3_fu_997_p1;
wire   [63:0] tmp_47_fu_1002_p4;
wire   [63:0] tmp_48_fu_1011_p4;
wire   [63:0] tmp_30_fu_1020_p4;
wire    ap_block_pp0_stage3;
wire   [63:0] tmp_34_fu_1029_p4;
wire   [63:0] tmp_38_fu_1106_p4;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_42_fu_1115_p4;
wire   [63:0] tmp_31_fu_1188_p4;
wire    ap_block_pp0_stage5;
wire   [63:0] tmp_35_fu_1197_p4;
wire   [63:0] tmp_39_fu_1257_p4;
wire    ap_block_pp0_stage6;
wire   [63:0] tmp_43_fu_1266_p4;
wire   [63:0] tmp_32_fu_1313_p4;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_36_fu_1322_p4;
wire   [63:0] tmp_40_fu_1382_p4;
wire    ap_block_pp0_stage8;
wire   [63:0] tmp_44_fu_1391_p4;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state16_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state17_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state18_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire   [9:0] tmp_fu_466_p3;
wire   [10:0] zext_ln203_fu_490_p1;
wire   [10:0] add_ln203_fu_494_p2;
wire   [3:0] trunc_ln156_fu_504_p1;
wire   [5:0] shl_ln_fu_508_p3;
wire   [0:0] icmp_ln151_fu_552_p2;
wire   [1:0] i_outer1_fu_546_p2;
wire   [7:0] tmp_21_fu_574_p3;
wire   [5:0] tmp_22_fu_586_p3;
wire   [8:0] zext_ln158_fu_582_p1;
wire   [8:0] zext_ln158_1_fu_594_p1;
wire   [0:0] icmp_ln152_fu_610_p2;
wire   [0:0] xor_ln150_fu_604_p2;
wire   [4:0] select_ln150_fu_558_p3;
wire   [0:0] and_ln150_fu_616_p2;
wire   [0:0] or_ln151_fu_628_p2;
wire   [4:0] j_outer2_fu_622_p2;
wire   [3:0] trunc_ln156_1_fu_642_p1;
wire   [5:0] shl_ln156_mid1_fu_646_p3;
wire   [5:0] select_ln150_2_fu_654_p3;
wire   [5:0] or_ln156_fu_516_p2;
wire   [5:0] or_ln156_3_fu_670_p2;
wire   [5:0] select_ln150_3_fu_676_p3;
wire   [5:0] or_ln156_1_fu_522_p2;
wire   [5:0] or_ln156_4_fu_692_p2;
wire   [5:0] select_ln150_4_fu_698_p3;
wire   [5:0] or_ln156_2_fu_528_p2;
wire   [5:0] or_ln156_5_fu_714_p2;
wire   [5:0] select_ln150_5_fu_720_p3;
wire   [8:0] sub_ln158_fu_598_p2;
wire   [3:0] trunc_ln158_fu_744_p1;
wire   [4:0] tmp_57_fu_754_p4;
wire   [3:0] or_ln158_fu_748_p2;
wire   [8:0] tmp_58_fu_764_p3;
wire   [8:0] add_ln151_fu_777_p2;
wire   [7:0] tmp_23_fu_804_p3;
wire   [5:0] tmp_24_fu_816_p3;
wire   [8:0] zext_ln158_2_fu_812_p1;
wire   [8:0] zext_ln158_3_fu_824_p1;
wire   [7:0] tmp_25_fu_840_p3;
wire   [5:0] tmp_26_fu_852_p3;
wire   [8:0] zext_ln158_4_fu_848_p1;
wire   [8:0] zext_ln158_5_fu_860_p1;
wire   [8:0] sub_ln158_1_fu_828_p2;
wire   [8:0] add_ln158_fu_895_p2;
wire   [8:0] sub_ln158_2_fu_864_p2;
wire   [8:0] add_ln158_1_fu_906_p2;
wire   [7:0] tmp_27_fu_940_p3;
wire   [5:0] tmp_28_fu_952_p3;
wire   [8:0] zext_ln158_6_fu_948_p1;
wire   [8:0] zext_ln158_7_fu_960_p1;
wire   [8:0] sub_ln158_3_fu_964_p2;
wire   [8:0] add_ln158_2_fu_992_p2;
wire   [39:0] shl_ln2_fu_1038_p3;
wire   [39:0] shl_ln728_s_fu_1046_p3;
wire  signed [39:0] mul_ln1118_fu_1062_p0;
wire  signed [39:0] mul_ln1118_fu_1062_p1;
wire   [71:0] mul_ln1118_fu_1062_p2;
wire   [39:0] shl_ln728_89_fu_1078_p3;
wire  signed [39:0] mul_ln1118_573_fu_1090_p0;
wire  signed [39:0] mul_ln1118_573_fu_1090_p1;
wire   [71:0] mul_ln1118_573_fu_1090_p2;
wire   [39:0] shl_ln728_90_fu_1134_p3;
wire  signed [39:0] mul_ln1118_574_fu_1146_p0;
wire  signed [39:0] mul_ln1118_574_fu_1146_p1;
wire   [71:0] mul_ln1118_574_fu_1146_p2;
wire   [39:0] shl_ln728_91_fu_1161_p3;
wire  signed [39:0] mul_ln1118_575_fu_1173_p0;
wire  signed [39:0] mul_ln1118_575_fu_1173_p1;
wire   [71:0] mul_ln1118_575_fu_1173_p2;
wire   [39:0] shl_ln728_92_fu_1216_p3;
wire  signed [39:0] mul_ln1118_576_fu_1227_p0;
wire  signed [39:0] mul_ln1118_576_fu_1227_p1;
wire   [71:0] mul_ln1118_576_fu_1227_p2;
wire  signed [39:0] mul_ln1118_577_fu_1242_p0;
wire  signed [39:0] mul_ln1118_577_fu_1242_p1;
wire   [71:0] mul_ln1118_577_fu_1242_p2;
wire  signed [39:0] mul_ln1118_578_fu_1285_p0;
wire  signed [39:0] mul_ln1118_578_fu_1285_p1;
wire   [71:0] mul_ln1118_578_fu_1285_p2;
wire  signed [39:0] mul_ln1118_579_fu_1299_p0;
wire  signed [39:0] mul_ln1118_579_fu_1299_p1;
wire   [71:0] mul_ln1118_579_fu_1299_p2;
wire   [39:0] shl_ln728_93_fu_1341_p3;
wire  signed [39:0] mul_ln1118_580_fu_1352_p0;
wire  signed [39:0] mul_ln1118_580_fu_1352_p1;
wire   [71:0] mul_ln1118_580_fu_1352_p2;
wire  signed [39:0] mul_ln1118_581_fu_1367_p0;
wire  signed [39:0] mul_ln1118_581_fu_1367_p1;
wire   [71:0] mul_ln1118_581_fu_1367_p2;
wire  signed [39:0] mul_ln1118_582_fu_1410_p0;
wire  signed [39:0] mul_ln1118_582_fu_1410_p1;
wire   [71:0] mul_ln1118_582_fu_1410_p2;
wire  signed [39:0] mul_ln1118_583_fu_1424_p0;
wire  signed [39:0] mul_ln1118_583_fu_1424_p1;
wire   [71:0] mul_ln1118_583_fu_1424_p2;
wire   [39:0] shl_ln728_94_fu_1448_p3;
wire  signed [39:0] mul_ln1118_584_fu_1460_p0;
wire  signed [39:0] mul_ln1118_584_fu_1460_p1;
wire   [71:0] mul_ln1118_584_fu_1460_p2;
wire  signed [39:0] mul_ln1118_585_fu_1475_p0;
wire  signed [39:0] mul_ln1118_585_fu_1475_p1;
wire   [71:0] mul_ln1118_585_fu_1475_p2;
wire  signed [39:0] mul_ln1118_586_fu_1500_p0;
wire  signed [39:0] mul_ln1118_586_fu_1500_p1;
wire   [71:0] mul_ln1118_586_fu_1500_p2;
wire  signed [39:0] mul_ln1118_587_fu_1514_p0;
wire  signed [39:0] mul_ln1118_587_fu_1514_p1;
wire   [71:0] mul_ln1118_587_fu_1514_p2;
wire    ap_CS_fsm_state21;
reg   [19:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_outer1_0_reg_381 <= 2'd0;
    end else if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_outer1_0_reg_381 <= select_ln150_1_reg_1574;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten67_reg_370 <= 10'd0;
    end else if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten67_reg_370 <= add_ln150_reg_1569;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_392 <= 9'd0;
    end else if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_392 <= select_ln151_6_reg_1640;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_outer2_0_reg_403 <= 5'd0;
    end else if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_outer2_0_reg_403 <= select_ln151_5_reg_1630;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        k2_0_reg_414 <= 4'd0;
    end else if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k2_0_reg_414 <= k2_reg_2018;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_425 <= v66_V_q1;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_425 <= v66_V_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln146_fu_478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        v70_0_reg_348 <= v70_reg_1547;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v70_0_reg_348 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v71_0_reg_359 <= 7'd0;
    end else if (((icmp_ln146_fu_478_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v71_0_reg_359 <= v71_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln150_reg_1569 <= add_ln150_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln703_573_reg_1799 <= add_ln703_573_fu_1129_p2;
        add_ln703_reg_1794 <= add_ln703_fu_1124_p2;
        sext_ln1118_95_reg_1804[71 : 16] <= sext_ln1118_95_fu_1142_p1[71 : 16];
        sext_ln1118_96_reg_1816[71 : 16] <= sext_ln1118_96_fu_1169_p1[71 : 16];
        trunc_ln708_569_reg_1811 <= {{mul_ln1118_574_fu_1146_p2[71:48]}};
        trunc_ln708_570_reg_1823 <= {{mul_ln1118_575_fu_1173_p2[71:48]}};
        v68_V_addr_10_reg_1784[5 : 2] <= tmp_38_fu_1106_p4[5 : 2];
v68_V_addr_10_reg_1784[9 : 8] <= tmp_38_fu_1106_p4[9 : 8];
        v68_V_addr_14_reg_1789[5 : 2] <= tmp_42_fu_1115_p4[5 : 2];
v68_V_addr_14_reg_1789[9 : 8] <= tmp_42_fu_1115_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        add_ln703_574_reg_1838 <= add_ln703_574_fu_1206_p2;
        add_ln703_575_reg_1843 <= add_ln703_575_fu_1211_p2;
        sext_ln1118_97_reg_1848[71 : 16] <= sext_ln1118_97_fu_1223_p1[71 : 16];
        trunc_ln708_571_reg_1854 <= {{mul_ln1118_576_fu_1227_p2[71:48]}};
        trunc_ln708_572_reg_1859 <= {{mul_ln1118_577_fu_1242_p2[71:48]}};
        v68_V_addr_3_reg_1828[5 : 2] <= tmp_31_fu_1188_p4[5 : 2];
v68_V_addr_3_reg_1828[9 : 8] <= tmp_31_fu_1188_p4[9 : 8];
        v68_V_addr_7_reg_1833[5 : 2] <= tmp_35_fu_1197_p4[5 : 2];
v68_V_addr_7_reg_1833[9 : 8] <= tmp_35_fu_1197_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        add_ln703_576_reg_1874 <= add_ln703_576_fu_1275_p2;
        add_ln703_577_reg_1879 <= add_ln703_577_fu_1280_p2;
        trunc_ln708_573_reg_1884 <= {{mul_ln1118_578_fu_1285_p2[71:48]}};
        trunc_ln708_574_reg_1889 <= {{mul_ln1118_579_fu_1299_p2[71:48]}};
        v68_V_addr_11_reg_1864[5 : 2] <= tmp_39_fu_1257_p4[5 : 2];
v68_V_addr_11_reg_1864[9 : 8] <= tmp_39_fu_1257_p4[9 : 8];
        v68_V_addr_15_reg_1869[5 : 2] <= tmp_43_fu_1266_p4[5 : 2];
v68_V_addr_15_reg_1869[9 : 8] <= tmp_43_fu_1266_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln703_578_reg_1904 <= add_ln703_578_fu_1331_p2;
        add_ln703_579_reg_1909 <= add_ln703_579_fu_1336_p2;
        sext_ln1118_98_reg_1914[71 : 16] <= sext_ln1118_98_fu_1348_p1[71 : 16];
        trunc_ln708_575_reg_1920 <= {{mul_ln1118_580_fu_1352_p2[71:48]}};
        trunc_ln708_576_reg_1925 <= {{mul_ln1118_581_fu_1367_p2[71:48]}};
        v68_V_addr_4_reg_1894[5 : 2] <= tmp_32_fu_1313_p4[5 : 2];
v68_V_addr_4_reg_1894[9 : 8] <= tmp_32_fu_1313_p4[9 : 8];
        v68_V_addr_8_reg_1899[5 : 2] <= tmp_36_fu_1322_p4[5 : 2];
v68_V_addr_8_reg_1899[9 : 8] <= tmp_36_fu_1322_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln703_580_reg_1942 <= add_ln703_580_fu_1400_p2;
        add_ln703_581_reg_1947 <= add_ln703_581_fu_1405_p2;
        trunc_ln708_577_reg_1952 <= {{mul_ln1118_582_fu_1410_p2[71:48]}};
        trunc_ln708_578_reg_1957 <= {{mul_ln1118_583_fu_1424_p2[71:48]}};
        v68_V_addr_12_reg_1930[5 : 2] <= tmp_40_fu_1382_p4[5 : 2];
v68_V_addr_12_reg_1930[9 : 8] <= tmp_40_fu_1382_p4[9 : 8];
        v68_V_addr_16_reg_1936[5 : 2] <= tmp_44_fu_1391_p4[5 : 2];
v68_V_addr_16_reg_1936[9 : 8] <= tmp_44_fu_1391_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        add_ln703_582_reg_1962 <= add_ln703_582_fu_1438_p2;
        add_ln703_583_reg_1967 <= add_ln703_583_fu_1443_p2;
        sext_ln1118_99_reg_1972[71 : 16] <= sext_ln1118_99_fu_1456_p1[71 : 16];
        trunc_ln708_579_reg_1978 <= {{mul_ln1118_584_fu_1460_p2[71:48]}};
        trunc_ln708_580_reg_1983 <= {{mul_ln1118_585_fu_1475_p2[71:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln703_584_reg_1988 <= add_ln703_584_fu_1490_p2;
        add_ln703_585_reg_1993 <= add_ln703_585_fu_1495_p2;
        trunc_ln708_581_reg_1998 <= {{mul_ln1118_586_fu_1500_p2[71:48]}};
        trunc_ln708_582_reg_2003 <= {{mul_ln1118_587_fu_1514_p2[71:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln703_586_reg_2008 <= add_ln703_586_fu_1528_p2;
        add_ln703_587_reg_2013 <= add_ln703_587_fu_1533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln150_reg_1565 <= icmp_ln150_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        k2_reg_2018 <= k2_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln150_1_reg_1658[3 : 2] <= or_ln150_1_fu_834_p2[3 : 2];
        or_ln150_reg_1650[3 : 2] <= or_ln150_fu_798_p2[3 : 2];
        v68_V_addr_1_reg_1666[5 : 2] <= tmp_29_fu_870_p5[5 : 2];
v68_V_addr_1_reg_1666[9 : 8] <= tmp_29_fu_870_p5[9 : 8];
        v68_V_addr_5_reg_1671[5 : 2] <= tmp_33_fu_881_p5[5 : 2];
v68_V_addr_5_reg_1671[9 : 8] <= tmp_33_fu_881_p5[9 : 8];
        zext_ln158_1_mid2_v_reg_1645[3 : 2] <= zext_ln158_1_mid2_v_fu_791_p3[3 : 2];
        zext_ln158_8_reg_1676[3 : 0] <= zext_ln158_8_fu_892_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        or_ln150_2_reg_1701[3 : 2] <= or_ln150_2_fu_935_p2[3 : 2];
        v68_V_addr_13_reg_1714[5 : 2] <= tmp_41_fu_981_p5[5 : 2];
v68_V_addr_13_reg_1714[9 : 8] <= tmp_41_fu_981_p5[9 : 8];
        v68_V_addr_9_reg_1709[5 : 2] <= tmp_37_fu_970_p5[5 : 2];
v68_V_addr_9_reg_1709[9 : 8] <= tmp_37_fu_970_p5[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_430 <= v67_V_q0;
        reg_438 <= v67_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_434 <= v68_V_q1;
        reg_442 <= v68_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_446 <= v68_V_q1;
        reg_450 <= v68_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_fu_534_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln150_1_reg_1574 <= select_ln150_1_fu_566_p3;
        select_ln151_5_reg_1630 <= select_ln151_5_fu_736_p3;
        select_ln151_6_reg_1640 <= select_ln151_6_fu_783_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_fu_534_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln151_1_reg_1594[5 : 2] <= select_ln151_1_fu_662_p3[5 : 2];
        select_ln151_2_reg_1603[5 : 2] <= select_ln151_2_fu_684_p3[5 : 2];
        select_ln151_3_reg_1612[5 : 2] <= select_ln151_3_fu_706_p3[5 : 2];
        select_ln151_4_reg_1621[5 : 2] <= select_ln151_4_fu_728_p3[5 : 2];
        select_ln151_reg_1584 <= select_ln151_fu_634_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sext_ln1118_93_reg_1760[71 : 16] <= sext_ln1118_93_fu_1058_p1[71 : 16];
        sext_ln1118_94_reg_1772[71 : 16] <= sext_ln1118_94_fu_1086_p1[71 : 16];
        sext_ln1118_reg_1754[71 : 16] <= sext_ln1118_fu_1054_p1[71 : 16];
        trunc_ln708_s_reg_1779 <= {{mul_ln1118_573_fu_1090_p2[71:48]}};
        trunc_ln_reg_1767 <= {{mul_ln1118_fu_1062_p2[71:48]}};
        v68_V_addr_2_reg_1744[5 : 2] <= tmp_30_fu_1020_p4[5 : 2];
v68_V_addr_2_reg_1744[9 : 8] <= tmp_30_fu_1020_p4[9 : 8];
        v68_V_addr_6_reg_1749[5 : 2] <= tmp_34_fu_1029_p4[5 : 2];
v68_V_addr_6_reg_1749[9 : 8] <= tmp_34_fu_1029_p4[9 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        v66_V_load_1_reg_1734 <= v66_V_q0;
        v66_V_load_2_reg_1739 <= v66_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v70_reg_1547 <= v70_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln146_reg_1552[9 : 6] <= zext_ln146_fu_474_p1[9 : 6];
    end
end

always @ (*) begin
    if ((icmp_ln150_fu_534_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_outer1_0_phi_fu_385_p4 = select_ln150_1_reg_1574;
    end else begin
        ap_phi_mux_i_outer1_0_phi_fu_385_p4 = i_outer1_0_reg_381;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten67_phi_fu_374_p4 = add_ln150_reg_1569;
    end else begin
        ap_phi_mux_indvar_flatten67_phi_fu_374_p4 = indvar_flatten67_reg_370;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_396_p4 = select_ln151_6_reg_1640;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_396_p4 = indvar_flatten_reg_392;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_outer2_0_phi_fu_407_p4 = select_ln151_5_reg_1630;
    end else begin
        ap_phi_mux_j_outer2_0_phi_fu_407_p4 = j_outer2_0_reg_403;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_k2_0_phi_fu_418_p4 = k2_reg_2018;
    end else begin
        ap_phi_mux_k2_0_phi_fu_418_p4 = k2_0_reg_414;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            v66_V_address0 = sext_ln158_1_fu_901_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v66_V_address0 = sext_ln158_fu_772_p1;
        end else begin
            v66_V_address0 = 'bx;
        end
    end else begin
        v66_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            v66_V_address1 = sext_ln158_3_fu_997_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            v66_V_address1 = sext_ln158_2_fu_912_p1;
        end else begin
            v66_V_address1 = 'bx;
        end
    end else begin
        v66_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        v66_V_ce0 = 1'b1;
    end else begin
        v66_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        v66_V_ce1 = 1'b1;
    end else begin
        v66_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            v67_V_address0 = tmp_47_fu_1002_p4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            v67_V_address0 = tmp_45_fu_917_p4;
        end else begin
            v67_V_address0 = 'bx;
        end
    end else begin
        v67_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            v67_V_address1 = tmp_48_fu_1011_p4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            v67_V_address1 = tmp_46_fu_926_p4;
        end else begin
            v67_V_address1 = 'bx;
        end
    end else begin
        v67_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        v67_V_ce0 = 1'b1;
    end else begin
        v67_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        v67_V_ce1 = 1'b1;
    end else begin
        v67_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_V_address0 = v68_V_addr_12_reg_1930;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        v68_V_address0 = v68_V_addr_8_reg_1899;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        v68_V_address0 = v68_V_addr_15_reg_1869;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        v68_V_address0 = v68_V_addr_7_reg_1833;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        v68_V_address0 = v68_V_addr_14_reg_1789;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v68_V_address0 = v68_V_addr_6_reg_1749;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v68_V_address0 = v68_V_addr_13_reg_1714;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v68_V_address0 = v68_V_addr_5_reg_1671;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v68_V_address0 = tmp_44_fu_1391_p4;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        v68_V_address0 = tmp_36_fu_1322_p4;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v68_V_address0 = tmp_43_fu_1266_p4;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v68_V_address0 = tmp_35_fu_1197_p4;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v68_V_address0 = tmp_42_fu_1115_p4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v68_V_address0 = tmp_34_fu_1029_p4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v68_V_address0 = tmp_41_fu_981_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_V_address0 = tmp_33_fu_881_p5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_V_address0 = zext_ln203_6_fu_499_p1;
    end else begin
        v68_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_V_address1 = v68_V_addr_16_reg_1936;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        v68_V_address1 = v68_V_addr_4_reg_1894;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        v68_V_address1 = v68_V_addr_11_reg_1864;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        v68_V_address1 = v68_V_addr_3_reg_1828;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        v68_V_address1 = v68_V_addr_10_reg_1784;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v68_V_address1 = v68_V_addr_2_reg_1744;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v68_V_address1 = v68_V_addr_9_reg_1709;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v68_V_address1 = v68_V_addr_1_reg_1666;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v68_V_address1 = tmp_40_fu_1382_p4;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        v68_V_address1 = tmp_32_fu_1313_p4;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v68_V_address1 = tmp_39_fu_1257_p4;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v68_V_address1 = tmp_31_fu_1188_p4;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v68_V_address1 = tmp_38_fu_1106_p4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v68_V_address1 = tmp_30_fu_1020_p4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v68_V_address1 = tmp_37_fu_970_p5;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_V_address1 = tmp_29_fu_870_p5;
    end else begin
        v68_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_V_ce0 = 1'b1;
    end else begin
        v68_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_V_ce1 = 1'b1;
    end else begin
        v68_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_V_d0 = add_ln703_586_reg_2008;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        v68_V_d0 = add_ln703_585_reg_1993;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        v68_V_d0 = add_ln703_583_reg_1967;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        v68_V_d0 = add_ln703_581_reg_1947;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        v68_V_d0 = add_ln703_579_reg_1909;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v68_V_d0 = add_ln703_577_reg_1879;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v68_V_d0 = add_ln703_575_reg_1843;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v68_V_d0 = add_ln703_573_reg_1799;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_V_d0 = 24'd0;
    end else begin
        v68_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_V_d1 = add_ln703_587_reg_2013;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        v68_V_d1 = add_ln703_584_reg_1988;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        v68_V_d1 = add_ln703_582_reg_1962;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        v68_V_d1 = add_ln703_580_reg_1942;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        v68_V_d1 = add_ln703_578_reg_1904;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v68_V_d1 = add_ln703_576_reg_1874;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v68_V_d1 = add_ln703_574_reg_1838;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v68_V_d1 = add_ln703_reg_1794;
    end else begin
        v68_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln146_fu_478_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_V_we0 = 1'b1;
    end else begin
        v68_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln150_reg_1565 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        v68_V_we1 = 1'b1;
    end else begin
        v68_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln145_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln146_fu_478_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln150_fu_534_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln150_fu_534_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln150_fu_540_p2 = (10'd1 + ap_phi_mux_indvar_flatten67_phi_fu_374_p4);

assign add_ln151_fu_777_p2 = (9'd1 + ap_phi_mux_indvar_flatten_phi_fu_396_p4);

assign add_ln158_1_fu_906_p2 = (zext_ln158_8_fu_892_p1 + sub_ln158_2_fu_864_p2);

assign add_ln158_2_fu_992_p2 = (zext_ln158_8_reg_1676 + sub_ln158_3_fu_964_p2);

assign add_ln158_fu_895_p2 = (zext_ln158_8_fu_892_p1 + sub_ln158_1_fu_828_p2);

assign add_ln203_fu_494_p2 = (zext_ln146_reg_1552 + zext_ln203_fu_490_p1);

assign add_ln703_573_fu_1129_p2 = (reg_442 + trunc_ln708_s_reg_1779);

assign add_ln703_574_fu_1206_p2 = (reg_446 + trunc_ln708_569_reg_1811);

assign add_ln703_575_fu_1211_p2 = (reg_450 + trunc_ln708_570_reg_1823);

assign add_ln703_576_fu_1275_p2 = (reg_434 + trunc_ln708_571_reg_1854);

assign add_ln703_577_fu_1280_p2 = (reg_442 + trunc_ln708_572_reg_1859);

assign add_ln703_578_fu_1331_p2 = (reg_446 + trunc_ln708_573_reg_1884);

assign add_ln703_579_fu_1336_p2 = (reg_450 + trunc_ln708_574_reg_1889);

assign add_ln703_580_fu_1400_p2 = (reg_434 + trunc_ln708_575_reg_1920);

assign add_ln703_581_fu_1405_p2 = (reg_442 + trunc_ln708_576_reg_1925);

assign add_ln703_582_fu_1438_p2 = (reg_446 + trunc_ln708_577_reg_1952);

assign add_ln703_583_fu_1443_p2 = (reg_450 + trunc_ln708_578_reg_1957);

assign add_ln703_584_fu_1490_p2 = (reg_434 + trunc_ln708_579_reg_1978);

assign add_ln703_585_fu_1495_p2 = (reg_442 + trunc_ln708_580_reg_1983);

assign add_ln703_586_fu_1528_p2 = (reg_446 + trunc_ln708_581_reg_1998);

assign add_ln703_587_fu_1533_p2 = (reg_450 + trunc_ln708_582_reg_2003);

assign add_ln703_fu_1124_p2 = (reg_434 + trunc_ln_reg_1767);

assign and_ln150_fu_616_p2 = (xor_ln150_fu_604_p2 & icmp_ln152_fu_610_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_outer1_fu_546_p2 = (2'd1 + ap_phi_mux_i_outer1_0_phi_fu_385_p4);

assign icmp_ln145_fu_454_p2 = ((v70_0_reg_348 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln146_fu_478_p2 = ((v71_0_reg_359 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_534_p2 = ((ap_phi_mux_indvar_flatten67_phi_fu_374_p4 == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_552_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_396_p4 == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln152_fu_610_p2 = ((ap_phi_mux_k2_0_phi_fu_418_p4 == 4'd12) ? 1'b1 : 1'b0);

assign j_outer2_fu_622_p2 = (5'd1 + select_ln150_fu_558_p3);

assign k2_fu_1538_p2 = (4'd1 + select_ln151_reg_1584);

assign mul_ln1118_573_fu_1090_p0 = sext_ln1118_fu_1054_p1;

assign mul_ln1118_573_fu_1090_p1 = shl_ln728_89_fu_1078_p3;

assign mul_ln1118_573_fu_1090_p2 = ($signed(mul_ln1118_573_fu_1090_p0) * $signed(mul_ln1118_573_fu_1090_p1));

assign mul_ln1118_574_fu_1146_p0 = sext_ln1118_reg_1754;

assign mul_ln1118_574_fu_1146_p1 = shl_ln728_90_fu_1134_p3;

assign mul_ln1118_574_fu_1146_p2 = ($signed(mul_ln1118_574_fu_1146_p0) * $signed(mul_ln1118_574_fu_1146_p1));

assign mul_ln1118_575_fu_1173_p0 = sext_ln1118_reg_1754;

assign mul_ln1118_575_fu_1173_p1 = shl_ln728_91_fu_1161_p3;

assign mul_ln1118_575_fu_1173_p2 = ($signed(mul_ln1118_575_fu_1173_p0) * $signed(mul_ln1118_575_fu_1173_p1));

assign mul_ln1118_576_fu_1227_p0 = sext_ln1118_97_fu_1223_p1;

assign mul_ln1118_576_fu_1227_p1 = sext_ln1118_93_reg_1760;

assign mul_ln1118_576_fu_1227_p2 = ($signed(mul_ln1118_576_fu_1227_p0) * $signed(mul_ln1118_576_fu_1227_p1));

assign mul_ln1118_577_fu_1242_p0 = sext_ln1118_97_fu_1223_p1;

assign mul_ln1118_577_fu_1242_p1 = sext_ln1118_94_reg_1772;

assign mul_ln1118_577_fu_1242_p2 = ($signed(mul_ln1118_577_fu_1242_p0) * $signed(mul_ln1118_577_fu_1242_p1));

assign mul_ln1118_578_fu_1285_p0 = sext_ln1118_97_reg_1848;

assign mul_ln1118_578_fu_1285_p1 = sext_ln1118_95_reg_1804;

assign mul_ln1118_578_fu_1285_p2 = ($signed(mul_ln1118_578_fu_1285_p0) * $signed(mul_ln1118_578_fu_1285_p1));

assign mul_ln1118_579_fu_1299_p0 = sext_ln1118_97_reg_1848;

assign mul_ln1118_579_fu_1299_p1 = sext_ln1118_96_reg_1816;

assign mul_ln1118_579_fu_1299_p2 = ($signed(mul_ln1118_579_fu_1299_p0) * $signed(mul_ln1118_579_fu_1299_p1));

assign mul_ln1118_580_fu_1352_p0 = sext_ln1118_98_fu_1348_p1;

assign mul_ln1118_580_fu_1352_p1 = sext_ln1118_93_reg_1760;

assign mul_ln1118_580_fu_1352_p2 = ($signed(mul_ln1118_580_fu_1352_p0) * $signed(mul_ln1118_580_fu_1352_p1));

assign mul_ln1118_581_fu_1367_p0 = sext_ln1118_98_fu_1348_p1;

assign mul_ln1118_581_fu_1367_p1 = sext_ln1118_94_reg_1772;

assign mul_ln1118_581_fu_1367_p2 = ($signed(mul_ln1118_581_fu_1367_p0) * $signed(mul_ln1118_581_fu_1367_p1));

assign mul_ln1118_582_fu_1410_p0 = sext_ln1118_98_reg_1914;

assign mul_ln1118_582_fu_1410_p1 = sext_ln1118_95_reg_1804;

assign mul_ln1118_582_fu_1410_p2 = ($signed(mul_ln1118_582_fu_1410_p0) * $signed(mul_ln1118_582_fu_1410_p1));

assign mul_ln1118_583_fu_1424_p0 = sext_ln1118_98_reg_1914;

assign mul_ln1118_583_fu_1424_p1 = sext_ln1118_96_reg_1816;

assign mul_ln1118_583_fu_1424_p2 = ($signed(mul_ln1118_583_fu_1424_p0) * $signed(mul_ln1118_583_fu_1424_p1));

assign mul_ln1118_584_fu_1460_p0 = sext_ln1118_99_fu_1456_p1;

assign mul_ln1118_584_fu_1460_p1 = sext_ln1118_93_reg_1760;

assign mul_ln1118_584_fu_1460_p2 = ($signed(mul_ln1118_584_fu_1460_p0) * $signed(mul_ln1118_584_fu_1460_p1));

assign mul_ln1118_585_fu_1475_p0 = sext_ln1118_99_fu_1456_p1;

assign mul_ln1118_585_fu_1475_p1 = sext_ln1118_94_reg_1772;

assign mul_ln1118_585_fu_1475_p2 = ($signed(mul_ln1118_585_fu_1475_p0) * $signed(mul_ln1118_585_fu_1475_p1));

assign mul_ln1118_586_fu_1500_p0 = sext_ln1118_99_reg_1972;

assign mul_ln1118_586_fu_1500_p1 = sext_ln1118_95_reg_1804;

assign mul_ln1118_586_fu_1500_p2 = ($signed(mul_ln1118_586_fu_1500_p0) * $signed(mul_ln1118_586_fu_1500_p1));

assign mul_ln1118_587_fu_1514_p0 = sext_ln1118_99_reg_1972;

assign mul_ln1118_587_fu_1514_p1 = sext_ln1118_96_reg_1816;

assign mul_ln1118_587_fu_1514_p2 = ($signed(mul_ln1118_587_fu_1514_p0) * $signed(mul_ln1118_587_fu_1514_p1));

assign mul_ln1118_fu_1062_p0 = sext_ln1118_fu_1054_p1;

assign mul_ln1118_fu_1062_p1 = shl_ln728_s_fu_1046_p3;

assign mul_ln1118_fu_1062_p2 = ($signed(mul_ln1118_fu_1062_p0) * $signed(mul_ln1118_fu_1062_p1));

assign or_ln150_1_fu_834_p2 = (zext_ln158_1_mid2_v_fu_791_p3 | 4'd2);

assign or_ln150_2_fu_935_p2 = (zext_ln158_1_mid2_v_reg_1645 | 4'd3);

assign or_ln150_fu_798_p2 = (zext_ln158_1_mid2_v_fu_791_p3 | 4'd1);

assign or_ln151_fu_628_p2 = (icmp_ln151_fu_552_p2 | and_ln150_fu_616_p2);

assign or_ln156_1_fu_522_p2 = (shl_ln_fu_508_p3 | 6'd2);

assign or_ln156_2_fu_528_p2 = (shl_ln_fu_508_p3 | 6'd3);

assign or_ln156_3_fu_670_p2 = (shl_ln156_mid1_fu_646_p3 | 6'd1);

assign or_ln156_4_fu_692_p2 = (shl_ln156_mid1_fu_646_p3 | 6'd2);

assign or_ln156_5_fu_714_p2 = (shl_ln156_mid1_fu_646_p3 | 6'd3);

assign or_ln156_fu_516_p2 = (shl_ln_fu_508_p3 | 6'd1);

assign or_ln158_fu_748_p2 = (trunc_ln158_fu_744_p1 | select_ln151_fu_634_p3);

assign select_ln150_1_fu_566_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? i_outer1_fu_546_p2 : ap_phi_mux_i_outer1_0_phi_fu_385_p4);

assign select_ln150_2_fu_654_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? 6'd0 : shl_ln_fu_508_p3);

assign select_ln150_3_fu_676_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? 6'd1 : or_ln156_fu_516_p2);

assign select_ln150_4_fu_698_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? 6'd2 : or_ln156_1_fu_522_p2);

assign select_ln150_5_fu_720_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? 6'd3 : or_ln156_2_fu_528_p2);

assign select_ln150_fu_558_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_j_outer2_0_phi_fu_407_p4);

assign select_ln151_1_fu_662_p3 = ((and_ln150_fu_616_p2[0:0] === 1'b1) ? shl_ln156_mid1_fu_646_p3 : select_ln150_2_fu_654_p3);

assign select_ln151_2_fu_684_p3 = ((and_ln150_fu_616_p2[0:0] === 1'b1) ? or_ln156_3_fu_670_p2 : select_ln150_3_fu_676_p3);

assign select_ln151_3_fu_706_p3 = ((and_ln150_fu_616_p2[0:0] === 1'b1) ? or_ln156_4_fu_692_p2 : select_ln150_4_fu_698_p3);

assign select_ln151_4_fu_728_p3 = ((and_ln150_fu_616_p2[0:0] === 1'b1) ? or_ln156_5_fu_714_p2 : select_ln150_5_fu_720_p3);

assign select_ln151_5_fu_736_p3 = ((and_ln150_fu_616_p2[0:0] === 1'b1) ? j_outer2_fu_622_p2 : select_ln150_fu_558_p3);

assign select_ln151_6_fu_783_p3 = ((icmp_ln151_fu_552_p2[0:0] === 1'b1) ? 9'd1 : add_ln151_fu_777_p2);

assign select_ln151_fu_634_p3 = ((or_ln151_fu_628_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_k2_0_phi_fu_418_p4);

assign sext_ln1118_93_fu_1058_p1 = $signed(shl_ln728_s_fu_1046_p3);

assign sext_ln1118_94_fu_1086_p1 = $signed(shl_ln728_89_fu_1078_p3);

assign sext_ln1118_95_fu_1142_p1 = $signed(shl_ln728_90_fu_1134_p3);

assign sext_ln1118_96_fu_1169_p1 = $signed(shl_ln728_91_fu_1161_p3);

assign sext_ln1118_97_fu_1223_p1 = $signed(shl_ln728_92_fu_1216_p3);

assign sext_ln1118_98_fu_1348_p1 = $signed(shl_ln728_93_fu_1341_p3);

assign sext_ln1118_99_fu_1456_p1 = $signed(shl_ln728_94_fu_1448_p3);

assign sext_ln1118_fu_1054_p1 = $signed(shl_ln2_fu_1038_p3);

assign sext_ln158_1_fu_901_p1 = $signed(add_ln158_fu_895_p2);

assign sext_ln158_2_fu_912_p1 = $signed(add_ln158_1_fu_906_p2);

assign sext_ln158_3_fu_997_p1 = $signed(add_ln158_2_fu_992_p2);

assign sext_ln158_fu_772_p1 = $signed(tmp_58_fu_764_p3);

assign shl_ln156_mid1_fu_646_p3 = {{trunc_ln156_1_fu_642_p1}, {2'd0}};

assign shl_ln2_fu_1038_p3 = {{reg_425}, {16'd0}};

assign shl_ln728_89_fu_1078_p3 = {{reg_438}, {16'd0}};

assign shl_ln728_90_fu_1134_p3 = {{reg_430}, {16'd0}};

assign shl_ln728_91_fu_1161_p3 = {{reg_438}, {16'd0}};

assign shl_ln728_92_fu_1216_p3 = {{v66_V_load_1_reg_1734}, {16'd0}};

assign shl_ln728_93_fu_1341_p3 = {{v66_V_load_2_reg_1739}, {16'd0}};

assign shl_ln728_94_fu_1448_p3 = {{reg_425}, {16'd0}};

assign shl_ln728_s_fu_1046_p3 = {{reg_430}, {16'd0}};

assign shl_ln_fu_508_p3 = {{trunc_ln156_fu_504_p1}, {2'd0}};

assign sub_ln158_1_fu_828_p2 = (zext_ln158_2_fu_812_p1 - zext_ln158_3_fu_824_p1);

assign sub_ln158_2_fu_864_p2 = (zext_ln158_4_fu_848_p1 - zext_ln158_5_fu_860_p1);

assign sub_ln158_3_fu_964_p2 = (zext_ln158_6_fu_948_p1 - zext_ln158_7_fu_960_p1);

assign sub_ln158_fu_598_p2 = (zext_ln158_fu_582_p1 - zext_ln158_1_fu_594_p1);

assign tmp_21_fu_574_p3 = {{select_ln150_1_fu_566_p3}, {6'd0}};

assign tmp_22_fu_586_p3 = {{select_ln150_1_fu_566_p3}, {4'd0}};

assign tmp_23_fu_804_p3 = {{or_ln150_fu_798_p2}, {4'd0}};

assign tmp_24_fu_816_p3 = {{or_ln150_fu_798_p2}, {2'd0}};

assign tmp_25_fu_840_p3 = {{or_ln150_1_fu_834_p2}, {4'd0}};

assign tmp_26_fu_852_p3 = {{or_ln150_1_fu_834_p2}, {2'd0}};

assign tmp_27_fu_940_p3 = {{or_ln150_2_fu_935_p2}, {4'd0}};

assign tmp_28_fu_952_p3 = {{or_ln150_2_fu_935_p2}, {2'd0}};

assign tmp_29_fu_870_p5 = {{{{{{54'd0}, {select_ln150_1_reg_1574}}}, {2'd0}}}, {select_ln151_1_reg_1594}};

assign tmp_30_fu_1020_p4 = {{{{54'd0}, {or_ln150_reg_1650}}}, {select_ln151_1_reg_1594}};

assign tmp_31_fu_1188_p4 = {{{{54'd0}, {or_ln150_1_reg_1658}}}, {select_ln151_1_reg_1594}};

assign tmp_32_fu_1313_p4 = {{{{54'd0}, {or_ln150_2_reg_1701}}}, {select_ln151_1_reg_1594}};

assign tmp_33_fu_881_p5 = {{{{{{54'd0}, {select_ln150_1_reg_1574}}}, {2'd0}}}, {select_ln151_2_reg_1603}};

assign tmp_34_fu_1029_p4 = {{{{54'd0}, {or_ln150_reg_1650}}}, {select_ln151_2_reg_1603}};

assign tmp_35_fu_1197_p4 = {{{{54'd0}, {or_ln150_1_reg_1658}}}, {select_ln151_2_reg_1603}};

assign tmp_36_fu_1322_p4 = {{{{54'd0}, {or_ln150_2_reg_1701}}}, {select_ln151_2_reg_1603}};

assign tmp_37_fu_970_p5 = {{{{{{54'd0}, {select_ln150_1_reg_1574}}}, {2'd0}}}, {select_ln151_3_reg_1612}};

assign tmp_38_fu_1106_p4 = {{{{54'd0}, {or_ln150_reg_1650}}}, {select_ln151_3_reg_1612}};

assign tmp_39_fu_1257_p4 = {{{{54'd0}, {or_ln150_1_reg_1658}}}, {select_ln151_3_reg_1612}};

assign tmp_40_fu_1382_p4 = {{{{54'd0}, {or_ln150_2_reg_1701}}}, {select_ln151_3_reg_1612}};

assign tmp_41_fu_981_p5 = {{{{{{54'd0}, {select_ln150_1_reg_1574}}}, {2'd0}}}, {select_ln151_4_reg_1621}};

assign tmp_42_fu_1115_p4 = {{{{54'd0}, {or_ln150_reg_1650}}}, {select_ln151_4_reg_1621}};

assign tmp_43_fu_1266_p4 = {{{{54'd0}, {or_ln150_1_reg_1658}}}, {select_ln151_4_reg_1621}};

assign tmp_44_fu_1391_p4 = {{{{54'd0}, {or_ln150_2_reg_1701}}}, {select_ln151_4_reg_1621}};

assign tmp_45_fu_917_p4 = {{{{54'd0}, {select_ln151_reg_1584}}}, {select_ln151_1_reg_1594}};

assign tmp_46_fu_926_p4 = {{{{54'd0}, {select_ln151_reg_1584}}}, {select_ln151_2_reg_1603}};

assign tmp_47_fu_1002_p4 = {{{{54'd0}, {select_ln151_reg_1584}}}, {select_ln151_3_reg_1612}};

assign tmp_48_fu_1011_p4 = {{{{54'd0}, {select_ln151_reg_1584}}}, {select_ln151_4_reg_1621}};

assign tmp_57_fu_754_p4 = {{sub_ln158_fu_598_p2[8:4]}};

assign tmp_58_fu_764_p3 = {{tmp_57_fu_754_p4}, {or_ln158_fu_748_p2}};

assign tmp_fu_466_p3 = {{v70_0_reg_348}, {6'd0}};

assign trunc_ln156_1_fu_642_p1 = j_outer2_fu_622_p2[3:0];

assign trunc_ln156_fu_504_p1 = ap_phi_mux_j_outer2_0_phi_fu_407_p4[3:0];

assign trunc_ln158_fu_744_p1 = sub_ln158_fu_598_p2[3:0];

assign v70_fu_460_p2 = (v70_0_reg_348 + 4'd1);

assign v71_fu_484_p2 = (v71_0_reg_359 + 7'd1);

assign xor_ln150_fu_604_p2 = (icmp_ln151_fu_552_p2 ^ 1'd1);

assign zext_ln146_fu_474_p1 = tmp_fu_466_p3;

assign zext_ln158_1_fu_594_p1 = tmp_22_fu_586_p3;

assign zext_ln158_1_mid2_v_fu_791_p3 = {{select_ln150_1_reg_1574}, {2'd0}};

assign zext_ln158_2_fu_812_p1 = tmp_23_fu_804_p3;

assign zext_ln158_3_fu_824_p1 = tmp_24_fu_816_p3;

assign zext_ln158_4_fu_848_p1 = tmp_25_fu_840_p3;

assign zext_ln158_5_fu_860_p1 = tmp_26_fu_852_p3;

assign zext_ln158_6_fu_948_p1 = tmp_27_fu_940_p3;

assign zext_ln158_7_fu_960_p1 = tmp_28_fu_952_p3;

assign zext_ln158_8_fu_892_p1 = select_ln151_reg_1584;

assign zext_ln158_fu_582_p1 = tmp_21_fu_574_p3;

assign zext_ln203_6_fu_499_p1 = add_ln203_fu_494_p2;

assign zext_ln203_fu_490_p1 = v71_0_reg_359;

always @ (posedge ap_clk) begin
    zext_ln146_reg_1552[5:0] <= 6'b000000;
    zext_ln146_reg_1552[10] <= 1'b0;
    select_ln151_1_reg_1594[1:0] <= 2'b00;
    select_ln151_2_reg_1603[1:0] <= 2'b01;
    select_ln151_3_reg_1612[1:0] <= 2'b10;
    select_ln151_4_reg_1621[1:0] <= 2'b11;
    zext_ln158_1_mid2_v_reg_1645[1:0] <= 2'b00;
    or_ln150_reg_1650[1:0] <= 2'b01;
    or_ln150_1_reg_1658[1:0] <= 2'b10;
    v68_V_addr_1_reg_1666[1:0] <= 2'b00;
    v68_V_addr_1_reg_1666[7:6] <= 2'b00;
    v68_V_addr_5_reg_1671[1:0] <= 2'b01;
    v68_V_addr_5_reg_1671[7:6] <= 2'b00;
    zext_ln158_8_reg_1676[8:4] <= 5'b00000;
    or_ln150_2_reg_1701[1:0] <= 2'b11;
    v68_V_addr_9_reg_1709[1:0] <= 2'b10;
    v68_V_addr_9_reg_1709[7:6] <= 2'b00;
    v68_V_addr_13_reg_1714[1:0] <= 2'b11;
    v68_V_addr_13_reg_1714[7:6] <= 2'b00;
    v68_V_addr_2_reg_1744[1:0] <= 2'b00;
    v68_V_addr_2_reg_1744[7:6] <= 2'b01;
    v68_V_addr_6_reg_1749[1:0] <= 2'b01;
    v68_V_addr_6_reg_1749[7:6] <= 2'b01;
    sext_ln1118_reg_1754[15:0] <= 16'b0000000000000000;
    sext_ln1118_93_reg_1760[15:0] <= 16'b0000000000000000;
    sext_ln1118_94_reg_1772[15:0] <= 16'b0000000000000000;
    v68_V_addr_10_reg_1784[1:0] <= 2'b10;
    v68_V_addr_10_reg_1784[7:6] <= 2'b01;
    v68_V_addr_14_reg_1789[1:0] <= 2'b11;
    v68_V_addr_14_reg_1789[7:6] <= 2'b01;
    sext_ln1118_95_reg_1804[15:0] <= 16'b0000000000000000;
    sext_ln1118_96_reg_1816[15:0] <= 16'b0000000000000000;
    v68_V_addr_3_reg_1828[1:0] <= 2'b00;
    v68_V_addr_3_reg_1828[7:6] <= 2'b10;
    v68_V_addr_7_reg_1833[1:0] <= 2'b01;
    v68_V_addr_7_reg_1833[7:6] <= 2'b10;
    sext_ln1118_97_reg_1848[15:0] <= 16'b0000000000000000;
    v68_V_addr_11_reg_1864[1:0] <= 2'b10;
    v68_V_addr_11_reg_1864[7:6] <= 2'b10;
    v68_V_addr_15_reg_1869[1:0] <= 2'b11;
    v68_V_addr_15_reg_1869[7:6] <= 2'b10;
    v68_V_addr_4_reg_1894[1:0] <= 2'b00;
    v68_V_addr_4_reg_1894[7:6] <= 2'b11;
    v68_V_addr_8_reg_1899[1:0] <= 2'b01;
    v68_V_addr_8_reg_1899[7:6] <= 2'b11;
    sext_ln1118_98_reg_1914[15:0] <= 16'b0000000000000000;
    v68_V_addr_12_reg_1930[1:0] <= 2'b10;
    v68_V_addr_12_reg_1930[7:6] <= 2'b11;
    v68_V_addr_16_reg_1936[1:0] <= 2'b11;
    v68_V_addr_16_reg_1936[7:6] <= 2'b11;
    sext_ln1118_99_reg_1972[15:0] <= 16'b0000000000000000;
end

endmodule //Context_layer
