-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_exp_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of Bert_layer_exp_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv71_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (70 downto 0) := "10110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv58_10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 : STD_LOGIC;
    signal table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 : STD_LOGIC;
    signal table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_27_fu_263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_27_reg_1127_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_27_reg_1127_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1132_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_6_reg_1140_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln253_fu_329_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter1_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter2_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter3_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter4_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter5_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter6_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter7_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter8_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter9_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter10_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter11_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter12_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter13_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter14_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter15_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter16_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter17_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter18_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter19_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter20_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter21_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter22_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter23_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter24_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter25_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter26_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1146_pp0_iter27_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal isNeg_fu_337_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1152 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1152_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_fu_355_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_reg_1158 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln338_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1163_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln256_fu_376_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln256_reg_1171 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln1488_fu_380_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1488_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fix_l_reg_1181 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_30_reg_1187 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_30_reg_1187_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln813_fu_438_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter2_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter3_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter4_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter5_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter6_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter7_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter8_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln813_reg_1197_pp0_iter9_reg : STD_LOGIC_VECTOR (58 downto 0);
    signal icmp_ln1654_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1654_reg_1202_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_43_fu_525_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter19_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter20_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter21_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter22_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter23_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter24_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter25_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_43_reg_1212_pp0_iter26_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_reg_1224 : STD_LOGIC_VECTOR (57 downto 0);
    signal m_diff_hi_V_reg_1229 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1229_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1234_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_584_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1241 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1241_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_fu_594_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_reg_1246 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_44_fu_635_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_44_reg_1261 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_44_reg_1261_pp0_iter12_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_44_reg_1261_pp0_iter13_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_44_reg_1261_pp0_iter14_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal f_Z3_reg_1267 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_45_fu_641_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_45_reg_1272 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_45_reg_1272_pp0_iter13_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_45_reg_1272_pp0_iter14_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln813_s_reg_1287 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_V_fu_691_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1297 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1297_pp0_iter16_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1297_pp0_iter17_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1297_pp0_iter18_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1297_pp0_iter19_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1297_pp0_iter20_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_18_reg_1303 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_18_reg_1303_pp0_iter16_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_18_reg_1303_pp0_iter17_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_18_reg_1303_pp0_iter18_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_18_reg_1303_pp0_iter19_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_18_reg_1303_pp0_iter20_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal trunc_ln813_2_reg_1324 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_1329 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1329_pp0_iter22_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1329_pp0_iter23_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1329_pp0_iter24_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1329_pp0_iter25_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_1334 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_1339 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_46_fu_806_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal ret_V_46_reg_1354 : STD_LOGIC_VECTOR (57 downto 0);
    signal grp_fu_800_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_49_reg_1359 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln1347_fu_811_p1 : STD_LOGIC_VECTOR (56 downto 0);
    signal trunc_ln1347_reg_1366 : STD_LOGIC_VECTOR (56 downto 0);
    signal trunc_ln1347_3_fu_815_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln1347_3_reg_1371 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln1347_3_fu_855_p2 : STD_LOGIC_VECTOR (104 downto 0);
    signal add_ln1347_3_reg_1376 : STD_LOGIC_VECTOR (104 downto 0);
    signal add_ln1347_4_fu_861_p2 : STD_LOGIC_VECTOR (105 downto 0);
    signal add_ln1347_4_reg_1381 : STD_LOGIC_VECTOR (105 downto 0);
    signal tmp_fu_867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_4_fu_880_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_4_reg_1391 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1035_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln186_fu_903_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln186_reg_1403 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln541_6_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln541_7_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_8_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_fu_728_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal data_V_fu_259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal es_exp_V_fu_271_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal es_sig_V_fu_281_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln515_fu_297_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_28_fu_307_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_29_fu_311_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln294_fu_319_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_1_fu_323_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal m_exp_fu_301_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_fu_345_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1512_fu_351_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_frac_l_V_fu_369_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln1488_fu_383_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_fu_387_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_35_fu_393_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_47_fu_399_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_hi_V_fu_416_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1454_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_37_fu_445_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_38_fu_450_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1523_fu_455_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_462_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal rhs_fu_475_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1116_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln1003_fu_502_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_cast_fu_486_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1003_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_511_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_s_fu_495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1002_fu_517_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_536_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal and_ln_fu_552_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal m_diff_V_fu_559_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal Z4_ind_fu_598_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_618_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln813_fu_628_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln813_15_fu_631_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_656_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_656_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_656_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln813_16_fu_679_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln813_fu_682_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln813_17_fu_687_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1347_fu_676_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2_m_1_V_fu_707_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_722_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_722_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_722_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal lhs_V_8_fu_742_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln813_18_fu_756_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln813_12_fu_759_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln813_19_fu_764_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1347_12_fu_752_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_768_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_800_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_800_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_11_fu_819_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln1347_13_fu_826_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal trunc_ln1347_2_fu_842_p3 : STD_LOGIC_VECTOR (104 downto 0);
    signal zext_ln1347_15_fu_839_p1 : STD_LOGIC_VECTOR (104 downto 0);
    signal trunc_ln6_fu_832_p3 : STD_LOGIC_VECTOR (105 downto 0);
    signal zext_ln1347_14_fu_829_p1 : STD_LOGIC_VECTOR (105 downto 0);
    signal ret_V_41_fu_849_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal r_exp_V_fu_875_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_25_fu_887_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln1023_fu_907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln970_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln211_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_NaN_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_pinf_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln214_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln214_fu_938_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_983_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_9_fu_992_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal out_exp_V_fu_978_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_31_fu_1001_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_32_fu_1008_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln338_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1035_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1035_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1019_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1035_1_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln339_fu_965_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln526_fu_1018_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln214_1_fu_946_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1035_fu_1054_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln338_1_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1035_1_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_1_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1035_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1035_2_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1035_2_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1035_3_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1019_fu_1062_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1116_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to27 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_656_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_656_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_722_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_722_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_800_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal grp_fu_800_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_mul_13s_71s_71_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (70 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component Bert_layer_mul_43ns_36ns_79_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component Bert_layer_mul_49ns_44ns_93_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component Bert_layer_mul_50ns_50ns_100_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component Bert_layer_mac_muladd_16s_15ns_19s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component Bert_layer_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component Bert_layer_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_arralbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component Bert_layer_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arramb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component Bert_layer_pow_generic_double_s_pow_reduce_anonymous_namespace_table_exp_Z1_ap_ufixed_arkbM
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component Bert_layer_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z3_ap_ufixed_arralbW
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0,
        address1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1,
        ce1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1,
        q1 => table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1);

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_U : component Bert_layer_pow_generic_double_s_pow_reduce_anonymous_namespace_table_f_Z2_ap_ufixed_arramb6
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0,
        ce0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0,
        q0 => table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0);

    mul_13s_71s_71_5_1_U4390 : component Bert_layer_mul_13s_71s_71_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 13,
        din1_WIDTH => 71,
        dout_WIDTH => 71)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ret_V_43_reg_1212,
        din1 => ap_const_lv71_58B90BFBE8E7BCD5E4,
        ce => ap_const_logic_1,
        dout => grp_fu_536_p2);

    mul_43ns_36ns_79_3_1_U4391 : component Bert_layer_mul_43ns_36ns_79_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_656_p0,
        din1 => grp_fu_656_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_656_p2);

    mul_49ns_44ns_93_5_1_U4392 : component Bert_layer_mul_49ns_44ns_93_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_722_p0,
        din1 => grp_fu_722_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_722_p2);

    mul_50ns_50ns_100_5_1_U4393 : component Bert_layer_mul_50ns_50ns_100_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_800_p0,
        din1 => grp_fu_800_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_800_p2);

    mac_muladd_16s_15ns_19s_31_4_1_U4394 : component Bert_layer_mac_muladd_16s_15ns_19s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => m_fix_hi_V_fu_416_p4,
        din1 => grp_fu_1116_p1,
        din2 => rhs_fu_475_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1116_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_1234 <= m_diff_V_fu_559_p2(50 downto 43);
                Z2_V_reg_1234_pp0_iter11_reg <= Z2_V_reg_1234;
                Z2_V_reg_1234_pp0_iter12_reg <= Z2_V_reg_1234_pp0_iter11_reg;
                Z2_V_reg_1234_pp0_iter13_reg <= Z2_V_reg_1234_pp0_iter12_reg;
                Z2_V_reg_1234_pp0_iter14_reg <= Z2_V_reg_1234_pp0_iter13_reg;
                Z2_V_reg_1234_pp0_iter15_reg <= Z2_V_reg_1234_pp0_iter14_reg;
                Z2_V_reg_1234_pp0_iter16_reg <= Z2_V_reg_1234_pp0_iter15_reg;
                Z2_V_reg_1234_pp0_iter17_reg <= Z2_V_reg_1234_pp0_iter16_reg;
                Z2_V_reg_1234_pp0_iter18_reg <= Z2_V_reg_1234_pp0_iter17_reg;
                Z2_V_reg_1234_pp0_iter19_reg <= Z2_V_reg_1234_pp0_iter18_reg;
                Z2_V_reg_1234_pp0_iter20_reg <= Z2_V_reg_1234_pp0_iter19_reg;
                Z3_V_reg_1241 <= m_diff_V_fu_559_p2(42 downto 35);
                Z3_V_reg_1241_pp0_iter11_reg <= Z3_V_reg_1241;
                Z4_reg_1246 <= Z4_fu_594_p1;
                exp_Z1P_m_1_V_reg_1334 <= exp_Z1P_m_1_l_V_fu_768_p2(51 downto 2);
                exp_Z1_V_reg_1329 <= table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
                exp_Z1_V_reg_1329_pp0_iter22_reg <= exp_Z1_V_reg_1329;
                exp_Z1_V_reg_1329_pp0_iter23_reg <= exp_Z1_V_reg_1329_pp0_iter22_reg;
                exp_Z1_V_reg_1329_pp0_iter24_reg <= exp_Z1_V_reg_1329_pp0_iter23_reg;
                exp_Z1_V_reg_1329_pp0_iter25_reg <= exp_Z1_V_reg_1329_pp0_iter24_reg;
                exp_Z1_hi_V_reg_1339 <= table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(57 downto 8);
                exp_Z2P_m_1_V_reg_1297 <= exp_Z2P_m_1_V_fu_691_p2;
                exp_Z2P_m_1_V_reg_1297_pp0_iter16_reg <= exp_Z2P_m_1_V_reg_1297;
                exp_Z2P_m_1_V_reg_1297_pp0_iter17_reg <= exp_Z2P_m_1_V_reg_1297_pp0_iter16_reg;
                exp_Z2P_m_1_V_reg_1297_pp0_iter18_reg <= exp_Z2P_m_1_V_reg_1297_pp0_iter17_reg;
                exp_Z2P_m_1_V_reg_1297_pp0_iter19_reg <= exp_Z2P_m_1_V_reg_1297_pp0_iter18_reg;
                exp_Z2P_m_1_V_reg_1297_pp0_iter20_reg <= exp_Z2P_m_1_V_reg_1297_pp0_iter19_reg;
                icmp_ln1019_6_reg_1140_pp0_iter10_reg <= icmp_ln1019_6_reg_1140_pp0_iter9_reg;
                icmp_ln1019_6_reg_1140_pp0_iter11_reg <= icmp_ln1019_6_reg_1140_pp0_iter10_reg;
                icmp_ln1019_6_reg_1140_pp0_iter12_reg <= icmp_ln1019_6_reg_1140_pp0_iter11_reg;
                icmp_ln1019_6_reg_1140_pp0_iter13_reg <= icmp_ln1019_6_reg_1140_pp0_iter12_reg;
                icmp_ln1019_6_reg_1140_pp0_iter14_reg <= icmp_ln1019_6_reg_1140_pp0_iter13_reg;
                icmp_ln1019_6_reg_1140_pp0_iter15_reg <= icmp_ln1019_6_reg_1140_pp0_iter14_reg;
                icmp_ln1019_6_reg_1140_pp0_iter16_reg <= icmp_ln1019_6_reg_1140_pp0_iter15_reg;
                icmp_ln1019_6_reg_1140_pp0_iter17_reg <= icmp_ln1019_6_reg_1140_pp0_iter16_reg;
                icmp_ln1019_6_reg_1140_pp0_iter18_reg <= icmp_ln1019_6_reg_1140_pp0_iter17_reg;
                icmp_ln1019_6_reg_1140_pp0_iter19_reg <= icmp_ln1019_6_reg_1140_pp0_iter18_reg;
                icmp_ln1019_6_reg_1140_pp0_iter20_reg <= icmp_ln1019_6_reg_1140_pp0_iter19_reg;
                icmp_ln1019_6_reg_1140_pp0_iter21_reg <= icmp_ln1019_6_reg_1140_pp0_iter20_reg;
                icmp_ln1019_6_reg_1140_pp0_iter22_reg <= icmp_ln1019_6_reg_1140_pp0_iter21_reg;
                icmp_ln1019_6_reg_1140_pp0_iter23_reg <= icmp_ln1019_6_reg_1140_pp0_iter22_reg;
                icmp_ln1019_6_reg_1140_pp0_iter24_reg <= icmp_ln1019_6_reg_1140_pp0_iter23_reg;
                icmp_ln1019_6_reg_1140_pp0_iter25_reg <= icmp_ln1019_6_reg_1140_pp0_iter24_reg;
                icmp_ln1019_6_reg_1140_pp0_iter26_reg <= icmp_ln1019_6_reg_1140_pp0_iter25_reg;
                icmp_ln1019_6_reg_1140_pp0_iter27_reg <= icmp_ln1019_6_reg_1140_pp0_iter26_reg;
                icmp_ln1019_6_reg_1140_pp0_iter2_reg <= icmp_ln1019_6_reg_1140_pp0_iter1_reg;
                icmp_ln1019_6_reg_1140_pp0_iter3_reg <= icmp_ln1019_6_reg_1140_pp0_iter2_reg;
                icmp_ln1019_6_reg_1140_pp0_iter4_reg <= icmp_ln1019_6_reg_1140_pp0_iter3_reg;
                icmp_ln1019_6_reg_1140_pp0_iter5_reg <= icmp_ln1019_6_reg_1140_pp0_iter4_reg;
                icmp_ln1019_6_reg_1140_pp0_iter6_reg <= icmp_ln1019_6_reg_1140_pp0_iter5_reg;
                icmp_ln1019_6_reg_1140_pp0_iter7_reg <= icmp_ln1019_6_reg_1140_pp0_iter6_reg;
                icmp_ln1019_6_reg_1140_pp0_iter8_reg <= icmp_ln1019_6_reg_1140_pp0_iter7_reg;
                icmp_ln1019_6_reg_1140_pp0_iter9_reg <= icmp_ln1019_6_reg_1140_pp0_iter8_reg;
                icmp_ln1019_reg_1132_pp0_iter10_reg <= icmp_ln1019_reg_1132_pp0_iter9_reg;
                icmp_ln1019_reg_1132_pp0_iter11_reg <= icmp_ln1019_reg_1132_pp0_iter10_reg;
                icmp_ln1019_reg_1132_pp0_iter12_reg <= icmp_ln1019_reg_1132_pp0_iter11_reg;
                icmp_ln1019_reg_1132_pp0_iter13_reg <= icmp_ln1019_reg_1132_pp0_iter12_reg;
                icmp_ln1019_reg_1132_pp0_iter14_reg <= icmp_ln1019_reg_1132_pp0_iter13_reg;
                icmp_ln1019_reg_1132_pp0_iter15_reg <= icmp_ln1019_reg_1132_pp0_iter14_reg;
                icmp_ln1019_reg_1132_pp0_iter16_reg <= icmp_ln1019_reg_1132_pp0_iter15_reg;
                icmp_ln1019_reg_1132_pp0_iter17_reg <= icmp_ln1019_reg_1132_pp0_iter16_reg;
                icmp_ln1019_reg_1132_pp0_iter18_reg <= icmp_ln1019_reg_1132_pp0_iter17_reg;
                icmp_ln1019_reg_1132_pp0_iter19_reg <= icmp_ln1019_reg_1132_pp0_iter18_reg;
                icmp_ln1019_reg_1132_pp0_iter20_reg <= icmp_ln1019_reg_1132_pp0_iter19_reg;
                icmp_ln1019_reg_1132_pp0_iter21_reg <= icmp_ln1019_reg_1132_pp0_iter20_reg;
                icmp_ln1019_reg_1132_pp0_iter22_reg <= icmp_ln1019_reg_1132_pp0_iter21_reg;
                icmp_ln1019_reg_1132_pp0_iter23_reg <= icmp_ln1019_reg_1132_pp0_iter22_reg;
                icmp_ln1019_reg_1132_pp0_iter24_reg <= icmp_ln1019_reg_1132_pp0_iter23_reg;
                icmp_ln1019_reg_1132_pp0_iter25_reg <= icmp_ln1019_reg_1132_pp0_iter24_reg;
                icmp_ln1019_reg_1132_pp0_iter26_reg <= icmp_ln1019_reg_1132_pp0_iter25_reg;
                icmp_ln1019_reg_1132_pp0_iter27_reg <= icmp_ln1019_reg_1132_pp0_iter26_reg;
                icmp_ln1019_reg_1132_pp0_iter2_reg <= icmp_ln1019_reg_1132_pp0_iter1_reg;
                icmp_ln1019_reg_1132_pp0_iter3_reg <= icmp_ln1019_reg_1132_pp0_iter2_reg;
                icmp_ln1019_reg_1132_pp0_iter4_reg <= icmp_ln1019_reg_1132_pp0_iter3_reg;
                icmp_ln1019_reg_1132_pp0_iter5_reg <= icmp_ln1019_reg_1132_pp0_iter4_reg;
                icmp_ln1019_reg_1132_pp0_iter6_reg <= icmp_ln1019_reg_1132_pp0_iter5_reg;
                icmp_ln1019_reg_1132_pp0_iter7_reg <= icmp_ln1019_reg_1132_pp0_iter6_reg;
                icmp_ln1019_reg_1132_pp0_iter8_reg <= icmp_ln1019_reg_1132_pp0_iter7_reg;
                icmp_ln1019_reg_1132_pp0_iter9_reg <= icmp_ln1019_reg_1132_pp0_iter8_reg;
                icmp_ln1035_reg_1396 <= icmp_ln1035_fu_897_p2;
                icmp_ln1654_reg_1202 <= icmp_ln1654_fu_470_p2;
                icmp_ln1654_reg_1202_pp0_iter10_reg <= icmp_ln1654_reg_1202_pp0_iter9_reg;
                icmp_ln1654_reg_1202_pp0_iter11_reg <= icmp_ln1654_reg_1202_pp0_iter10_reg;
                icmp_ln1654_reg_1202_pp0_iter12_reg <= icmp_ln1654_reg_1202_pp0_iter11_reg;
                icmp_ln1654_reg_1202_pp0_iter13_reg <= icmp_ln1654_reg_1202_pp0_iter12_reg;
                icmp_ln1654_reg_1202_pp0_iter14_reg <= icmp_ln1654_reg_1202_pp0_iter13_reg;
                icmp_ln1654_reg_1202_pp0_iter15_reg <= icmp_ln1654_reg_1202_pp0_iter14_reg;
                icmp_ln1654_reg_1202_pp0_iter16_reg <= icmp_ln1654_reg_1202_pp0_iter15_reg;
                icmp_ln1654_reg_1202_pp0_iter17_reg <= icmp_ln1654_reg_1202_pp0_iter16_reg;
                icmp_ln1654_reg_1202_pp0_iter18_reg <= icmp_ln1654_reg_1202_pp0_iter17_reg;
                icmp_ln1654_reg_1202_pp0_iter19_reg <= icmp_ln1654_reg_1202_pp0_iter18_reg;
                icmp_ln1654_reg_1202_pp0_iter20_reg <= icmp_ln1654_reg_1202_pp0_iter19_reg;
                icmp_ln1654_reg_1202_pp0_iter21_reg <= icmp_ln1654_reg_1202_pp0_iter20_reg;
                icmp_ln1654_reg_1202_pp0_iter22_reg <= icmp_ln1654_reg_1202_pp0_iter21_reg;
                icmp_ln1654_reg_1202_pp0_iter23_reg <= icmp_ln1654_reg_1202_pp0_iter22_reg;
                icmp_ln1654_reg_1202_pp0_iter24_reg <= icmp_ln1654_reg_1202_pp0_iter23_reg;
                icmp_ln1654_reg_1202_pp0_iter25_reg <= icmp_ln1654_reg_1202_pp0_iter24_reg;
                icmp_ln1654_reg_1202_pp0_iter26_reg <= icmp_ln1654_reg_1202_pp0_iter25_reg;
                icmp_ln1654_reg_1202_pp0_iter27_reg <= icmp_ln1654_reg_1202_pp0_iter26_reg;
                icmp_ln1654_reg_1202_pp0_iter3_reg <= icmp_ln1654_reg_1202;
                icmp_ln1654_reg_1202_pp0_iter4_reg <= icmp_ln1654_reg_1202_pp0_iter3_reg;
                icmp_ln1654_reg_1202_pp0_iter5_reg <= icmp_ln1654_reg_1202_pp0_iter4_reg;
                icmp_ln1654_reg_1202_pp0_iter6_reg <= icmp_ln1654_reg_1202_pp0_iter5_reg;
                icmp_ln1654_reg_1202_pp0_iter7_reg <= icmp_ln1654_reg_1202_pp0_iter6_reg;
                icmp_ln1654_reg_1202_pp0_iter8_reg <= icmp_ln1654_reg_1202_pp0_iter7_reg;
                icmp_ln1654_reg_1202_pp0_iter9_reg <= icmp_ln1654_reg_1202_pp0_iter8_reg;
                icmp_ln338_reg_1163_pp0_iter10_reg <= icmp_ln338_reg_1163_pp0_iter9_reg;
                icmp_ln338_reg_1163_pp0_iter11_reg <= icmp_ln338_reg_1163_pp0_iter10_reg;
                icmp_ln338_reg_1163_pp0_iter12_reg <= icmp_ln338_reg_1163_pp0_iter11_reg;
                icmp_ln338_reg_1163_pp0_iter13_reg <= icmp_ln338_reg_1163_pp0_iter12_reg;
                icmp_ln338_reg_1163_pp0_iter14_reg <= icmp_ln338_reg_1163_pp0_iter13_reg;
                icmp_ln338_reg_1163_pp0_iter15_reg <= icmp_ln338_reg_1163_pp0_iter14_reg;
                icmp_ln338_reg_1163_pp0_iter16_reg <= icmp_ln338_reg_1163_pp0_iter15_reg;
                icmp_ln338_reg_1163_pp0_iter17_reg <= icmp_ln338_reg_1163_pp0_iter16_reg;
                icmp_ln338_reg_1163_pp0_iter18_reg <= icmp_ln338_reg_1163_pp0_iter17_reg;
                icmp_ln338_reg_1163_pp0_iter19_reg <= icmp_ln338_reg_1163_pp0_iter18_reg;
                icmp_ln338_reg_1163_pp0_iter20_reg <= icmp_ln338_reg_1163_pp0_iter19_reg;
                icmp_ln338_reg_1163_pp0_iter21_reg <= icmp_ln338_reg_1163_pp0_iter20_reg;
                icmp_ln338_reg_1163_pp0_iter22_reg <= icmp_ln338_reg_1163_pp0_iter21_reg;
                icmp_ln338_reg_1163_pp0_iter23_reg <= icmp_ln338_reg_1163_pp0_iter22_reg;
                icmp_ln338_reg_1163_pp0_iter24_reg <= icmp_ln338_reg_1163_pp0_iter23_reg;
                icmp_ln338_reg_1163_pp0_iter25_reg <= icmp_ln338_reg_1163_pp0_iter24_reg;
                icmp_ln338_reg_1163_pp0_iter26_reg <= icmp_ln338_reg_1163_pp0_iter25_reg;
                icmp_ln338_reg_1163_pp0_iter27_reg <= icmp_ln338_reg_1163_pp0_iter26_reg;
                icmp_ln338_reg_1163_pp0_iter2_reg <= icmp_ln338_reg_1163_pp0_iter1_reg;
                icmp_ln338_reg_1163_pp0_iter3_reg <= icmp_ln338_reg_1163_pp0_iter2_reg;
                icmp_ln338_reg_1163_pp0_iter4_reg <= icmp_ln338_reg_1163_pp0_iter3_reg;
                icmp_ln338_reg_1163_pp0_iter5_reg <= icmp_ln338_reg_1163_pp0_iter4_reg;
                icmp_ln338_reg_1163_pp0_iter6_reg <= icmp_ln338_reg_1163_pp0_iter5_reg;
                icmp_ln338_reg_1163_pp0_iter7_reg <= icmp_ln338_reg_1163_pp0_iter6_reg;
                icmp_ln338_reg_1163_pp0_iter8_reg <= icmp_ln338_reg_1163_pp0_iter7_reg;
                icmp_ln338_reg_1163_pp0_iter9_reg <= icmp_ln338_reg_1163_pp0_iter8_reg;
                m_diff_hi_V_reg_1229 <= m_diff_V_fu_559_p2(58 downto 51);
                m_diff_hi_V_reg_1229_pp0_iter11_reg <= m_diff_hi_V_reg_1229;
                m_diff_hi_V_reg_1229_pp0_iter12_reg <= m_diff_hi_V_reg_1229_pp0_iter11_reg;
                m_diff_hi_V_reg_1229_pp0_iter13_reg <= m_diff_hi_V_reg_1229_pp0_iter12_reg;
                m_diff_hi_V_reg_1229_pp0_iter14_reg <= m_diff_hi_V_reg_1229_pp0_iter13_reg;
                m_diff_hi_V_reg_1229_pp0_iter15_reg <= m_diff_hi_V_reg_1229_pp0_iter14_reg;
                m_diff_hi_V_reg_1229_pp0_iter16_reg <= m_diff_hi_V_reg_1229_pp0_iter15_reg;
                m_diff_hi_V_reg_1229_pp0_iter17_reg <= m_diff_hi_V_reg_1229_pp0_iter16_reg;
                m_diff_hi_V_reg_1229_pp0_iter18_reg <= m_diff_hi_V_reg_1229_pp0_iter17_reg;
                m_diff_hi_V_reg_1229_pp0_iter19_reg <= m_diff_hi_V_reg_1229_pp0_iter18_reg;
                p_Result_27_reg_1127_pp0_iter10_reg <= p_Result_27_reg_1127_pp0_iter9_reg;
                p_Result_27_reg_1127_pp0_iter11_reg <= p_Result_27_reg_1127_pp0_iter10_reg;
                p_Result_27_reg_1127_pp0_iter12_reg <= p_Result_27_reg_1127_pp0_iter11_reg;
                p_Result_27_reg_1127_pp0_iter13_reg <= p_Result_27_reg_1127_pp0_iter12_reg;
                p_Result_27_reg_1127_pp0_iter14_reg <= p_Result_27_reg_1127_pp0_iter13_reg;
                p_Result_27_reg_1127_pp0_iter15_reg <= p_Result_27_reg_1127_pp0_iter14_reg;
                p_Result_27_reg_1127_pp0_iter16_reg <= p_Result_27_reg_1127_pp0_iter15_reg;
                p_Result_27_reg_1127_pp0_iter17_reg <= p_Result_27_reg_1127_pp0_iter16_reg;
                p_Result_27_reg_1127_pp0_iter18_reg <= p_Result_27_reg_1127_pp0_iter17_reg;
                p_Result_27_reg_1127_pp0_iter19_reg <= p_Result_27_reg_1127_pp0_iter18_reg;
                p_Result_27_reg_1127_pp0_iter20_reg <= p_Result_27_reg_1127_pp0_iter19_reg;
                p_Result_27_reg_1127_pp0_iter21_reg <= p_Result_27_reg_1127_pp0_iter20_reg;
                p_Result_27_reg_1127_pp0_iter22_reg <= p_Result_27_reg_1127_pp0_iter21_reg;
                p_Result_27_reg_1127_pp0_iter23_reg <= p_Result_27_reg_1127_pp0_iter22_reg;
                p_Result_27_reg_1127_pp0_iter24_reg <= p_Result_27_reg_1127_pp0_iter23_reg;
                p_Result_27_reg_1127_pp0_iter25_reg <= p_Result_27_reg_1127_pp0_iter24_reg;
                p_Result_27_reg_1127_pp0_iter26_reg <= p_Result_27_reg_1127_pp0_iter25_reg;
                p_Result_27_reg_1127_pp0_iter27_reg <= p_Result_27_reg_1127_pp0_iter26_reg;
                p_Result_27_reg_1127_pp0_iter2_reg <= p_Result_27_reg_1127_pp0_iter1_reg;
                p_Result_27_reg_1127_pp0_iter3_reg <= p_Result_27_reg_1127_pp0_iter2_reg;
                p_Result_27_reg_1127_pp0_iter4_reg <= p_Result_27_reg_1127_pp0_iter3_reg;
                p_Result_27_reg_1127_pp0_iter5_reg <= p_Result_27_reg_1127_pp0_iter4_reg;
                p_Result_27_reg_1127_pp0_iter6_reg <= p_Result_27_reg_1127_pp0_iter5_reg;
                p_Result_27_reg_1127_pp0_iter7_reg <= p_Result_27_reg_1127_pp0_iter6_reg;
                p_Result_27_reg_1127_pp0_iter8_reg <= p_Result_27_reg_1127_pp0_iter7_reg;
                p_Result_27_reg_1127_pp0_iter9_reg <= p_Result_27_reg_1127_pp0_iter8_reg;
                p_Result_30_reg_1187_pp0_iter2_reg <= p_Result_30_reg_1187;
                r_V_49_reg_1359 <= grp_fu_800_p2;
                r_exp_V_4_reg_1391 <= r_exp_V_4_fu_880_p3;
                ret_V_43_reg_1212 <= ret_V_43_fu_525_p3;
                ret_V_43_reg_1212_pp0_iter10_reg <= ret_V_43_reg_1212_pp0_iter9_reg;
                ret_V_43_reg_1212_pp0_iter11_reg <= ret_V_43_reg_1212_pp0_iter10_reg;
                ret_V_43_reg_1212_pp0_iter12_reg <= ret_V_43_reg_1212_pp0_iter11_reg;
                ret_V_43_reg_1212_pp0_iter13_reg <= ret_V_43_reg_1212_pp0_iter12_reg;
                ret_V_43_reg_1212_pp0_iter14_reg <= ret_V_43_reg_1212_pp0_iter13_reg;
                ret_V_43_reg_1212_pp0_iter15_reg <= ret_V_43_reg_1212_pp0_iter14_reg;
                ret_V_43_reg_1212_pp0_iter16_reg <= ret_V_43_reg_1212_pp0_iter15_reg;
                ret_V_43_reg_1212_pp0_iter17_reg <= ret_V_43_reg_1212_pp0_iter16_reg;
                ret_V_43_reg_1212_pp0_iter18_reg <= ret_V_43_reg_1212_pp0_iter17_reg;
                ret_V_43_reg_1212_pp0_iter19_reg <= ret_V_43_reg_1212_pp0_iter18_reg;
                ret_V_43_reg_1212_pp0_iter20_reg <= ret_V_43_reg_1212_pp0_iter19_reg;
                ret_V_43_reg_1212_pp0_iter21_reg <= ret_V_43_reg_1212_pp0_iter20_reg;
                ret_V_43_reg_1212_pp0_iter22_reg <= ret_V_43_reg_1212_pp0_iter21_reg;
                ret_V_43_reg_1212_pp0_iter23_reg <= ret_V_43_reg_1212_pp0_iter22_reg;
                ret_V_43_reg_1212_pp0_iter24_reg <= ret_V_43_reg_1212_pp0_iter23_reg;
                ret_V_43_reg_1212_pp0_iter25_reg <= ret_V_43_reg_1212_pp0_iter24_reg;
                ret_V_43_reg_1212_pp0_iter26_reg <= ret_V_43_reg_1212_pp0_iter25_reg;
                ret_V_43_reg_1212_pp0_iter5_reg <= ret_V_43_reg_1212;
                ret_V_43_reg_1212_pp0_iter6_reg <= ret_V_43_reg_1212_pp0_iter5_reg;
                ret_V_43_reg_1212_pp0_iter7_reg <= ret_V_43_reg_1212_pp0_iter6_reg;
                ret_V_43_reg_1212_pp0_iter8_reg <= ret_V_43_reg_1212_pp0_iter7_reg;
                ret_V_43_reg_1212_pp0_iter9_reg <= ret_V_43_reg_1212_pp0_iter8_reg;
                ret_V_44_reg_1261 <= ret_V_44_fu_635_p2;
                ret_V_44_reg_1261_pp0_iter12_reg <= ret_V_44_reg_1261;
                ret_V_44_reg_1261_pp0_iter13_reg <= ret_V_44_reg_1261_pp0_iter12_reg;
                ret_V_44_reg_1261_pp0_iter14_reg <= ret_V_44_reg_1261_pp0_iter13_reg;
                    ret_V_45_reg_1272(25 downto 0) <= ret_V_45_fu_641_p4(25 downto 0);    ret_V_45_reg_1272(42 downto 35) <= ret_V_45_fu_641_p4(42 downto 35);
                    ret_V_45_reg_1272_pp0_iter13_reg(25 downto 0) <= ret_V_45_reg_1272(25 downto 0);    ret_V_45_reg_1272_pp0_iter13_reg(42 downto 35) <= ret_V_45_reg_1272(42 downto 35);
                    ret_V_45_reg_1272_pp0_iter14_reg(25 downto 0) <= ret_V_45_reg_1272_pp0_iter13_reg(25 downto 0);    ret_V_45_reg_1272_pp0_iter14_reg(42 downto 35) <= ret_V_45_reg_1272_pp0_iter13_reg(42 downto 35);
                ret_V_46_reg_1354 <= ret_V_46_fu_806_p2;
                select_ln253_reg_1146_pp0_iter10_reg <= select_ln253_reg_1146_pp0_iter9_reg;
                select_ln253_reg_1146_pp0_iter11_reg <= select_ln253_reg_1146_pp0_iter10_reg;
                select_ln253_reg_1146_pp0_iter12_reg <= select_ln253_reg_1146_pp0_iter11_reg;
                select_ln253_reg_1146_pp0_iter13_reg <= select_ln253_reg_1146_pp0_iter12_reg;
                select_ln253_reg_1146_pp0_iter14_reg <= select_ln253_reg_1146_pp0_iter13_reg;
                select_ln253_reg_1146_pp0_iter15_reg <= select_ln253_reg_1146_pp0_iter14_reg;
                select_ln253_reg_1146_pp0_iter16_reg <= select_ln253_reg_1146_pp0_iter15_reg;
                select_ln253_reg_1146_pp0_iter17_reg <= select_ln253_reg_1146_pp0_iter16_reg;
                select_ln253_reg_1146_pp0_iter18_reg <= select_ln253_reg_1146_pp0_iter17_reg;
                select_ln253_reg_1146_pp0_iter19_reg <= select_ln253_reg_1146_pp0_iter18_reg;
                select_ln253_reg_1146_pp0_iter20_reg <= select_ln253_reg_1146_pp0_iter19_reg;
                select_ln253_reg_1146_pp0_iter21_reg <= select_ln253_reg_1146_pp0_iter20_reg;
                select_ln253_reg_1146_pp0_iter22_reg <= select_ln253_reg_1146_pp0_iter21_reg;
                select_ln253_reg_1146_pp0_iter23_reg <= select_ln253_reg_1146_pp0_iter22_reg;
                select_ln253_reg_1146_pp0_iter24_reg <= select_ln253_reg_1146_pp0_iter23_reg;
                select_ln253_reg_1146_pp0_iter25_reg <= select_ln253_reg_1146_pp0_iter24_reg;
                select_ln253_reg_1146_pp0_iter26_reg <= select_ln253_reg_1146_pp0_iter25_reg;
                select_ln253_reg_1146_pp0_iter27_reg <= select_ln253_reg_1146_pp0_iter26_reg;
                select_ln253_reg_1146_pp0_iter2_reg <= select_ln253_reg_1146_pp0_iter1_reg;
                select_ln253_reg_1146_pp0_iter3_reg <= select_ln253_reg_1146_pp0_iter2_reg;
                select_ln253_reg_1146_pp0_iter4_reg <= select_ln253_reg_1146_pp0_iter3_reg;
                select_ln253_reg_1146_pp0_iter5_reg <= select_ln253_reg_1146_pp0_iter4_reg;
                select_ln253_reg_1146_pp0_iter6_reg <= select_ln253_reg_1146_pp0_iter5_reg;
                select_ln253_reg_1146_pp0_iter7_reg <= select_ln253_reg_1146_pp0_iter6_reg;
                select_ln253_reg_1146_pp0_iter8_reg <= select_ln253_reg_1146_pp0_iter7_reg;
                select_ln253_reg_1146_pp0_iter9_reg <= select_ln253_reg_1146_pp0_iter8_reg;
                tmp_18_reg_1303 <= table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0(41 downto 2);
                tmp_18_reg_1303_pp0_iter16_reg <= tmp_18_reg_1303;
                tmp_18_reg_1303_pp0_iter17_reg <= tmp_18_reg_1303_pp0_iter16_reg;
                tmp_18_reg_1303_pp0_iter18_reg <= tmp_18_reg_1303_pp0_iter17_reg;
                tmp_18_reg_1303_pp0_iter19_reg <= tmp_18_reg_1303_pp0_iter18_reg;
                tmp_18_reg_1303_pp0_iter20_reg <= tmp_18_reg_1303_pp0_iter19_reg;
                tmp_reg_1386 <= ret_V_41_fu_849_p2(106 downto 106);
                tmp_s_reg_1224 <= grp_fu_536_p2(70 downto 13);
                trunc_ln813_2_reg_1324 <= grp_fu_722_p2(92 downto 57);
                trunc_ln813_reg_1197_pp0_iter2_reg <= trunc_ln813_reg_1197;
                trunc_ln813_reg_1197_pp0_iter3_reg <= trunc_ln813_reg_1197_pp0_iter2_reg;
                trunc_ln813_reg_1197_pp0_iter4_reg <= trunc_ln813_reg_1197_pp0_iter3_reg;
                trunc_ln813_reg_1197_pp0_iter5_reg <= trunc_ln813_reg_1197_pp0_iter4_reg;
                trunc_ln813_reg_1197_pp0_iter6_reg <= trunc_ln813_reg_1197_pp0_iter5_reg;
                trunc_ln813_reg_1197_pp0_iter7_reg <= trunc_ln813_reg_1197_pp0_iter6_reg;
                trunc_ln813_reg_1197_pp0_iter8_reg <= trunc_ln813_reg_1197_pp0_iter7_reg;
                trunc_ln813_reg_1197_pp0_iter9_reg <= trunc_ln813_reg_1197_pp0_iter8_reg;
                trunc_ln813_s_reg_1287 <= grp_fu_656_p2(78 downto 59);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_reg_1132_pp0_iter26_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln1347_3_reg_1376 <= add_ln1347_3_fu_855_p2;
                add_ln1347_4_reg_1381 <= add_ln1347_4_fu_861_p2;
                trunc_ln186_reg_1403 <= trunc_ln186_fu_903_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                f_Z3_reg_1267 <= table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1019_6_reg_1140 <= icmp_ln1019_6_fu_291_p2;
                icmp_ln1019_6_reg_1140_pp0_iter1_reg <= icmp_ln1019_6_reg_1140;
                icmp_ln1019_reg_1132 <= icmp_ln1019_fu_285_p2;
                icmp_ln1019_reg_1132_pp0_iter1_reg <= icmp_ln1019_reg_1132;
                icmp_ln338_reg_1163 <= icmp_ln338_fu_363_p2;
                icmp_ln338_reg_1163_pp0_iter1_reg <= icmp_ln338_reg_1163;
                isNeg_reg_1152 <= m_exp_fu_301_p2(11 downto 11);
                isNeg_reg_1152_pp0_iter1_reg <= isNeg_reg_1152;
                m_fix_l_reg_1181 <= r_V_47_fu_399_p3(70 downto 7);
                p_Result_27_reg_1127 <= data_V_fu_259_p1(63 downto 63);
                p_Result_27_reg_1127_pp0_iter1_reg <= p_Result_27_reg_1127;
                p_Result_30_reg_1187 <= r_V_47_fu_399_p3(70 downto 70);
                select_ln253_reg_1146 <= select_ln253_fu_329_p3;
                select_ln253_reg_1146_pp0_iter1_reg <= select_ln253_reg_1146;
                sext_ln1488_reg_1176 <= sext_ln1488_fu_380_p1;
                    sext_ln256_reg_1171(70 downto 7) <= sext_ln256_fu_376_p1(70 downto 7);
                trunc_ln813_reg_1197 <= trunc_ln813_fu_438_p1;
                ush_reg_1158 <= ush_fu_355_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1019_reg_1132_pp0_iter25_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln1347_3_reg_1371 <= trunc_ln1347_3_fu_815_p1;
                trunc_ln1347_reg_1366 <= trunc_ln1347_fu_811_p1;
            end if;
        end if;
    end process;
    sext_ln256_reg_1171(6 downto 0) <= "0000000";
    ret_V_45_reg_1272(34 downto 26) <= "000000000";
    ret_V_45_reg_1272_pp0_iter13_reg(34 downto 26) <= "000000000";
    ret_V_45_reg_1272_pp0_iter14_reg(34 downto 26) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z3_V_fu_584_p4 <= m_diff_V_fu_559_p2(42 downto 35);
    Z4_fu_594_p1 <= m_diff_V_fu_559_p2(35 - 1 downto 0);
    Z4_ind_fu_598_p4 <= m_diff_V_fu_559_p2(34 downto 27);
    add_ln1347_3_fu_855_p2 <= std_logic_vector(unsigned(trunc_ln1347_2_fu_842_p3) + unsigned(zext_ln1347_15_fu_839_p1));
    add_ln1347_4_fu_861_p2 <= std_logic_vector(unsigned(trunc_ln6_fu_832_p3) + unsigned(zext_ln1347_14_fu_829_p1));
    add_ln813_12_fu_759_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_V_reg_1297_pp0_iter20_reg) + unsigned(zext_ln813_18_fu_756_p1));
    add_ln813_fu_682_p2 <= std_logic_vector(unsigned(ret_V_44_reg_1261_pp0_iter14_reg) + unsigned(zext_ln813_16_fu_679_p1));
    and_ln1035_1_fu_1048_p2 <= (xor_ln1019_fu_1043_p2 and or_ln1035_fu_1037_p2);
    and_ln1035_2_fu_1096_p2 <= (xor_ln1019_fu_1043_p2 and or_ln1035_2_fu_1090_p2);
    and_ln1035_3_fu_1102_p2 <= (icmp_ln1039_fu_973_p2 and and_ln1035_2_fu_1096_p2);
    and_ln1035_fu_1032_p2 <= (xor_ln338_fu_1027_p2 and icmp_ln1035_reg_1396);
    and_ln211_fu_922_p2 <= (xor_ln970_fu_917_p2 and icmp_ln1019_6_reg_1140_pp0_iter27_reg);
    and_ln338_1_fu_1075_p2 <= (xor_ln338_1_fu_1069_p2 and icmp_ln338_reg_1163_pp0_iter27_reg);
    and_ln338_fu_1022_p2 <= (or_ln338_fu_954_p2 and icmp_ln338_reg_1163_pp0_iter27_reg);
    and_ln_fu_552_p3 <= (tmp_s_reg_1224 & ap_const_lv1_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to27_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_0to27 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to27)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to27 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv64_0 when (and_ln1035_3_fu_1102_p2(0) = '1') else 
        select_ln1019_fu_1062_p3;
    bitcast_ln526_fu_1018_p1 <= p_Result_32_fu_1008_p4;
    data_V_fu_259_p1 <= x;
    e_frac_V_1_fu_323_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln294_fu_319_p1));
    es_exp_V_fu_271_p4 <= data_V_fu_259_p1(62 downto 52);
    es_sig_V_fu_281_p1 <= data_V_fu_259_p1(52 - 1 downto 0);
    exp_Z1P_m_1_l_V_fu_768_p2 <= std_logic_vector(unsigned(zext_ln813_19_fu_764_p1) + unsigned(zext_ln1347_12_fu_752_p1));
    exp_Z2P_m_1_V_fu_691_p2 <= std_logic_vector(unsigned(zext_ln813_17_fu_687_p1) + unsigned(zext_ln1347_fu_676_p1));
    exp_Z2_m_1_V_fu_707_p4 <= ((Z2_V_reg_1234_pp0_iter15_reg & ap_const_lv1_0) & tmp_18_reg_1303);
    grp_fu_1116_p1 <= ap_const_lv31_5C55(15 - 1 downto 0);
    grp_fu_656_p0 <= grp_fu_656_p00(43 - 1 downto 0);
    grp_fu_656_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_45_fu_641_p4),79));
    grp_fu_656_p1 <= grp_fu_656_p10(36 - 1 downto 0);
    grp_fu_656_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_44_reg_1261),79));
    grp_fu_722_p0 <= grp_fu_722_p00(49 - 1 downto 0);
    grp_fu_722_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2_m_1_V_fu_707_p4),93));
    grp_fu_722_p1 <= grp_fu_722_p10(44 - 1 downto 0);
    grp_fu_722_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_reg_1297),93));
    grp_fu_800_p0 <= grp_fu_800_p00(50 - 1 downto 0);
    grp_fu_800_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1334),100));
    grp_fu_800_p1 <= grp_fu_800_p10(50 - 1 downto 0);
    grp_fu_800_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1339),100));
    icmp_ln1003_fu_505_p2 <= "1" when (trunc_ln1003_fu_502_p1 = ap_const_lv18_0) else "0";
    icmp_ln1019_6_fu_291_p2 <= "1" when (es_sig_V_fu_281_p1 = ap_const_lv52_0) else "0";
    icmp_ln1019_fu_285_p2 <= "1" when (es_exp_V_fu_271_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln1035_fu_897_p2 <= "1" when (signed(tmp_25_fu_887_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln1039_fu_973_p2 <= "1" when (signed(r_exp_V_4_reg_1391) < signed(ap_const_lv13_1C02)) else "0";
    icmp_ln1654_fu_470_p2 <= "0" when (shl_ln_fu_462_p3 = sext_ln256_reg_1171) else "1";
    icmp_ln338_fu_363_p2 <= "1" when (signed(m_exp_fu_301_p2) > signed(ap_const_lv12_0)) else "0";
    isNeg_fu_337_p3 <= m_exp_fu_301_p2(11 downto 11);
    lhs_V_11_fu_819_p3 <= (ret_V_46_reg_1354 & ap_const_lv49_0);
    lhs_V_8_fu_742_p5 <= (((Z2_V_reg_1234_pp0_iter20_reg & ap_const_lv1_0) & tmp_18_reg_1303_pp0_iter20_reg) & ap_const_lv2_0);
    m_diff_V_fu_559_p2 <= std_logic_vector(unsigned(trunc_ln813_reg_1197_pp0_iter9_reg) - unsigned(and_ln_fu_552_p3));
    m_exp_fu_301_p2 <= std_logic_vector(unsigned(zext_ln515_fu_297_p1) + unsigned(ap_const_lv12_C01));
    m_fix_hi_V_fu_416_p4 <= r_V_47_fu_399_p3(70 downto 55);
    m_frac_l_V_fu_369_p3 <= (select_ln253_reg_1146 & ap_const_lv7_0);
    or_ln1035_1_fu_1080_p2 <= (icmp_ln338_reg_1163_pp0_iter27_reg or icmp_ln1035_reg_1396);
    or_ln1035_2_fu_1090_p2 <= (xor_ln1035_fu_1084_p2 or and_ln338_1_fu_1075_p2);
    or_ln1035_fu_1037_p2 <= (and_ln338_fu_1022_p2 or and_ln1035_fu_1032_p2);
    or_ln214_fu_932_p2 <= (x_is_pinf_fu_927_p2 or x_is_NaN_fu_912_p2);
    or_ln338_fu_954_p2 <= (icmp_ln1654_reg_1202_pp0_iter27_reg or icmp_ln1035_reg_1396);
    out_exp_V_fu_978_p2 <= std_logic_vector(unsigned(trunc_ln186_reg_1403) + unsigned(ap_const_lv11_3FF));
    p_Result_27_fu_263_p3 <= data_V_fu_259_p1(63 downto 63);
    p_Result_28_fu_307_p1 <= data_V_fu_259_p1(52 - 1 downto 0);
    p_Result_29_fu_311_p3 <= (ap_const_lv1_1 & p_Result_28_fu_307_p1);
    p_Result_31_fu_1001_p3 <= 
        tmp_8_fu_983_p4 when (tmp_reg_1386(0) = '1') else 
        tmp_9_fu_992_p4;
    p_Result_32_fu_1008_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_978_p2) & p_Result_31_fu_1001_p3);
    p_Result_s_fu_495_p3 <= grp_fu_1116_p3(30 downto 30);
    r_V_35_fu_393_p2 <= std_logic_vector(shift_left(unsigned(sext_ln256_fu_376_p1),to_integer(unsigned('0' & zext_ln1488_fu_383_p1(31-1 downto 0)))));
    r_V_37_fu_445_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_reg_1181),to_integer(unsigned('0' & zext_ln1454_fu_442_p1(31-1 downto 0)))));
    r_V_38_fu_450_p2 <= std_logic_vector(shift_right(signed(m_fix_l_reg_1181),to_integer(unsigned('0' & zext_ln1454_fu_442_p1(31-1 downto 0)))));
    r_V_47_fu_399_p3 <= 
        r_V_fu_387_p2 when (isNeg_reg_1152(0) = '1') else 
        r_V_35_fu_393_p2;
    r_V_fu_387_p2 <= std_logic_vector(shift_right(signed(sext_ln256_fu_376_p1),to_integer(unsigned('0' & zext_ln1488_fu_383_p1(31-1 downto 0)))));
    r_exp_V_4_fu_880_p3 <= 
        ret_V_43_reg_1212_pp0_iter26_reg when (tmp_fu_867_p3(0) = '1') else 
        r_exp_V_fu_875_p2;
    r_exp_V_fu_875_p2 <= std_logic_vector(signed(ret_V_43_reg_1212_pp0_iter26_reg) + signed(ap_const_lv13_1FFF));
    r_fu_618_p4 <= table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_q1(25 downto 16);
    ret_V_41_fu_849_p2 <= std_logic_vector(unsigned(lhs_V_11_fu_819_p3) + unsigned(zext_ln1347_13_fu_826_p1));
    ret_V_43_fu_525_p3 <= 
        select_ln1002_fu_517_p3 when (p_Result_s_fu_495_p3(0) = '1') else 
        ret_V_cast_fu_486_p4;
    ret_V_44_fu_635_p2 <= std_logic_vector(unsigned(zext_ln813_fu_628_p1) + unsigned(zext_ln813_15_fu_631_p1));
    ret_V_45_fu_641_p4 <= ((Z3_V_reg_1241_pp0_iter11_reg & ap_const_lv9_0) & f_Z3_reg_1267);
    ret_V_46_fu_806_p2 <= std_logic_vector(unsigned(exp_Z1_V_reg_1329_pp0_iter25_reg) + unsigned(ap_const_lv58_10));
    ret_V_cast_fu_486_p4 <= grp_fu_1116_p3(30 downto 18);
    ret_V_fu_511_p2 <= std_logic_vector(unsigned(ret_V_cast_fu_486_p4) + unsigned(ap_const_lv13_1));
    rhs_fu_475_p3 <= (p_Result_30_reg_1187_pp0_iter2_reg & ap_const_lv18_20000);
    select_ln1002_fu_517_p3 <= 
        ret_V_cast_fu_486_p4 when (icmp_ln1003_fu_505_p2(0) = '1') else 
        ret_V_fu_511_p2;
    select_ln1019_fu_1062_p3 <= 
        select_ln214_1_fu_946_p3 when (icmp_ln1019_reg_1132_pp0_iter27_reg(0) = '1') else 
        select_ln1035_fu_1054_p3;
    select_ln1035_fu_1054_p3 <= 
        select_ln339_fu_965_p3 when (and_ln1035_1_fu_1048_p2(0) = '1') else 
        bitcast_ln526_fu_1018_p1;
    select_ln1523_fu_455_p3 <= 
        r_V_37_fu_445_p2 when (isNeg_reg_1152_pp0_iter1_reg(0) = '1') else 
        r_V_38_fu_450_p2;
    select_ln214_1_fu_946_p3 <= 
        select_ln214_fu_938_p3 when (or_ln214_fu_932_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln214_fu_938_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (x_is_NaN_fu_912_p2(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln253_fu_329_p3 <= 
        e_frac_V_1_fu_323_p2 when (p_Result_27_fu_263_p3(0) = '1') else 
        zext_ln294_fu_319_p1;
    select_ln339_fu_965_p3 <= 
        ap_const_lv64_0 when (tmp_26_fu_958_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
        sext_ln1488_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_reg_1158),32));

        sext_ln1512_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_345_p2),12));

        sext_ln256_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_fu_369_p3),71));

    shl_ln_fu_462_p3 <= (select_ln1523_fu_455_p3 & ap_const_lv7_0);
    sub_ln1512_fu_345_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(es_exp_V_fu_271_p4));
    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln541_fu_728_p1(8 - 1 downto 0);

    table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter20, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            table_exp_Z1_ap_ufixed_58_1_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln541_8_fu_672_p1(8 - 1 downto 0);

    table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z2_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address0 <= zext_ln541_7_fu_613_p1(8 - 1 downto 0);
    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_address1 <= zext_ln541_6_fu_608_p1(8 - 1 downto 0);

    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_1;
        else 
            table_f_Z3_ap_ufixed_59_0_ap_q_mode_5_ap_o_mode_3_0_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_25_fu_887_p4 <= r_exp_V_4_fu_880_p3(12 downto 10);
    tmp_26_fu_958_p3 <= select_ln253_reg_1146_pp0_iter27_reg(53 downto 53);
    tmp_8_fu_983_p4 <= add_ln1347_4_reg_1381(105 downto 54);
    tmp_9_fu_992_p4 <= add_ln1347_3_reg_1376(104 downto 53);
    tmp_fu_867_p3 <= ret_V_41_fu_849_p2(106 downto 106);
    trunc_ln1003_fu_502_p1 <= grp_fu_1116_p3(18 - 1 downto 0);
    trunc_ln1347_2_fu_842_p3 <= (trunc_ln1347_3_reg_1371 & ap_const_lv49_0);
    trunc_ln1347_3_fu_815_p1 <= ret_V_46_fu_806_p2(56 - 1 downto 0);
    trunc_ln1347_fu_811_p1 <= ret_V_46_fu_806_p2(57 - 1 downto 0);
    trunc_ln186_fu_903_p1 <= r_exp_V_4_fu_880_p3(11 - 1 downto 0);
    trunc_ln6_fu_832_p3 <= (trunc_ln1347_reg_1366 & ap_const_lv49_0);
    trunc_ln813_fu_438_p1 <= r_V_47_fu_399_p3(59 - 1 downto 0);
    ush_fu_355_p3 <= 
        sext_ln1512_fu_351_p1 when (isNeg_fu_337_p3(0) = '1') else 
        m_exp_fu_301_p2;
    x_is_NaN_fu_912_p2 <= (xor_ln1023_fu_907_p2 and icmp_ln1019_reg_1132_pp0_iter27_reg);
    x_is_pinf_fu_927_p2 <= (icmp_ln1019_reg_1132_pp0_iter27_reg and and_ln211_fu_922_p2);
    xor_ln1019_fu_1043_p2 <= (icmp_ln1019_reg_1132_pp0_iter27_reg xor ap_const_lv1_1);
    xor_ln1023_fu_907_p2 <= (icmp_ln1019_6_reg_1140_pp0_iter27_reg xor ap_const_lv1_1);
    xor_ln1035_fu_1084_p2 <= (or_ln1035_1_fu_1080_p2 xor ap_const_lv1_1);
    xor_ln338_1_fu_1069_p2 <= (or_ln338_fu_954_p2 xor ap_const_lv1_1);
    xor_ln338_fu_1027_p2 <= (icmp_ln338_reg_1163_pp0_iter27_reg xor ap_const_lv1_1);
    xor_ln970_fu_917_p2 <= (p_Result_27_reg_1127_pp0_iter27_reg xor ap_const_lv1_1);
    zext_ln1347_12_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_8_fu_742_p5),52));
    zext_ln1347_13_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_49_reg_1359),107));
    zext_ln1347_14_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_49_reg_1359),106));
    zext_ln1347_15_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_49_reg_1359),105));
    zext_ln1347_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_45_reg_1272_pp0_iter14_reg),44));
    zext_ln1454_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_reg_1176),64));
    zext_ln1488_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_380_p1),71));
    zext_ln294_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_29_fu_311_p3),54));
    zext_ln515_fu_297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(es_exp_V_fu_271_p4),12));
    zext_ln541_6_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_fu_598_p4),64));
    zext_ln541_7_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_584_p4),64));
    zext_ln541_8_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_1234_pp0_iter13_reg),64));
    zext_ln541_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1229_pp0_iter19_reg),64));
    zext_ln813_15_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_618_p4),36));
    zext_ln813_16_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln813_s_reg_1287),36));
    zext_ln813_17_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_fu_682_p2),44));
    zext_ln813_18_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln813_2_reg_1324),44));
    zext_ln813_19_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_12_fu_759_p2),52));
    zext_ln813_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_reg_1246),36));
end behav;
