

================================================================
== Vitis HLS Report for 'Self_attention_Pipeline_l_update_i4_l_j3'
================================================================
* Date:           Tue Sep  5 02:10:18 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.222 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      169|      169|  1.690 us|  1.690 us|  169|  169|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_update_i4_l_j3  |      167|      167|        25|          1|          1|   144|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 25


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 1
  Pipeline-0 : II = 1, D = 25, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.64>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%j3 = alloca i32 1"   --->   Operation 28 'alloca' 'j3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%i4 = alloca i32 1"   --->   Operation 29 'alloca' 'i4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten7 = alloca i32 1"   --->   Operation 30 'alloca' 'indvar_flatten7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten7"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i4"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j3"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc49.i"   --->   Operation 34 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%indvar_flatten7_load = load i8 %indvar_flatten7" [kernel.cpp:122]   --->   Operation 35 'load' 'indvar_flatten7_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.55ns)   --->   "%icmp_ln122 = icmp_eq  i8 %indvar_flatten7_load, i8 144" [kernel.cpp:122]   --->   Operation 36 'icmp' 'icmp_ln122' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.91ns)   --->   "%add_ln122_1 = add i8 %indvar_flatten7_load, i8 1" [kernel.cpp:122]   --->   Operation 37 'add' 'add_ln122_1' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln122 = br i1 %icmp_ln122, void %for.inc52.i, void %_Z13Softmax_layerPA12_fPA12_8ap_fixedILi24ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EE.exit.exitStub" [kernel.cpp:122]   --->   Operation 38 'br' 'br_ln122' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%j3_load = load i4 %j3" [kernel.cpp:123]   --->   Operation 39 'load' 'j3_load' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i4_load = load i4 %i4" [kernel.cpp:122]   --->   Operation 40 'load' 'i4_load' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.73ns)   --->   "%add_ln122 = add i4 %i4_load, i4 1" [kernel.cpp:122]   --->   Operation 41 'add' 'add_ln122' <Predicate = (!icmp_ln122)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (1.30ns)   --->   "%icmp_ln123 = icmp_eq  i4 %j3_load, i4 12" [kernel.cpp:123]   --->   Operation 42 'icmp' 'icmp_ln123' <Predicate = (!icmp_ln122)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (1.02ns)   --->   "%select_ln122 = select i1 %icmp_ln123, i4 0, i4 %j3_load" [kernel.cpp:122]   --->   Operation 43 'select' 'select_ln122' <Predicate = (!icmp_ln122)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (1.02ns)   --->   "%select_ln122_2 = select i1 %icmp_ln123, i4 %add_ln122, i4 %i4_load" [kernel.cpp:122]   --->   Operation 44 'select' 'select_ln122_2' <Predicate = (!icmp_ln122)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln129_mid2_v = partselect i3 @_ssdm_op_PartSelect.i3.i4.i32.i32, i4 %select_ln122_2, i32 1, i32 3" [kernel.cpp:122]   --->   Operation 45 'partselect' 'zext_ln129_mid2_v' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i4 %select_ln122_2" [kernel.cpp:122]   --->   Operation 46 'trunc' 'trunc_ln122' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln129 = br i1 %trunc_ln122, void %arrayidx482.0.0.02.i13.case.0, void %arrayidx482.0.0.02.i13.case.1" [kernel.cpp:129]   --->   Operation 47 'br' 'br_ln129' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (1.73ns)   --->   "%add_ln123 = add i4 %select_ln122, i4 1" [kernel.cpp:123]   --->   Operation 48 'add' 'add_ln123' <Predicate = (!icmp_ln122)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln123 = store i8 %add_ln122_1, i8 %indvar_flatten7" [kernel.cpp:123]   --->   Operation 49 'store' 'store_ln123' <Predicate = (!icmp_ln122)> <Delay = 1.58>
ST_1 : Operation 50 [1/1] (1.58ns)   --->   "%store_ln123 = store i4 %select_ln122_2, i4 %i4" [kernel.cpp:123]   --->   Operation 50 'store' 'store_ln123' <Predicate = (!icmp_ln122)> <Delay = 1.58>
ST_1 : Operation 51 [1/1] (1.58ns)   --->   "%store_ln123 = store i4 %add_ln123, i4 %j3" [kernel.cpp:123]   --->   Operation 51 'store' 'store_ln123' <Predicate = (!icmp_ln122)> <Delay = 1.58>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln123 = br void %for.inc49.i" [kernel.cpp:123]   --->   Operation 52 'br' 'br_ln123' <Predicate = (!icmp_ln122)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.92>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln122 = zext i4 %select_ln122_2" [kernel.cpp:122]   --->   Operation 53 'zext' 'zext_ln122' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i4.i4, i4 %select_ln122_2, i4 0" [kernel.cpp:125]   --->   Operation 54 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %select_ln122_2, i2 0" [kernel.cpp:125]   --->   Operation 55 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i6 %tmp" [kernel.cpp:125]   --->   Operation 56 'zext' 'zext_ln125' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln125 = sub i8 %p_shl, i8 %zext_ln125" [kernel.cpp:125]   --->   Operation 57 'sub' 'sub_ln125' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%inp_sumRow_addr = getelementptr i32 %inp_sumRow, i64 0, i64 %zext_ln122" [kernel.cpp:122]   --->   Operation 58 'getelementptr' 'inp_sumRow_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [2/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:122]   --->   Operation 59 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln125_2 = zext i4 %select_ln122" [kernel.cpp:125]   --->   Operation 60 'zext' 'zext_ln125_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln125 = add i8 %sub_ln125, i8 %zext_ln125_2" [kernel.cpp:125]   --->   Operation 61 'add' 'add_ln125' <Predicate = true> <Delay = 3.66> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln125_3 = zext i8 %add_ln125" [kernel.cpp:125]   --->   Operation 62 'zext' 'zext_ln125_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%v100_addr = getelementptr i32 %v100, i64 0, i64 %zext_ln125_3" [kernel.cpp:125]   --->   Operation 63 'getelementptr' 'v100_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [2/2] (3.25ns)   --->   "%v62 = load i8 %v100_addr" [kernel.cpp:125]   --->   Operation 64 'load' 'v62' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 65 [1/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:122]   --->   Operation 65 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_3 : Operation 66 [1/2] (3.25ns)   --->   "%v62 = load i8 %v100_addr" [kernel.cpp:125]   --->   Operation 66 'load' 'v62' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 4 <SV = 3> <Delay = 6.07>
ST_4 : Operation 67 [16/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 67 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.07>
ST_5 : Operation 68 [15/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 68 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.07>
ST_6 : Operation 69 [14/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 69 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.07>
ST_7 : Operation 70 [13/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 70 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.07>
ST_8 : Operation 71 [12/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 71 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.07>
ST_9 : Operation 72 [11/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 72 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.07>
ST_10 : Operation 73 [10/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 73 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.07>
ST_11 : Operation 74 [9/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 74 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.07>
ST_12 : Operation 75 [8/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 75 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.07>
ST_13 : Operation 76 [7/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 76 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.07>
ST_14 : Operation 77 [6/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 77 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.07>
ST_15 : Operation 78 [5/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 78 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 6.07>
ST_16 : Operation 79 [4/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 79 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.07>
ST_17 : Operation 80 [3/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 80 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.07>
ST_18 : Operation 81 [2/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 81 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.07>
ST_19 : Operation 82 [1/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:127]   --->   Operation 82 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 4.43>
ST_20 : Operation 83 [2/2] (4.43ns)   --->   "%d = fpext i32 %v64"   --->   Operation 83 'fpext' 'd' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.22>
ST_21 : Operation 84 [1/2] (4.43ns)   --->   "%d = fpext i32 %v64"   --->   Operation 84 'fpext' 'd' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_21 : Operation 85 [1/1] (0.00ns)   --->   "%ireg = bitcast i64 %d"   --->   Operation 85 'bitcast' 'ireg' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln590 = trunc i64 %ireg"   --->   Operation 86 'trunc' 'trunc_ln590' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 87 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ireg, i32 63"   --->   Operation 87 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 88 [1/1] (0.00ns)   --->   "%exp_tmp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %ireg, i32 52, i32 62"   --->   Operation 88 'partselect' 'exp_tmp' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln600 = trunc i64 %ireg"   --->   Operation 89 'trunc' 'trunc_ln600' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 90 [1/1] (2.78ns)   --->   "%icmp_ln606 = icmp_eq  i63 %trunc_ln590, i63 0"   --->   Operation 90 'icmp' 'icmp_ln606' <Predicate = true> <Delay = 2.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.51>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln501 = zext i11 %exp_tmp"   --->   Operation 91 'zext' 'zext_ln501' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%p_Result_33 = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln600"   --->   Operation 92 'bitconcatenate' 'p_Result_33' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln604 = zext i53 %p_Result_33"   --->   Operation 93 'zext' 'zext_ln604' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 94 [1/1] (3.23ns)   --->   "%man_V_1 = sub i54 0, i54 %zext_ln604"   --->   Operation 94 'sub' 'man_V_1' <Predicate = (!icmp_ln606 & p_Result_s)> <Delay = 3.23> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 95 [1/1] (0.94ns)   --->   "%man_V_2 = select i1 %p_Result_s, i54 %man_V_1, i54 %zext_ln604"   --->   Operation 95 'select' 'man_V_2' <Predicate = (!icmp_ln606)> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 96 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, i12 %zext_ln501"   --->   Operation 96 'sub' 'F2' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 97 [1/1] (1.99ns)   --->   "%icmp_ln616 = icmp_sgt  i12 %F2, i12 16"   --->   Operation 97 'icmp' 'icmp_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 98 [1/1] (1.54ns)   --->   "%add_ln616 = add i12 %F2, i12 4080"   --->   Operation 98 'add' 'add_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 99 [1/1] (1.54ns)   --->   "%sub_ln616 = sub i12 16, i12 %F2"   --->   Operation 99 'sub' 'sub_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 100 [1/1] (0.69ns)   --->   "%sh_amt = select i1 %icmp_ln616, i12 %add_ln616, i12 %sub_ln616"   --->   Operation 100 'select' 'sh_amt' <Predicate = (!icmp_ln606)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 101 [1/1] (1.99ns)   --->   "%icmp_ln617 = icmp_eq  i12 %F2, i12 16"   --->   Operation 101 'icmp' 'icmp_ln617' <Predicate = (!icmp_ln606)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln618 = trunc i54 %man_V_2"   --->   Operation 102 'trunc' 'trunc_ln618' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node and_ln616)   --->   "%or_ln617 = or i1 %icmp_ln606, i1 %icmp_ln617"   --->   Operation 103 'or' 'or_ln617' <Predicate = (!icmp_ln606)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node and_ln616)   --->   "%xor_ln617 = xor i1 %or_ln617, i1 1"   --->   Operation 104 'xor' 'xor_ln617' <Predicate = (!icmp_ln606)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 105 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln616 = and i1 %icmp_ln616, i1 %xor_ln617"   --->   Operation 105 'and' 'and_ln616' <Predicate = (!icmp_ln606)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.19>
ST_23 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln616 = sext i12 %sh_amt"   --->   Operation 106 'sext' 'sext_ln616' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_23 : Operation 107 [1/1] (1.99ns)   --->   "%icmp_ln620 = icmp_ult  i12 %sh_amt, i12 54"   --->   Operation 107 'icmp' 'icmp_ln620' <Predicate = (!icmp_ln606 & and_ln616)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 108 [1/1] (1.99ns)   --->   "%icmp_ln638 = icmp_ult  i12 %sh_amt, i12 24"   --->   Operation 108 'icmp' 'icmp_ln638' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%sext_ln616cast = trunc i32 %sext_ln616"   --->   Operation 109 'trunc' 'sext_ln616cast' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00>
ST_23 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%shl_ln639 = shl i24 %trunc_ln618, i24 %sext_ln616cast"   --->   Operation 110 'shl' 'shl_ln639' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.20> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%select_ln638 = select i1 %icmp_ln638, i24 %shl_ln639, i24 0"   --->   Operation 111 'select' 'select_ln638' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%xor_ln606 = xor i1 %icmp_ln606, i1 1"   --->   Operation 112 'xor' 'xor_ln606' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%and_ln617 = and i1 %icmp_ln617, i1 %xor_ln606"   --->   Operation 113 'and' 'and_ln617' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 114 [1/1] (4.20ns) (out node of the LUT)   --->   "%select_ln617 = select i1 %and_ln617, i24 %trunc_ln618, i24 %select_ln638"   --->   Operation 114 'select' 'select_ln617' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 4.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 24 <SV = 23> <Delay = 5.30>
ST_24 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%zext_ln621 = zext i32 %sext_ln616"   --->   Operation 115 'zext' 'zext_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%ashr_ln621 = ashr i54 %man_V_2, i54 %zext_ln621"   --->   Operation 116 'ashr' 'ashr_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%trunc_ln621 = trunc i54 %ashr_ln621"   --->   Operation 117 'trunc' 'trunc_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%bitcast_ln768 = bitcast i32 %v64"   --->   Operation 118 'bitcast' 'bitcast_ln768' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%tmp_28 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln768, i32 31"   --->   Operation 119 'bitselect' 'tmp_28' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%select_ln623 = select i1 %tmp_28, i24 16777215, i24 0"   --->   Operation 120 'select' 'select_ln623' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%select_ln620 = select i1 %icmp_ln620, i24 %trunc_ln621, i24 %select_ln623"   --->   Operation 121 'select' 'select_ln620' <Predicate = (!icmp_ln606 & and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 122 [1/1] (4.61ns) (out node of the LUT)   --->   "%select_ln616 = select i1 %and_ln616, i24 %select_ln620, i24 %select_ln617"   --->   Operation 122 'select' 'select_ln616' <Predicate = (!icmp_ln606)> <Delay = 4.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 123 [1/1] (0.69ns) (out node of the LUT)   --->   "%v65_V = select i1 %icmp_ln606, i24 0, i24 %select_ln616"   --->   Operation 123 'select' 'v65_V' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 141 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 141 'ret' 'ret_ln0' <Predicate = (icmp_ln122)> <Delay = 0.00>

State 25 <SV = 24> <Delay = 6.83>
ST_25 : Operation 124 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @l_update_i4_l_j3_str"   --->   Operation 124 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 125 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 144, i64 144, i64 144"   --->   Operation 125 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i3.i4, i3 %zext_ln129_mid2_v, i4 0" [kernel.cpp:129]   --->   Operation 126 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_19 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %zext_ln129_mid2_v, i2 0" [kernel.cpp:129]   --->   Operation 127 'bitconcatenate' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln129 = zext i5 %tmp_19" [kernel.cpp:129]   --->   Operation 128 'zext' 'zext_ln129' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 129 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln129 = sub i7 %tmp_s, i7 %zext_ln129" [kernel.cpp:129]   --->   Operation 129 'sub' 'sub_ln129' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln125_1 = zext i4 %select_ln122" [kernel.cpp:125]   --->   Operation 130 'zext' 'zext_ln125_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 131 [1/1] (3.58ns) (root node of TernaryAdder)   --->   "%add_ln129 = add i7 %sub_ln129, i7 %zext_ln125_1" [kernel.cpp:129]   --->   Operation 131 'add' 'add_ln129' <Predicate = true> <Delay = 3.58> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_25 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln129_1 = zext i7 %add_ln129" [kernel.cpp:129]   --->   Operation 132 'zext' 'zext_ln129_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 133 [1/1] (0.00ns)   --->   "%v101_V_addr = getelementptr i24 %v101_V, i64 0, i64 %zext_ln129_1" [kernel.cpp:129]   --->   Operation 133 'getelementptr' 'v101_V_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 134 [1/1] (0.00ns)   --->   "%v101_V_1_addr = getelementptr i24 %v101_V_1, i64 0, i64 %zext_ln129_1" [kernel.cpp:129]   --->   Operation 134 'getelementptr' 'v101_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 135 [1/1] (0.00ns)   --->   "%specpipeline_ln124 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_29" [kernel.cpp:124]   --->   Operation 135 'specpipeline' 'specpipeline_ln124' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 136 [1/1] (0.00ns)   --->   "%specloopname_ln123 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [kernel.cpp:123]   --->   Operation 136 'specloopname' 'specloopname_ln123' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 137 [1/1] (3.25ns)   --->   "%store_ln129 = store i24 %v65_V, i7 %v101_V_addr" [kernel.cpp:129]   --->   Operation 137 'store' 'store_ln129' <Predicate = (!trunc_ln122)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 72> <RAM>
ST_25 : Operation 138 [1/1] (0.00ns)   --->   "%br_ln129 = br void %arrayidx482.0.0.02.i13.exit" [kernel.cpp:129]   --->   Operation 138 'br' 'br_ln129' <Predicate = (!trunc_ln122)> <Delay = 0.00>
ST_25 : Operation 139 [1/1] (3.25ns)   --->   "%store_ln129 = store i24 %v65_V, i7 %v101_V_1_addr" [kernel.cpp:129]   --->   Operation 139 'store' 'store_ln129' <Predicate = (trunc_ln122)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 72> <RAM>
ST_25 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln129 = br void %arrayidx482.0.0.02.i13.exit" [kernel.cpp:129]   --->   Operation 140 'br' 'br_ln129' <Predicate = (trunc_ln122)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.65ns
The critical path consists of the following:
	'alloca' operation ('j3') [5]  (0 ns)
	'load' operation ('j3_load', kernel.cpp:123) on local variable 'j3' [18]  (0 ns)
	'icmp' operation ('icmp_ln123', kernel.cpp:123) [23]  (1.3 ns)
	'select' operation ('select_ln122', kernel.cpp:122) [24]  (1.02 ns)
	'add' operation ('add_ln123', kernel.cpp:123) [100]  (1.74 ns)
	'store' operation ('store_ln123', kernel.cpp:123) of variable 'add_ln123', kernel.cpp:123 on local variable 'j3' [103]  (1.59 ns)

 <State 2>: 6.92ns
The critical path consists of the following:
	'sub' operation ('sub_ln125', kernel.cpp:125) [30]  (0 ns)
	'add' operation ('add_ln125', kernel.cpp:125) [41]  (3.67 ns)
	'getelementptr' operation ('v100_addr', kernel.cpp:125) [43]  (0 ns)
	'load' operation ('v62', kernel.cpp:125) on array 'v100' [50]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('v62', kernel.cpp:125) on array 'v100' [50]  (3.25 ns)

 <State 4>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 6>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 7>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 8>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 9>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 10>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 11>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 12>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 13>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 14>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 15>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 16>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 17>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 18>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 19>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:127) [51]  (6.08 ns)

 <State 20>: 4.44ns
The critical path consists of the following:
	'fpext' operation ('d') [52]  (4.44 ns)

 <State 21>: 7.22ns
The critical path consists of the following:
	'fpext' operation ('d') [52]  (4.44 ns)
	'icmp' operation ('icmp_ln606') [63]  (2.79 ns)

 <State 22>: 4.51ns
The critical path consists of the following:
	'sub' operation ('F2') [64]  (1.55 ns)
	'icmp' operation ('icmp_ln616') [65]  (1.99 ns)
	'and' operation ('and_ln616') [89]  (0.978 ns)

 <State 23>: 6.19ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln638') [80]  (1.99 ns)
	'select' operation ('select_ln638') [83]  (0 ns)
	'select' operation ('select_ln617') [86]  (4.2 ns)

 <State 24>: 5.31ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln621') [74]  (0 ns)
	'select' operation ('select_ln620') [79]  (0 ns)
	'select' operation ('select_ln616') [90]  (4.61 ns)
	'select' operation ('v65.V') [91]  (0.694 ns)

 <State 25>: 6.83ns
The critical path consists of the following:
	'sub' operation ('sub_ln129', kernel.cpp:129) [37]  (0 ns)
	'add' operation ('add_ln129', kernel.cpp:129) [44]  (3.58 ns)
	'getelementptr' operation ('v101_V_1_addr', kernel.cpp:129) [47]  (0 ns)
	'store' operation ('store_ln129', kernel.cpp:129) of variable 'v65.V' on array 'v101_V_1' [97]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
