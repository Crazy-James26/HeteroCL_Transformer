// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Bert_layer_Pipeline_l_scale_outp_i19_l_j18 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v349_address0,
        v349_ce0,
        v349_q0,
        acc_outp4_V_address0,
        acc_outp4_V_ce0,
        acc_outp4_V_q0,
        acc_outp4_V_1_address0,
        acc_outp4_V_1_ce0,
        acc_outp4_V_1_q0,
        acc_outp4_V_2_address0,
        acc_outp4_V_2_ce0,
        acc_outp4_V_2_q0,
        acc_outp4_V_3_address0,
        acc_outp4_V_3_ce0,
        acc_outp4_V_3_q0,
        acc_outp4_V_4_address0,
        acc_outp4_V_4_ce0,
        acc_outp4_V_4_q0,
        acc_outp4_V_5_address0,
        acc_outp4_V_5_ce0,
        acc_outp4_V_5_q0,
        acc_outp4_V_6_address0,
        acc_outp4_V_6_ce0,
        acc_outp4_V_6_q0,
        acc_outp4_V_7_address0,
        acc_outp4_V_7_ce0,
        acc_outp4_V_7_q0,
        acc_outp4_V_8_address0,
        acc_outp4_V_8_ce0,
        acc_outp4_V_8_q0,
        acc_outp4_V_9_address0,
        acc_outp4_V_9_ce0,
        acc_outp4_V_9_q0,
        acc_outp4_V_10_address0,
        acc_outp4_V_10_ce0,
        acc_outp4_V_10_q0,
        acc_outp4_V_11_address0,
        acc_outp4_V_11_ce0,
        acc_outp4_V_11_q0,
        v362_address0,
        v362_ce0,
        v362_we0,
        v362_d0,
        v362_1_address0,
        v362_1_ce0,
        v362_1_we0,
        v362_1_d0,
        v362_2_address0,
        v362_2_ce0,
        v362_2_we0,
        v362_2_d0,
        v362_3_address0,
        v362_3_ce0,
        v362_3_we0,
        v362_3_d0,
        v362_4_address0,
        v362_4_ce0,
        v362_4_we0,
        v362_4_d0,
        v362_5_address0,
        v362_5_ce0,
        v362_5_we0,
        v362_5_d0,
        v362_6_address0,
        v362_6_ce0,
        v362_6_we0,
        v362_6_d0,
        v362_7_address0,
        v362_7_ce0,
        v362_7_we0,
        v362_7_d0,
        v362_8_address0,
        v362_8_ce0,
        v362_8_we0,
        v362_8_d0,
        v362_9_address0,
        v362_9_ce0,
        v362_9_we0,
        v362_9_d0,
        v362_10_address0,
        v362_10_ce0,
        v362_10_we0,
        v362_10_d0,
        v362_11_address0,
        v362_11_ce0,
        v362_11_we0,
        v362_11_d0,
        grp_fu_4359_p_din0,
        grp_fu_4359_p_din1,
        grp_fu_4359_p_dout0,
        grp_fu_4359_p_ce,
        grp_fu_4367_p_din0,
        grp_fu_4367_p_dout0,
        grp_fu_4367_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v349_address0;
output   v349_ce0;
input  [31:0] v349_q0;
output  [11:0] acc_outp4_V_address0;
output   acc_outp4_V_ce0;
input  [21:0] acc_outp4_V_q0;
output  [11:0] acc_outp4_V_1_address0;
output   acc_outp4_V_1_ce0;
input  [21:0] acc_outp4_V_1_q0;
output  [11:0] acc_outp4_V_2_address0;
output   acc_outp4_V_2_ce0;
input  [21:0] acc_outp4_V_2_q0;
output  [11:0] acc_outp4_V_3_address0;
output   acc_outp4_V_3_ce0;
input  [21:0] acc_outp4_V_3_q0;
output  [11:0] acc_outp4_V_4_address0;
output   acc_outp4_V_4_ce0;
input  [21:0] acc_outp4_V_4_q0;
output  [11:0] acc_outp4_V_5_address0;
output   acc_outp4_V_5_ce0;
input  [21:0] acc_outp4_V_5_q0;
output  [11:0] acc_outp4_V_6_address0;
output   acc_outp4_V_6_ce0;
input  [21:0] acc_outp4_V_6_q0;
output  [11:0] acc_outp4_V_7_address0;
output   acc_outp4_V_7_ce0;
input  [21:0] acc_outp4_V_7_q0;
output  [11:0] acc_outp4_V_8_address0;
output   acc_outp4_V_8_ce0;
input  [21:0] acc_outp4_V_8_q0;
output  [11:0] acc_outp4_V_9_address0;
output   acc_outp4_V_9_ce0;
input  [21:0] acc_outp4_V_9_q0;
output  [11:0] acc_outp4_V_10_address0;
output   acc_outp4_V_10_ce0;
input  [21:0] acc_outp4_V_10_q0;
output  [11:0] acc_outp4_V_11_address0;
output   acc_outp4_V_11_ce0;
input  [21:0] acc_outp4_V_11_q0;
output  [11:0] v362_address0;
output   v362_ce0;
output   v362_we0;
output  [31:0] v362_d0;
output  [11:0] v362_1_address0;
output   v362_1_ce0;
output   v362_1_we0;
output  [31:0] v362_1_d0;
output  [11:0] v362_2_address0;
output   v362_2_ce0;
output   v362_2_we0;
output  [31:0] v362_2_d0;
output  [11:0] v362_3_address0;
output   v362_3_ce0;
output   v362_3_we0;
output  [31:0] v362_3_d0;
output  [11:0] v362_4_address0;
output   v362_4_ce0;
output   v362_4_we0;
output  [31:0] v362_4_d0;
output  [11:0] v362_5_address0;
output   v362_5_ce0;
output   v362_5_we0;
output  [31:0] v362_5_d0;
output  [11:0] v362_6_address0;
output   v362_6_ce0;
output   v362_6_we0;
output  [31:0] v362_6_d0;
output  [11:0] v362_7_address0;
output   v362_7_ce0;
output   v362_7_we0;
output  [31:0] v362_7_d0;
output  [11:0] v362_8_address0;
output   v362_8_ce0;
output   v362_8_we0;
output  [31:0] v362_8_d0;
output  [11:0] v362_9_address0;
output   v362_9_ce0;
output   v362_9_we0;
output  [31:0] v362_9_d0;
output  [11:0] v362_10_address0;
output   v362_10_ce0;
output   v362_10_we0;
output  [31:0] v362_10_d0;
output  [11:0] v362_11_address0;
output   v362_11_ce0;
output   v362_11_we0;
output  [31:0] v362_11_d0;
output  [31:0] grp_fu_4359_p_din0;
output  [31:0] grp_fu_4359_p_din1;
input  [31:0] grp_fu_4359_p_dout0;
output   grp_fu_4359_p_ce;
output  [31:0] grp_fu_4367_p_din0;
input  [31:0] grp_fu_4367_p_dout0;
output   grp_fu_4367_p_ce;

reg ap_idle;
reg v349_ce0;
reg acc_outp4_V_ce0;
reg acc_outp4_V_1_ce0;
reg acc_outp4_V_2_ce0;
reg acc_outp4_V_3_ce0;
reg acc_outp4_V_4_ce0;
reg acc_outp4_V_5_ce0;
reg acc_outp4_V_6_ce0;
reg acc_outp4_V_7_ce0;
reg acc_outp4_V_8_ce0;
reg acc_outp4_V_9_ce0;
reg acc_outp4_V_10_ce0;
reg acc_outp4_V_11_ce0;
reg v362_ce0;
reg v362_we0;
reg v362_1_ce0;
reg v362_1_we0;
reg v362_2_ce0;
reg v362_2_we0;
reg v362_3_ce0;
reg v362_3_we0;
reg v362_4_ce0;
reg v362_4_we0;
reg v362_5_ce0;
reg v362_5_we0;
reg v362_6_ce0;
reg v362_6_we0;
reg v362_7_ce0;
reg v362_7_we0;
reg v362_8_ce0;
reg v362_8_we0;
reg v362_9_ce0;
reg v362_9_we0;
reg v362_10_ce0;
reg v362_10_we0;
reg v362_11_ce0;
reg v362_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln451_fu_474_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln452_fu_489_p2;
reg   [0:0] icmp_ln452_reg_623;
wire   [63:0] zext_ln452_fu_503_p1;
reg   [63:0] zext_ln452_reg_628;
reg   [63:0] zext_ln452_reg_628_pp0_iter1_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter2_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter3_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter4_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter5_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter6_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter7_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter8_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter9_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter10_reg;
reg   [63:0] zext_ln452_reg_628_pp0_iter11_reg;
wire   [3:0] select_ln451_1_fu_544_p3;
reg   [3:0] select_ln451_1_reg_704;
reg   [3:0] select_ln451_1_reg_704_pp0_iter2_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter3_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter4_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter5_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter6_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter7_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter8_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter9_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter10_reg;
reg   [3:0] select_ln451_1_reg_704_pp0_iter11_reg;
wire   [21:0] v227_V_fu_551_p14;
reg   [21:0] v227_V_reg_709;
wire  signed [31:0] sext_ln456_fu_586_p1;
reg   [31:0] v349_load_reg_724;
reg   [31:0] v229_reg_729;
wire   [31:0] bitcast_ln451_fu_594_p1;
reg   [31:0] v230_reg_739;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln451_fu_590_p1;
reg   [11:0] j18_fu_112;
wire   [11:0] add_ln452_fu_519_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_j18_load;
reg   [3:0] i19_fu_116;
reg   [15:0] indvar_flatten43_fu_120;
wire   [15:0] add_ln451_1_fu_480_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten43_load;
wire   [11:0] select_ln451_fu_495_p3;
wire   [3:0] add_ln451_fu_538_p2;
wire   [3:0] v227_V_fu_551_p13;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_124_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .din2_WIDTH( 22 ),
    .din3_WIDTH( 22 ),
    .din4_WIDTH( 22 ),
    .din5_WIDTH( 22 ),
    .din6_WIDTH( 22 ),
    .din7_WIDTH( 22 ),
    .din8_WIDTH( 22 ),
    .din9_WIDTH( 22 ),
    .din10_WIDTH( 22 ),
    .din11_WIDTH( 22 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 22 ))
mux_124_22_1_1_U786(
    .din0(acc_outp4_V_q0),
    .din1(acc_outp4_V_1_q0),
    .din2(acc_outp4_V_2_q0),
    .din3(acc_outp4_V_3_q0),
    .din4(acc_outp4_V_4_q0),
    .din5(acc_outp4_V_5_q0),
    .din6(acc_outp4_V_6_q0),
    .din7(acc_outp4_V_7_q0),
    .din8(acc_outp4_V_8_q0),
    .din9(acc_outp4_V_9_q0),
    .din10(acc_outp4_V_10_q0),
    .din11(acc_outp4_V_11_q0),
    .din12(v227_V_fu_551_p13),
    .dout(v227_V_fu_551_p14)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i19_fu_116 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i19_fu_116 <= select_ln451_1_fu_544_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln451_fu_474_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten43_fu_120 <= add_ln451_1_fu_480_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten43_fu_120 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln451_fu_474_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j18_fu_112 <= add_ln452_fu_519_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j18_fu_112 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        select_ln451_1_reg_704_pp0_iter10_reg <= select_ln451_1_reg_704_pp0_iter9_reg;
        select_ln451_1_reg_704_pp0_iter11_reg <= select_ln451_1_reg_704_pp0_iter10_reg;
        select_ln451_1_reg_704_pp0_iter2_reg <= select_ln451_1_reg_704;
        select_ln451_1_reg_704_pp0_iter3_reg <= select_ln451_1_reg_704_pp0_iter2_reg;
        select_ln451_1_reg_704_pp0_iter4_reg <= select_ln451_1_reg_704_pp0_iter3_reg;
        select_ln451_1_reg_704_pp0_iter5_reg <= select_ln451_1_reg_704_pp0_iter4_reg;
        select_ln451_1_reg_704_pp0_iter6_reg <= select_ln451_1_reg_704_pp0_iter5_reg;
        select_ln451_1_reg_704_pp0_iter7_reg <= select_ln451_1_reg_704_pp0_iter6_reg;
        select_ln451_1_reg_704_pp0_iter8_reg <= select_ln451_1_reg_704_pp0_iter7_reg;
        select_ln451_1_reg_704_pp0_iter9_reg <= select_ln451_1_reg_704_pp0_iter8_reg;
        v229_reg_729 <= grp_fu_4367_p_dout0;
        v230_reg_739 <= grp_fu_4359_p_dout0;
        v349_load_reg_724 <= v349_q0;
        zext_ln452_reg_628_pp0_iter10_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter9_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter11_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter10_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter2_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter1_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter3_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter2_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter4_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter3_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter5_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter4_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter6_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter5_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter7_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter6_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter8_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter7_reg[11 : 0];
        zext_ln452_reg_628_pp0_iter9_reg[11 : 0] <= zext_ln452_reg_628_pp0_iter8_reg[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln451_1_reg_704 <= select_ln451_1_fu_544_p3;
        v227_V_reg_709 <= v227_V_fu_551_p14;
        zext_ln452_reg_628_pp0_iter1_reg[11 : 0] <= zext_ln452_reg_628[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln451_fu_474_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln452_reg_623 <= icmp_ln452_fu_489_p2;
        zext_ln452_reg_628[11 : 0] <= zext_ln452_fu_503_p1[11 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_10_ce0 = 1'b1;
    end else begin
        acc_outp4_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_11_ce0 = 1'b1;
    end else begin
        acc_outp4_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_1_ce0 = 1'b1;
    end else begin
        acc_outp4_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_2_ce0 = 1'b1;
    end else begin
        acc_outp4_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_3_ce0 = 1'b1;
    end else begin
        acc_outp4_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_4_ce0 = 1'b1;
    end else begin
        acc_outp4_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_5_ce0 = 1'b1;
    end else begin
        acc_outp4_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_6_ce0 = 1'b1;
    end else begin
        acc_outp4_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_7_ce0 = 1'b1;
    end else begin
        acc_outp4_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_8_ce0 = 1'b1;
    end else begin
        acc_outp4_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_9_ce0 = 1'b1;
    end else begin
        acc_outp4_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp4_V_ce0 = 1'b1;
    end else begin
        acc_outp4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln451_fu_474_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten43_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten43_load = indvar_flatten43_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j18_load = 12'd0;
    end else begin
        ap_sig_allocacmp_j18_load = j18_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        v349_ce0 = 1'b1;
    end else begin
        v349_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_10_ce0 = 1'b1;
    end else begin
        v362_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd10))) begin
        v362_10_we0 = 1'b1;
    end else begin
        v362_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_11_ce0 = 1'b1;
    end else begin
        v362_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & ((select_ln451_1_reg_704_pp0_iter11_reg == 4'd11) | ((select_ln451_1_reg_704_pp0_iter11_reg == 4'd12) | ((select_ln451_1_reg_704_pp0_iter11_reg == 4'd13) | ((select_ln451_1_reg_704_pp0_iter11_reg == 4'd14) | (select_ln451_1_reg_704_pp0_iter11_reg == 4'd15))))))) begin
        v362_11_we0 = 1'b1;
    end else begin
        v362_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_1_ce0 = 1'b1;
    end else begin
        v362_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd1))) begin
        v362_1_we0 = 1'b1;
    end else begin
        v362_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_2_ce0 = 1'b1;
    end else begin
        v362_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd2))) begin
        v362_2_we0 = 1'b1;
    end else begin
        v362_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_3_ce0 = 1'b1;
    end else begin
        v362_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd3))) begin
        v362_3_we0 = 1'b1;
    end else begin
        v362_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_4_ce0 = 1'b1;
    end else begin
        v362_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd4))) begin
        v362_4_we0 = 1'b1;
    end else begin
        v362_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_5_ce0 = 1'b1;
    end else begin
        v362_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd5))) begin
        v362_5_we0 = 1'b1;
    end else begin
        v362_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_6_ce0 = 1'b1;
    end else begin
        v362_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd6))) begin
        v362_6_we0 = 1'b1;
    end else begin
        v362_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_7_ce0 = 1'b1;
    end else begin
        v362_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd7))) begin
        v362_7_we0 = 1'b1;
    end else begin
        v362_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_8_ce0 = 1'b1;
    end else begin
        v362_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd8))) begin
        v362_8_we0 = 1'b1;
    end else begin
        v362_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_9_ce0 = 1'b1;
    end else begin
        v362_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd9))) begin
        v362_9_we0 = 1'b1;
    end else begin
        v362_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        v362_ce0 = 1'b1;
    end else begin
        v362_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1) & (select_ln451_1_reg_704_pp0_iter11_reg == 4'd0))) begin
        v362_we0 = 1'b1;
    end else begin
        v362_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_outp4_V_10_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_11_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_1_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_2_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_3_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_4_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_5_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_6_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_7_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_8_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_9_address0 = zext_ln452_fu_503_p1;

assign acc_outp4_V_address0 = zext_ln452_fu_503_p1;

assign add_ln451_1_fu_480_p2 = (ap_sig_allocacmp_indvar_flatten43_load + 16'd1);

assign add_ln451_fu_538_p2 = (i19_fu_116 + 4'd1);

assign add_ln452_fu_519_p2 = (select_ln451_fu_495_p3 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln451_fu_594_p1 = v349_load_reg_724;

assign grp_fu_4359_p_ce = 1'b1;

assign grp_fu_4359_p_din0 = v229_reg_729;

assign grp_fu_4359_p_din1 = bitcast_ln451_fu_594_p1;

assign grp_fu_4367_p_ce = 1'b1;

assign grp_fu_4367_p_din0 = sext_ln456_fu_586_p1;

assign icmp_ln451_fu_474_p2 = ((ap_sig_allocacmp_indvar_flatten43_load == 16'd36864) ? 1'b1 : 1'b0);

assign icmp_ln452_fu_489_p2 = ((ap_sig_allocacmp_j18_load == 12'd3072) ? 1'b1 : 1'b0);

assign select_ln451_1_fu_544_p3 = ((icmp_ln452_reg_623[0:0] == 1'b1) ? add_ln451_fu_538_p2 : i19_fu_116);

assign select_ln451_fu_495_p3 = ((icmp_ln452_fu_489_p2[0:0] == 1'b1) ? 12'd0 : ap_sig_allocacmp_j18_load);

assign sext_ln456_fu_586_p1 = $signed(v227_V_reg_709);

assign v227_V_fu_551_p13 = ((icmp_ln452_reg_623[0:0] == 1'b1) ? add_ln451_fu_538_p2 : i19_fu_116);

assign v349_address0 = zext_ln451_fu_590_p1;

assign v362_10_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_10_d0 = v230_reg_739;

assign v362_11_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_11_d0 = v230_reg_739;

assign v362_1_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_1_d0 = v230_reg_739;

assign v362_2_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_2_d0 = v230_reg_739;

assign v362_3_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_3_d0 = v230_reg_739;

assign v362_4_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_4_d0 = v230_reg_739;

assign v362_5_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_5_d0 = v230_reg_739;

assign v362_6_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_6_d0 = v230_reg_739;

assign v362_7_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_7_d0 = v230_reg_739;

assign v362_8_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_8_d0 = v230_reg_739;

assign v362_9_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_9_d0 = v230_reg_739;

assign v362_address0 = zext_ln452_reg_628_pp0_iter11_reg;

assign v362_d0 = v230_reg_739;

assign zext_ln451_fu_590_p1 = select_ln451_1_reg_704_pp0_iter5_reg;

assign zext_ln452_fu_503_p1 = select_ln451_fu_495_p3;

always @ (posedge ap_clk) begin
    zext_ln452_reg_628[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter1_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter2_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter3_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter4_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter5_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter6_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter7_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter8_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter9_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter10_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
    zext_ln452_reg_628_pp0_iter11_reg[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Bert_layer_Pipeline_l_scale_outp_i19_l_j18
