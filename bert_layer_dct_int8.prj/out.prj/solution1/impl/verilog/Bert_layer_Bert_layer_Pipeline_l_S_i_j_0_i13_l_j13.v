// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Bert_layer_Pipeline_l_S_i_j_0_i13_l_j13 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v358_address0,
        v358_ce0,
        v358_q0,
        v358_1_address0,
        v358_1_ce0,
        v358_1_q0,
        v358_2_address0,
        v358_2_ce0,
        v358_2_q0,
        v358_3_address0,
        v358_3_ce0,
        v358_3_q0,
        v358_4_address0,
        v358_4_ce0,
        v358_4_q0,
        v358_5_address0,
        v358_5_ce0,
        v358_5_q0,
        v358_6_address0,
        v358_6_ce0,
        v358_6_q0,
        v358_7_address0,
        v358_7_ce0,
        v358_7_q0,
        v358_8_address0,
        v358_8_ce0,
        v358_8_q0,
        v358_9_address0,
        v358_9_ce0,
        v358_9_q0,
        v358_10_address0,
        v358_10_ce0,
        v358_10_q0,
        v358_11_address0,
        v358_11_ce0,
        v358_11_q0,
        v323_0_address0,
        v323_0_ce0,
        v323_0_q0,
        v323_1_address0,
        v323_1_ce0,
        v323_1_q0,
        v323_2_address0,
        v323_2_ce0,
        v323_2_q0,
        v323_3_address0,
        v323_3_ce0,
        v323_3_q0,
        v323_4_address0,
        v323_4_ce0,
        v323_4_q0,
        v323_5_address0,
        v323_5_ce0,
        v323_5_q0,
        v323_6_address0,
        v323_6_ce0,
        v323_6_q0,
        v323_7_address0,
        v323_7_ce0,
        v323_7_q0,
        v323_8_address0,
        v323_8_ce0,
        v323_8_q0,
        v323_9_address0,
        v323_9_ce0,
        v323_9_q0,
        v323_10_address0,
        v323_10_ce0,
        v323_10_q0,
        v323_11_address0,
        v323_11_ce0,
        v323_11_q0,
        v359_address0,
        v359_ce0,
        v359_we0,
        v359_d0,
        v359_1_address0,
        v359_1_ce0,
        v359_1_we0,
        v359_1_d0,
        v359_2_address0,
        v359_2_ce0,
        v359_2_we0,
        v359_2_d0,
        v359_3_address0,
        v359_3_ce0,
        v359_3_we0,
        v359_3_d0,
        v359_4_address0,
        v359_4_ce0,
        v359_4_we0,
        v359_4_d0,
        v359_5_address0,
        v359_5_ce0,
        v359_5_we0,
        v359_5_d0,
        v359_6_address0,
        v359_6_ce0,
        v359_6_we0,
        v359_6_d0,
        v359_7_address0,
        v359_7_ce0,
        v359_7_we0,
        v359_7_d0,
        v359_8_address0,
        v359_8_ce0,
        v359_8_we0,
        v359_8_d0,
        v359_9_address0,
        v359_9_ce0,
        v359_9_we0,
        v359_9_d0,
        v359_10_address0,
        v359_10_ce0,
        v359_10_we0,
        v359_10_d0,
        v359_11_address0,
        v359_11_ce0,
        v359_11_we0,
        v359_11_d0,
        grp_fu_4370_p_din0,
        grp_fu_4370_p_din1,
        grp_fu_4370_p_opcode,
        grp_fu_4370_p_dout0,
        grp_fu_4370_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] v358_address0;
output   v358_ce0;
input  [31:0] v358_q0;
output  [9:0] v358_1_address0;
output   v358_1_ce0;
input  [31:0] v358_1_q0;
output  [9:0] v358_2_address0;
output   v358_2_ce0;
input  [31:0] v358_2_q0;
output  [9:0] v358_3_address0;
output   v358_3_ce0;
input  [31:0] v358_3_q0;
output  [9:0] v358_4_address0;
output   v358_4_ce0;
input  [31:0] v358_4_q0;
output  [9:0] v358_5_address0;
output   v358_5_ce0;
input  [31:0] v358_5_q0;
output  [9:0] v358_6_address0;
output   v358_6_ce0;
input  [31:0] v358_6_q0;
output  [9:0] v358_7_address0;
output   v358_7_ce0;
input  [31:0] v358_7_q0;
output  [9:0] v358_8_address0;
output   v358_8_ce0;
input  [31:0] v358_8_q0;
output  [9:0] v358_9_address0;
output   v358_9_ce0;
input  [31:0] v358_9_q0;
output  [9:0] v358_10_address0;
output   v358_10_ce0;
input  [31:0] v358_10_q0;
output  [9:0] v358_11_address0;
output   v358_11_ce0;
input  [31:0] v358_11_q0;
output  [9:0] v323_0_address0;
output   v323_0_ce0;
input  [31:0] v323_0_q0;
output  [9:0] v323_1_address0;
output   v323_1_ce0;
input  [31:0] v323_1_q0;
output  [9:0] v323_2_address0;
output   v323_2_ce0;
input  [31:0] v323_2_q0;
output  [9:0] v323_3_address0;
output   v323_3_ce0;
input  [31:0] v323_3_q0;
output  [9:0] v323_4_address0;
output   v323_4_ce0;
input  [31:0] v323_4_q0;
output  [9:0] v323_5_address0;
output   v323_5_ce0;
input  [31:0] v323_5_q0;
output  [9:0] v323_6_address0;
output   v323_6_ce0;
input  [31:0] v323_6_q0;
output  [9:0] v323_7_address0;
output   v323_7_ce0;
input  [31:0] v323_7_q0;
output  [9:0] v323_8_address0;
output   v323_8_ce0;
input  [31:0] v323_8_q0;
output  [9:0] v323_9_address0;
output   v323_9_ce0;
input  [31:0] v323_9_q0;
output  [9:0] v323_10_address0;
output   v323_10_ce0;
input  [31:0] v323_10_q0;
output  [9:0] v323_11_address0;
output   v323_11_ce0;
input  [31:0] v323_11_q0;
output  [9:0] v359_address0;
output   v359_ce0;
output   v359_we0;
output  [31:0] v359_d0;
output  [9:0] v359_1_address0;
output   v359_1_ce0;
output   v359_1_we0;
output  [31:0] v359_1_d0;
output  [9:0] v359_2_address0;
output   v359_2_ce0;
output   v359_2_we0;
output  [31:0] v359_2_d0;
output  [9:0] v359_3_address0;
output   v359_3_ce0;
output   v359_3_we0;
output  [31:0] v359_3_d0;
output  [9:0] v359_4_address0;
output   v359_4_ce0;
output   v359_4_we0;
output  [31:0] v359_4_d0;
output  [9:0] v359_5_address0;
output   v359_5_ce0;
output   v359_5_we0;
output  [31:0] v359_5_d0;
output  [9:0] v359_6_address0;
output   v359_6_ce0;
output   v359_6_we0;
output  [31:0] v359_6_d0;
output  [9:0] v359_7_address0;
output   v359_7_ce0;
output   v359_7_we0;
output  [31:0] v359_7_d0;
output  [9:0] v359_8_address0;
output   v359_8_ce0;
output   v359_8_we0;
output  [31:0] v359_8_d0;
output  [9:0] v359_9_address0;
output   v359_9_ce0;
output   v359_9_we0;
output  [31:0] v359_9_d0;
output  [9:0] v359_10_address0;
output   v359_10_ce0;
output   v359_10_we0;
output  [31:0] v359_10_d0;
output  [9:0] v359_11_address0;
output   v359_11_ce0;
output   v359_11_we0;
output  [31:0] v359_11_d0;
output  [31:0] grp_fu_4370_p_din0;
output  [31:0] grp_fu_4370_p_din1;
output  [0:0] grp_fu_4370_p_opcode;
input  [31:0] grp_fu_4370_p_dout0;
output   grp_fu_4370_p_ce;

reg ap_idle;
reg v358_ce0;
reg v358_1_ce0;
reg v358_2_ce0;
reg v358_3_ce0;
reg v358_4_ce0;
reg v358_5_ce0;
reg v358_6_ce0;
reg v358_7_ce0;
reg v358_8_ce0;
reg v358_9_ce0;
reg v358_10_ce0;
reg v358_11_ce0;
reg v323_0_ce0;
reg v323_1_ce0;
reg v323_2_ce0;
reg v323_3_ce0;
reg v323_4_ce0;
reg v323_5_ce0;
reg v323_6_ce0;
reg v323_7_ce0;
reg v323_8_ce0;
reg v323_9_ce0;
reg v323_10_ce0;
reg v323_11_ce0;
reg v359_ce0;
reg v359_we0;
reg v359_1_ce0;
reg v359_1_we0;
reg v359_2_ce0;
reg v359_2_we0;
reg v359_3_ce0;
reg v359_3_we0;
reg v359_4_ce0;
reg v359_4_we0;
reg v359_5_ce0;
reg v359_5_we0;
reg v359_6_ce0;
reg v359_6_we0;
reg v359_7_ce0;
reg v359_7_we0;
reg v359_8_ce0;
reg v359_8_we0;
reg v359_9_ce0;
reg v359_9_we0;
reg v359_10_ce0;
reg v359_10_we0;
reg v359_11_ce0;
reg v359_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln333_fu_636_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln334_fu_651_p2;
reg   [0:0] icmp_ln334_reg_863;
wire   [63:0] zext_ln334_fu_665_p1;
reg   [63:0] zext_ln334_reg_868;
reg   [63:0] zext_ln334_reg_868_pp0_iter1_reg;
reg   [63:0] zext_ln334_reg_868_pp0_iter2_reg;
reg   [63:0] zext_ln334_reg_868_pp0_iter3_reg;
reg   [63:0] zext_ln334_reg_868_pp0_iter4_reg;
reg   [63:0] zext_ln334_reg_868_pp0_iter5_reg;
reg   [63:0] zext_ln334_reg_868_pp0_iter6_reg;
wire   [3:0] select_ln333_1_fu_718_p3;
reg   [3:0] select_ln333_1_reg_1004;
reg   [3:0] select_ln333_1_reg_1004_pp0_iter2_reg;
reg   [3:0] select_ln333_1_reg_1004_pp0_iter3_reg;
reg   [3:0] select_ln333_1_reg_1004_pp0_iter4_reg;
reg   [3:0] select_ln333_1_reg_1004_pp0_iter5_reg;
reg   [3:0] select_ln333_1_reg_1004_pp0_iter6_reg;
wire   [31:0] v161_fu_725_p14;
reg   [31:0] v161_reg_1008;
wire   [31:0] v162_fu_803_p14;
reg   [31:0] v162_reg_1013;
reg   [31:0] v163_reg_1018;
wire    ap_block_pp0_stage0;
reg   [9:0] j13_fu_134;
wire   [9:0] add_ln334_fu_693_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_j13_load;
reg   [3:0] i13_fu_138;
reg   [13:0] indvar_flatten21_fu_142;
wire   [13:0] add_ln333_1_fu_642_p2;
reg   [13:0] ap_sig_allocacmp_indvar_flatten21_load;
wire   [9:0] select_ln333_fu_657_p3;
wire   [3:0] add_ln333_fu_712_p2;
wire   [31:0] v162_fu_803_p1;
wire   [31:0] v162_fu_803_p2;
wire   [31:0] v162_fu_803_p3;
wire   [31:0] v162_fu_803_p4;
wire   [31:0] v162_fu_803_p5;
wire   [31:0] v162_fu_803_p6;
wire   [31:0] v162_fu_803_p7;
wire   [31:0] v162_fu_803_p8;
wire   [31:0] v162_fu_803_p9;
wire   [31:0] v162_fu_803_p10;
wire   [31:0] v162_fu_803_p11;
wire   [31:0] v162_fu_803_p12;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_124_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_124_32_1_1_U597(
    .din0(v358_q0),
    .din1(v358_1_q0),
    .din2(v358_2_q0),
    .din3(v358_3_q0),
    .din4(v358_4_q0),
    .din5(v358_5_q0),
    .din6(v358_6_q0),
    .din7(v358_7_q0),
    .din8(v358_8_q0),
    .din9(v358_9_q0),
    .din10(v358_10_q0),
    .din11(v358_11_q0),
    .din12(select_ln333_1_fu_718_p3),
    .dout(v161_fu_725_p14)
);

Bert_layer_mux_124_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_124_32_1_1_U598(
    .din0(v162_fu_803_p1),
    .din1(v162_fu_803_p2),
    .din2(v162_fu_803_p3),
    .din3(v162_fu_803_p4),
    .din4(v162_fu_803_p5),
    .din5(v162_fu_803_p6),
    .din6(v162_fu_803_p7),
    .din7(v162_fu_803_p8),
    .din8(v162_fu_803_p9),
    .din9(v162_fu_803_p10),
    .din10(v162_fu_803_p11),
    .din11(v162_fu_803_p12),
    .din12(select_ln333_1_fu_718_p3),
    .dout(v162_fu_803_p14)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i13_fu_138 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i13_fu_138 <= select_ln333_1_fu_718_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln333_fu_636_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten21_fu_142 <= add_ln333_1_fu_642_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten21_fu_142 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln333_fu_636_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j13_fu_134 <= add_ln334_fu_693_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j13_fu_134 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln333_1_reg_1004 <= select_ln333_1_fu_718_p3;
        v161_reg_1008 <= v161_fu_725_p14;
        v162_reg_1013 <= v162_fu_803_p14;
        zext_ln334_reg_868_pp0_iter1_reg[9 : 0] <= zext_ln334_reg_868[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        select_ln333_1_reg_1004_pp0_iter2_reg <= select_ln333_1_reg_1004;
        select_ln333_1_reg_1004_pp0_iter3_reg <= select_ln333_1_reg_1004_pp0_iter2_reg;
        select_ln333_1_reg_1004_pp0_iter4_reg <= select_ln333_1_reg_1004_pp0_iter3_reg;
        select_ln333_1_reg_1004_pp0_iter5_reg <= select_ln333_1_reg_1004_pp0_iter4_reg;
        select_ln333_1_reg_1004_pp0_iter6_reg <= select_ln333_1_reg_1004_pp0_iter5_reg;
        v163_reg_1018 <= grp_fu_4370_p_dout0;
        zext_ln334_reg_868_pp0_iter2_reg[9 : 0] <= zext_ln334_reg_868_pp0_iter1_reg[9 : 0];
        zext_ln334_reg_868_pp0_iter3_reg[9 : 0] <= zext_ln334_reg_868_pp0_iter2_reg[9 : 0];
        zext_ln334_reg_868_pp0_iter4_reg[9 : 0] <= zext_ln334_reg_868_pp0_iter3_reg[9 : 0];
        zext_ln334_reg_868_pp0_iter5_reg[9 : 0] <= zext_ln334_reg_868_pp0_iter4_reg[9 : 0];
        zext_ln334_reg_868_pp0_iter6_reg[9 : 0] <= zext_ln334_reg_868_pp0_iter5_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln333_fu_636_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln334_reg_863 <= icmp_ln334_fu_651_p2;
        zext_ln334_reg_868[9 : 0] <= zext_ln334_fu_665_p1[9 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln333_fu_636_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten21_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten21_load = indvar_flatten21_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j13_load = 10'd0;
    end else begin
        ap_sig_allocacmp_j13_load = j13_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_0_ce0 = 1'b1;
    end else begin
        v323_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_10_ce0 = 1'b1;
    end else begin
        v323_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_11_ce0 = 1'b1;
    end else begin
        v323_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_1_ce0 = 1'b1;
    end else begin
        v323_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_2_ce0 = 1'b1;
    end else begin
        v323_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_3_ce0 = 1'b1;
    end else begin
        v323_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_4_ce0 = 1'b1;
    end else begin
        v323_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_5_ce0 = 1'b1;
    end else begin
        v323_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_6_ce0 = 1'b1;
    end else begin
        v323_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_7_ce0 = 1'b1;
    end else begin
        v323_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_8_ce0 = 1'b1;
    end else begin
        v323_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v323_9_ce0 = 1'b1;
    end else begin
        v323_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_10_ce0 = 1'b1;
    end else begin
        v358_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_11_ce0 = 1'b1;
    end else begin
        v358_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_1_ce0 = 1'b1;
    end else begin
        v358_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_2_ce0 = 1'b1;
    end else begin
        v358_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_3_ce0 = 1'b1;
    end else begin
        v358_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_4_ce0 = 1'b1;
    end else begin
        v358_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_5_ce0 = 1'b1;
    end else begin
        v358_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_6_ce0 = 1'b1;
    end else begin
        v358_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_7_ce0 = 1'b1;
    end else begin
        v358_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_8_ce0 = 1'b1;
    end else begin
        v358_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_9_ce0 = 1'b1;
    end else begin
        v358_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v358_ce0 = 1'b1;
    end else begin
        v358_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_10_ce0 = 1'b1;
    end else begin
        v359_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd10))) begin
        v359_10_we0 = 1'b1;
    end else begin
        v359_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_11_ce0 = 1'b1;
    end else begin
        v359_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & ((select_ln333_1_reg_1004_pp0_iter6_reg == 4'd11) | ((select_ln333_1_reg_1004_pp0_iter6_reg == 4'd12) | ((select_ln333_1_reg_1004_pp0_iter6_reg == 4'd13) | ((select_ln333_1_reg_1004_pp0_iter6_reg == 4'd14) | (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd15))))))) begin
        v359_11_we0 = 1'b1;
    end else begin
        v359_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_1_ce0 = 1'b1;
    end else begin
        v359_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd1))) begin
        v359_1_we0 = 1'b1;
    end else begin
        v359_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_2_ce0 = 1'b1;
    end else begin
        v359_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd2))) begin
        v359_2_we0 = 1'b1;
    end else begin
        v359_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_3_ce0 = 1'b1;
    end else begin
        v359_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd3))) begin
        v359_3_we0 = 1'b1;
    end else begin
        v359_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_4_ce0 = 1'b1;
    end else begin
        v359_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd4))) begin
        v359_4_we0 = 1'b1;
    end else begin
        v359_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_5_ce0 = 1'b1;
    end else begin
        v359_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd5))) begin
        v359_5_we0 = 1'b1;
    end else begin
        v359_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_6_ce0 = 1'b1;
    end else begin
        v359_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd6))) begin
        v359_6_we0 = 1'b1;
    end else begin
        v359_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_7_ce0 = 1'b1;
    end else begin
        v359_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd7))) begin
        v359_7_we0 = 1'b1;
    end else begin
        v359_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_8_ce0 = 1'b1;
    end else begin
        v359_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd8))) begin
        v359_8_we0 = 1'b1;
    end else begin
        v359_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_9_ce0 = 1'b1;
    end else begin
        v359_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd9))) begin
        v359_9_we0 = 1'b1;
    end else begin
        v359_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        v359_ce0 = 1'b1;
    end else begin
        v359_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (select_ln333_1_reg_1004_pp0_iter6_reg == 4'd0))) begin
        v359_we0 = 1'b1;
    end else begin
        v359_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln333_1_fu_642_p2 = (ap_sig_allocacmp_indvar_flatten21_load + 14'd1);

assign add_ln333_fu_712_p2 = (i13_fu_138 + 4'd1);

assign add_ln334_fu_693_p2 = (select_ln333_fu_657_p3 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_4370_p_ce = 1'b1;

assign grp_fu_4370_p_din0 = v161_reg_1008;

assign grp_fu_4370_p_din1 = v162_reg_1013;

assign grp_fu_4370_p_opcode = 2'd0;

assign icmp_ln333_fu_636_p2 = ((ap_sig_allocacmp_indvar_flatten21_load == 14'd9216) ? 1'b1 : 1'b0);

assign icmp_ln334_fu_651_p2 = ((ap_sig_allocacmp_j13_load == 10'd768) ? 1'b1 : 1'b0);

assign select_ln333_1_fu_718_p3 = ((icmp_ln334_reg_863[0:0] == 1'b1) ? add_ln333_fu_712_p2 : i13_fu_138);

assign select_ln333_fu_657_p3 = ((icmp_ln334_fu_651_p2[0:0] == 1'b1) ? 10'd0 : ap_sig_allocacmp_j13_load);

assign v162_fu_803_p1 = v323_0_q0;

assign v162_fu_803_p10 = v323_9_q0;

assign v162_fu_803_p11 = v323_10_q0;

assign v162_fu_803_p12 = v323_11_q0;

assign v162_fu_803_p2 = v323_1_q0;

assign v162_fu_803_p3 = v323_2_q0;

assign v162_fu_803_p4 = v323_3_q0;

assign v162_fu_803_p5 = v323_4_q0;

assign v162_fu_803_p6 = v323_5_q0;

assign v162_fu_803_p7 = v323_6_q0;

assign v162_fu_803_p8 = v323_7_q0;

assign v162_fu_803_p9 = v323_8_q0;

assign v323_0_address0 = zext_ln334_fu_665_p1;

assign v323_10_address0 = zext_ln334_fu_665_p1;

assign v323_11_address0 = zext_ln334_fu_665_p1;

assign v323_1_address0 = zext_ln334_fu_665_p1;

assign v323_2_address0 = zext_ln334_fu_665_p1;

assign v323_3_address0 = zext_ln334_fu_665_p1;

assign v323_4_address0 = zext_ln334_fu_665_p1;

assign v323_5_address0 = zext_ln334_fu_665_p1;

assign v323_6_address0 = zext_ln334_fu_665_p1;

assign v323_7_address0 = zext_ln334_fu_665_p1;

assign v323_8_address0 = zext_ln334_fu_665_p1;

assign v323_9_address0 = zext_ln334_fu_665_p1;

assign v358_10_address0 = zext_ln334_fu_665_p1;

assign v358_11_address0 = zext_ln334_fu_665_p1;

assign v358_1_address0 = zext_ln334_fu_665_p1;

assign v358_2_address0 = zext_ln334_fu_665_p1;

assign v358_3_address0 = zext_ln334_fu_665_p1;

assign v358_4_address0 = zext_ln334_fu_665_p1;

assign v358_5_address0 = zext_ln334_fu_665_p1;

assign v358_6_address0 = zext_ln334_fu_665_p1;

assign v358_7_address0 = zext_ln334_fu_665_p1;

assign v358_8_address0 = zext_ln334_fu_665_p1;

assign v358_9_address0 = zext_ln334_fu_665_p1;

assign v358_address0 = zext_ln334_fu_665_p1;

assign v359_10_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_10_d0 = v163_reg_1018;

assign v359_11_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_11_d0 = v163_reg_1018;

assign v359_1_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_1_d0 = v163_reg_1018;

assign v359_2_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_2_d0 = v163_reg_1018;

assign v359_3_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_3_d0 = v163_reg_1018;

assign v359_4_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_4_d0 = v163_reg_1018;

assign v359_5_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_5_d0 = v163_reg_1018;

assign v359_6_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_6_d0 = v163_reg_1018;

assign v359_7_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_7_d0 = v163_reg_1018;

assign v359_8_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_8_d0 = v163_reg_1018;

assign v359_9_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_9_d0 = v163_reg_1018;

assign v359_address0 = zext_ln334_reg_868_pp0_iter6_reg;

assign v359_d0 = v163_reg_1018;

assign zext_ln334_fu_665_p1 = select_ln333_fu_657_p3;

always @ (posedge ap_clk) begin
    zext_ln334_reg_868[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln334_reg_868_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln334_reg_868_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln334_reg_868_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln334_reg_868_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln334_reg_868_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln334_reg_868_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Bert_layer_Pipeline_l_S_i_j_0_i13_l_j13
