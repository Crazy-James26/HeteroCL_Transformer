// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_gemm_i8_l_j8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v124_address0,
        v124_ce0,
        v124_q0,
        v124_address1,
        v124_ce1,
        v124_q1,
        v124_address2,
        v124_ce2,
        v124_q2,
        v124_address3,
        v124_ce3,
        v124_q3,
        v124_address4,
        v124_ce4,
        v124_q4,
        v124_address5,
        v124_ce5,
        v124_q5,
        v124_address6,
        v124_ce6,
        v124_q6,
        v124_address7,
        v124_ce7,
        v124_q7,
        v124_address8,
        v124_ce8,
        v124_q8,
        v124_address9,
        v124_ce9,
        v124_q9,
        v124_address10,
        v124_ce10,
        v124_q10,
        v124_address11,
        v124_ce11,
        v124_q11,
        v124_1_address0,
        v124_1_ce0,
        v124_1_q0,
        v124_1_address1,
        v124_1_ce1,
        v124_1_q1,
        v124_1_address2,
        v124_1_ce2,
        v124_1_q2,
        v124_1_address3,
        v124_1_ce3,
        v124_1_q3,
        v124_1_address4,
        v124_1_ce4,
        v124_1_q4,
        v124_1_address5,
        v124_1_ce5,
        v124_1_q5,
        v124_1_address6,
        v124_1_ce6,
        v124_1_q6,
        v124_1_address7,
        v124_1_ce7,
        v124_1_q7,
        v124_1_address8,
        v124_1_ce8,
        v124_1_q8,
        v124_1_address9,
        v124_1_ce9,
        v124_1_q9,
        v124_1_address10,
        v124_1_ce10,
        v124_1_q10,
        v124_1_address11,
        v124_1_ce11,
        v124_1_q11,
        v124_2_address0,
        v124_2_ce0,
        v124_2_q0,
        v124_2_address1,
        v124_2_ce1,
        v124_2_q1,
        v124_2_address2,
        v124_2_ce2,
        v124_2_q2,
        v124_2_address3,
        v124_2_ce3,
        v124_2_q3,
        v124_2_address4,
        v124_2_ce4,
        v124_2_q4,
        v124_2_address5,
        v124_2_ce5,
        v124_2_q5,
        v124_2_address6,
        v124_2_ce6,
        v124_2_q6,
        v124_2_address7,
        v124_2_ce7,
        v124_2_q7,
        v124_2_address8,
        v124_2_ce8,
        v124_2_q8,
        v124_2_address9,
        v124_2_ce9,
        v124_2_q9,
        v124_2_address10,
        v124_2_ce10,
        v124_2_q10,
        v124_2_address11,
        v124_2_ce11,
        v124_2_q11,
        v124_3_address0,
        v124_3_ce0,
        v124_3_q0,
        v124_3_address1,
        v124_3_ce1,
        v124_3_q1,
        v124_3_address2,
        v124_3_ce2,
        v124_3_q2,
        v124_3_address3,
        v124_3_ce3,
        v124_3_q3,
        v124_3_address4,
        v124_3_ce4,
        v124_3_q4,
        v124_3_address5,
        v124_3_ce5,
        v124_3_q5,
        v124_3_address6,
        v124_3_ce6,
        v124_3_q6,
        v124_3_address7,
        v124_3_ce7,
        v124_3_q7,
        v124_3_address8,
        v124_3_ce8,
        v124_3_q8,
        v124_3_address9,
        v124_3_ce9,
        v124_3_q9,
        v124_3_address10,
        v124_3_ce10,
        v124_3_q10,
        v124_3_address11,
        v124_3_ce11,
        v124_3_q11,
        acc_outp2_V_address0,
        acc_outp2_V_ce0,
        acc_outp2_V_we0,
        acc_outp2_V_d0,
        acc_outp2_V_address1,
        acc_outp2_V_ce1,
        acc_outp2_V_q1,
        acc_outp2_V_1_address0,
        acc_outp2_V_1_ce0,
        acc_outp2_V_1_we0,
        acc_outp2_V_1_d0,
        acc_outp2_V_1_address1,
        acc_outp2_V_1_ce1,
        acc_outp2_V_1_q1,
        acc_outp2_V_2_address0,
        acc_outp2_V_2_ce0,
        acc_outp2_V_2_we0,
        acc_outp2_V_2_d0,
        acc_outp2_V_2_address1,
        acc_outp2_V_2_ce1,
        acc_outp2_V_2_q1,
        acc_outp2_V_3_address0,
        acc_outp2_V_3_ce0,
        acc_outp2_V_3_we0,
        acc_outp2_V_3_d0,
        acc_outp2_V_3_address1,
        acc_outp2_V_3_ce1,
        acc_outp2_V_3_q1,
        V_h_address0,
        V_h_ce0,
        V_h_q0,
        V_h_address1,
        V_h_ce1,
        V_h_q1,
        V_h_address2,
        V_h_ce2,
        V_h_q2,
        V_h_address3,
        V_h_ce3,
        V_h_q3,
        V_h_address4,
        V_h_ce4,
        V_h_q4,
        V_h_address5,
        V_h_ce5,
        V_h_q5,
        V_h_address6,
        V_h_ce6,
        V_h_q6,
        V_h_address7,
        V_h_ce7,
        V_h_q7,
        V_h_address8,
        V_h_ce8,
        V_h_q8,
        V_h_address9,
        V_h_ce9,
        V_h_q9,
        V_h_address10,
        V_h_ce10,
        V_h_q10,
        V_h_address11,
        V_h_ce11,
        V_h_q11,
        V_h_1_address0,
        V_h_1_ce0,
        V_h_1_q0,
        V_h_1_address1,
        V_h_1_ce1,
        V_h_1_q1,
        V_h_1_address2,
        V_h_1_ce2,
        V_h_1_q2,
        V_h_1_address3,
        V_h_1_ce3,
        V_h_1_q3,
        V_h_1_address4,
        V_h_1_ce4,
        V_h_1_q4,
        V_h_1_address5,
        V_h_1_ce5,
        V_h_1_q5,
        V_h_1_address6,
        V_h_1_ce6,
        V_h_1_q6,
        V_h_1_address7,
        V_h_1_ce7,
        V_h_1_q7,
        V_h_1_address8,
        V_h_1_ce8,
        V_h_1_q8,
        V_h_1_address9,
        V_h_1_ce9,
        V_h_1_q9,
        V_h_1_address10,
        V_h_1_ce10,
        V_h_1_q10,
        V_h_1_address11,
        V_h_1_ce11,
        V_h_1_q11,
        V_h_2_address0,
        V_h_2_ce0,
        V_h_2_q0,
        V_h_2_address1,
        V_h_2_ce1,
        V_h_2_q1,
        V_h_2_address2,
        V_h_2_ce2,
        V_h_2_q2,
        V_h_2_address3,
        V_h_2_ce3,
        V_h_2_q3,
        V_h_2_address4,
        V_h_2_ce4,
        V_h_2_q4,
        V_h_2_address5,
        V_h_2_ce5,
        V_h_2_q5,
        V_h_2_address6,
        V_h_2_ce6,
        V_h_2_q6,
        V_h_2_address7,
        V_h_2_ce7,
        V_h_2_q7,
        V_h_2_address8,
        V_h_2_ce8,
        V_h_2_q8,
        V_h_2_address9,
        V_h_2_ce9,
        V_h_2_q9,
        V_h_2_address10,
        V_h_2_ce10,
        V_h_2_q10,
        V_h_2_address11,
        V_h_2_ce11,
        V_h_2_q11,
        V_h_3_address0,
        V_h_3_ce0,
        V_h_3_q0,
        V_h_3_address1,
        V_h_3_ce1,
        V_h_3_q1,
        V_h_3_address2,
        V_h_3_ce2,
        V_h_3_q2,
        V_h_3_address3,
        V_h_3_ce3,
        V_h_3_q3,
        V_h_3_address4,
        V_h_3_ce4,
        V_h_3_q4,
        V_h_3_address5,
        V_h_3_ce5,
        V_h_3_q5,
        V_h_3_address6,
        V_h_3_ce6,
        V_h_3_q6,
        V_h_3_address7,
        V_h_3_ce7,
        V_h_3_q7,
        V_h_3_address8,
        V_h_3_ce8,
        V_h_3_q8,
        V_h_3_address9,
        V_h_3_ce9,
        V_h_3_q9,
        V_h_3_address10,
        V_h_3_ce10,
        V_h_3_q10,
        V_h_3_address11,
        V_h_3_ce11,
        V_h_3_q11
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] v124_address0;
output   v124_ce0;
input  [7:0] v124_q0;
output  [5:0] v124_address1;
output   v124_ce1;
input  [7:0] v124_q1;
output  [5:0] v124_address2;
output   v124_ce2;
input  [7:0] v124_q2;
output  [5:0] v124_address3;
output   v124_ce3;
input  [7:0] v124_q3;
output  [5:0] v124_address4;
output   v124_ce4;
input  [7:0] v124_q4;
output  [5:0] v124_address5;
output   v124_ce5;
input  [7:0] v124_q5;
output  [5:0] v124_address6;
output   v124_ce6;
input  [7:0] v124_q6;
output  [5:0] v124_address7;
output   v124_ce7;
input  [7:0] v124_q7;
output  [5:0] v124_address8;
output   v124_ce8;
input  [7:0] v124_q8;
output  [5:0] v124_address9;
output   v124_ce9;
input  [7:0] v124_q9;
output  [5:0] v124_address10;
output   v124_ce10;
input  [7:0] v124_q10;
output  [5:0] v124_address11;
output   v124_ce11;
input  [7:0] v124_q11;
output  [5:0] v124_1_address0;
output   v124_1_ce0;
input  [7:0] v124_1_q0;
output  [5:0] v124_1_address1;
output   v124_1_ce1;
input  [7:0] v124_1_q1;
output  [5:0] v124_1_address2;
output   v124_1_ce2;
input  [7:0] v124_1_q2;
output  [5:0] v124_1_address3;
output   v124_1_ce3;
input  [7:0] v124_1_q3;
output  [5:0] v124_1_address4;
output   v124_1_ce4;
input  [7:0] v124_1_q4;
output  [5:0] v124_1_address5;
output   v124_1_ce5;
input  [7:0] v124_1_q5;
output  [5:0] v124_1_address6;
output   v124_1_ce6;
input  [7:0] v124_1_q6;
output  [5:0] v124_1_address7;
output   v124_1_ce7;
input  [7:0] v124_1_q7;
output  [5:0] v124_1_address8;
output   v124_1_ce8;
input  [7:0] v124_1_q8;
output  [5:0] v124_1_address9;
output   v124_1_ce9;
input  [7:0] v124_1_q9;
output  [5:0] v124_1_address10;
output   v124_1_ce10;
input  [7:0] v124_1_q10;
output  [5:0] v124_1_address11;
output   v124_1_ce11;
input  [7:0] v124_1_q11;
output  [5:0] v124_2_address0;
output   v124_2_ce0;
input  [7:0] v124_2_q0;
output  [5:0] v124_2_address1;
output   v124_2_ce1;
input  [7:0] v124_2_q1;
output  [5:0] v124_2_address2;
output   v124_2_ce2;
input  [7:0] v124_2_q2;
output  [5:0] v124_2_address3;
output   v124_2_ce3;
input  [7:0] v124_2_q3;
output  [5:0] v124_2_address4;
output   v124_2_ce4;
input  [7:0] v124_2_q4;
output  [5:0] v124_2_address5;
output   v124_2_ce5;
input  [7:0] v124_2_q5;
output  [5:0] v124_2_address6;
output   v124_2_ce6;
input  [7:0] v124_2_q6;
output  [5:0] v124_2_address7;
output   v124_2_ce7;
input  [7:0] v124_2_q7;
output  [5:0] v124_2_address8;
output   v124_2_ce8;
input  [7:0] v124_2_q8;
output  [5:0] v124_2_address9;
output   v124_2_ce9;
input  [7:0] v124_2_q9;
output  [5:0] v124_2_address10;
output   v124_2_ce10;
input  [7:0] v124_2_q10;
output  [5:0] v124_2_address11;
output   v124_2_ce11;
input  [7:0] v124_2_q11;
output  [5:0] v124_3_address0;
output   v124_3_ce0;
input  [7:0] v124_3_q0;
output  [5:0] v124_3_address1;
output   v124_3_ce1;
input  [7:0] v124_3_q1;
output  [5:0] v124_3_address2;
output   v124_3_ce2;
input  [7:0] v124_3_q2;
output  [5:0] v124_3_address3;
output   v124_3_ce3;
input  [7:0] v124_3_q3;
output  [5:0] v124_3_address4;
output   v124_3_ce4;
input  [7:0] v124_3_q4;
output  [5:0] v124_3_address5;
output   v124_3_ce5;
input  [7:0] v124_3_q5;
output  [5:0] v124_3_address6;
output   v124_3_ce6;
input  [7:0] v124_3_q6;
output  [5:0] v124_3_address7;
output   v124_3_ce7;
input  [7:0] v124_3_q7;
output  [5:0] v124_3_address8;
output   v124_3_ce8;
input  [7:0] v124_3_q8;
output  [5:0] v124_3_address9;
output   v124_3_ce9;
input  [7:0] v124_3_q9;
output  [5:0] v124_3_address10;
output   v124_3_ce10;
input  [7:0] v124_3_q10;
output  [5:0] v124_3_address11;
output   v124_3_ce11;
input  [7:0] v124_3_q11;
output  [7:0] acc_outp2_V_address0;
output   acc_outp2_V_ce0;
output   acc_outp2_V_we0;
output  [21:0] acc_outp2_V_d0;
output  [7:0] acc_outp2_V_address1;
output   acc_outp2_V_ce1;
input  [21:0] acc_outp2_V_q1;
output  [7:0] acc_outp2_V_1_address0;
output   acc_outp2_V_1_ce0;
output   acc_outp2_V_1_we0;
output  [21:0] acc_outp2_V_1_d0;
output  [7:0] acc_outp2_V_1_address1;
output   acc_outp2_V_1_ce1;
input  [21:0] acc_outp2_V_1_q1;
output  [7:0] acc_outp2_V_2_address0;
output   acc_outp2_V_2_ce0;
output   acc_outp2_V_2_we0;
output  [21:0] acc_outp2_V_2_d0;
output  [7:0] acc_outp2_V_2_address1;
output   acc_outp2_V_2_ce1;
input  [21:0] acc_outp2_V_2_q1;
output  [7:0] acc_outp2_V_3_address0;
output   acc_outp2_V_3_ce0;
output   acc_outp2_V_3_we0;
output  [21:0] acc_outp2_V_3_d0;
output  [7:0] acc_outp2_V_3_address1;
output   acc_outp2_V_3_ce1;
input  [21:0] acc_outp2_V_3_q1;
output  [7:0] V_h_address0;
output   V_h_ce0;
input  [7:0] V_h_q0;
output  [7:0] V_h_address1;
output   V_h_ce1;
input  [7:0] V_h_q1;
output  [7:0] V_h_address2;
output   V_h_ce2;
input  [7:0] V_h_q2;
output  [7:0] V_h_address3;
output   V_h_ce3;
input  [7:0] V_h_q3;
output  [7:0] V_h_address4;
output   V_h_ce4;
input  [7:0] V_h_q4;
output  [7:0] V_h_address5;
output   V_h_ce5;
input  [7:0] V_h_q5;
output  [7:0] V_h_address6;
output   V_h_ce6;
input  [7:0] V_h_q6;
output  [7:0] V_h_address7;
output   V_h_ce7;
input  [7:0] V_h_q7;
output  [7:0] V_h_address8;
output   V_h_ce8;
input  [7:0] V_h_q8;
output  [7:0] V_h_address9;
output   V_h_ce9;
input  [7:0] V_h_q9;
output  [7:0] V_h_address10;
output   V_h_ce10;
input  [7:0] V_h_q10;
output  [7:0] V_h_address11;
output   V_h_ce11;
input  [7:0] V_h_q11;
output  [7:0] V_h_1_address0;
output   V_h_1_ce0;
input  [7:0] V_h_1_q0;
output  [7:0] V_h_1_address1;
output   V_h_1_ce1;
input  [7:0] V_h_1_q1;
output  [7:0] V_h_1_address2;
output   V_h_1_ce2;
input  [7:0] V_h_1_q2;
output  [7:0] V_h_1_address3;
output   V_h_1_ce3;
input  [7:0] V_h_1_q3;
output  [7:0] V_h_1_address4;
output   V_h_1_ce4;
input  [7:0] V_h_1_q4;
output  [7:0] V_h_1_address5;
output   V_h_1_ce5;
input  [7:0] V_h_1_q5;
output  [7:0] V_h_1_address6;
output   V_h_1_ce6;
input  [7:0] V_h_1_q6;
output  [7:0] V_h_1_address7;
output   V_h_1_ce7;
input  [7:0] V_h_1_q7;
output  [7:0] V_h_1_address8;
output   V_h_1_ce8;
input  [7:0] V_h_1_q8;
output  [7:0] V_h_1_address9;
output   V_h_1_ce9;
input  [7:0] V_h_1_q9;
output  [7:0] V_h_1_address10;
output   V_h_1_ce10;
input  [7:0] V_h_1_q10;
output  [7:0] V_h_1_address11;
output   V_h_1_ce11;
input  [7:0] V_h_1_q11;
output  [7:0] V_h_2_address0;
output   V_h_2_ce0;
input  [7:0] V_h_2_q0;
output  [7:0] V_h_2_address1;
output   V_h_2_ce1;
input  [7:0] V_h_2_q1;
output  [7:0] V_h_2_address2;
output   V_h_2_ce2;
input  [7:0] V_h_2_q2;
output  [7:0] V_h_2_address3;
output   V_h_2_ce3;
input  [7:0] V_h_2_q3;
output  [7:0] V_h_2_address4;
output   V_h_2_ce4;
input  [7:0] V_h_2_q4;
output  [7:0] V_h_2_address5;
output   V_h_2_ce5;
input  [7:0] V_h_2_q5;
output  [7:0] V_h_2_address6;
output   V_h_2_ce6;
input  [7:0] V_h_2_q6;
output  [7:0] V_h_2_address7;
output   V_h_2_ce7;
input  [7:0] V_h_2_q7;
output  [7:0] V_h_2_address8;
output   V_h_2_ce8;
input  [7:0] V_h_2_q8;
output  [7:0] V_h_2_address9;
output   V_h_2_ce9;
input  [7:0] V_h_2_q9;
output  [7:0] V_h_2_address10;
output   V_h_2_ce10;
input  [7:0] V_h_2_q10;
output  [7:0] V_h_2_address11;
output   V_h_2_ce11;
input  [7:0] V_h_2_q11;
output  [7:0] V_h_3_address0;
output   V_h_3_ce0;
input  [7:0] V_h_3_q0;
output  [7:0] V_h_3_address1;
output   V_h_3_ce1;
input  [7:0] V_h_3_q1;
output  [7:0] V_h_3_address2;
output   V_h_3_ce2;
input  [7:0] V_h_3_q2;
output  [7:0] V_h_3_address3;
output   V_h_3_ce3;
input  [7:0] V_h_3_q3;
output  [7:0] V_h_3_address4;
output   V_h_3_ce4;
input  [7:0] V_h_3_q4;
output  [7:0] V_h_3_address5;
output   V_h_3_ce5;
input  [7:0] V_h_3_q5;
output  [7:0] V_h_3_address6;
output   V_h_3_ce6;
input  [7:0] V_h_3_q6;
output  [7:0] V_h_3_address7;
output   V_h_3_ce7;
input  [7:0] V_h_3_q7;
output  [7:0] V_h_3_address8;
output   V_h_3_ce8;
input  [7:0] V_h_3_q8;
output  [7:0] V_h_3_address9;
output   V_h_3_ce9;
input  [7:0] V_h_3_q9;
output  [7:0] V_h_3_address10;
output   V_h_3_ce10;
input  [7:0] V_h_3_q10;
output  [7:0] V_h_3_address11;
output   V_h_3_ce11;
input  [7:0] V_h_3_q11;

reg ap_idle;
reg v124_ce0;
reg v124_ce1;
reg v124_ce2;
reg v124_ce3;
reg v124_ce4;
reg v124_ce5;
reg v124_ce6;
reg v124_ce7;
reg v124_ce8;
reg v124_ce9;
reg v124_ce10;
reg v124_ce11;
reg v124_1_ce0;
reg v124_1_ce1;
reg v124_1_ce2;
reg v124_1_ce3;
reg v124_1_ce4;
reg v124_1_ce5;
reg v124_1_ce6;
reg v124_1_ce7;
reg v124_1_ce8;
reg v124_1_ce9;
reg v124_1_ce10;
reg v124_1_ce11;
reg v124_2_ce0;
reg v124_2_ce1;
reg v124_2_ce2;
reg v124_2_ce3;
reg v124_2_ce4;
reg v124_2_ce5;
reg v124_2_ce6;
reg v124_2_ce7;
reg v124_2_ce8;
reg v124_2_ce9;
reg v124_2_ce10;
reg v124_2_ce11;
reg v124_3_ce0;
reg v124_3_ce1;
reg v124_3_ce2;
reg v124_3_ce3;
reg v124_3_ce4;
reg v124_3_ce5;
reg v124_3_ce6;
reg v124_3_ce7;
reg v124_3_ce8;
reg v124_3_ce9;
reg v124_3_ce10;
reg v124_3_ce11;
reg acc_outp2_V_ce0;
reg acc_outp2_V_we0;
reg acc_outp2_V_ce1;
reg acc_outp2_V_1_ce0;
reg acc_outp2_V_1_we0;
reg acc_outp2_V_1_ce1;
reg acc_outp2_V_2_ce0;
reg acc_outp2_V_2_we0;
reg acc_outp2_V_2_ce1;
reg acc_outp2_V_3_ce0;
reg acc_outp2_V_3_we0;
reg acc_outp2_V_3_ce1;
reg V_h_ce0;
reg V_h_ce1;
reg V_h_ce2;
reg V_h_ce3;
reg V_h_ce4;
reg V_h_ce5;
reg V_h_ce6;
reg V_h_ce7;
reg V_h_ce8;
reg V_h_ce9;
reg V_h_ce10;
reg V_h_ce11;
reg V_h_1_ce0;
reg V_h_1_ce1;
reg V_h_1_ce2;
reg V_h_1_ce3;
reg V_h_1_ce4;
reg V_h_1_ce5;
reg V_h_1_ce6;
reg V_h_1_ce7;
reg V_h_1_ce8;
reg V_h_1_ce9;
reg V_h_1_ce10;
reg V_h_1_ce11;
reg V_h_2_ce0;
reg V_h_2_ce1;
reg V_h_2_ce2;
reg V_h_2_ce3;
reg V_h_2_ce4;
reg V_h_2_ce5;
reg V_h_2_ce6;
reg V_h_2_ce7;
reg V_h_2_ce8;
reg V_h_2_ce9;
reg V_h_2_ce10;
reg V_h_2_ce11;
reg V_h_3_ce0;
reg V_h_3_ce1;
reg V_h_3_ce2;
reg V_h_3_ce3;
reg V_h_3_ce4;
reg V_h_3_ce5;
reg V_h_3_ce6;
reg V_h_3_ce7;
reg V_h_3_ce8;
reg V_h_3_ce9;
reg V_h_3_ce10;
reg V_h_3_ce11;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln195_fu_1427_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [1:0] tmp_24_fu_1391_p4;
reg   [1:0] tmp_24_reg_2494;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln196_fu_1448_p2;
reg   [0:0] icmp_ln196_reg_2503;
wire   [6:0] select_ln195_fu_1454_p3;
reg   [6:0] select_ln195_reg_2508;
wire   [1:0] trunc_ln195_fu_1470_p1;
reg   [1:0] trunc_ln195_reg_2513;
reg   [1:0] trunc_ln195_reg_2513_pp0_iter1_reg;
reg   [1:0] trunc_ln195_reg_2513_pp0_iter2_reg;
reg   [1:0] trunc_ln195_reg_2513_pp0_iter3_reg;
reg   [1:0] trunc_ln195_reg_2513_pp0_iter4_reg;
reg   [1:0] trunc_ln195_reg_2513_pp0_iter5_reg;
reg   [1:0] trunc_ln195_reg_2513_pp0_iter6_reg;
wire   [1:0] p_mid1_fu_1474_p4;
reg   [1:0] p_mid1_reg_2530;
wire   [5:0] select_ln195_3_fu_1510_p3;
reg   [5:0] select_ln195_3_reg_2535;
wire   [1:0] empty_431_fu_1568_p1;
reg   [1:0] empty_431_reg_2627;
wire   [7:0] empty_430_fu_1899_p2;
reg   [7:0] empty_430_reg_3043;
reg   [7:0] empty_430_reg_3043_pp0_iter2_reg;
reg   [7:0] empty_430_reg_3043_pp0_iter3_reg;
wire   [7:0] v92_1_fu_1939_p6;
reg   [7:0] v92_1_reg_3058;
reg  signed [7:0] v92_1_reg_3058_pp0_iter2_reg;
wire   [7:0] v93_1_fu_1952_p6;
reg   [7:0] v93_1_reg_3063;
reg  signed [7:0] v93_1_reg_3063_pp0_iter2_reg;
wire   [7:0] v92_2_fu_1965_p6;
reg   [7:0] v92_2_reg_3068;
reg   [7:0] v92_2_reg_3068_pp0_iter2_reg;
reg  signed [7:0] v92_2_reg_3068_pp0_iter3_reg;
wire   [7:0] v93_2_fu_1978_p6;
reg   [7:0] v93_2_reg_3073;
reg   [7:0] v93_2_reg_3073_pp0_iter2_reg;
reg  signed [7:0] v93_2_reg_3073_pp0_iter3_reg;
wire   [7:0] v92_3_fu_1991_p6;
reg   [7:0] v92_3_reg_3078;
reg   [7:0] v92_3_reg_3078_pp0_iter2_reg;
reg  signed [7:0] v92_3_reg_3078_pp0_iter3_reg;
wire   [7:0] v93_3_fu_2004_p6;
reg   [7:0] v93_3_reg_3083;
reg   [7:0] v93_3_reg_3083_pp0_iter2_reg;
reg  signed [7:0] v93_3_reg_3083_pp0_iter3_reg;
wire   [7:0] v93_4_fu_2017_p6;
reg  signed [7:0] v93_4_reg_3088;
wire   [7:0] v93_5_fu_2030_p6;
reg   [7:0] v93_5_reg_3093;
reg   [7:0] v93_5_reg_3093_pp0_iter2_reg;
reg  signed [7:0] v93_5_reg_3093_pp0_iter3_reg;
wire   [7:0] v93_6_fu_2043_p6;
reg  signed [7:0] v93_6_reg_3098;
wire   [7:0] v93_7_fu_2056_p6;
reg  signed [7:0] v93_7_reg_3103;
wire   [7:0] v93_8_fu_2069_p6;
reg   [7:0] v93_8_reg_3108;
reg  signed [7:0] v93_8_reg_3108_pp0_iter2_reg;
wire   [7:0] v93_9_fu_2082_p6;
reg   [7:0] v93_9_reg_3113;
reg   [7:0] v93_9_reg_3113_pp0_iter2_reg;
reg  signed [7:0] v93_9_reg_3113_pp0_iter3_reg;
wire   [7:0] v93_s_fu_2095_p6;
reg  signed [7:0] v93_s_reg_3118;
wire   [7:0] v93_10_fu_2108_p6;
reg  signed [7:0] v93_10_reg_3123;
wire   [7:0] v92_5_fu_2141_p6;
reg   [7:0] v92_5_reg_3138;
reg  signed [7:0] v92_5_reg_3138_pp0_iter3_reg;
wire   [7:0] v92_8_fu_2194_p6;
reg  signed [7:0] v92_8_reg_3163;
wire   [7:0] v92_9_fu_2207_p6;
reg   [7:0] v92_9_reg_3168;
reg  signed [7:0] v92_9_reg_3168_pp0_iter3_reg;
reg   [7:0] acc_outp2_V_addr_reg_3208;
reg   [7:0] acc_outp2_V_addr_reg_3208_pp0_iter5_reg;
reg   [7:0] acc_outp2_V_addr_reg_3208_pp0_iter6_reg;
reg   [7:0] acc_outp2_V_1_addr_reg_3214;
reg   [7:0] acc_outp2_V_1_addr_reg_3214_pp0_iter5_reg;
reg   [7:0] acc_outp2_V_1_addr_reg_3214_pp0_iter6_reg;
reg   [7:0] acc_outp2_V_2_addr_reg_3220;
reg   [7:0] acc_outp2_V_2_addr_reg_3220_pp0_iter5_reg;
reg   [7:0] acc_outp2_V_2_addr_reg_3220_pp0_iter6_reg;
reg   [7:0] acc_outp2_V_3_addr_reg_3226;
reg   [7:0] acc_outp2_V_3_addr_reg_3226_pp0_iter5_reg;
reg   [7:0] acc_outp2_V_3_addr_reg_3226_pp0_iter6_reg;
wire  signed [16:0] grp_fu_2413_p3;
wire   [21:0] tmp_s_fu_2353_p6;
reg   [21:0] tmp_s_reg_3257;
wire  signed [16:0] grp_fu_2447_p3;
reg  signed [16:0] add_ln75_reg_3262;
wire  signed [16:0] grp_fu_2439_p3;
wire   [17:0] add_ln75_10_fu_2381_p2;
reg   [17:0] add_ln75_10_reg_3272;
wire   [21:0] add_ln75_11_fu_2407_p2;
reg   [21:0] add_ln75_11_reg_3277;
wire   [63:0] zext_ln198_3_fu_1518_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln198_4_fu_1532_p1;
wire   [63:0] zext_ln198_5_fu_1546_p1;
wire   [63:0] zext_ln198_6_fu_1560_p1;
wire   [63:0] zext_ln198_fu_1586_p1;
wire   [63:0] zext_ln199_fu_1602_p1;
wire   [63:0] zext_ln199_1_fu_1618_p1;
wire   [63:0] zext_ln199_2_fu_1630_p1;
wire   [63:0] zext_ln199_3_fu_1646_p1;
wire   [63:0] zext_ln199_4_fu_1662_p1;
wire   [63:0] zext_ln199_5_fu_1674_p1;
wire   [63:0] zext_ln199_6_fu_1686_p1;
wire   [63:0] zext_ln199_7_fu_1702_p1;
wire   [63:0] zext_ln199_8_fu_1718_p1;
wire   [63:0] zext_ln199_9_fu_1734_p1;
wire   [63:0] zext_ln199_10_fu_1750_p1;
wire   [63:0] zext_ln198_7_fu_1797_p1;
wire   [63:0] zext_ln198_8_fu_1810_p1;
wire   [63:0] zext_ln198_9_fu_1823_p1;
wire   [63:0] zext_ln198_10_fu_1836_p1;
wire   [63:0] zext_ln198_11_fu_1849_p1;
wire   [63:0] zext_ln198_12_fu_1862_p1;
wire   [63:0] zext_ln198_13_fu_1875_p1;
wire   [63:0] zext_ln198_14_fu_1888_p1;
wire   [63:0] p_cast_fu_2282_p1;
reg   [6:0] j8_fu_130;
wire   [6:0] add_ln196_fu_1758_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_j8_load;
reg   [3:0] i8_fu_134;
wire   [3:0] select_ln195_1_fu_1462_p3;
reg   [3:0] ap_sig_allocacmp_i8_1;
reg   [9:0] indvar_flatten366_fu_138;
wire   [9:0] add_ln195_1_fu_1433_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten366_load;
wire   [3:0] tmp_26_fu_1409_p3;
wire   [5:0] tmp_25_fu_1401_p3;
wire   [5:0] zext_ln198_1_fu_1417_p1;
wire   [3:0] add_ln195_fu_1442_p2;
wire   [3:0] tmp_28_fu_1492_p3;
wire   [5:0] tmp_27_fu_1484_p3;
wire   [5:0] zext_ln198_2_fu_1500_p1;
wire   [5:0] sub_ln198_1_fu_1504_p2;
wire   [5:0] sub_ln198_fu_1421_p2;
wire   [5:0] or_ln195_fu_1526_p2;
wire   [5:0] or_ln195_1_fu_1540_p2;
wire   [5:0] or_ln195_2_fu_1554_p2;
wire   [3:0] tmp_30_fu_1572_p4;
wire  signed [4:0] tmp_266_cast_fu_1594_p3;
wire  signed [5:0] tmp_267_cast_fu_1610_p3;
wire  signed [5:0] sext_ln199_fu_1626_p1;
wire   [5:0] tmp_265_cast_fu_1582_p1;
wire   [6:0] tmp_269_cast_fu_1638_p3;
wire   [6:0] tmp_270_cast_fu_1654_p3;
wire  signed [6:0] sext_ln199_1_fu_1670_p1;
wire  signed [6:0] sext_ln199_2_fu_1682_p1;
wire   [7:0] tmp_273_cast_fu_1694_p3;
wire   [7:0] tmp_274_cast_fu_1710_p3;
wire   [7:0] tmp_275_cast_fu_1726_p3;
wire   [7:0] tmp_276_cast_fu_1742_p3;
wire   [1:0] select_ln195_2_fu_1779_p3;
wire   [5:0] add_ln195_2_fu_1792_p2;
wire   [5:0] add_ln195_3_fu_1805_p2;
wire   [5:0] add_ln195_4_fu_1818_p2;
wire   [5:0] add_ln195_5_fu_1831_p2;
wire   [5:0] add_ln195_6_fu_1844_p2;
wire   [5:0] add_ln195_7_fu_1857_p2;
wire   [5:0] add_ln195_8_fu_1870_p2;
wire   [5:0] add_ln195_9_fu_1883_p2;
wire   [7:0] tmp_29_fu_1784_p3;
wire   [7:0] select_ln195_cast_fu_1896_p1;
wire  signed [7:0] v_fu_1905_p6;
wire  signed [7:0] v1_fu_1918_p6;
wire  signed [7:0] v92_4_fu_2121_p6;
wire  signed [7:0] v92_6_fu_2154_p6;
wire  signed [7:0] v92_7_fu_2174_p6;
wire  signed [7:0] v92_s_fu_2220_p6;
wire  signed [7:0] v92_10_fu_2240_p6;
wire  signed [15:0] mul_ln202_1_fu_2266_p2;
wire  signed [15:0] mul_ln202_2_fu_2295_p2;
wire  signed [15:0] mul_ln202_3_fu_2311_p2;
wire  signed [15:0] mul_ln202_5_fu_2327_p2;
wire  signed [15:0] mul_ln202_9_fu_2343_p2;
wire  signed [16:0] grp_fu_2430_p3;
wire  signed [16:0] grp_fu_2421_p3;
wire  signed [16:0] grp_fu_2455_p3;
wire  signed [17:0] sext_ln75_5_fu_2372_p1;
wire  signed [17:0] sext_ln75_4_fu_2369_p1;
wire   [17:0] add_ln75_9_fu_2375_p2;
wire  signed [17:0] sext_ln75_3_fu_2366_p1;
wire  signed [21:0] sext_ln75_1_fu_2387_p1;
wire  signed [16:0] grp_fu_2464_p3;
wire  signed [21:0] sext_ln75_2_fu_2395_p1;
wire   [21:0] add_ln75_1_fu_2390_p2;
wire  signed [21:0] sext_ln75_6_fu_2404_p1;
wire   [21:0] add_ln75_4_fu_2398_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U380(
    .din0(v124_q11),
    .din1(v124_1_q11),
    .din2(v124_2_q11),
    .din3(v124_3_q11),
    .din4(trunc_ln195_reg_2513),
    .dout(v_fu_1905_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U381(
    .din0(V_h_q11),
    .din1(V_h_1_q11),
    .din2(V_h_2_q11),
    .din3(V_h_3_q11),
    .din4(empty_431_reg_2627),
    .dout(v1_fu_1918_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U382(
    .din0(v124_q10),
    .din1(v124_1_q10),
    .din2(v124_2_q10),
    .din3(v124_3_q10),
    .din4(trunc_ln195_reg_2513),
    .dout(v92_1_fu_1939_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U383(
    .din0(V_h_q10),
    .din1(V_h_1_q10),
    .din2(V_h_2_q10),
    .din3(V_h_3_q10),
    .din4(empty_431_reg_2627),
    .dout(v93_1_fu_1952_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U384(
    .din0(v124_q9),
    .din1(v124_1_q9),
    .din2(v124_2_q9),
    .din3(v124_3_q9),
    .din4(trunc_ln195_reg_2513),
    .dout(v92_2_fu_1965_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U385(
    .din0(V_h_q9),
    .din1(V_h_1_q9),
    .din2(V_h_2_q9),
    .din3(V_h_3_q9),
    .din4(empty_431_reg_2627),
    .dout(v93_2_fu_1978_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U386(
    .din0(v124_q8),
    .din1(v124_1_q8),
    .din2(v124_2_q8),
    .din3(v124_3_q8),
    .din4(trunc_ln195_reg_2513),
    .dout(v92_3_fu_1991_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U387(
    .din0(V_h_q8),
    .din1(V_h_1_q8),
    .din2(V_h_2_q8),
    .din3(V_h_3_q8),
    .din4(empty_431_reg_2627),
    .dout(v93_3_fu_2004_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U388(
    .din0(V_h_q7),
    .din1(V_h_1_q7),
    .din2(V_h_2_q7),
    .din3(V_h_3_q7),
    .din4(empty_431_reg_2627),
    .dout(v93_4_fu_2017_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U389(
    .din0(V_h_q6),
    .din1(V_h_1_q6),
    .din2(V_h_2_q6),
    .din3(V_h_3_q6),
    .din4(empty_431_reg_2627),
    .dout(v93_5_fu_2030_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U390(
    .din0(V_h_q5),
    .din1(V_h_1_q5),
    .din2(V_h_2_q5),
    .din3(V_h_3_q5),
    .din4(empty_431_reg_2627),
    .dout(v93_6_fu_2043_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U391(
    .din0(V_h_q4),
    .din1(V_h_1_q4),
    .din2(V_h_2_q4),
    .din3(V_h_3_q4),
    .din4(empty_431_reg_2627),
    .dout(v93_7_fu_2056_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U392(
    .din0(V_h_q3),
    .din1(V_h_1_q3),
    .din2(V_h_2_q3),
    .din3(V_h_3_q3),
    .din4(empty_431_reg_2627),
    .dout(v93_8_fu_2069_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U393(
    .din0(V_h_q2),
    .din1(V_h_1_q2),
    .din2(V_h_2_q2),
    .din3(V_h_3_q2),
    .din4(empty_431_reg_2627),
    .dout(v93_9_fu_2082_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U394(
    .din0(V_h_q1),
    .din1(V_h_1_q1),
    .din2(V_h_2_q1),
    .din3(V_h_3_q1),
    .din4(empty_431_reg_2627),
    .dout(v93_s_fu_2095_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U395(
    .din0(V_h_q0),
    .din1(V_h_1_q0),
    .din2(V_h_2_q0),
    .din3(V_h_3_q0),
    .din4(empty_431_reg_2627),
    .dout(v93_10_fu_2108_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U396(
    .din0(v124_q7),
    .din1(v124_1_q7),
    .din2(v124_2_q7),
    .din3(v124_3_q7),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_4_fu_2121_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U397(
    .din0(v124_q6),
    .din1(v124_1_q6),
    .din2(v124_2_q6),
    .din3(v124_3_q6),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_5_fu_2141_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U398(
    .din0(v124_q5),
    .din1(v124_1_q5),
    .din2(v124_2_q5),
    .din3(v124_3_q5),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_6_fu_2154_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U399(
    .din0(v124_q4),
    .din1(v124_1_q4),
    .din2(v124_2_q4),
    .din3(v124_3_q4),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_7_fu_2174_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U400(
    .din0(v124_q3),
    .din1(v124_1_q3),
    .din2(v124_2_q3),
    .din3(v124_3_q3),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_8_fu_2194_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U401(
    .din0(v124_q2),
    .din1(v124_1_q2),
    .din2(v124_2_q2),
    .din3(v124_3_q2),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_9_fu_2207_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U402(
    .din0(v124_q1),
    .din1(v124_1_q1),
    .din2(v124_2_q1),
    .din3(v124_3_q1),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_s_fu_2220_p6)
);

Bert_layer_mux_42_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_42_8_1_1_U403(
    .din0(v124_q0),
    .din1(v124_1_q0),
    .din2(v124_2_q0),
    .din3(v124_3_q0),
    .din4(trunc_ln195_reg_2513_pp0_iter1_reg),
    .dout(v92_10_fu_2240_p6)
);

Bert_layer_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U404(
    .din0(v93_1_reg_3063_pp0_iter2_reg),
    .din1(v92_1_reg_3058_pp0_iter2_reg),
    .dout(mul_ln202_1_fu_2266_p2)
);

Bert_layer_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U405(
    .din0(v93_2_reg_3073_pp0_iter3_reg),
    .din1(v92_2_reg_3068_pp0_iter3_reg),
    .dout(mul_ln202_2_fu_2295_p2)
);

Bert_layer_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U406(
    .din0(v93_3_reg_3083_pp0_iter3_reg),
    .din1(v92_3_reg_3078_pp0_iter3_reg),
    .dout(mul_ln202_3_fu_2311_p2)
);

Bert_layer_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U407(
    .din0(v93_5_reg_3093_pp0_iter3_reg),
    .din1(v92_5_reg_3138_pp0_iter3_reg),
    .dout(mul_ln202_5_fu_2327_p2)
);

Bert_layer_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U408(
    .din0(v93_9_reg_3113_pp0_iter3_reg),
    .din1(v92_9_reg_3168_pp0_iter3_reg),
    .dout(mul_ln202_9_fu_2343_p2)
);

Bert_layer_mux_42_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 22 ),
    .din1_WIDTH( 22 ),
    .din2_WIDTH( 22 ),
    .din3_WIDTH( 22 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 22 ))
mux_42_22_1_1_U409(
    .din0(acc_outp2_V_q1),
    .din1(acc_outp2_V_1_q1),
    .din2(acc_outp2_V_2_q1),
    .din3(acc_outp2_V_3_q1),
    .din4(trunc_ln195_reg_2513_pp0_iter4_reg),
    .dout(tmp_s_fu_2353_p6)
);

Bert_layer_mac_muladd_8s_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_16s_17_4_1_U410(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v1_fu_1918_p6),
    .din1(v_fu_1905_p6),
    .din2(mul_ln202_1_fu_2266_p2),
    .ce(1'b1),
    .dout(grp_fu_2413_p3)
);

Bert_layer_mac_muladd_8s_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_16s_17_4_1_U411(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_4_reg_3088),
    .din1(v92_4_fu_2121_p6),
    .din2(mul_ln202_2_fu_2295_p2),
    .ce(1'b1),
    .dout(grp_fu_2421_p3)
);

Bert_layer_mac_muladd_8s_8s_17s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_17s_17_4_1_U412(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_6_reg_3098),
    .din1(v92_6_fu_2154_p6),
    .din2(grp_fu_2413_p3),
    .ce(1'b1),
    .dout(grp_fu_2430_p3)
);

Bert_layer_mac_muladd_8s_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_16s_17_4_1_U413(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_7_reg_3103),
    .din1(v92_7_fu_2174_p6),
    .din2(mul_ln202_5_fu_2327_p2),
    .ce(1'b1),
    .dout(grp_fu_2439_p3)
);

Bert_layer_mac_muladd_8s_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_16s_17_4_1_U414(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_s_reg_3118),
    .din1(v92_s_fu_2220_p6),
    .din2(mul_ln202_9_fu_2343_p2),
    .ce(1'b1),
    .dout(grp_fu_2447_p3)
);

Bert_layer_mac_muladd_8s_8s_16s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_16s_17_4_1_U415(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_10_reg_3123),
    .din1(v92_10_fu_2240_p6),
    .din2(mul_ln202_3_fu_2311_p2),
    .ce(1'b1),
    .dout(grp_fu_2455_p3)
);

Bert_layer_mac_muladd_8s_8s_17s_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8s_8s_17s_17_4_1_U416(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_8_reg_3108_pp0_iter2_reg),
    .din1(v92_8_reg_3163),
    .din2(grp_fu_2439_p3),
    .ce(1'b1),
    .dout(grp_fu_2464_p3)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln195_fu_1427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i8_fu_134 <= select_ln195_1_fu_1462_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i8_fu_134 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln195_fu_1427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten366_fu_138 <= add_ln195_1_fu_1433_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten366_fu_138 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln195_fu_1427_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j8_fu_130 <= add_ln196_fu_1758_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j8_fu_130 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        acc_outp2_V_1_addr_reg_3214 <= p_cast_fu_2282_p1;
        acc_outp2_V_1_addr_reg_3214_pp0_iter5_reg <= acc_outp2_V_1_addr_reg_3214;
        acc_outp2_V_1_addr_reg_3214_pp0_iter6_reg <= acc_outp2_V_1_addr_reg_3214_pp0_iter5_reg;
        acc_outp2_V_2_addr_reg_3220 <= p_cast_fu_2282_p1;
        acc_outp2_V_2_addr_reg_3220_pp0_iter5_reg <= acc_outp2_V_2_addr_reg_3220;
        acc_outp2_V_2_addr_reg_3220_pp0_iter6_reg <= acc_outp2_V_2_addr_reg_3220_pp0_iter5_reg;
        acc_outp2_V_3_addr_reg_3226 <= p_cast_fu_2282_p1;
        acc_outp2_V_3_addr_reg_3226_pp0_iter5_reg <= acc_outp2_V_3_addr_reg_3226;
        acc_outp2_V_3_addr_reg_3226_pp0_iter6_reg <= acc_outp2_V_3_addr_reg_3226_pp0_iter5_reg;
        acc_outp2_V_addr_reg_3208 <= p_cast_fu_2282_p1;
        acc_outp2_V_addr_reg_3208_pp0_iter5_reg <= acc_outp2_V_addr_reg_3208;
        acc_outp2_V_addr_reg_3208_pp0_iter6_reg <= acc_outp2_V_addr_reg_3208_pp0_iter5_reg;
        add_ln75_10_reg_3272 <= add_ln75_10_fu_2381_p2;
        add_ln75_11_reg_3277 <= add_ln75_11_fu_2407_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        empty_430_reg_3043_pp0_iter2_reg <= empty_430_reg_3043;
        empty_430_reg_3043_pp0_iter3_reg <= empty_430_reg_3043_pp0_iter2_reg;
        tmp_s_reg_3257 <= tmp_s_fu_2353_p6;
        trunc_ln195_reg_2513_pp0_iter2_reg <= trunc_ln195_reg_2513_pp0_iter1_reg;
        trunc_ln195_reg_2513_pp0_iter3_reg <= trunc_ln195_reg_2513_pp0_iter2_reg;
        trunc_ln195_reg_2513_pp0_iter4_reg <= trunc_ln195_reg_2513_pp0_iter3_reg;
        trunc_ln195_reg_2513_pp0_iter5_reg <= trunc_ln195_reg_2513_pp0_iter4_reg;
        trunc_ln195_reg_2513_pp0_iter6_reg <= trunc_ln195_reg_2513_pp0_iter5_reg;
        v92_1_reg_3058_pp0_iter2_reg <= v92_1_reg_3058;
        v92_2_reg_3068_pp0_iter2_reg <= v92_2_reg_3068;
        v92_2_reg_3068_pp0_iter3_reg <= v92_2_reg_3068_pp0_iter2_reg;
        v92_3_reg_3078_pp0_iter2_reg <= v92_3_reg_3078;
        v92_3_reg_3078_pp0_iter3_reg <= v92_3_reg_3078_pp0_iter2_reg;
        v92_5_reg_3138 <= v92_5_fu_2141_p6;
        v92_5_reg_3138_pp0_iter3_reg <= v92_5_reg_3138;
        v92_8_reg_3163 <= v92_8_fu_2194_p6;
        v92_9_reg_3168 <= v92_9_fu_2207_p6;
        v92_9_reg_3168_pp0_iter3_reg <= v92_9_reg_3168;
        v93_1_reg_3063_pp0_iter2_reg <= v93_1_reg_3063;
        v93_2_reg_3073_pp0_iter2_reg <= v93_2_reg_3073;
        v93_2_reg_3073_pp0_iter3_reg <= v93_2_reg_3073_pp0_iter2_reg;
        v93_3_reg_3083_pp0_iter2_reg <= v93_3_reg_3083;
        v93_3_reg_3083_pp0_iter3_reg <= v93_3_reg_3083_pp0_iter2_reg;
        v93_5_reg_3093_pp0_iter2_reg <= v93_5_reg_3093;
        v93_5_reg_3093_pp0_iter3_reg <= v93_5_reg_3093_pp0_iter2_reg;
        v93_8_reg_3108_pp0_iter2_reg <= v93_8_reg_3108;
        v93_9_reg_3113_pp0_iter2_reg <= v93_9_reg_3113;
        v93_9_reg_3113_pp0_iter3_reg <= v93_9_reg_3113_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        add_ln75_reg_3262 <= grp_fu_2447_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_430_reg_3043 <= empty_430_fu_1899_p2;
        tmp_24_reg_2494 <= {{ap_sig_allocacmp_i8_1[3:2]}};
        trunc_ln195_reg_2513_pp0_iter1_reg <= trunc_ln195_reg_2513;
        v92_1_reg_3058 <= v92_1_fu_1939_p6;
        v92_2_reg_3068 <= v92_2_fu_1965_p6;
        v92_3_reg_3078 <= v92_3_fu_1991_p6;
        v93_10_reg_3123 <= v93_10_fu_2108_p6;
        v93_1_reg_3063 <= v93_1_fu_1952_p6;
        v93_2_reg_3073 <= v93_2_fu_1978_p6;
        v93_3_reg_3083 <= v93_3_fu_2004_p6;
        v93_4_reg_3088 <= v93_4_fu_2017_p6;
        v93_5_reg_3093 <= v93_5_fu_2030_p6;
        v93_6_reg_3098 <= v93_6_fu_2043_p6;
        v93_7_reg_3103 <= v93_7_fu_2056_p6;
        v93_8_reg_3108 <= v93_8_fu_2069_p6;
        v93_9_reg_3113 <= v93_9_fu_2082_p6;
        v93_s_reg_3118 <= v93_s_fu_2095_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_fu_1427_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_431_reg_2627 <= empty_431_fu_1568_p1;
        icmp_ln196_reg_2503 <= icmp_ln196_fu_1448_p2;
        p_mid1_reg_2530 <= {{add_ln195_fu_1442_p2[3:2]}};
        select_ln195_3_reg_2535[5 : 2] <= select_ln195_3_fu_1510_p3[5 : 2];
        select_ln195_reg_2508 <= select_ln195_fu_1454_p3;
        trunc_ln195_reg_2513 <= trunc_ln195_fu_1470_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce0 = 1'b1;
    end else begin
        V_h_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce1 = 1'b1;
    end else begin
        V_h_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce10 = 1'b1;
    end else begin
        V_h_1_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce11 = 1'b1;
    end else begin
        V_h_1_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce2 = 1'b1;
    end else begin
        V_h_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce3 = 1'b1;
    end else begin
        V_h_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce4 = 1'b1;
    end else begin
        V_h_1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce5 = 1'b1;
    end else begin
        V_h_1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce6 = 1'b1;
    end else begin
        V_h_1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce7 = 1'b1;
    end else begin
        V_h_1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce8 = 1'b1;
    end else begin
        V_h_1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_1_ce9 = 1'b1;
    end else begin
        V_h_1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce0 = 1'b1;
    end else begin
        V_h_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce1 = 1'b1;
    end else begin
        V_h_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce10 = 1'b1;
    end else begin
        V_h_2_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce11 = 1'b1;
    end else begin
        V_h_2_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce2 = 1'b1;
    end else begin
        V_h_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce3 = 1'b1;
    end else begin
        V_h_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce4 = 1'b1;
    end else begin
        V_h_2_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce5 = 1'b1;
    end else begin
        V_h_2_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce6 = 1'b1;
    end else begin
        V_h_2_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce7 = 1'b1;
    end else begin
        V_h_2_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce8 = 1'b1;
    end else begin
        V_h_2_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_2_ce9 = 1'b1;
    end else begin
        V_h_2_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce0 = 1'b1;
    end else begin
        V_h_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce1 = 1'b1;
    end else begin
        V_h_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce10 = 1'b1;
    end else begin
        V_h_3_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce11 = 1'b1;
    end else begin
        V_h_3_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce2 = 1'b1;
    end else begin
        V_h_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce3 = 1'b1;
    end else begin
        V_h_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce4 = 1'b1;
    end else begin
        V_h_3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce5 = 1'b1;
    end else begin
        V_h_3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce6 = 1'b1;
    end else begin
        V_h_3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce7 = 1'b1;
    end else begin
        V_h_3_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce8 = 1'b1;
    end else begin
        V_h_3_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_3_ce9 = 1'b1;
    end else begin
        V_h_3_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce0 = 1'b1;
    end else begin
        V_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce1 = 1'b1;
    end else begin
        V_h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce10 = 1'b1;
    end else begin
        V_h_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce11 = 1'b1;
    end else begin
        V_h_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce2 = 1'b1;
    end else begin
        V_h_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce3 = 1'b1;
    end else begin
        V_h_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce4 = 1'b1;
    end else begin
        V_h_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce5 = 1'b1;
    end else begin
        V_h_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce6 = 1'b1;
    end else begin
        V_h_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce7 = 1'b1;
    end else begin
        V_h_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce8 = 1'b1;
    end else begin
        V_h_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_ce9 = 1'b1;
    end else begin
        V_h_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_1_ce0 = 1'b1;
    end else begin
        acc_outp2_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_outp2_V_1_ce1 = 1'b1;
    end else begin
        acc_outp2_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln195_reg_2513_pp0_iter6_reg == 2'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_1_we0 = 1'b1;
    end else begin
        acc_outp2_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_2_ce0 = 1'b1;
    end else begin
        acc_outp2_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_outp2_V_2_ce1 = 1'b1;
    end else begin
        acc_outp2_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln195_reg_2513_pp0_iter6_reg == 2'd2) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_2_we0 = 1'b1;
    end else begin
        acc_outp2_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_3_ce0 = 1'b1;
    end else begin
        acc_outp2_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_outp2_V_3_ce1 = 1'b1;
    end else begin
        acc_outp2_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln195_reg_2513_pp0_iter6_reg == 2'd3) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_3_we0 = 1'b1;
    end else begin
        acc_outp2_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_ce0 = 1'b1;
    end else begin
        acc_outp2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        acc_outp2_V_ce1 = 1'b1;
    end else begin
        acc_outp2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln195_reg_2513_pp0_iter6_reg == 2'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        acc_outp2_V_we0 = 1'b1;
    end else begin
        acc_outp2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln195_fu_1427_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i8_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i8_1 = i8_fu_134;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten366_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten366_load = indvar_flatten366_fu_138;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j8_load = 7'd0;
    end else begin
        ap_sig_allocacmp_j8_load = j8_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce0 = 1'b1;
    end else begin
        v124_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce1 = 1'b1;
    end else begin
        v124_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce10 = 1'b1;
    end else begin
        v124_1_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce11 = 1'b1;
    end else begin
        v124_1_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce2 = 1'b1;
    end else begin
        v124_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce3 = 1'b1;
    end else begin
        v124_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce4 = 1'b1;
    end else begin
        v124_1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce5 = 1'b1;
    end else begin
        v124_1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce6 = 1'b1;
    end else begin
        v124_1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce7 = 1'b1;
    end else begin
        v124_1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce8 = 1'b1;
    end else begin
        v124_1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_1_ce9 = 1'b1;
    end else begin
        v124_1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce0 = 1'b1;
    end else begin
        v124_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce1 = 1'b1;
    end else begin
        v124_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce10 = 1'b1;
    end else begin
        v124_2_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce11 = 1'b1;
    end else begin
        v124_2_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce2 = 1'b1;
    end else begin
        v124_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce3 = 1'b1;
    end else begin
        v124_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce4 = 1'b1;
    end else begin
        v124_2_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce5 = 1'b1;
    end else begin
        v124_2_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce6 = 1'b1;
    end else begin
        v124_2_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce7 = 1'b1;
    end else begin
        v124_2_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce8 = 1'b1;
    end else begin
        v124_2_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_2_ce9 = 1'b1;
    end else begin
        v124_2_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce0 = 1'b1;
    end else begin
        v124_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce1 = 1'b1;
    end else begin
        v124_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce10 = 1'b1;
    end else begin
        v124_3_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce11 = 1'b1;
    end else begin
        v124_3_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce2 = 1'b1;
    end else begin
        v124_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce3 = 1'b1;
    end else begin
        v124_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce4 = 1'b1;
    end else begin
        v124_3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce5 = 1'b1;
    end else begin
        v124_3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce6 = 1'b1;
    end else begin
        v124_3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce7 = 1'b1;
    end else begin
        v124_3_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce8 = 1'b1;
    end else begin
        v124_3_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_3_ce9 = 1'b1;
    end else begin
        v124_3_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce0 = 1'b1;
    end else begin
        v124_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce1 = 1'b1;
    end else begin
        v124_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce10 = 1'b1;
    end else begin
        v124_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce11 = 1'b1;
    end else begin
        v124_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce2 = 1'b1;
    end else begin
        v124_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce3 = 1'b1;
    end else begin
        v124_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce4 = 1'b1;
    end else begin
        v124_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce5 = 1'b1;
    end else begin
        v124_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce6 = 1'b1;
    end else begin
        v124_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce7 = 1'b1;
    end else begin
        v124_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce8 = 1'b1;
    end else begin
        v124_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v124_ce9 = 1'b1;
    end else begin
        v124_ce9 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign V_h_1_address0 = zext_ln199_10_fu_1750_p1;

assign V_h_1_address1 = zext_ln199_9_fu_1734_p1;

assign V_h_1_address10 = zext_ln199_fu_1602_p1;

assign V_h_1_address11 = zext_ln198_fu_1586_p1;

assign V_h_1_address2 = zext_ln199_8_fu_1718_p1;

assign V_h_1_address3 = zext_ln199_7_fu_1702_p1;

assign V_h_1_address4 = zext_ln199_6_fu_1686_p1;

assign V_h_1_address5 = zext_ln199_5_fu_1674_p1;

assign V_h_1_address6 = zext_ln199_4_fu_1662_p1;

assign V_h_1_address7 = zext_ln199_3_fu_1646_p1;

assign V_h_1_address8 = zext_ln199_2_fu_1630_p1;

assign V_h_1_address9 = zext_ln199_1_fu_1618_p1;

assign V_h_2_address0 = zext_ln199_10_fu_1750_p1;

assign V_h_2_address1 = zext_ln199_9_fu_1734_p1;

assign V_h_2_address10 = zext_ln199_fu_1602_p1;

assign V_h_2_address11 = zext_ln198_fu_1586_p1;

assign V_h_2_address2 = zext_ln199_8_fu_1718_p1;

assign V_h_2_address3 = zext_ln199_7_fu_1702_p1;

assign V_h_2_address4 = zext_ln199_6_fu_1686_p1;

assign V_h_2_address5 = zext_ln199_5_fu_1674_p1;

assign V_h_2_address6 = zext_ln199_4_fu_1662_p1;

assign V_h_2_address7 = zext_ln199_3_fu_1646_p1;

assign V_h_2_address8 = zext_ln199_2_fu_1630_p1;

assign V_h_2_address9 = zext_ln199_1_fu_1618_p1;

assign V_h_3_address0 = zext_ln199_10_fu_1750_p1;

assign V_h_3_address1 = zext_ln199_9_fu_1734_p1;

assign V_h_3_address10 = zext_ln199_fu_1602_p1;

assign V_h_3_address11 = zext_ln198_fu_1586_p1;

assign V_h_3_address2 = zext_ln199_8_fu_1718_p1;

assign V_h_3_address3 = zext_ln199_7_fu_1702_p1;

assign V_h_3_address4 = zext_ln199_6_fu_1686_p1;

assign V_h_3_address5 = zext_ln199_5_fu_1674_p1;

assign V_h_3_address6 = zext_ln199_4_fu_1662_p1;

assign V_h_3_address7 = zext_ln199_3_fu_1646_p1;

assign V_h_3_address8 = zext_ln199_2_fu_1630_p1;

assign V_h_3_address9 = zext_ln199_1_fu_1618_p1;

assign V_h_address0 = zext_ln199_10_fu_1750_p1;

assign V_h_address1 = zext_ln199_9_fu_1734_p1;

assign V_h_address10 = zext_ln199_fu_1602_p1;

assign V_h_address11 = zext_ln198_fu_1586_p1;

assign V_h_address2 = zext_ln199_8_fu_1718_p1;

assign V_h_address3 = zext_ln199_7_fu_1702_p1;

assign V_h_address4 = zext_ln199_6_fu_1686_p1;

assign V_h_address5 = zext_ln199_5_fu_1674_p1;

assign V_h_address6 = zext_ln199_4_fu_1662_p1;

assign V_h_address7 = zext_ln199_3_fu_1646_p1;

assign V_h_address8 = zext_ln199_2_fu_1630_p1;

assign V_h_address9 = zext_ln199_1_fu_1618_p1;

assign acc_outp2_V_1_address0 = acc_outp2_V_1_addr_reg_3214_pp0_iter6_reg;

assign acc_outp2_V_1_address1 = p_cast_fu_2282_p1;

assign acc_outp2_V_1_d0 = add_ln75_11_reg_3277;

assign acc_outp2_V_2_address0 = acc_outp2_V_2_addr_reg_3220_pp0_iter6_reg;

assign acc_outp2_V_2_address1 = p_cast_fu_2282_p1;

assign acc_outp2_V_2_d0 = add_ln75_11_reg_3277;

assign acc_outp2_V_3_address0 = acc_outp2_V_3_addr_reg_3226_pp0_iter6_reg;

assign acc_outp2_V_3_address1 = p_cast_fu_2282_p1;

assign acc_outp2_V_3_d0 = add_ln75_11_reg_3277;

assign acc_outp2_V_address0 = acc_outp2_V_addr_reg_3208_pp0_iter6_reg;

assign acc_outp2_V_address1 = p_cast_fu_2282_p1;

assign acc_outp2_V_d0 = add_ln75_11_reg_3277;

assign add_ln195_1_fu_1433_p2 = (ap_sig_allocacmp_indvar_flatten366_load + 10'd1);

assign add_ln195_2_fu_1792_p2 = (select_ln195_3_reg_2535 + 6'd4);

assign add_ln195_3_fu_1805_p2 = (select_ln195_3_reg_2535 + 6'd5);

assign add_ln195_4_fu_1818_p2 = (select_ln195_3_reg_2535 + 6'd6);

assign add_ln195_5_fu_1831_p2 = (select_ln195_3_reg_2535 + 6'd7);

assign add_ln195_6_fu_1844_p2 = (select_ln195_3_reg_2535 + 6'd8);

assign add_ln195_7_fu_1857_p2 = (select_ln195_3_reg_2535 + 6'd9);

assign add_ln195_8_fu_1870_p2 = (select_ln195_3_reg_2535 + 6'd10);

assign add_ln195_9_fu_1883_p2 = (select_ln195_3_reg_2535 + 6'd11);

assign add_ln195_fu_1442_p2 = (ap_sig_allocacmp_i8_1 + 4'd1);

assign add_ln196_fu_1758_p2 = (select_ln195_fu_1454_p3 + 7'd1);

assign add_ln75_10_fu_2381_p2 = ($signed(add_ln75_9_fu_2375_p2) + $signed(sext_ln75_3_fu_2366_p1));

assign add_ln75_11_fu_2407_p2 = ($signed(sext_ln75_6_fu_2404_p1) + $signed(add_ln75_4_fu_2398_p2));

assign add_ln75_1_fu_2390_p2 = ($signed(sext_ln75_1_fu_2387_p1) + $signed(tmp_s_reg_3257));

assign add_ln75_4_fu_2398_p2 = ($signed(sext_ln75_2_fu_2395_p1) + $signed(add_ln75_1_fu_2390_p2));

assign add_ln75_9_fu_2375_p2 = ($signed(sext_ln75_5_fu_2372_p1) + $signed(sext_ln75_4_fu_2369_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_430_fu_1899_p2 = (tmp_29_fu_1784_p3 + select_ln195_cast_fu_1896_p1);

assign empty_431_fu_1568_p1 = select_ln195_fu_1454_p3[1:0];

assign icmp_ln195_fu_1427_p2 = ((ap_sig_allocacmp_indvar_flatten366_load == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_1448_p2 = ((ap_sig_allocacmp_j8_load == 7'd64) ? 1'b1 : 1'b0);

assign or_ln195_1_fu_1540_p2 = (select_ln195_3_fu_1510_p3 | 6'd2);

assign or_ln195_2_fu_1554_p2 = (select_ln195_3_fu_1510_p3 | 6'd3);

assign or_ln195_fu_1526_p2 = (select_ln195_3_fu_1510_p3 | 6'd1);

assign p_cast_fu_2282_p1 = empty_430_reg_3043_pp0_iter3_reg;

assign p_mid1_fu_1474_p4 = {{add_ln195_fu_1442_p2[3:2]}};

assign select_ln195_1_fu_1462_p3 = ((icmp_ln196_fu_1448_p2[0:0] == 1'b1) ? add_ln195_fu_1442_p2 : ap_sig_allocacmp_i8_1);

assign select_ln195_2_fu_1779_p3 = ((icmp_ln196_reg_2503[0:0] == 1'b1) ? p_mid1_reg_2530 : tmp_24_reg_2494);

assign select_ln195_3_fu_1510_p3 = ((icmp_ln196_fu_1448_p2[0:0] == 1'b1) ? sub_ln198_1_fu_1504_p2 : sub_ln198_fu_1421_p2);

assign select_ln195_cast_fu_1896_p1 = select_ln195_reg_2508;

assign select_ln195_fu_1454_p3 = ((icmp_ln196_fu_1448_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_j8_load);

assign sext_ln199_1_fu_1670_p1 = tmp_267_cast_fu_1610_p3;

assign sext_ln199_2_fu_1682_p1 = tmp_266_cast_fu_1594_p3;

assign sext_ln199_fu_1626_p1 = tmp_266_cast_fu_1594_p3;

assign sext_ln75_1_fu_2387_p1 = add_ln75_reg_3262;

assign sext_ln75_2_fu_2395_p1 = grp_fu_2464_p3;

assign sext_ln75_3_fu_2366_p1 = grp_fu_2430_p3;

assign sext_ln75_4_fu_2369_p1 = grp_fu_2421_p3;

assign sext_ln75_5_fu_2372_p1 = grp_fu_2455_p3;

assign sext_ln75_6_fu_2404_p1 = $signed(add_ln75_10_reg_3272);

assign sub_ln198_1_fu_1504_p2 = (tmp_27_fu_1484_p3 - zext_ln198_2_fu_1500_p1);

assign sub_ln198_fu_1421_p2 = (tmp_25_fu_1401_p3 - zext_ln198_1_fu_1417_p1);

assign tmp_24_fu_1391_p4 = {{ap_sig_allocacmp_i8_1[3:2]}};

assign tmp_25_fu_1401_p3 = {{tmp_24_fu_1391_p4}, {4'd0}};

assign tmp_265_cast_fu_1582_p1 = tmp_30_fu_1572_p4;

assign tmp_266_cast_fu_1594_p3 = {{1'd1}, {tmp_30_fu_1572_p4}};

assign tmp_267_cast_fu_1610_p3 = {{2'd2}, {tmp_30_fu_1572_p4}};

assign tmp_269_cast_fu_1638_p3 = {{1'd1}, {tmp_265_cast_fu_1582_p1}};

assign tmp_26_fu_1409_p3 = {{tmp_24_fu_1391_p4}, {2'd0}};

assign tmp_270_cast_fu_1654_p3 = {{3'd5}, {tmp_30_fu_1572_p4}};

assign tmp_273_cast_fu_1694_p3 = {{2'd2}, {tmp_265_cast_fu_1582_p1}};

assign tmp_274_cast_fu_1710_p3 = {{4'd9}, {tmp_30_fu_1572_p4}};

assign tmp_275_cast_fu_1726_p3 = {{4'd10}, {tmp_30_fu_1572_p4}};

assign tmp_276_cast_fu_1742_p3 = {{4'd11}, {tmp_30_fu_1572_p4}};

assign tmp_27_fu_1484_p3 = {{p_mid1_fu_1474_p4}, {4'd0}};

assign tmp_28_fu_1492_p3 = {{p_mid1_fu_1474_p4}, {2'd0}};

assign tmp_29_fu_1784_p3 = {{select_ln195_2_fu_1779_p3}, {6'd0}};

assign tmp_30_fu_1572_p4 = {{select_ln195_fu_1454_p3[5:2]}};

assign trunc_ln195_fu_1470_p1 = select_ln195_1_fu_1462_p3[1:0];

assign v124_1_address0 = zext_ln198_14_fu_1888_p1;

assign v124_1_address1 = zext_ln198_13_fu_1875_p1;

assign v124_1_address10 = zext_ln198_4_fu_1532_p1;

assign v124_1_address11 = zext_ln198_3_fu_1518_p1;

assign v124_1_address2 = zext_ln198_12_fu_1862_p1;

assign v124_1_address3 = zext_ln198_11_fu_1849_p1;

assign v124_1_address4 = zext_ln198_10_fu_1836_p1;

assign v124_1_address5 = zext_ln198_9_fu_1823_p1;

assign v124_1_address6 = zext_ln198_8_fu_1810_p1;

assign v124_1_address7 = zext_ln198_7_fu_1797_p1;

assign v124_1_address8 = zext_ln198_6_fu_1560_p1;

assign v124_1_address9 = zext_ln198_5_fu_1546_p1;

assign v124_2_address0 = zext_ln198_14_fu_1888_p1;

assign v124_2_address1 = zext_ln198_13_fu_1875_p1;

assign v124_2_address10 = zext_ln198_4_fu_1532_p1;

assign v124_2_address11 = zext_ln198_3_fu_1518_p1;

assign v124_2_address2 = zext_ln198_12_fu_1862_p1;

assign v124_2_address3 = zext_ln198_11_fu_1849_p1;

assign v124_2_address4 = zext_ln198_10_fu_1836_p1;

assign v124_2_address5 = zext_ln198_9_fu_1823_p1;

assign v124_2_address6 = zext_ln198_8_fu_1810_p1;

assign v124_2_address7 = zext_ln198_7_fu_1797_p1;

assign v124_2_address8 = zext_ln198_6_fu_1560_p1;

assign v124_2_address9 = zext_ln198_5_fu_1546_p1;

assign v124_3_address0 = zext_ln198_14_fu_1888_p1;

assign v124_3_address1 = zext_ln198_13_fu_1875_p1;

assign v124_3_address10 = zext_ln198_4_fu_1532_p1;

assign v124_3_address11 = zext_ln198_3_fu_1518_p1;

assign v124_3_address2 = zext_ln198_12_fu_1862_p1;

assign v124_3_address3 = zext_ln198_11_fu_1849_p1;

assign v124_3_address4 = zext_ln198_10_fu_1836_p1;

assign v124_3_address5 = zext_ln198_9_fu_1823_p1;

assign v124_3_address6 = zext_ln198_8_fu_1810_p1;

assign v124_3_address7 = zext_ln198_7_fu_1797_p1;

assign v124_3_address8 = zext_ln198_6_fu_1560_p1;

assign v124_3_address9 = zext_ln198_5_fu_1546_p1;

assign v124_address0 = zext_ln198_14_fu_1888_p1;

assign v124_address1 = zext_ln198_13_fu_1875_p1;

assign v124_address10 = zext_ln198_4_fu_1532_p1;

assign v124_address11 = zext_ln198_3_fu_1518_p1;

assign v124_address2 = zext_ln198_12_fu_1862_p1;

assign v124_address3 = zext_ln198_11_fu_1849_p1;

assign v124_address4 = zext_ln198_10_fu_1836_p1;

assign v124_address5 = zext_ln198_9_fu_1823_p1;

assign v124_address6 = zext_ln198_8_fu_1810_p1;

assign v124_address7 = zext_ln198_7_fu_1797_p1;

assign v124_address8 = zext_ln198_6_fu_1560_p1;

assign v124_address9 = zext_ln198_5_fu_1546_p1;

assign zext_ln198_10_fu_1836_p1 = add_ln195_5_fu_1831_p2;

assign zext_ln198_11_fu_1849_p1 = add_ln195_6_fu_1844_p2;

assign zext_ln198_12_fu_1862_p1 = add_ln195_7_fu_1857_p2;

assign zext_ln198_13_fu_1875_p1 = add_ln195_8_fu_1870_p2;

assign zext_ln198_14_fu_1888_p1 = add_ln195_9_fu_1883_p2;

assign zext_ln198_1_fu_1417_p1 = tmp_26_fu_1409_p3;

assign zext_ln198_2_fu_1500_p1 = tmp_28_fu_1492_p3;

assign zext_ln198_3_fu_1518_p1 = select_ln195_3_fu_1510_p3;

assign zext_ln198_4_fu_1532_p1 = or_ln195_fu_1526_p2;

assign zext_ln198_5_fu_1546_p1 = or_ln195_1_fu_1540_p2;

assign zext_ln198_6_fu_1560_p1 = or_ln195_2_fu_1554_p2;

assign zext_ln198_7_fu_1797_p1 = add_ln195_2_fu_1792_p2;

assign zext_ln198_8_fu_1810_p1 = add_ln195_3_fu_1805_p2;

assign zext_ln198_9_fu_1823_p1 = add_ln195_4_fu_1818_p2;

assign zext_ln198_fu_1586_p1 = tmp_30_fu_1572_p4;

assign zext_ln199_10_fu_1750_p1 = tmp_276_cast_fu_1742_p3;

assign zext_ln199_1_fu_1618_p1 = $unsigned(tmp_267_cast_fu_1610_p3);

assign zext_ln199_2_fu_1630_p1 = $unsigned(sext_ln199_fu_1626_p1);

assign zext_ln199_3_fu_1646_p1 = tmp_269_cast_fu_1638_p3;

assign zext_ln199_4_fu_1662_p1 = tmp_270_cast_fu_1654_p3;

assign zext_ln199_5_fu_1674_p1 = $unsigned(sext_ln199_1_fu_1670_p1);

assign zext_ln199_6_fu_1686_p1 = $unsigned(sext_ln199_2_fu_1682_p1);

assign zext_ln199_7_fu_1702_p1 = tmp_273_cast_fu_1694_p3;

assign zext_ln199_8_fu_1718_p1 = tmp_274_cast_fu_1710_p3;

assign zext_ln199_9_fu_1734_p1 = tmp_275_cast_fu_1726_p3;

assign zext_ln199_fu_1602_p1 = $unsigned(tmp_266_cast_fu_1594_p3);

always @ (posedge ap_clk) begin
    select_ln195_3_reg_2535[1:0] <= 2'b00;
end

endmodule //Bert_layer_Self_attention_Pipeline_l_gemm_i8_l_j8
