// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Bert_layer_Pipeline_l_j25 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v352_0_address0,
        v352_0_ce0,
        v352_0_we0,
        v352_0_d0,
        v338_address0,
        v338_ce0,
        v338_q0,
        v365_address0,
        v365_ce0,
        v365_q0,
        v365_1_address0,
        v365_1_ce0,
        v365_1_q0,
        v365_2_address0,
        v365_2_ce0,
        v365_2_q0,
        v365_3_address0,
        v365_3_ce0,
        v365_3_q0,
        v365_4_address0,
        v365_4_ce0,
        v365_4_q0,
        v365_5_address0,
        v365_5_ce0,
        v365_5_q0,
        v365_6_address0,
        v365_6_ce0,
        v365_6_q0,
        v365_7_address0,
        v365_7_ce0,
        v365_7_q0,
        v365_8_address0,
        v365_8_ce0,
        v365_8_q0,
        v365_9_address0,
        v365_9_ce0,
        v365_9_q0,
        v365_10_address0,
        v365_10_ce0,
        v365_10_q0,
        v365_11_address0,
        v365_11_ce0,
        v365_11_q0,
        i27,
        v314,
        v319,
        v339_address0,
        v339_ce0,
        v339_q0,
        v352_1_address0,
        v352_1_ce0,
        v352_1_we0,
        v352_1_d0,
        v352_2_address0,
        v352_2_ce0,
        v352_2_we0,
        v352_2_d0,
        v352_3_address0,
        v352_3_ce0,
        v352_3_we0,
        v352_3_d0,
        v352_4_address0,
        v352_4_ce0,
        v352_4_we0,
        v352_4_d0,
        v352_5_address0,
        v352_5_ce0,
        v352_5_we0,
        v352_5_d0,
        v352_6_address0,
        v352_6_ce0,
        v352_6_we0,
        v352_6_d0,
        v352_7_address0,
        v352_7_ce0,
        v352_7_we0,
        v352_7_d0,
        v352_8_address0,
        v352_8_ce0,
        v352_8_we0,
        v352_8_d0,
        v352_9_address0,
        v352_9_ce0,
        v352_9_we0,
        v352_9_d0,
        v352_10_address0,
        v352_10_ce0,
        v352_10_we0,
        v352_10_d0,
        v352_11_address0,
        v352_11_ce0,
        v352_11_we0,
        v352_11_d0,
        grp_fu_4370_p_din0,
        grp_fu_4370_p_din1,
        grp_fu_4370_p_opcode,
        grp_fu_4370_p_dout0,
        grp_fu_4370_p_ce,
        grp_fu_4382_p_din0,
        grp_fu_4382_p_din1,
        grp_fu_4382_p_opcode,
        grp_fu_4382_p_dout0,
        grp_fu_4382_p_ce,
        grp_fu_4359_p_din0,
        grp_fu_4359_p_din1,
        grp_fu_4359_p_dout0,
        grp_fu_4359_p_ce,
        grp_fu_4374_p_din0,
        grp_fu_4374_p_din1,
        grp_fu_4374_p_dout0,
        grp_fu_4374_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] v352_0_address0;
output   v352_0_ce0;
output   v352_0_we0;
output  [31:0] v352_0_d0;
output  [9:0] v338_address0;
output   v338_ce0;
input  [31:0] v338_q0;
output  [9:0] v365_address0;
output   v365_ce0;
input  [31:0] v365_q0;
output  [9:0] v365_1_address0;
output   v365_1_ce0;
input  [31:0] v365_1_q0;
output  [9:0] v365_2_address0;
output   v365_2_ce0;
input  [31:0] v365_2_q0;
output  [9:0] v365_3_address0;
output   v365_3_ce0;
input  [31:0] v365_3_q0;
output  [9:0] v365_4_address0;
output   v365_4_ce0;
input  [31:0] v365_4_q0;
output  [9:0] v365_5_address0;
output   v365_5_ce0;
input  [31:0] v365_5_q0;
output  [9:0] v365_6_address0;
output   v365_6_ce0;
input  [31:0] v365_6_q0;
output  [9:0] v365_7_address0;
output   v365_7_ce0;
input  [31:0] v365_7_q0;
output  [9:0] v365_8_address0;
output   v365_8_ce0;
input  [31:0] v365_8_q0;
output  [9:0] v365_9_address0;
output   v365_9_ce0;
input  [31:0] v365_9_q0;
output  [9:0] v365_10_address0;
output   v365_10_ce0;
input  [31:0] v365_10_q0;
output  [9:0] v365_11_address0;
output   v365_11_ce0;
input  [31:0] v365_11_q0;
input  [3:0] i27;
input  [31:0] v314;
input  [31:0] v319;
output  [9:0] v339_address0;
output   v339_ce0;
input  [31:0] v339_q0;
output  [9:0] v352_1_address0;
output   v352_1_ce0;
output   v352_1_we0;
output  [31:0] v352_1_d0;
output  [9:0] v352_2_address0;
output   v352_2_ce0;
output   v352_2_we0;
output  [31:0] v352_2_d0;
output  [9:0] v352_3_address0;
output   v352_3_ce0;
output   v352_3_we0;
output  [31:0] v352_3_d0;
output  [9:0] v352_4_address0;
output   v352_4_ce0;
output   v352_4_we0;
output  [31:0] v352_4_d0;
output  [9:0] v352_5_address0;
output   v352_5_ce0;
output   v352_5_we0;
output  [31:0] v352_5_d0;
output  [9:0] v352_6_address0;
output   v352_6_ce0;
output   v352_6_we0;
output  [31:0] v352_6_d0;
output  [9:0] v352_7_address0;
output   v352_7_ce0;
output   v352_7_we0;
output  [31:0] v352_7_d0;
output  [9:0] v352_8_address0;
output   v352_8_ce0;
output   v352_8_we0;
output  [31:0] v352_8_d0;
output  [9:0] v352_9_address0;
output   v352_9_ce0;
output   v352_9_we0;
output  [31:0] v352_9_d0;
output  [9:0] v352_10_address0;
output   v352_10_ce0;
output   v352_10_we0;
output  [31:0] v352_10_d0;
output  [9:0] v352_11_address0;
output   v352_11_ce0;
output   v352_11_we0;
output  [31:0] v352_11_d0;
output  [31:0] grp_fu_4370_p_din0;
output  [31:0] grp_fu_4370_p_din1;
output  [0:0] grp_fu_4370_p_opcode;
input  [31:0] grp_fu_4370_p_dout0;
output   grp_fu_4370_p_ce;
output  [31:0] grp_fu_4382_p_din0;
output  [31:0] grp_fu_4382_p_din1;
output  [1:0] grp_fu_4382_p_opcode;
input  [31:0] grp_fu_4382_p_dout0;
output   grp_fu_4382_p_ce;
output  [31:0] grp_fu_4359_p_din0;
output  [31:0] grp_fu_4359_p_din1;
input  [31:0] grp_fu_4359_p_dout0;
output   grp_fu_4359_p_ce;
output  [31:0] grp_fu_4374_p_din0;
output  [31:0] grp_fu_4374_p_din1;
input  [31:0] grp_fu_4374_p_dout0;
output   grp_fu_4374_p_ce;

reg ap_idle;
reg v352_0_ce0;
reg v352_0_we0;
reg v338_ce0;
reg v365_ce0;
reg v365_1_ce0;
reg v365_2_ce0;
reg v365_3_ce0;
reg v365_4_ce0;
reg v365_5_ce0;
reg v365_6_ce0;
reg v365_7_ce0;
reg v365_8_ce0;
reg v365_9_ce0;
reg v365_10_ce0;
reg v365_11_ce0;
reg v339_ce0;
reg v352_1_ce0;
reg v352_1_we0;
reg v352_2_ce0;
reg v352_2_we0;
reg v352_3_ce0;
reg v352_3_we0;
reg v352_4_ce0;
reg v352_4_we0;
reg v352_5_ce0;
reg v352_5_we0;
reg v352_6_ce0;
reg v352_6_we0;
reg v352_7_ce0;
reg v352_7_we0;
reg v352_8_ce0;
reg v352_8_we0;
reg v352_9_ce0;
reg v352_9_we0;
reg v352_10_ce0;
reg v352_10_we0;
reg v352_11_ce0;
reg v352_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln615_fu_500_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] i27_read_reg_591;
wire   [63:0] zext_ln615_fu_512_p1;
reg   [63:0] zext_ln615_reg_600;
reg   [63:0] zext_ln615_reg_600_pp0_iter1_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter2_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter3_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter4_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter5_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter6_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter7_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter8_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter9_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter10_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter11_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter12_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter13_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter14_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter15_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter16_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter17_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter18_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter19_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter20_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter21_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter22_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter23_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter24_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter25_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter26_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter27_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter28_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter29_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter30_reg;
reg   [63:0] zext_ln615_reg_600_pp0_iter31_reg;
wire   [31:0] v313_fu_533_p14;
reg   [31:0] v313_reg_678;
reg   [31:0] v338_load_reg_688;
reg   [31:0] v315_reg_693;
wire   [31:0] v312_fu_562_p1;
reg   [31:0] v316_reg_703;
reg   [31:0] v320_reg_713;
reg   [31:0] v339_load_reg_718;
wire   [31:0] v321_fu_566_p1;
wire   [31:0] bitcast_ln628_fu_570_p1;
reg   [31:0] bitcast_ln628_reg_728;
wire    ap_block_pp0_stage0;
reg   [9:0] j25_fu_116;
wire   [9:0] add_ln615_fu_506_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_j25_1;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_124_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_124_32_1_1_U1073(
    .din0(v365_q0),
    .din1(v365_1_q0),
    .din2(v365_2_q0),
    .din3(v365_3_q0),
    .din4(v365_4_q0),
    .din5(v365_5_q0),
    .din6(v365_6_q0),
    .din7(v365_7_q0),
    .din8(v365_8_q0),
    .din9(v365_9_q0),
    .din10(v365_10_q0),
    .din11(v365_11_q0),
    .din12(i27),
    .dout(v313_fu_533_p14)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter31_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln615_fu_500_p2 == 1'd0))) begin
            j25_fu_116 <= add_ln615_fu_506_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j25_fu_116 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln628_reg_728 <= bitcast_ln628_fu_570_p1;
        v315_reg_693 <= grp_fu_4370_p_dout0;
        v316_reg_703 <= grp_fu_4359_p_dout0;
        v320_reg_713 <= grp_fu_4374_p_dout0;
        v338_load_reg_688 <= v338_q0;
        v339_load_reg_718 <= v339_q0;
        zext_ln615_reg_600_pp0_iter10_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter9_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter11_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter10_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter12_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter11_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter13_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter12_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter14_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter13_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter15_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter14_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter16_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter15_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter17_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter16_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter18_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter17_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter19_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter18_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter20_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter19_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter21_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter20_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter22_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter21_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter23_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter22_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter24_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter23_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter25_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter24_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter26_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter25_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter27_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter26_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter28_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter27_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter29_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter28_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter2_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter1_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter30_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter29_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter31_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter30_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter3_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter2_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter4_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter3_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter5_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter4_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter6_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter5_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter7_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter6_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter8_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter7_reg[9 : 0];
        zext_ln615_reg_600_pp0_iter9_reg[9 : 0] <= zext_ln615_reg_600_pp0_iter8_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        v313_reg_678 <= v313_fu_533_p14;
        zext_ln615_reg_600_pp0_iter1_reg[9 : 0] <= zext_ln615_reg_600[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln615_fu_500_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln615_reg_600[9 : 0] <= zext_ln615_fu_512_p1[9 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln615_fu_500_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter31_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j25_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_j25_1 = j25_fu_116;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v338_ce0 = 1'b1;
    end else begin
        v338_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v339_ce0 = 1'b1;
    end else begin
        v339_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_0_ce0 = 1'b1;
    end else begin
        v352_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_0_we0 = 1'b1;
    end else begin
        v352_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_10_ce0 = 1'b1;
    end else begin
        v352_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_10_we0 = 1'b1;
    end else begin
        v352_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_11_ce0 = 1'b1;
    end else begin
        v352_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1) & ((i27_read_reg_591 == 4'd11) | ((i27_read_reg_591 == 4'd12) | ((i27_read_reg_591 == 4'd13) | ((i27_read_reg_591 == 4'd14) | (i27_read_reg_591 == 4'd15))))))) begin
        v352_11_we0 = 1'b1;
    end else begin
        v352_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_1_ce0 = 1'b1;
    end else begin
        v352_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_1_we0 = 1'b1;
    end else begin
        v352_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_2_ce0 = 1'b1;
    end else begin
        v352_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_2_we0 = 1'b1;
    end else begin
        v352_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_3_ce0 = 1'b1;
    end else begin
        v352_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_3_we0 = 1'b1;
    end else begin
        v352_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_4_ce0 = 1'b1;
    end else begin
        v352_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_4_we0 = 1'b1;
    end else begin
        v352_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_5_ce0 = 1'b1;
    end else begin
        v352_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_5_we0 = 1'b1;
    end else begin
        v352_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_6_ce0 = 1'b1;
    end else begin
        v352_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_6_we0 = 1'b1;
    end else begin
        v352_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_7_ce0 = 1'b1;
    end else begin
        v352_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_7_we0 = 1'b1;
    end else begin
        v352_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_8_ce0 = 1'b1;
    end else begin
        v352_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_8_we0 = 1'b1;
    end else begin
        v352_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_9_ce0 = 1'b1;
    end else begin
        v352_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i27_read_reg_591 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v352_9_we0 = 1'b1;
    end else begin
        v352_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_10_ce0 = 1'b1;
    end else begin
        v365_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_11_ce0 = 1'b1;
    end else begin
        v365_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_1_ce0 = 1'b1;
    end else begin
        v365_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_2_ce0 = 1'b1;
    end else begin
        v365_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_3_ce0 = 1'b1;
    end else begin
        v365_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_4_ce0 = 1'b1;
    end else begin
        v365_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_5_ce0 = 1'b1;
    end else begin
        v365_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_6_ce0 = 1'b1;
    end else begin
        v365_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_7_ce0 = 1'b1;
    end else begin
        v365_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_8_ce0 = 1'b1;
    end else begin
        v365_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_9_ce0 = 1'b1;
    end else begin
        v365_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v365_ce0 = 1'b1;
    end else begin
        v365_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln615_fu_506_p2 = (ap_sig_allocacmp_j25_1 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln628_fu_570_p1 = grp_fu_4382_p_dout0;

assign grp_fu_4359_p_ce = 1'b1;

assign grp_fu_4359_p_din0 = v312_fu_562_p1;

assign grp_fu_4359_p_din1 = v315_reg_693;

assign grp_fu_4370_p_ce = 1'b1;

assign grp_fu_4370_p_din0 = v313_reg_678;

assign grp_fu_4370_p_din1 = v314;

assign grp_fu_4370_p_opcode = 2'd1;

assign grp_fu_4374_p_ce = 1'b1;

assign grp_fu_4374_p_din0 = v316_reg_703;

assign grp_fu_4374_p_din1 = v319;

assign grp_fu_4382_p_ce = 1'b1;

assign grp_fu_4382_p_din0 = v320_reg_713;

assign grp_fu_4382_p_din1 = v321_fu_566_p1;

assign grp_fu_4382_p_opcode = 2'd0;

assign i27_read_reg_591 = i27;

assign icmp_ln615_fu_500_p2 = ((ap_sig_allocacmp_j25_1 == 10'd768) ? 1'b1 : 1'b0);

assign v312_fu_562_p1 = v338_load_reg_688;

assign v321_fu_566_p1 = v339_load_reg_718;

assign v338_address0 = zext_ln615_reg_600_pp0_iter4_reg;

assign v339_address0 = zext_ln615_reg_600_pp0_iter24_reg;

assign v352_0_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_0_d0 = bitcast_ln628_reg_728;

assign v352_10_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_10_d0 = bitcast_ln628_reg_728;

assign v352_11_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_11_d0 = bitcast_ln628_reg_728;

assign v352_1_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_1_d0 = bitcast_ln628_reg_728;

assign v352_2_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_2_d0 = bitcast_ln628_reg_728;

assign v352_3_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_3_d0 = bitcast_ln628_reg_728;

assign v352_4_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_4_d0 = bitcast_ln628_reg_728;

assign v352_5_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_5_d0 = bitcast_ln628_reg_728;

assign v352_6_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_6_d0 = bitcast_ln628_reg_728;

assign v352_7_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_7_d0 = bitcast_ln628_reg_728;

assign v352_8_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_8_d0 = bitcast_ln628_reg_728;

assign v352_9_address0 = zext_ln615_reg_600_pp0_iter31_reg;

assign v352_9_d0 = bitcast_ln628_reg_728;

assign v365_10_address0 = zext_ln615_fu_512_p1;

assign v365_11_address0 = zext_ln615_fu_512_p1;

assign v365_1_address0 = zext_ln615_fu_512_p1;

assign v365_2_address0 = zext_ln615_fu_512_p1;

assign v365_3_address0 = zext_ln615_fu_512_p1;

assign v365_4_address0 = zext_ln615_fu_512_p1;

assign v365_5_address0 = zext_ln615_fu_512_p1;

assign v365_6_address0 = zext_ln615_fu_512_p1;

assign v365_7_address0 = zext_ln615_fu_512_p1;

assign v365_8_address0 = zext_ln615_fu_512_p1;

assign v365_9_address0 = zext_ln615_fu_512_p1;

assign v365_address0 = zext_ln615_fu_512_p1;

assign zext_ln615_fu_512_p1 = ap_sig_allocacmp_j25_1;

always @ (posedge ap_clk) begin
    zext_ln615_reg_600[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter1_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter2_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter3_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter4_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter5_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter7_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter8_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln615_reg_600_pp0_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Bert_layer_Pipeline_l_j25
