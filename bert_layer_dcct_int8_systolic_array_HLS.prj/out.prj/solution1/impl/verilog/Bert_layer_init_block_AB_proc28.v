// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_init_block_AB_proc28 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        A_0_address0,
        A_0_ce0,
        A_0_q0,
        ii,
        block_A_loader_01_din,
        block_A_loader_01_num_data_valid,
        block_A_loader_01_fifo_cap,
        block_A_loader_01_full_n,
        block_A_loader_01_write,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        block_A_loader_12_din,
        block_A_loader_12_num_data_valid,
        block_A_loader_12_fifo_cap,
        block_A_loader_12_full_n,
        block_A_loader_12_write,
        A_2_address0,
        A_2_ce0,
        A_2_q0,
        block_A_loader_23_din,
        block_A_loader_23_num_data_valid,
        block_A_loader_23_fifo_cap,
        block_A_loader_23_full_n,
        block_A_loader_23_write,
        A_3_address0,
        A_3_ce0,
        A_3_q0,
        block_A_loader_34_din,
        block_A_loader_34_num_data_valid,
        block_A_loader_34_fifo_cap,
        block_A_loader_34_full_n,
        block_A_loader_34_write,
        B_0_address0,
        B_0_ce0,
        B_0_q0,
        jj,
        block_B_loader_05_din,
        block_B_loader_05_num_data_valid,
        block_B_loader_05_fifo_cap,
        block_B_loader_05_full_n,
        block_B_loader_05_write,
        B_1_address0,
        B_1_ce0,
        B_1_q0,
        block_B_loader_16_din,
        block_B_loader_16_num_data_valid,
        block_B_loader_16_fifo_cap,
        block_B_loader_16_full_n,
        block_B_loader_16_write,
        B_2_address0,
        B_2_ce0,
        B_2_q0,
        block_B_loader_27_din,
        block_B_loader_27_num_data_valid,
        block_B_loader_27_fifo_cap,
        block_B_loader_27_full_n,
        block_B_loader_27_write,
        B_3_address0,
        B_3_ce0,
        B_3_q0,
        block_B_loader_38_din,
        block_B_loader_38_num_data_valid,
        block_B_loader_38_fifo_cap,
        block_B_loader_38_full_n,
        block_B_loader_38_write,
        ii_c_din,
        ii_c_num_data_valid,
        ii_c_fifo_cap,
        ii_c_full_n,
        ii_c_write,
        ii_c1_din,
        ii_c1_num_data_valid,
        ii_c1_fifo_cap,
        ii_c1_full_n,
        ii_c1_write,
        ii_c2_din,
        ii_c2_num_data_valid,
        ii_c2_fifo_cap,
        ii_c2_full_n,
        ii_c2_write,
        ii_c3_din,
        ii_c3_num_data_valid,
        ii_c3_fifo_cap,
        ii_c3_full_n,
        ii_c3_write,
        jj_c_din,
        jj_c_num_data_valid,
        jj_c_fifo_cap,
        jj_c_full_n,
        jj_c_write,
        jj_c4_din,
        jj_c4_num_data_valid,
        jj_c4_fifo_cap,
        jj_c4_full_n,
        jj_c4_write,
        jj_c5_din,
        jj_c5_num_data_valid,
        jj_c5_fifo_cap,
        jj_c5_full_n,
        jj_c5_write,
        jj_c6_din,
        jj_c6_num_data_valid,
        jj_c6_fifo_cap,
        jj_c6_full_n,
        jj_c6_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [5:0] A_0_address0;
output   A_0_ce0;
input  [7:0] A_0_q0;
input  [1:0] ii;
output  [7:0] block_A_loader_01_din;
input  [1:0] block_A_loader_01_num_data_valid;
input  [1:0] block_A_loader_01_fifo_cap;
input   block_A_loader_01_full_n;
output   block_A_loader_01_write;
output  [5:0] A_1_address0;
output   A_1_ce0;
input  [7:0] A_1_q0;
output  [7:0] block_A_loader_12_din;
input  [1:0] block_A_loader_12_num_data_valid;
input  [1:0] block_A_loader_12_fifo_cap;
input   block_A_loader_12_full_n;
output   block_A_loader_12_write;
output  [5:0] A_2_address0;
output   A_2_ce0;
input  [7:0] A_2_q0;
output  [7:0] block_A_loader_23_din;
input  [1:0] block_A_loader_23_num_data_valid;
input  [1:0] block_A_loader_23_fifo_cap;
input   block_A_loader_23_full_n;
output   block_A_loader_23_write;
output  [5:0] A_3_address0;
output   A_3_ce0;
input  [7:0] A_3_q0;
output  [7:0] block_A_loader_34_din;
input  [1:0] block_A_loader_34_num_data_valid;
input  [1:0] block_A_loader_34_fifo_cap;
input   block_A_loader_34_full_n;
output   block_A_loader_34_write;
output  [7:0] B_0_address0;
output   B_0_ce0;
input  [7:0] B_0_q0;
input  [3:0] jj;
output  [7:0] block_B_loader_05_din;
input  [1:0] block_B_loader_05_num_data_valid;
input  [1:0] block_B_loader_05_fifo_cap;
input   block_B_loader_05_full_n;
output   block_B_loader_05_write;
output  [7:0] B_1_address0;
output   B_1_ce0;
input  [7:0] B_1_q0;
output  [7:0] block_B_loader_16_din;
input  [1:0] block_B_loader_16_num_data_valid;
input  [1:0] block_B_loader_16_fifo_cap;
input   block_B_loader_16_full_n;
output   block_B_loader_16_write;
output  [7:0] B_2_address0;
output   B_2_ce0;
input  [7:0] B_2_q0;
output  [7:0] block_B_loader_27_din;
input  [1:0] block_B_loader_27_num_data_valid;
input  [1:0] block_B_loader_27_fifo_cap;
input   block_B_loader_27_full_n;
output   block_B_loader_27_write;
output  [7:0] B_3_address0;
output   B_3_ce0;
input  [7:0] B_3_q0;
output  [7:0] block_B_loader_38_din;
input  [1:0] block_B_loader_38_num_data_valid;
input  [1:0] block_B_loader_38_fifo_cap;
input   block_B_loader_38_full_n;
output   block_B_loader_38_write;
output  [1:0] ii_c_din;
input  [2:0] ii_c_num_data_valid;
input  [2:0] ii_c_fifo_cap;
input   ii_c_full_n;
output   ii_c_write;
output  [1:0] ii_c1_din;
input  [2:0] ii_c1_num_data_valid;
input  [2:0] ii_c1_fifo_cap;
input   ii_c1_full_n;
output   ii_c1_write;
output  [1:0] ii_c2_din;
input  [2:0] ii_c2_num_data_valid;
input  [2:0] ii_c2_fifo_cap;
input   ii_c2_full_n;
output   ii_c2_write;
output  [1:0] ii_c3_din;
input  [2:0] ii_c3_num_data_valid;
input  [2:0] ii_c3_fifo_cap;
input   ii_c3_full_n;
output   ii_c3_write;
output  [3:0] jj_c_din;
input  [2:0] jj_c_num_data_valid;
input  [2:0] jj_c_fifo_cap;
input   jj_c_full_n;
output   jj_c_write;
output  [3:0] jj_c4_din;
input  [2:0] jj_c4_num_data_valid;
input  [2:0] jj_c4_fifo_cap;
input   jj_c4_full_n;
output   jj_c4_write;
output  [3:0] jj_c5_din;
input  [2:0] jj_c5_num_data_valid;
input  [2:0] jj_c5_fifo_cap;
input   jj_c5_full_n;
output   jj_c5_write;
output  [3:0] jj_c6_din;
input  [2:0] jj_c6_num_data_valid;
input  [2:0] jj_c6_fifo_cap;
input   jj_c6_full_n;
output   jj_c6_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg block_A_loader_01_write;
reg block_A_loader_12_write;
reg block_A_loader_23_write;
reg block_A_loader_34_write;
reg block_B_loader_05_write;
reg block_B_loader_16_write;
reg block_B_loader_27_write;
reg block_B_loader_38_write;
reg ii_c_write;
reg ii_c1_write;
reg ii_c2_write;
reg ii_c3_write;
reg jj_c_write;
reg jj_c4_write;
reg jj_c5_write;
reg jj_c6_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    ii_c_blk_n;
reg    ii_c1_blk_n;
reg    ii_c2_blk_n;
reg    ii_c3_blk_n;
reg    jj_c_blk_n;
reg    jj_c4_blk_n;
reg    jj_c5_blk_n;
reg    jj_c6_blk_n;
wire   [5:0] sub_ln120_fu_224_p2;
reg   [5:0] sub_ln120_reg_242;
wire    ap_CS_fsm_state2;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_idle;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_ready;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_01_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_01_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_12_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_12_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_23_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_23_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_34_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_34_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_05_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_05_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_16_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_16_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_27_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_27_write;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_38_din;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_38_write;
wire   [5:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_0_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_0_ce0;
wire   [5:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_1_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_1_ce0;
wire   [5:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_2_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_2_ce0;
wire   [5:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_3_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_3_ce0;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_0_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_0_ce0;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_1_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_1_ce0;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_2_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_2_ce0;
wire   [7:0] grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_3_address0;
wire    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_3_ce0;
reg    grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    ap_block_state1;
wire   [3:0] tmp_88_i_fu_213_p3;
wire   [5:0] tmp_i_fu_206_p3;
wire   [5:0] zext_ln120_fu_220_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start_reg = 1'b0;
end

Bert_layer_init_block_AB_proc28_Pipeline_init_block_AB grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start),
    .ap_done(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done),
    .ap_idle(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_idle),
    .ap_ready(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_ready),
    .block_A_loader_01_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_01_din),
    .block_A_loader_01_num_data_valid(2'd0),
    .block_A_loader_01_fifo_cap(2'd0),
    .block_A_loader_01_full_n(block_A_loader_01_full_n),
    .block_A_loader_01_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_01_write),
    .block_A_loader_12_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_12_din),
    .block_A_loader_12_num_data_valid(2'd0),
    .block_A_loader_12_fifo_cap(2'd0),
    .block_A_loader_12_full_n(block_A_loader_12_full_n),
    .block_A_loader_12_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_12_write),
    .block_A_loader_23_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_23_din),
    .block_A_loader_23_num_data_valid(2'd0),
    .block_A_loader_23_fifo_cap(2'd0),
    .block_A_loader_23_full_n(block_A_loader_23_full_n),
    .block_A_loader_23_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_23_write),
    .block_A_loader_34_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_34_din),
    .block_A_loader_34_num_data_valid(2'd0),
    .block_A_loader_34_fifo_cap(2'd0),
    .block_A_loader_34_full_n(block_A_loader_34_full_n),
    .block_A_loader_34_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_34_write),
    .block_B_loader_05_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_05_din),
    .block_B_loader_05_num_data_valid(2'd0),
    .block_B_loader_05_fifo_cap(2'd0),
    .block_B_loader_05_full_n(block_B_loader_05_full_n),
    .block_B_loader_05_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_05_write),
    .block_B_loader_16_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_16_din),
    .block_B_loader_16_num_data_valid(2'd0),
    .block_B_loader_16_fifo_cap(2'd0),
    .block_B_loader_16_full_n(block_B_loader_16_full_n),
    .block_B_loader_16_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_16_write),
    .block_B_loader_27_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_27_din),
    .block_B_loader_27_num_data_valid(2'd0),
    .block_B_loader_27_fifo_cap(2'd0),
    .block_B_loader_27_full_n(block_B_loader_27_full_n),
    .block_B_loader_27_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_27_write),
    .block_B_loader_38_din(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_38_din),
    .block_B_loader_38_num_data_valid(2'd0),
    .block_B_loader_38_fifo_cap(2'd0),
    .block_B_loader_38_full_n(block_B_loader_38_full_n),
    .block_B_loader_38_write(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_38_write),
    .sub_ln120_i(sub_ln120_reg_242),
    .A_0_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_0_address0),
    .A_0_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_0_ce0),
    .A_0_q0(A_0_q0),
    .A_1_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_1_address0),
    .A_1_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_1_ce0),
    .A_1_q0(A_1_q0),
    .A_2_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_2_address0),
    .A_2_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_2_ce0),
    .A_2_q0(A_2_q0),
    .A_3_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_3_address0),
    .A_3_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_3_ce0),
    .A_3_q0(A_3_q0),
    .jj_cast(jj),
    .B_0_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_0_address0),
    .B_0_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_0_ce0),
    .B_0_q0(B_0_q0),
    .B_1_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_1_address0),
    .B_1_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_1_ce0),
    .B_1_q0(B_1_q0),
    .B_2_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_2_address0),
    .B_2_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_2_ce0),
    .B_2_q0(B_2_q0),
    .B_3_address0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_3_address0),
    .B_3_ce0(grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_3_ce0),
    .B_3_q0(B_3_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start_reg <= 1'b1;
        end else if ((grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_ready == 1'b1)) begin
            grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sub_ln120_reg_242[5 : 2] <= sub_ln120_fu_224_p2[5 : 2];
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_A_loader_01_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_01_write;
    end else begin
        block_A_loader_01_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_A_loader_12_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_12_write;
    end else begin
        block_A_loader_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_A_loader_23_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_23_write;
    end else begin
        block_A_loader_23_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_A_loader_34_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_34_write;
    end else begin
        block_A_loader_34_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_B_loader_05_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_05_write;
    end else begin
        block_B_loader_05_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_B_loader_16_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_16_write;
    end else begin
        block_B_loader_16_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_B_loader_27_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_27_write;
    end else begin
        block_B_loader_27_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        block_B_loader_38_write = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_38_write;
    end else begin
        block_B_loader_38_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c1_blk_n = ii_c1_full_n;
    end else begin
        ii_c1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c1_write = 1'b1;
    end else begin
        ii_c1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c2_blk_n = ii_c2_full_n;
    end else begin
        ii_c2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c2_write = 1'b1;
    end else begin
        ii_c2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c3_blk_n = ii_c3_full_n;
    end else begin
        ii_c3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c3_write = 1'b1;
    end else begin
        ii_c3_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c_blk_n = ii_c_full_n;
    end else begin
        ii_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_c_write = 1'b1;
    end else begin
        ii_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c4_blk_n = jj_c4_full_n;
    end else begin
        jj_c4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c4_write = 1'b1;
    end else begin
        jj_c4_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c5_blk_n = jj_c5_full_n;
    end else begin
        jj_c5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c5_write = 1'b1;
    end else begin
        jj_c5_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c6_blk_n = jj_c6_full_n;
    end else begin
        jj_c6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c6_write = 1'b1;
    end else begin
        jj_c6_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c_blk_n = jj_c_full_n;
    end else begin
        jj_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        jj_c_write = 1'b1;
    end else begin
        jj_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_0_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_0_address0;

assign A_0_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_0_ce0;

assign A_1_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_1_address0;

assign A_1_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_1_ce0;

assign A_2_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_2_address0;

assign A_2_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_2_ce0;

assign A_3_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_3_address0;

assign A_3_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_A_3_ce0;

assign B_0_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_0_address0;

assign B_0_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_0_ce0;

assign B_1_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_1_address0;

assign B_1_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_1_ce0;

assign B_2_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_2_address0;

assign B_2_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_2_ce0;

assign B_3_address0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_3_address0;

assign B_3_ce0 = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_B_3_ce0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1) | (jj_c6_full_n == 1'b0) | (jj_c5_full_n == 1'b0) | (jj_c4_full_n == 1'b0) | (jj_c_full_n == 1'b0) | (ii_c3_full_n == 1'b0) | (ii_c2_full_n == 1'b0) | (ii_c1_full_n == 1'b0) | (ii_c_full_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign block_A_loader_01_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_01_din;

assign block_A_loader_12_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_12_din;

assign block_A_loader_23_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_23_din;

assign block_A_loader_34_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_A_loader_34_din;

assign block_B_loader_05_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_05_din;

assign block_B_loader_16_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_16_din;

assign block_B_loader_27_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_27_din;

assign block_B_loader_38_din = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_block_B_loader_38_din;

assign grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start = grp_init_block_AB_proc28_Pipeline_init_block_AB_fu_168_ap_start_reg;

assign ii_c1_din = ii;

assign ii_c2_din = ii;

assign ii_c3_din = ii;

assign ii_c_din = ii;

assign jj_c4_din = jj;

assign jj_c5_din = jj;

assign jj_c6_din = jj;

assign jj_c_din = jj;

assign start_out = real_start;

assign sub_ln120_fu_224_p2 = (tmp_i_fu_206_p3 - zext_ln120_fu_220_p1);

assign tmp_88_i_fu_213_p3 = {{ii}, {2'd0}};

assign tmp_i_fu_206_p3 = {{ii}, {4'd0}};

assign zext_ln120_fu_220_p1 = tmp_88_i_fu_213_p3;

always @ (posedge ap_clk) begin
    sub_ln120_reg_242[1:0] <= 2'b00;
end

endmodule //Bert_layer_init_block_AB_proc28
