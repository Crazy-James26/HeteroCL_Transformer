-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_dataflow_in_loop_VITIS_LOOP_112_1 is
port (
    A_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_0_ce0 : OUT STD_LOGIC;
    A_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_0_we0 : OUT STD_LOGIC;
    A_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_0_ce1 : OUT STD_LOGIC;
    A_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_0_we1 : OUT STD_LOGIC;
    ii : IN STD_LOGIC_VECTOR (1 downto 0);
    A_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_1_we0 : OUT STD_LOGIC;
    A_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_1_ce1 : OUT STD_LOGIC;
    A_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_1_we1 : OUT STD_LOGIC;
    A_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_2_ce0 : OUT STD_LOGIC;
    A_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_2_we0 : OUT STD_LOGIC;
    A_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_2_ce1 : OUT STD_LOGIC;
    A_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_2_we1 : OUT STD_LOGIC;
    A_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_3_ce0 : OUT STD_LOGIC;
    A_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_3_we0 : OUT STD_LOGIC;
    A_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_3_ce1 : OUT STD_LOGIC;
    A_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    A_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    A_3_we1 : OUT STD_LOGIC;
    B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_ce0 : OUT STD_LOGIC;
    B_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_0_we0 : OUT STD_LOGIC;
    B_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_ce1 : OUT STD_LOGIC;
    B_0_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_0_we1 : OUT STD_LOGIC;
    jj : IN STD_LOGIC_VECTOR (4 downto 0);
    B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_ce0 : OUT STD_LOGIC;
    B_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_1_we0 : OUT STD_LOGIC;
    B_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_ce1 : OUT STD_LOGIC;
    B_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_1_we1 : OUT STD_LOGIC;
    B_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_ce0 : OUT STD_LOGIC;
    B_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_2_we0 : OUT STD_LOGIC;
    B_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_ce1 : OUT STD_LOGIC;
    B_2_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_2_we1 : OUT STD_LOGIC;
    B_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_ce0 : OUT STD_LOGIC;
    B_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_3_we0 : OUT STD_LOGIC;
    B_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_ce1 : OUT STD_LOGIC;
    B_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    B_3_we1 : OUT STD_LOGIC;
    C_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_3_ce0 : OUT STD_LOGIC;
    C_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_3_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_3_we0 : OUT STD_LOGIC;
    C_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_3_ce1 : OUT STD_LOGIC;
    C_3_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_3_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_3_we1 : OUT STD_LOGIC;
    C_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_2_ce0 : OUT STD_LOGIC;
    C_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_2_we0 : OUT STD_LOGIC;
    C_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_2_ce1 : OUT STD_LOGIC;
    C_2_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_2_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_2_we1 : OUT STD_LOGIC;
    C_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_1_ce0 : OUT STD_LOGIC;
    C_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_1_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_1_we0 : OUT STD_LOGIC;
    C_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_1_ce1 : OUT STD_LOGIC;
    C_1_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_1_we1 : OUT STD_LOGIC;
    C_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_0_ce0 : OUT STD_LOGIC;
    C_0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_0_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_0_we0 : OUT STD_LOGIC;
    C_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_0_ce1 : OUT STD_LOGIC;
    C_0_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    C_0_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
    C_0_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ii_ap_vld : IN STD_LOGIC;
    jj_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of Bert_layer_dataflow_in_loop_VITIS_LOOP_112_1 is 
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal init_block_AB_proc28_U0_ap_start : STD_LOGIC;
    signal init_block_AB_proc28_U0_ap_done : STD_LOGIC;
    signal init_block_AB_proc28_U0_ap_continue : STD_LOGIC;
    signal init_block_AB_proc28_U0_ap_idle : STD_LOGIC;
    signal init_block_AB_proc28_U0_ap_ready : STD_LOGIC;
    signal init_block_AB_proc28_U0_start_out : STD_LOGIC;
    signal init_block_AB_proc28_U0_start_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_A_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal init_block_AB_proc28_U0_A_0_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_A_loader_01_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_A_loader_01_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_A_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal init_block_AB_proc28_U0_A_1_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_A_loader_12_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_A_loader_12_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_A_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal init_block_AB_proc28_U0_A_2_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_A_loader_23_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_A_loader_23_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_A_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal init_block_AB_proc28_U0_A_3_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_A_loader_34_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_A_loader_34_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_B_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_B_0_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_jj : STD_LOGIC_VECTOR (3 downto 0);
    signal init_block_AB_proc28_U0_block_B_loader_05_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_B_loader_05_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_B_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_B_1_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_B_loader_16_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_B_loader_16_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_B_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_B_2_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_B_loader_27_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_B_loader_27_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_B_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_B_3_ce0 : STD_LOGIC;
    signal init_block_AB_proc28_U0_block_B_loader_38_din : STD_LOGIC_VECTOR (7 downto 0);
    signal init_block_AB_proc28_U0_block_B_loader_38_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_ii_c_din : STD_LOGIC_VECTOR (1 downto 0);
    signal init_block_AB_proc28_U0_ii_c_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_ii_c1_din : STD_LOGIC_VECTOR (1 downto 0);
    signal init_block_AB_proc28_U0_ii_c1_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_ii_c2_din : STD_LOGIC_VECTOR (1 downto 0);
    signal init_block_AB_proc28_U0_ii_c2_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_ii_c3_din : STD_LOGIC_VECTOR (1 downto 0);
    signal init_block_AB_proc28_U0_ii_c3_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_jj_c_din : STD_LOGIC_VECTOR (3 downto 0);
    signal init_block_AB_proc28_U0_jj_c_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_jj_c4_din : STD_LOGIC_VECTOR (3 downto 0);
    signal init_block_AB_proc28_U0_jj_c4_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_jj_c5_din : STD_LOGIC_VECTOR (3 downto 0);
    signal init_block_AB_proc28_U0_jj_c5_write : STD_LOGIC;
    signal init_block_AB_proc28_U0_jj_c6_din : STD_LOGIC_VECTOR (3 downto 0);
    signal init_block_AB_proc28_U0_jj_c6_write : STD_LOGIC;
    signal systolic_array_k_12_U0_block_A_loader_0_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_A_loader_1_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_A_loader_2_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_A_loader_3_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_B_loader_0_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_B_loader_1_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_B_loader_2_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_B_loader_3_read : STD_LOGIC;
    signal systolic_array_k_12_U0_block_C_drainer_0_din : STD_LOGIC_VECTOR (23 downto 0);
    signal systolic_array_k_12_U0_block_C_drainer_0_write : STD_LOGIC;
    signal systolic_array_k_12_U0_block_C_drainer_1_din : STD_LOGIC_VECTOR (23 downto 0);
    signal systolic_array_k_12_U0_block_C_drainer_1_write : STD_LOGIC;
    signal systolic_array_k_12_U0_block_C_drainer_2_din : STD_LOGIC_VECTOR (23 downto 0);
    signal systolic_array_k_12_U0_block_C_drainer_2_write : STD_LOGIC;
    signal systolic_array_k_12_U0_block_C_drainer_3_din : STD_LOGIC_VECTOR (23 downto 0);
    signal systolic_array_k_12_U0_block_C_drainer_3_write : STD_LOGIC;
    signal systolic_array_k_12_U0_ap_start : STD_LOGIC;
    signal systolic_array_k_12_U0_ap_done : STD_LOGIC;
    signal systolic_array_k_12_U0_ap_ready : STD_LOGIC;
    signal systolic_array_k_12_U0_ap_idle : STD_LOGIC;
    signal systolic_array_k_12_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_C_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc_U0_C_0_ce0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_C_0_we0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_C_0_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal VITIS_LOOP_132_4_proc_U0_C_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc_U0_C_0_ce1 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_block_C_drainer_09_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_jj_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc_U0_ii_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_C_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc29_U0_C_1_ce0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_C_1_we0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_C_1_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal VITIS_LOOP_132_4_proc29_U0_C_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc29_U0_C_1_ce1 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_block_C_drainer_110_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_jj_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc29_U0_ii_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_C_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc30_U0_C_2_ce0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_C_2_we0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_C_2_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal VITIS_LOOP_132_4_proc30_U0_C_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc30_U0_C_2_ce1 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_block_C_drainer_211_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_jj_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc30_U0_ii_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_ap_start : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_ap_done : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_ap_continue : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_ap_idle : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_ap_ready : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_C_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc31_U0_C_3_ce0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_C_3_we0 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_C_3_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal VITIS_LOOP_132_4_proc31_U0_C_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal VITIS_LOOP_132_4_proc31_U0_C_3_ce1 : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_block_C_drainer_312_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_jj_read : STD_LOGIC;
    signal VITIS_LOOP_132_4_proc31_U0_ii_read : STD_LOGIC;
    signal block_A_loader_01_full_n : STD_LOGIC;
    signal block_A_loader_01_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_A_loader_01_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_01_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_01_empty_n : STD_LOGIC;
    signal block_A_loader_12_full_n : STD_LOGIC;
    signal block_A_loader_12_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_A_loader_12_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_12_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_12_empty_n : STD_LOGIC;
    signal block_A_loader_23_full_n : STD_LOGIC;
    signal block_A_loader_23_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_A_loader_23_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_23_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_23_empty_n : STD_LOGIC;
    signal block_A_loader_34_full_n : STD_LOGIC;
    signal block_A_loader_34_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_A_loader_34_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_34_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_A_loader_34_empty_n : STD_LOGIC;
    signal block_B_loader_05_full_n : STD_LOGIC;
    signal block_B_loader_05_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_B_loader_05_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_05_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_05_empty_n : STD_LOGIC;
    signal block_B_loader_16_full_n : STD_LOGIC;
    signal block_B_loader_16_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_B_loader_16_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_16_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_16_empty_n : STD_LOGIC;
    signal block_B_loader_27_full_n : STD_LOGIC;
    signal block_B_loader_27_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_B_loader_27_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_27_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_27_empty_n : STD_LOGIC;
    signal block_B_loader_38_full_n : STD_LOGIC;
    signal block_B_loader_38_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal block_B_loader_38_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_38_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_B_loader_38_empty_n : STD_LOGIC;
    signal ii_c_full_n : STD_LOGIC;
    signal ii_c_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal ii_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c_empty_n : STD_LOGIC;
    signal ii_c1_full_n : STD_LOGIC;
    signal ii_c1_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal ii_c1_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c1_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c1_empty_n : STD_LOGIC;
    signal ii_c2_full_n : STD_LOGIC;
    signal ii_c2_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal ii_c2_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c2_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c2_empty_n : STD_LOGIC;
    signal ii_c3_full_n : STD_LOGIC;
    signal ii_c3_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal ii_c3_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c3_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal ii_c3_empty_n : STD_LOGIC;
    signal jj_c_full_n : STD_LOGIC;
    signal jj_c_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal jj_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c_empty_n : STD_LOGIC;
    signal jj_c4_full_n : STD_LOGIC;
    signal jj_c4_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal jj_c4_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c4_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c4_empty_n : STD_LOGIC;
    signal jj_c5_full_n : STD_LOGIC;
    signal jj_c5_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal jj_c5_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c5_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c5_empty_n : STD_LOGIC;
    signal jj_c6_full_n : STD_LOGIC;
    signal jj_c6_dout : STD_LOGIC_VECTOR (3 downto 0);
    signal jj_c6_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c6_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal jj_c6_empty_n : STD_LOGIC;
    signal block_C_drainer_09_full_n : STD_LOGIC;
    signal block_C_drainer_09_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal block_C_drainer_09_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_09_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_09_empty_n : STD_LOGIC;
    signal block_C_drainer_110_full_n : STD_LOGIC;
    signal block_C_drainer_110_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal block_C_drainer_110_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_110_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_110_empty_n : STD_LOGIC;
    signal block_C_drainer_211_full_n : STD_LOGIC;
    signal block_C_drainer_211_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal block_C_drainer_211_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_211_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_211_empty_n : STD_LOGIC;
    signal block_C_drainer_312_full_n : STD_LOGIC;
    signal block_C_drainer_312_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal block_C_drainer_312_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_312_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal block_C_drainer_312_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_init_block_AB_proc28_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_init_block_AB_proc28_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_VITIS_LOOP_132_4_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_VITIS_LOOP_132_4_proc29_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_VITIS_LOOP_132_4_proc30_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_VITIS_LOOP_132_4_proc31_U0_ap_ready : STD_LOGIC;
    signal start_for_systolic_array_k_12_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_systolic_array_k_12_U0_full_n : STD_LOGIC;
    signal start_for_systolic_array_k_12_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_systolic_array_k_12_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_init_block_AB_proc28 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        A_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_0_ce0 : OUT STD_LOGIC;
        A_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ii : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_01_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_01_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_01_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_01_full_n : IN STD_LOGIC;
        block_A_loader_01_write : OUT STD_LOGIC;
        A_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_1_ce0 : OUT STD_LOGIC;
        A_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_12_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_12_full_n : IN STD_LOGIC;
        block_A_loader_12_write : OUT STD_LOGIC;
        A_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_2_ce0 : OUT STD_LOGIC;
        A_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_23_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_23_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_23_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_23_full_n : IN STD_LOGIC;
        block_A_loader_23_write : OUT STD_LOGIC;
        A_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_3_ce0 : OUT STD_LOGIC;
        A_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_34_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_34_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_34_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_A_loader_34_full_n : IN STD_LOGIC;
        block_A_loader_34_write : OUT STD_LOGIC;
        B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        jj : IN STD_LOGIC_VECTOR (3 downto 0);
        block_B_loader_05_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_05_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_05_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_05_full_n : IN STD_LOGIC;
        block_B_loader_05_write : OUT STD_LOGIC;
        B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_16_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_16_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_16_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_16_full_n : IN STD_LOGIC;
        block_B_loader_16_write : OUT STD_LOGIC;
        B_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_27_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_27_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_27_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_27_full_n : IN STD_LOGIC;
        block_B_loader_27_write : OUT STD_LOGIC;
        B_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_38_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_38_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_38_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_B_loader_38_full_n : IN STD_LOGIC;
        block_B_loader_38_write : OUT STD_LOGIC;
        ii_c_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        ii_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c_full_n : IN STD_LOGIC;
        ii_c_write : OUT STD_LOGIC;
        ii_c1_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        ii_c1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c1_full_n : IN STD_LOGIC;
        ii_c1_write : OUT STD_LOGIC;
        ii_c2_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        ii_c2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c2_full_n : IN STD_LOGIC;
        ii_c2_write : OUT STD_LOGIC;
        ii_c3_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        ii_c3_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c3_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_c3_full_n : IN STD_LOGIC;
        ii_c3_write : OUT STD_LOGIC;
        jj_c_din : OUT STD_LOGIC_VECTOR (3 downto 0);
        jj_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c_full_n : IN STD_LOGIC;
        jj_c_write : OUT STD_LOGIC;
        jj_c4_din : OUT STD_LOGIC_VECTOR (3 downto 0);
        jj_c4_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c4_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c4_full_n : IN STD_LOGIC;
        jj_c4_write : OUT STD_LOGIC;
        jj_c5_din : OUT STD_LOGIC_VECTOR (3 downto 0);
        jj_c5_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c5_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c5_full_n : IN STD_LOGIC;
        jj_c5_write : OUT STD_LOGIC;
        jj_c6_din : OUT STD_LOGIC_VECTOR (3 downto 0);
        jj_c6_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c6_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_c6_full_n : IN STD_LOGIC;
        jj_c6_write : OUT STD_LOGIC );
    end component;


    component Bert_layer_systolic_array_k_12 IS
    port (
        block_A_loader_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_0_empty_n : IN STD_LOGIC;
        block_A_loader_0_read : OUT STD_LOGIC;
        block_A_loader_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_1_empty_n : IN STD_LOGIC;
        block_A_loader_1_read : OUT STD_LOGIC;
        block_A_loader_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_2_empty_n : IN STD_LOGIC;
        block_A_loader_2_read : OUT STD_LOGIC;
        block_A_loader_3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_A_loader_3_empty_n : IN STD_LOGIC;
        block_A_loader_3_read : OUT STD_LOGIC;
        block_B_loader_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_0_empty_n : IN STD_LOGIC;
        block_B_loader_0_read : OUT STD_LOGIC;
        block_B_loader_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_1_empty_n : IN STD_LOGIC;
        block_B_loader_1_read : OUT STD_LOGIC;
        block_B_loader_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_2_empty_n : IN STD_LOGIC;
        block_B_loader_2_read : OUT STD_LOGIC;
        block_B_loader_3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        block_B_loader_3_empty_n : IN STD_LOGIC;
        block_B_loader_3_read : OUT STD_LOGIC;
        block_C_drainer_0_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_0_full_n : IN STD_LOGIC;
        block_C_drainer_0_write : OUT STD_LOGIC;
        block_C_drainer_1_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_1_full_n : IN STD_LOGIC;
        block_C_drainer_1_write : OUT STD_LOGIC;
        block_C_drainer_2_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_2_full_n : IN STD_LOGIC;
        block_C_drainer_2_write : OUT STD_LOGIC;
        block_C_drainer_3_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_3_full_n : IN STD_LOGIC;
        block_C_drainer_3_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component Bert_layer_VITIS_LOOP_132_4_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_0_ce0 : OUT STD_LOGIC;
        C_0_we0 : OUT STD_LOGIC;
        C_0_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        C_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_0_ce1 : OUT STD_LOGIC;
        C_0_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_09_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_09_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_09_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_09_empty_n : IN STD_LOGIC;
        block_C_drainer_09_read : OUT STD_LOGIC;
        jj_dout : IN STD_LOGIC_VECTOR (3 downto 0);
        jj_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_empty_n : IN STD_LOGIC;
        jj_read : OUT STD_LOGIC;
        ii_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        ii_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_empty_n : IN STD_LOGIC;
        ii_read : OUT STD_LOGIC );
    end component;


    component Bert_layer_VITIS_LOOP_132_4_proc29 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_1_ce0 : OUT STD_LOGIC;
        C_1_we0 : OUT STD_LOGIC;
        C_1_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        C_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_1_ce1 : OUT STD_LOGIC;
        C_1_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_110_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_110_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_110_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_110_empty_n : IN STD_LOGIC;
        block_C_drainer_110_read : OUT STD_LOGIC;
        jj_dout : IN STD_LOGIC_VECTOR (3 downto 0);
        jj_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_empty_n : IN STD_LOGIC;
        jj_read : OUT STD_LOGIC;
        ii_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        ii_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_empty_n : IN STD_LOGIC;
        ii_read : OUT STD_LOGIC );
    end component;


    component Bert_layer_VITIS_LOOP_132_4_proc30 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_2_ce0 : OUT STD_LOGIC;
        C_2_we0 : OUT STD_LOGIC;
        C_2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        C_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_2_ce1 : OUT STD_LOGIC;
        C_2_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_211_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_211_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_211_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_211_empty_n : IN STD_LOGIC;
        block_C_drainer_211_read : OUT STD_LOGIC;
        jj_dout : IN STD_LOGIC_VECTOR (3 downto 0);
        jj_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_empty_n : IN STD_LOGIC;
        jj_read : OUT STD_LOGIC;
        ii_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        ii_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_empty_n : IN STD_LOGIC;
        ii_read : OUT STD_LOGIC );
    end component;


    component Bert_layer_VITIS_LOOP_132_4_proc31 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_3_ce0 : OUT STD_LOGIC;
        C_3_we0 : OUT STD_LOGIC;
        C_3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        C_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_3_ce1 : OUT STD_LOGIC;
        C_3_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_312_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        block_C_drainer_312_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_312_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        block_C_drainer_312_empty_n : IN STD_LOGIC;
        block_C_drainer_312_read : OUT STD_LOGIC;
        jj_dout : IN STD_LOGIC_VECTOR (3 downto 0);
        jj_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        jj_empty_n : IN STD_LOGIC;
        jj_read : OUT STD_LOGIC;
        ii_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        ii_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        ii_empty_n : IN STD_LOGIC;
        ii_read : OUT STD_LOGIC );
    end component;


    component Bert_layer_fifo_w8_d2_S_x3 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Bert_layer_fifo_w2_d3_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Bert_layer_fifo_w4_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (3 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Bert_layer_fifo_w24_d2_S_x3 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Bert_layer_start_for_systolic_array_k_12_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    init_block_AB_proc28_U0 : component Bert_layer_init_block_AB_proc28
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => init_block_AB_proc28_U0_ap_start,
        start_full_n => start_for_systolic_array_k_12_U0_full_n,
        ap_done => init_block_AB_proc28_U0_ap_done,
        ap_continue => init_block_AB_proc28_U0_ap_continue,
        ap_idle => init_block_AB_proc28_U0_ap_idle,
        ap_ready => init_block_AB_proc28_U0_ap_ready,
        start_out => init_block_AB_proc28_U0_start_out,
        start_write => init_block_AB_proc28_U0_start_write,
        A_0_address0 => init_block_AB_proc28_U0_A_0_address0,
        A_0_ce0 => init_block_AB_proc28_U0_A_0_ce0,
        A_0_q0 => A_0_q0,
        ii => ii,
        block_A_loader_01_din => init_block_AB_proc28_U0_block_A_loader_01_din,
        block_A_loader_01_num_data_valid => block_A_loader_01_num_data_valid,
        block_A_loader_01_fifo_cap => block_A_loader_01_fifo_cap,
        block_A_loader_01_full_n => block_A_loader_01_full_n,
        block_A_loader_01_write => init_block_AB_proc28_U0_block_A_loader_01_write,
        A_1_address0 => init_block_AB_proc28_U0_A_1_address0,
        A_1_ce0 => init_block_AB_proc28_U0_A_1_ce0,
        A_1_q0 => A_1_q0,
        block_A_loader_12_din => init_block_AB_proc28_U0_block_A_loader_12_din,
        block_A_loader_12_num_data_valid => block_A_loader_12_num_data_valid,
        block_A_loader_12_fifo_cap => block_A_loader_12_fifo_cap,
        block_A_loader_12_full_n => block_A_loader_12_full_n,
        block_A_loader_12_write => init_block_AB_proc28_U0_block_A_loader_12_write,
        A_2_address0 => init_block_AB_proc28_U0_A_2_address0,
        A_2_ce0 => init_block_AB_proc28_U0_A_2_ce0,
        A_2_q0 => A_2_q0,
        block_A_loader_23_din => init_block_AB_proc28_U0_block_A_loader_23_din,
        block_A_loader_23_num_data_valid => block_A_loader_23_num_data_valid,
        block_A_loader_23_fifo_cap => block_A_loader_23_fifo_cap,
        block_A_loader_23_full_n => block_A_loader_23_full_n,
        block_A_loader_23_write => init_block_AB_proc28_U0_block_A_loader_23_write,
        A_3_address0 => init_block_AB_proc28_U0_A_3_address0,
        A_3_ce0 => init_block_AB_proc28_U0_A_3_ce0,
        A_3_q0 => A_3_q0,
        block_A_loader_34_din => init_block_AB_proc28_U0_block_A_loader_34_din,
        block_A_loader_34_num_data_valid => block_A_loader_34_num_data_valid,
        block_A_loader_34_fifo_cap => block_A_loader_34_fifo_cap,
        block_A_loader_34_full_n => block_A_loader_34_full_n,
        block_A_loader_34_write => init_block_AB_proc28_U0_block_A_loader_34_write,
        B_0_address0 => init_block_AB_proc28_U0_B_0_address0,
        B_0_ce0 => init_block_AB_proc28_U0_B_0_ce0,
        B_0_q0 => B_0_q0,
        jj => init_block_AB_proc28_U0_jj,
        block_B_loader_05_din => init_block_AB_proc28_U0_block_B_loader_05_din,
        block_B_loader_05_num_data_valid => block_B_loader_05_num_data_valid,
        block_B_loader_05_fifo_cap => block_B_loader_05_fifo_cap,
        block_B_loader_05_full_n => block_B_loader_05_full_n,
        block_B_loader_05_write => init_block_AB_proc28_U0_block_B_loader_05_write,
        B_1_address0 => init_block_AB_proc28_U0_B_1_address0,
        B_1_ce0 => init_block_AB_proc28_U0_B_1_ce0,
        B_1_q0 => B_1_q0,
        block_B_loader_16_din => init_block_AB_proc28_U0_block_B_loader_16_din,
        block_B_loader_16_num_data_valid => block_B_loader_16_num_data_valid,
        block_B_loader_16_fifo_cap => block_B_loader_16_fifo_cap,
        block_B_loader_16_full_n => block_B_loader_16_full_n,
        block_B_loader_16_write => init_block_AB_proc28_U0_block_B_loader_16_write,
        B_2_address0 => init_block_AB_proc28_U0_B_2_address0,
        B_2_ce0 => init_block_AB_proc28_U0_B_2_ce0,
        B_2_q0 => B_2_q0,
        block_B_loader_27_din => init_block_AB_proc28_U0_block_B_loader_27_din,
        block_B_loader_27_num_data_valid => block_B_loader_27_num_data_valid,
        block_B_loader_27_fifo_cap => block_B_loader_27_fifo_cap,
        block_B_loader_27_full_n => block_B_loader_27_full_n,
        block_B_loader_27_write => init_block_AB_proc28_U0_block_B_loader_27_write,
        B_3_address0 => init_block_AB_proc28_U0_B_3_address0,
        B_3_ce0 => init_block_AB_proc28_U0_B_3_ce0,
        B_3_q0 => B_3_q0,
        block_B_loader_38_din => init_block_AB_proc28_U0_block_B_loader_38_din,
        block_B_loader_38_num_data_valid => block_B_loader_38_num_data_valid,
        block_B_loader_38_fifo_cap => block_B_loader_38_fifo_cap,
        block_B_loader_38_full_n => block_B_loader_38_full_n,
        block_B_loader_38_write => init_block_AB_proc28_U0_block_B_loader_38_write,
        ii_c_din => init_block_AB_proc28_U0_ii_c_din,
        ii_c_num_data_valid => ii_c_num_data_valid,
        ii_c_fifo_cap => ii_c_fifo_cap,
        ii_c_full_n => ii_c_full_n,
        ii_c_write => init_block_AB_proc28_U0_ii_c_write,
        ii_c1_din => init_block_AB_proc28_U0_ii_c1_din,
        ii_c1_num_data_valid => ii_c1_num_data_valid,
        ii_c1_fifo_cap => ii_c1_fifo_cap,
        ii_c1_full_n => ii_c1_full_n,
        ii_c1_write => init_block_AB_proc28_U0_ii_c1_write,
        ii_c2_din => init_block_AB_proc28_U0_ii_c2_din,
        ii_c2_num_data_valid => ii_c2_num_data_valid,
        ii_c2_fifo_cap => ii_c2_fifo_cap,
        ii_c2_full_n => ii_c2_full_n,
        ii_c2_write => init_block_AB_proc28_U0_ii_c2_write,
        ii_c3_din => init_block_AB_proc28_U0_ii_c3_din,
        ii_c3_num_data_valid => ii_c3_num_data_valid,
        ii_c3_fifo_cap => ii_c3_fifo_cap,
        ii_c3_full_n => ii_c3_full_n,
        ii_c3_write => init_block_AB_proc28_U0_ii_c3_write,
        jj_c_din => init_block_AB_proc28_U0_jj_c_din,
        jj_c_num_data_valid => jj_c_num_data_valid,
        jj_c_fifo_cap => jj_c_fifo_cap,
        jj_c_full_n => jj_c_full_n,
        jj_c_write => init_block_AB_proc28_U0_jj_c_write,
        jj_c4_din => init_block_AB_proc28_U0_jj_c4_din,
        jj_c4_num_data_valid => jj_c4_num_data_valid,
        jj_c4_fifo_cap => jj_c4_fifo_cap,
        jj_c4_full_n => jj_c4_full_n,
        jj_c4_write => init_block_AB_proc28_U0_jj_c4_write,
        jj_c5_din => init_block_AB_proc28_U0_jj_c5_din,
        jj_c5_num_data_valid => jj_c5_num_data_valid,
        jj_c5_fifo_cap => jj_c5_fifo_cap,
        jj_c5_full_n => jj_c5_full_n,
        jj_c5_write => init_block_AB_proc28_U0_jj_c5_write,
        jj_c6_din => init_block_AB_proc28_U0_jj_c6_din,
        jj_c6_num_data_valid => jj_c6_num_data_valid,
        jj_c6_fifo_cap => jj_c6_fifo_cap,
        jj_c6_full_n => jj_c6_full_n,
        jj_c6_write => init_block_AB_proc28_U0_jj_c6_write);

    systolic_array_k_12_U0 : component Bert_layer_systolic_array_k_12
    port map (
        block_A_loader_0_dout => block_A_loader_01_dout,
        block_A_loader_0_empty_n => block_A_loader_01_empty_n,
        block_A_loader_0_read => systolic_array_k_12_U0_block_A_loader_0_read,
        block_A_loader_1_dout => block_A_loader_12_dout,
        block_A_loader_1_empty_n => block_A_loader_12_empty_n,
        block_A_loader_1_read => systolic_array_k_12_U0_block_A_loader_1_read,
        block_A_loader_2_dout => block_A_loader_23_dout,
        block_A_loader_2_empty_n => block_A_loader_23_empty_n,
        block_A_loader_2_read => systolic_array_k_12_U0_block_A_loader_2_read,
        block_A_loader_3_dout => block_A_loader_34_dout,
        block_A_loader_3_empty_n => block_A_loader_34_empty_n,
        block_A_loader_3_read => systolic_array_k_12_U0_block_A_loader_3_read,
        block_B_loader_0_dout => block_B_loader_05_dout,
        block_B_loader_0_empty_n => block_B_loader_05_empty_n,
        block_B_loader_0_read => systolic_array_k_12_U0_block_B_loader_0_read,
        block_B_loader_1_dout => block_B_loader_16_dout,
        block_B_loader_1_empty_n => block_B_loader_16_empty_n,
        block_B_loader_1_read => systolic_array_k_12_U0_block_B_loader_1_read,
        block_B_loader_2_dout => block_B_loader_27_dout,
        block_B_loader_2_empty_n => block_B_loader_27_empty_n,
        block_B_loader_2_read => systolic_array_k_12_U0_block_B_loader_2_read,
        block_B_loader_3_dout => block_B_loader_38_dout,
        block_B_loader_3_empty_n => block_B_loader_38_empty_n,
        block_B_loader_3_read => systolic_array_k_12_U0_block_B_loader_3_read,
        block_C_drainer_0_din => systolic_array_k_12_U0_block_C_drainer_0_din,
        block_C_drainer_0_full_n => block_C_drainer_09_full_n,
        block_C_drainer_0_write => systolic_array_k_12_U0_block_C_drainer_0_write,
        block_C_drainer_1_din => systolic_array_k_12_U0_block_C_drainer_1_din,
        block_C_drainer_1_full_n => block_C_drainer_110_full_n,
        block_C_drainer_1_write => systolic_array_k_12_U0_block_C_drainer_1_write,
        block_C_drainer_2_din => systolic_array_k_12_U0_block_C_drainer_2_din,
        block_C_drainer_2_full_n => block_C_drainer_211_full_n,
        block_C_drainer_2_write => systolic_array_k_12_U0_block_C_drainer_2_write,
        block_C_drainer_3_din => systolic_array_k_12_U0_block_C_drainer_3_din,
        block_C_drainer_3_full_n => block_C_drainer_312_full_n,
        block_C_drainer_3_write => systolic_array_k_12_U0_block_C_drainer_3_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => systolic_array_k_12_U0_ap_start,
        ap_done => systolic_array_k_12_U0_ap_done,
        ap_ready => systolic_array_k_12_U0_ap_ready,
        ap_idle => systolic_array_k_12_U0_ap_idle,
        ap_continue => systolic_array_k_12_U0_ap_continue);

    VITIS_LOOP_132_4_proc_U0 : component Bert_layer_VITIS_LOOP_132_4_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_132_4_proc_U0_ap_start,
        ap_done => VITIS_LOOP_132_4_proc_U0_ap_done,
        ap_continue => VITIS_LOOP_132_4_proc_U0_ap_continue,
        ap_idle => VITIS_LOOP_132_4_proc_U0_ap_idle,
        ap_ready => VITIS_LOOP_132_4_proc_U0_ap_ready,
        C_0_address0 => VITIS_LOOP_132_4_proc_U0_C_0_address0,
        C_0_ce0 => VITIS_LOOP_132_4_proc_U0_C_0_ce0,
        C_0_we0 => VITIS_LOOP_132_4_proc_U0_C_0_we0,
        C_0_d0 => VITIS_LOOP_132_4_proc_U0_C_0_d0,
        C_0_address1 => VITIS_LOOP_132_4_proc_U0_C_0_address1,
        C_0_ce1 => VITIS_LOOP_132_4_proc_U0_C_0_ce1,
        C_0_q1 => C_0_q1,
        block_C_drainer_09_dout => block_C_drainer_09_dout,
        block_C_drainer_09_num_data_valid => block_C_drainer_09_num_data_valid,
        block_C_drainer_09_fifo_cap => block_C_drainer_09_fifo_cap,
        block_C_drainer_09_empty_n => block_C_drainer_09_empty_n,
        block_C_drainer_09_read => VITIS_LOOP_132_4_proc_U0_block_C_drainer_09_read,
        jj_dout => jj_c6_dout,
        jj_num_data_valid => jj_c6_num_data_valid,
        jj_fifo_cap => jj_c6_fifo_cap,
        jj_empty_n => jj_c6_empty_n,
        jj_read => VITIS_LOOP_132_4_proc_U0_jj_read,
        ii_dout => ii_c3_dout,
        ii_num_data_valid => ii_c3_num_data_valid,
        ii_fifo_cap => ii_c3_fifo_cap,
        ii_empty_n => ii_c3_empty_n,
        ii_read => VITIS_LOOP_132_4_proc_U0_ii_read);

    VITIS_LOOP_132_4_proc29_U0 : component Bert_layer_VITIS_LOOP_132_4_proc29
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_132_4_proc29_U0_ap_start,
        ap_done => VITIS_LOOP_132_4_proc29_U0_ap_done,
        ap_continue => VITIS_LOOP_132_4_proc29_U0_ap_continue,
        ap_idle => VITIS_LOOP_132_4_proc29_U0_ap_idle,
        ap_ready => VITIS_LOOP_132_4_proc29_U0_ap_ready,
        C_1_address0 => VITIS_LOOP_132_4_proc29_U0_C_1_address0,
        C_1_ce0 => VITIS_LOOP_132_4_proc29_U0_C_1_ce0,
        C_1_we0 => VITIS_LOOP_132_4_proc29_U0_C_1_we0,
        C_1_d0 => VITIS_LOOP_132_4_proc29_U0_C_1_d0,
        C_1_address1 => VITIS_LOOP_132_4_proc29_U0_C_1_address1,
        C_1_ce1 => VITIS_LOOP_132_4_proc29_U0_C_1_ce1,
        C_1_q1 => C_1_q1,
        block_C_drainer_110_dout => block_C_drainer_110_dout,
        block_C_drainer_110_num_data_valid => block_C_drainer_110_num_data_valid,
        block_C_drainer_110_fifo_cap => block_C_drainer_110_fifo_cap,
        block_C_drainer_110_empty_n => block_C_drainer_110_empty_n,
        block_C_drainer_110_read => VITIS_LOOP_132_4_proc29_U0_block_C_drainer_110_read,
        jj_dout => jj_c5_dout,
        jj_num_data_valid => jj_c5_num_data_valid,
        jj_fifo_cap => jj_c5_fifo_cap,
        jj_empty_n => jj_c5_empty_n,
        jj_read => VITIS_LOOP_132_4_proc29_U0_jj_read,
        ii_dout => ii_c2_dout,
        ii_num_data_valid => ii_c2_num_data_valid,
        ii_fifo_cap => ii_c2_fifo_cap,
        ii_empty_n => ii_c2_empty_n,
        ii_read => VITIS_LOOP_132_4_proc29_U0_ii_read);

    VITIS_LOOP_132_4_proc30_U0 : component Bert_layer_VITIS_LOOP_132_4_proc30
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_132_4_proc30_U0_ap_start,
        ap_done => VITIS_LOOP_132_4_proc30_U0_ap_done,
        ap_continue => VITIS_LOOP_132_4_proc30_U0_ap_continue,
        ap_idle => VITIS_LOOP_132_4_proc30_U0_ap_idle,
        ap_ready => VITIS_LOOP_132_4_proc30_U0_ap_ready,
        C_2_address0 => VITIS_LOOP_132_4_proc30_U0_C_2_address0,
        C_2_ce0 => VITIS_LOOP_132_4_proc30_U0_C_2_ce0,
        C_2_we0 => VITIS_LOOP_132_4_proc30_U0_C_2_we0,
        C_2_d0 => VITIS_LOOP_132_4_proc30_U0_C_2_d0,
        C_2_address1 => VITIS_LOOP_132_4_proc30_U0_C_2_address1,
        C_2_ce1 => VITIS_LOOP_132_4_proc30_U0_C_2_ce1,
        C_2_q1 => C_2_q1,
        block_C_drainer_211_dout => block_C_drainer_211_dout,
        block_C_drainer_211_num_data_valid => block_C_drainer_211_num_data_valid,
        block_C_drainer_211_fifo_cap => block_C_drainer_211_fifo_cap,
        block_C_drainer_211_empty_n => block_C_drainer_211_empty_n,
        block_C_drainer_211_read => VITIS_LOOP_132_4_proc30_U0_block_C_drainer_211_read,
        jj_dout => jj_c4_dout,
        jj_num_data_valid => jj_c4_num_data_valid,
        jj_fifo_cap => jj_c4_fifo_cap,
        jj_empty_n => jj_c4_empty_n,
        jj_read => VITIS_LOOP_132_4_proc30_U0_jj_read,
        ii_dout => ii_c1_dout,
        ii_num_data_valid => ii_c1_num_data_valid,
        ii_fifo_cap => ii_c1_fifo_cap,
        ii_empty_n => ii_c1_empty_n,
        ii_read => VITIS_LOOP_132_4_proc30_U0_ii_read);

    VITIS_LOOP_132_4_proc31_U0 : component Bert_layer_VITIS_LOOP_132_4_proc31
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => VITIS_LOOP_132_4_proc31_U0_ap_start,
        ap_done => VITIS_LOOP_132_4_proc31_U0_ap_done,
        ap_continue => VITIS_LOOP_132_4_proc31_U0_ap_continue,
        ap_idle => VITIS_LOOP_132_4_proc31_U0_ap_idle,
        ap_ready => VITIS_LOOP_132_4_proc31_U0_ap_ready,
        C_3_address0 => VITIS_LOOP_132_4_proc31_U0_C_3_address0,
        C_3_ce0 => VITIS_LOOP_132_4_proc31_U0_C_3_ce0,
        C_3_we0 => VITIS_LOOP_132_4_proc31_U0_C_3_we0,
        C_3_d0 => VITIS_LOOP_132_4_proc31_U0_C_3_d0,
        C_3_address1 => VITIS_LOOP_132_4_proc31_U0_C_3_address1,
        C_3_ce1 => VITIS_LOOP_132_4_proc31_U0_C_3_ce1,
        C_3_q1 => C_3_q1,
        block_C_drainer_312_dout => block_C_drainer_312_dout,
        block_C_drainer_312_num_data_valid => block_C_drainer_312_num_data_valid,
        block_C_drainer_312_fifo_cap => block_C_drainer_312_fifo_cap,
        block_C_drainer_312_empty_n => block_C_drainer_312_empty_n,
        block_C_drainer_312_read => VITIS_LOOP_132_4_proc31_U0_block_C_drainer_312_read,
        jj_dout => jj_c_dout,
        jj_num_data_valid => jj_c_num_data_valid,
        jj_fifo_cap => jj_c_fifo_cap,
        jj_empty_n => jj_c_empty_n,
        jj_read => VITIS_LOOP_132_4_proc31_U0_jj_read,
        ii_dout => ii_c_dout,
        ii_num_data_valid => ii_c_num_data_valid,
        ii_fifo_cap => ii_c_fifo_cap,
        ii_empty_n => ii_c_empty_n,
        ii_read => VITIS_LOOP_132_4_proc31_U0_ii_read);

    block_A_loader_01_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_A_loader_01_din,
        if_full_n => block_A_loader_01_full_n,
        if_write => init_block_AB_proc28_U0_block_A_loader_01_write,
        if_dout => block_A_loader_01_dout,
        if_num_data_valid => block_A_loader_01_num_data_valid,
        if_fifo_cap => block_A_loader_01_fifo_cap,
        if_empty_n => block_A_loader_01_empty_n,
        if_read => systolic_array_k_12_U0_block_A_loader_0_read);

    block_A_loader_12_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_A_loader_12_din,
        if_full_n => block_A_loader_12_full_n,
        if_write => init_block_AB_proc28_U0_block_A_loader_12_write,
        if_dout => block_A_loader_12_dout,
        if_num_data_valid => block_A_loader_12_num_data_valid,
        if_fifo_cap => block_A_loader_12_fifo_cap,
        if_empty_n => block_A_loader_12_empty_n,
        if_read => systolic_array_k_12_U0_block_A_loader_1_read);

    block_A_loader_23_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_A_loader_23_din,
        if_full_n => block_A_loader_23_full_n,
        if_write => init_block_AB_proc28_U0_block_A_loader_23_write,
        if_dout => block_A_loader_23_dout,
        if_num_data_valid => block_A_loader_23_num_data_valid,
        if_fifo_cap => block_A_loader_23_fifo_cap,
        if_empty_n => block_A_loader_23_empty_n,
        if_read => systolic_array_k_12_U0_block_A_loader_2_read);

    block_A_loader_34_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_A_loader_34_din,
        if_full_n => block_A_loader_34_full_n,
        if_write => init_block_AB_proc28_U0_block_A_loader_34_write,
        if_dout => block_A_loader_34_dout,
        if_num_data_valid => block_A_loader_34_num_data_valid,
        if_fifo_cap => block_A_loader_34_fifo_cap,
        if_empty_n => block_A_loader_34_empty_n,
        if_read => systolic_array_k_12_U0_block_A_loader_3_read);

    block_B_loader_05_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_B_loader_05_din,
        if_full_n => block_B_loader_05_full_n,
        if_write => init_block_AB_proc28_U0_block_B_loader_05_write,
        if_dout => block_B_loader_05_dout,
        if_num_data_valid => block_B_loader_05_num_data_valid,
        if_fifo_cap => block_B_loader_05_fifo_cap,
        if_empty_n => block_B_loader_05_empty_n,
        if_read => systolic_array_k_12_U0_block_B_loader_0_read);

    block_B_loader_16_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_B_loader_16_din,
        if_full_n => block_B_loader_16_full_n,
        if_write => init_block_AB_proc28_U0_block_B_loader_16_write,
        if_dout => block_B_loader_16_dout,
        if_num_data_valid => block_B_loader_16_num_data_valid,
        if_fifo_cap => block_B_loader_16_fifo_cap,
        if_empty_n => block_B_loader_16_empty_n,
        if_read => systolic_array_k_12_U0_block_B_loader_1_read);

    block_B_loader_27_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_B_loader_27_din,
        if_full_n => block_B_loader_27_full_n,
        if_write => init_block_AB_proc28_U0_block_B_loader_27_write,
        if_dout => block_B_loader_27_dout,
        if_num_data_valid => block_B_loader_27_num_data_valid,
        if_fifo_cap => block_B_loader_27_fifo_cap,
        if_empty_n => block_B_loader_27_empty_n,
        if_read => systolic_array_k_12_U0_block_B_loader_2_read);

    block_B_loader_38_U : component Bert_layer_fifo_w8_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_block_B_loader_38_din,
        if_full_n => block_B_loader_38_full_n,
        if_write => init_block_AB_proc28_U0_block_B_loader_38_write,
        if_dout => block_B_loader_38_dout,
        if_num_data_valid => block_B_loader_38_num_data_valid,
        if_fifo_cap => block_B_loader_38_fifo_cap,
        if_empty_n => block_B_loader_38_empty_n,
        if_read => systolic_array_k_12_U0_block_B_loader_3_read);

    ii_c_U : component Bert_layer_fifo_w2_d3_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_ii_c_din,
        if_full_n => ii_c_full_n,
        if_write => init_block_AB_proc28_U0_ii_c_write,
        if_dout => ii_c_dout,
        if_num_data_valid => ii_c_num_data_valid,
        if_fifo_cap => ii_c_fifo_cap,
        if_empty_n => ii_c_empty_n,
        if_read => VITIS_LOOP_132_4_proc31_U0_ii_read);

    ii_c1_U : component Bert_layer_fifo_w2_d3_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_ii_c1_din,
        if_full_n => ii_c1_full_n,
        if_write => init_block_AB_proc28_U0_ii_c1_write,
        if_dout => ii_c1_dout,
        if_num_data_valid => ii_c1_num_data_valid,
        if_fifo_cap => ii_c1_fifo_cap,
        if_empty_n => ii_c1_empty_n,
        if_read => VITIS_LOOP_132_4_proc30_U0_ii_read);

    ii_c2_U : component Bert_layer_fifo_w2_d3_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_ii_c2_din,
        if_full_n => ii_c2_full_n,
        if_write => init_block_AB_proc28_U0_ii_c2_write,
        if_dout => ii_c2_dout,
        if_num_data_valid => ii_c2_num_data_valid,
        if_fifo_cap => ii_c2_fifo_cap,
        if_empty_n => ii_c2_empty_n,
        if_read => VITIS_LOOP_132_4_proc29_U0_ii_read);

    ii_c3_U : component Bert_layer_fifo_w2_d3_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_ii_c3_din,
        if_full_n => ii_c3_full_n,
        if_write => init_block_AB_proc28_U0_ii_c3_write,
        if_dout => ii_c3_dout,
        if_num_data_valid => ii_c3_num_data_valid,
        if_fifo_cap => ii_c3_fifo_cap,
        if_empty_n => ii_c3_empty_n,
        if_read => VITIS_LOOP_132_4_proc_U0_ii_read);

    jj_c_U : component Bert_layer_fifo_w4_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_jj_c_din,
        if_full_n => jj_c_full_n,
        if_write => init_block_AB_proc28_U0_jj_c_write,
        if_dout => jj_c_dout,
        if_num_data_valid => jj_c_num_data_valid,
        if_fifo_cap => jj_c_fifo_cap,
        if_empty_n => jj_c_empty_n,
        if_read => VITIS_LOOP_132_4_proc31_U0_jj_read);

    jj_c4_U : component Bert_layer_fifo_w4_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_jj_c4_din,
        if_full_n => jj_c4_full_n,
        if_write => init_block_AB_proc28_U0_jj_c4_write,
        if_dout => jj_c4_dout,
        if_num_data_valid => jj_c4_num_data_valid,
        if_fifo_cap => jj_c4_fifo_cap,
        if_empty_n => jj_c4_empty_n,
        if_read => VITIS_LOOP_132_4_proc30_U0_jj_read);

    jj_c5_U : component Bert_layer_fifo_w4_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_jj_c5_din,
        if_full_n => jj_c5_full_n,
        if_write => init_block_AB_proc28_U0_jj_c5_write,
        if_dout => jj_c5_dout,
        if_num_data_valid => jj_c5_num_data_valid,
        if_fifo_cap => jj_c5_fifo_cap,
        if_empty_n => jj_c5_empty_n,
        if_read => VITIS_LOOP_132_4_proc29_U0_jj_read);

    jj_c6_U : component Bert_layer_fifo_w4_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => init_block_AB_proc28_U0_jj_c6_din,
        if_full_n => jj_c6_full_n,
        if_write => init_block_AB_proc28_U0_jj_c6_write,
        if_dout => jj_c6_dout,
        if_num_data_valid => jj_c6_num_data_valid,
        if_fifo_cap => jj_c6_fifo_cap,
        if_empty_n => jj_c6_empty_n,
        if_read => VITIS_LOOP_132_4_proc_U0_jj_read);

    block_C_drainer_09_U : component Bert_layer_fifo_w24_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => systolic_array_k_12_U0_block_C_drainer_0_din,
        if_full_n => block_C_drainer_09_full_n,
        if_write => systolic_array_k_12_U0_block_C_drainer_0_write,
        if_dout => block_C_drainer_09_dout,
        if_num_data_valid => block_C_drainer_09_num_data_valid,
        if_fifo_cap => block_C_drainer_09_fifo_cap,
        if_empty_n => block_C_drainer_09_empty_n,
        if_read => VITIS_LOOP_132_4_proc_U0_block_C_drainer_09_read);

    block_C_drainer_110_U : component Bert_layer_fifo_w24_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => systolic_array_k_12_U0_block_C_drainer_1_din,
        if_full_n => block_C_drainer_110_full_n,
        if_write => systolic_array_k_12_U0_block_C_drainer_1_write,
        if_dout => block_C_drainer_110_dout,
        if_num_data_valid => block_C_drainer_110_num_data_valid,
        if_fifo_cap => block_C_drainer_110_fifo_cap,
        if_empty_n => block_C_drainer_110_empty_n,
        if_read => VITIS_LOOP_132_4_proc29_U0_block_C_drainer_110_read);

    block_C_drainer_211_U : component Bert_layer_fifo_w24_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => systolic_array_k_12_U0_block_C_drainer_2_din,
        if_full_n => block_C_drainer_211_full_n,
        if_write => systolic_array_k_12_U0_block_C_drainer_2_write,
        if_dout => block_C_drainer_211_dout,
        if_num_data_valid => block_C_drainer_211_num_data_valid,
        if_fifo_cap => block_C_drainer_211_fifo_cap,
        if_empty_n => block_C_drainer_211_empty_n,
        if_read => VITIS_LOOP_132_4_proc30_U0_block_C_drainer_211_read);

    block_C_drainer_312_U : component Bert_layer_fifo_w24_d2_S_x3
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => systolic_array_k_12_U0_block_C_drainer_3_din,
        if_full_n => block_C_drainer_312_full_n,
        if_write => systolic_array_k_12_U0_block_C_drainer_3_write,
        if_dout => block_C_drainer_312_dout,
        if_num_data_valid => block_C_drainer_312_num_data_valid,
        if_fifo_cap => block_C_drainer_312_fifo_cap,
        if_empty_n => block_C_drainer_312_empty_n,
        if_read => VITIS_LOOP_132_4_proc31_U0_block_C_drainer_312_read);

    start_for_systolic_array_k_12_U0_U : component Bert_layer_start_for_systolic_array_k_12_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_systolic_array_k_12_U0_din,
        if_full_n => start_for_systolic_array_k_12_U0_full_n,
        if_write => init_block_AB_proc28_U0_start_write,
        if_dout => start_for_systolic_array_k_12_U0_dout,
        if_empty_n => start_for_systolic_array_k_12_U0_empty_n,
        if_read => systolic_array_k_12_U0_ap_ready);





    ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready <= ap_sync_VITIS_LOOP_132_4_proc29_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready <= ap_sync_VITIS_LOOP_132_4_proc30_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready <= ap_sync_VITIS_LOOP_132_4_proc31_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready <= ap_sync_VITIS_LOOP_132_4_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_init_block_AB_proc28_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_init_block_AB_proc28_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_init_block_AB_proc28_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_init_block_AB_proc28_U0_ap_ready <= ap_sync_init_block_AB_proc28_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    A_0_address0 <= init_block_AB_proc28_U0_A_0_address0;
    A_0_address1 <= ap_const_lv6_0;
    A_0_ce0 <= init_block_AB_proc28_U0_A_0_ce0;
    A_0_ce1 <= ap_const_logic_0;
    A_0_d0 <= ap_const_lv8_0;
    A_0_d1 <= ap_const_lv8_0;
    A_0_we0 <= ap_const_logic_0;
    A_0_we1 <= ap_const_logic_0;
    A_1_address0 <= init_block_AB_proc28_U0_A_1_address0;
    A_1_address1 <= ap_const_lv6_0;
    A_1_ce0 <= init_block_AB_proc28_U0_A_1_ce0;
    A_1_ce1 <= ap_const_logic_0;
    A_1_d0 <= ap_const_lv8_0;
    A_1_d1 <= ap_const_lv8_0;
    A_1_we0 <= ap_const_logic_0;
    A_1_we1 <= ap_const_logic_0;
    A_2_address0 <= init_block_AB_proc28_U0_A_2_address0;
    A_2_address1 <= ap_const_lv6_0;
    A_2_ce0 <= init_block_AB_proc28_U0_A_2_ce0;
    A_2_ce1 <= ap_const_logic_0;
    A_2_d0 <= ap_const_lv8_0;
    A_2_d1 <= ap_const_lv8_0;
    A_2_we0 <= ap_const_logic_0;
    A_2_we1 <= ap_const_logic_0;
    A_3_address0 <= init_block_AB_proc28_U0_A_3_address0;
    A_3_address1 <= ap_const_lv6_0;
    A_3_ce0 <= init_block_AB_proc28_U0_A_3_ce0;
    A_3_ce1 <= ap_const_logic_0;
    A_3_d0 <= ap_const_lv8_0;
    A_3_d1 <= ap_const_lv8_0;
    A_3_we0 <= ap_const_logic_0;
    A_3_we1 <= ap_const_logic_0;
    B_0_address0 <= init_block_AB_proc28_U0_B_0_address0;
    B_0_address1 <= ap_const_lv8_0;
    B_0_ce0 <= init_block_AB_proc28_U0_B_0_ce0;
    B_0_ce1 <= ap_const_logic_0;
    B_0_d0 <= ap_const_lv8_0;
    B_0_d1 <= ap_const_lv8_0;
    B_0_we0 <= ap_const_logic_0;
    B_0_we1 <= ap_const_logic_0;
    B_1_address0 <= init_block_AB_proc28_U0_B_1_address0;
    B_1_address1 <= ap_const_lv8_0;
    B_1_ce0 <= init_block_AB_proc28_U0_B_1_ce0;
    B_1_ce1 <= ap_const_logic_0;
    B_1_d0 <= ap_const_lv8_0;
    B_1_d1 <= ap_const_lv8_0;
    B_1_we0 <= ap_const_logic_0;
    B_1_we1 <= ap_const_logic_0;
    B_2_address0 <= init_block_AB_proc28_U0_B_2_address0;
    B_2_address1 <= ap_const_lv8_0;
    B_2_ce0 <= init_block_AB_proc28_U0_B_2_ce0;
    B_2_ce1 <= ap_const_logic_0;
    B_2_d0 <= ap_const_lv8_0;
    B_2_d1 <= ap_const_lv8_0;
    B_2_we0 <= ap_const_logic_0;
    B_2_we1 <= ap_const_logic_0;
    B_3_address0 <= init_block_AB_proc28_U0_B_3_address0;
    B_3_address1 <= ap_const_lv8_0;
    B_3_ce0 <= init_block_AB_proc28_U0_B_3_ce0;
    B_3_ce1 <= ap_const_logic_0;
    B_3_d0 <= ap_const_lv8_0;
    B_3_d1 <= ap_const_lv8_0;
    B_3_we0 <= ap_const_logic_0;
    B_3_we1 <= ap_const_logic_0;
    C_0_address0 <= VITIS_LOOP_132_4_proc_U0_C_0_address0;
    C_0_address1 <= VITIS_LOOP_132_4_proc_U0_C_0_address1;
    C_0_ce0 <= VITIS_LOOP_132_4_proc_U0_C_0_ce0;
    C_0_ce1 <= VITIS_LOOP_132_4_proc_U0_C_0_ce1;
    C_0_d0 <= VITIS_LOOP_132_4_proc_U0_C_0_d0;
    C_0_d1 <= ap_const_lv24_0;
    C_0_we0 <= VITIS_LOOP_132_4_proc_U0_C_0_we0;
    C_0_we1 <= ap_const_logic_0;
    C_1_address0 <= VITIS_LOOP_132_4_proc29_U0_C_1_address0;
    C_1_address1 <= VITIS_LOOP_132_4_proc29_U0_C_1_address1;
    C_1_ce0 <= VITIS_LOOP_132_4_proc29_U0_C_1_ce0;
    C_1_ce1 <= VITIS_LOOP_132_4_proc29_U0_C_1_ce1;
    C_1_d0 <= VITIS_LOOP_132_4_proc29_U0_C_1_d0;
    C_1_d1 <= ap_const_lv24_0;
    C_1_we0 <= VITIS_LOOP_132_4_proc29_U0_C_1_we0;
    C_1_we1 <= ap_const_logic_0;
    C_2_address0 <= VITIS_LOOP_132_4_proc30_U0_C_2_address0;
    C_2_address1 <= VITIS_LOOP_132_4_proc30_U0_C_2_address1;
    C_2_ce0 <= VITIS_LOOP_132_4_proc30_U0_C_2_ce0;
    C_2_ce1 <= VITIS_LOOP_132_4_proc30_U0_C_2_ce1;
    C_2_d0 <= VITIS_LOOP_132_4_proc30_U0_C_2_d0;
    C_2_d1 <= ap_const_lv24_0;
    C_2_we0 <= VITIS_LOOP_132_4_proc30_U0_C_2_we0;
    C_2_we1 <= ap_const_logic_0;
    C_3_address0 <= VITIS_LOOP_132_4_proc31_U0_C_3_address0;
    C_3_address1 <= VITIS_LOOP_132_4_proc31_U0_C_3_address1;
    C_3_ce0 <= VITIS_LOOP_132_4_proc31_U0_C_3_ce0;
    C_3_ce1 <= VITIS_LOOP_132_4_proc31_U0_C_3_ce1;
    C_3_d0 <= VITIS_LOOP_132_4_proc31_U0_C_3_d0;
    C_3_d1 <= ap_const_lv24_0;
    C_3_we0 <= VITIS_LOOP_132_4_proc31_U0_C_3_we0;
    C_3_we1 <= ap_const_logic_0;
    VITIS_LOOP_132_4_proc29_U0_ap_continue <= ap_sync_continue;
    VITIS_LOOP_132_4_proc29_U0_ap_start <= ((ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready xor ap_const_logic_1) and ap_start);
    VITIS_LOOP_132_4_proc30_U0_ap_continue <= ap_sync_continue;
    VITIS_LOOP_132_4_proc30_U0_ap_start <= ((ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready xor ap_const_logic_1) and ap_start);
    VITIS_LOOP_132_4_proc31_U0_ap_continue <= ap_sync_continue;
    VITIS_LOOP_132_4_proc31_U0_ap_start <= ((ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready xor ap_const_logic_1) and ap_start);
    VITIS_LOOP_132_4_proc_U0_ap_continue <= ap_sync_continue;
    VITIS_LOOP_132_4_proc_U0_ap_start <= ((ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_done <= ap_sync_done;
    ap_idle <= (systolic_array_k_12_U0_ap_idle and init_block_AB_proc28_U0_ap_idle and VITIS_LOOP_132_4_proc_U0_ap_idle and VITIS_LOOP_132_4_proc31_U0_ap_idle and VITIS_LOOP_132_4_proc30_U0_ap_idle and VITIS_LOOP_132_4_proc29_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_VITIS_LOOP_132_4_proc29_U0_ap_ready <= (ap_sync_reg_VITIS_LOOP_132_4_proc29_U0_ap_ready or VITIS_LOOP_132_4_proc29_U0_ap_ready);
    ap_sync_VITIS_LOOP_132_4_proc30_U0_ap_ready <= (ap_sync_reg_VITIS_LOOP_132_4_proc30_U0_ap_ready or VITIS_LOOP_132_4_proc30_U0_ap_ready);
    ap_sync_VITIS_LOOP_132_4_proc31_U0_ap_ready <= (ap_sync_reg_VITIS_LOOP_132_4_proc31_U0_ap_ready or VITIS_LOOP_132_4_proc31_U0_ap_ready);
    ap_sync_VITIS_LOOP_132_4_proc_U0_ap_ready <= (ap_sync_reg_VITIS_LOOP_132_4_proc_U0_ap_ready or VITIS_LOOP_132_4_proc_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (VITIS_LOOP_132_4_proc_U0_ap_done and VITIS_LOOP_132_4_proc31_U0_ap_done and VITIS_LOOP_132_4_proc30_U0_ap_done and VITIS_LOOP_132_4_proc29_U0_ap_done);
    ap_sync_init_block_AB_proc28_U0_ap_ready <= (init_block_AB_proc28_U0_ap_ready or ap_sync_reg_init_block_AB_proc28_U0_ap_ready);
    ap_sync_ready <= (ap_sync_init_block_AB_proc28_U0_ap_ready and ap_sync_VITIS_LOOP_132_4_proc_U0_ap_ready and ap_sync_VITIS_LOOP_132_4_proc31_U0_ap_ready and ap_sync_VITIS_LOOP_132_4_proc30_U0_ap_ready and ap_sync_VITIS_LOOP_132_4_proc29_U0_ap_ready);
    init_block_AB_proc28_U0_ap_continue <= ap_const_logic_1;
    init_block_AB_proc28_U0_ap_start <= ((ap_sync_reg_init_block_AB_proc28_U0_ap_ready xor ap_const_logic_1) and ap_start);
    
    init_block_AB_proc28_U0_jj_proc : process(jj)
    variable vlo_cpy : STD_LOGIC_VECTOR(5+5 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(5+5 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(5 - 1 downto 0);
    variable init_block_AB_proc28_U0_jj_i : integer;
    variable section : STD_LOGIC_VECTOR(5 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(5 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(5 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(3 - 1 downto 0) := ap_const_lv5_0(3 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(3 - 1 downto 0) := ap_const_lv5_4(3 - 1 downto 0);
        v0_cpy := jj;
        if (vlo_cpy(3 - 1 downto 0) > vhi_cpy(3 - 1 downto 0)) then
            vhi_cpy(3-1 downto 0) := std_logic_vector(5-1-unsigned(ap_const_lv5_4(3-1 downto 0)));
            vlo_cpy(3-1 downto 0) := std_logic_vector(5-1-unsigned(ap_const_lv5_0(3-1 downto 0)));
            for init_block_AB_proc28_U0_jj_i in 0 to 5-1 loop
                v0_cpy(init_block_AB_proc28_U0_jj_i) := jj(5-1-init_block_AB_proc28_U0_jj_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(3-1 downto 0)))));

        section := (others=>'0');
        section(3-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(3-1 downto 0)) - unsigned(vlo_cpy(3-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(5-1 downto 0)))));
        res_mask := res_mask(5-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        init_block_AB_proc28_U0_jj <= resvalue(4-1 downto 0);
    end process;

    start_for_systolic_array_k_12_U0_din <= (0=>ap_const_logic_1, others=>'-');
    systolic_array_k_12_U0_ap_continue <= ap_const_logic_1;
    systolic_array_k_12_U0_ap_start <= start_for_systolic_array_k_12_U0_empty_n;
end behav;
