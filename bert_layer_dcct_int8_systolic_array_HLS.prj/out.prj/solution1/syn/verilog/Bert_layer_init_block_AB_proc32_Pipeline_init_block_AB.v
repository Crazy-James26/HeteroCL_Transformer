// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_init_block_AB_proc32_Pipeline_init_block_AB (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        block_A_loader_01_din,
        block_A_loader_01_num_data_valid,
        block_A_loader_01_fifo_cap,
        block_A_loader_01_full_n,
        block_A_loader_01_write,
        block_A_loader_12_din,
        block_A_loader_12_num_data_valid,
        block_A_loader_12_fifo_cap,
        block_A_loader_12_full_n,
        block_A_loader_12_write,
        block_A_loader_23_din,
        block_A_loader_23_num_data_valid,
        block_A_loader_23_fifo_cap,
        block_A_loader_23_full_n,
        block_A_loader_23_write,
        block_A_loader_34_din,
        block_A_loader_34_num_data_valid,
        block_A_loader_34_fifo_cap,
        block_A_loader_34_full_n,
        block_A_loader_34_write,
        block_A_loader_45_din,
        block_A_loader_45_num_data_valid,
        block_A_loader_45_fifo_cap,
        block_A_loader_45_full_n,
        block_A_loader_45_write,
        block_A_loader_56_din,
        block_A_loader_56_num_data_valid,
        block_A_loader_56_fifo_cap,
        block_A_loader_56_full_n,
        block_A_loader_56_write,
        block_A_loader_67_din,
        block_A_loader_67_num_data_valid,
        block_A_loader_67_fifo_cap,
        block_A_loader_67_full_n,
        block_A_loader_67_write,
        block_A_loader_78_din,
        block_A_loader_78_num_data_valid,
        block_A_loader_78_fifo_cap,
        block_A_loader_78_full_n,
        block_A_loader_78_write,
        block_A_loader_89_din,
        block_A_loader_89_num_data_valid,
        block_A_loader_89_fifo_cap,
        block_A_loader_89_full_n,
        block_A_loader_89_write,
        block_A_loader_910_din,
        block_A_loader_910_num_data_valid,
        block_A_loader_910_fifo_cap,
        block_A_loader_910_full_n,
        block_A_loader_910_write,
        block_A_loader_1011_din,
        block_A_loader_1011_num_data_valid,
        block_A_loader_1011_fifo_cap,
        block_A_loader_1011_full_n,
        block_A_loader_1011_write,
        block_A_loader_1112_din,
        block_A_loader_1112_num_data_valid,
        block_A_loader_1112_fifo_cap,
        block_A_loader_1112_full_n,
        block_A_loader_1112_write,
        block_B_loader_013_din,
        block_B_loader_013_num_data_valid,
        block_B_loader_013_fifo_cap,
        block_B_loader_013_full_n,
        block_B_loader_013_write,
        block_B_loader_114_din,
        block_B_loader_114_num_data_valid,
        block_B_loader_114_fifo_cap,
        block_B_loader_114_full_n,
        block_B_loader_114_write,
        block_B_loader_215_din,
        block_B_loader_215_num_data_valid,
        block_B_loader_215_fifo_cap,
        block_B_loader_215_full_n,
        block_B_loader_215_write,
        block_B_loader_316_din,
        block_B_loader_316_num_data_valid,
        block_B_loader_316_fifo_cap,
        block_B_loader_316_full_n,
        block_B_loader_316_write,
        block_B_loader_417_din,
        block_B_loader_417_num_data_valid,
        block_B_loader_417_fifo_cap,
        block_B_loader_417_full_n,
        block_B_loader_417_write,
        block_B_loader_518_din,
        block_B_loader_518_num_data_valid,
        block_B_loader_518_fifo_cap,
        block_B_loader_518_full_n,
        block_B_loader_518_write,
        block_B_loader_619_din,
        block_B_loader_619_num_data_valid,
        block_B_loader_619_fifo_cap,
        block_B_loader_619_full_n,
        block_B_loader_619_write,
        block_B_loader_720_din,
        block_B_loader_720_num_data_valid,
        block_B_loader_720_fifo_cap,
        block_B_loader_720_full_n,
        block_B_loader_720_write,
        block_B_loader_821_din,
        block_B_loader_821_num_data_valid,
        block_B_loader_821_fifo_cap,
        block_B_loader_821_full_n,
        block_B_loader_821_write,
        block_B_loader_922_din,
        block_B_loader_922_num_data_valid,
        block_B_loader_922_fifo_cap,
        block_B_loader_922_full_n,
        block_B_loader_922_write,
        block_B_loader_1023_din,
        block_B_loader_1023_num_data_valid,
        block_B_loader_1023_fifo_cap,
        block_B_loader_1023_full_n,
        block_B_loader_1023_write,
        block_B_loader_1124_din,
        block_B_loader_1124_num_data_valid,
        block_B_loader_1124_fifo_cap,
        block_B_loader_1124_full_n,
        block_B_loader_1124_write,
        sub_ln174_i,
        v330_0_address0,
        v330_0_ce0,
        v330_0_q0,
        v330_1_address0,
        v330_1_ce0,
        v330_1_q0,
        v330_2_address0,
        v330_2_ce0,
        v330_2_q0,
        v330_3_address0,
        v330_3_ce0,
        v330_3_q0,
        v330_4_address0,
        v330_4_ce0,
        v330_4_q0,
        v330_5_address0,
        v330_5_ce0,
        v330_5_q0,
        v330_6_address0,
        v330_6_ce0,
        v330_6_q0,
        v330_7_address0,
        v330_7_ce0,
        v330_7_q0,
        v330_8_address0,
        v330_8_ce0,
        v330_8_q0,
        v330_9_address0,
        v330_9_ce0,
        v330_9_q0,
        v330_10_address0,
        v330_10_ce0,
        v330_10_q0,
        v330_11_address0,
        v330_11_ce0,
        v330_11_q0,
        A_0_address0,
        A_0_ce0,
        A_0_q0,
        A_1_address0,
        A_1_ce0,
        A_1_q0,
        A_2_address0,
        A_2_ce0,
        A_2_q0,
        A_3_address0,
        A_3_ce0,
        A_3_q0,
        A_4_address0,
        A_4_ce0,
        A_4_q0,
        A_5_address0,
        A_5_ce0,
        A_5_q0,
        A_6_address0,
        A_6_ce0,
        A_6_q0,
        A_7_address0,
        A_7_ce0,
        A_7_q0,
        A_8_address0,
        A_8_ce0,
        A_8_q0,
        A_9_address0,
        A_9_ce0,
        A_9_q0,
        A_10_address0,
        A_10_ce0,
        A_10_q0,
        A_11_address0,
        A_11_ce0,
        A_11_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] block_A_loader_01_din;
input  [1:0] block_A_loader_01_num_data_valid;
input  [1:0] block_A_loader_01_fifo_cap;
input   block_A_loader_01_full_n;
output   block_A_loader_01_write;
output  [7:0] block_A_loader_12_din;
input  [1:0] block_A_loader_12_num_data_valid;
input  [1:0] block_A_loader_12_fifo_cap;
input   block_A_loader_12_full_n;
output   block_A_loader_12_write;
output  [7:0] block_A_loader_23_din;
input  [1:0] block_A_loader_23_num_data_valid;
input  [1:0] block_A_loader_23_fifo_cap;
input   block_A_loader_23_full_n;
output   block_A_loader_23_write;
output  [7:0] block_A_loader_34_din;
input  [1:0] block_A_loader_34_num_data_valid;
input  [1:0] block_A_loader_34_fifo_cap;
input   block_A_loader_34_full_n;
output   block_A_loader_34_write;
output  [7:0] block_A_loader_45_din;
input  [1:0] block_A_loader_45_num_data_valid;
input  [1:0] block_A_loader_45_fifo_cap;
input   block_A_loader_45_full_n;
output   block_A_loader_45_write;
output  [7:0] block_A_loader_56_din;
input  [1:0] block_A_loader_56_num_data_valid;
input  [1:0] block_A_loader_56_fifo_cap;
input   block_A_loader_56_full_n;
output   block_A_loader_56_write;
output  [7:0] block_A_loader_67_din;
input  [1:0] block_A_loader_67_num_data_valid;
input  [1:0] block_A_loader_67_fifo_cap;
input   block_A_loader_67_full_n;
output   block_A_loader_67_write;
output  [7:0] block_A_loader_78_din;
input  [1:0] block_A_loader_78_num_data_valid;
input  [1:0] block_A_loader_78_fifo_cap;
input   block_A_loader_78_full_n;
output   block_A_loader_78_write;
output  [7:0] block_A_loader_89_din;
input  [1:0] block_A_loader_89_num_data_valid;
input  [1:0] block_A_loader_89_fifo_cap;
input   block_A_loader_89_full_n;
output   block_A_loader_89_write;
output  [7:0] block_A_loader_910_din;
input  [1:0] block_A_loader_910_num_data_valid;
input  [1:0] block_A_loader_910_fifo_cap;
input   block_A_loader_910_full_n;
output   block_A_loader_910_write;
output  [7:0] block_A_loader_1011_din;
input  [1:0] block_A_loader_1011_num_data_valid;
input  [1:0] block_A_loader_1011_fifo_cap;
input   block_A_loader_1011_full_n;
output   block_A_loader_1011_write;
output  [7:0] block_A_loader_1112_din;
input  [1:0] block_A_loader_1112_num_data_valid;
input  [1:0] block_A_loader_1112_fifo_cap;
input   block_A_loader_1112_full_n;
output   block_A_loader_1112_write;
output  [3:0] block_B_loader_013_din;
input  [1:0] block_B_loader_013_num_data_valid;
input  [1:0] block_B_loader_013_fifo_cap;
input   block_B_loader_013_full_n;
output   block_B_loader_013_write;
output  [3:0] block_B_loader_114_din;
input  [1:0] block_B_loader_114_num_data_valid;
input  [1:0] block_B_loader_114_fifo_cap;
input   block_B_loader_114_full_n;
output   block_B_loader_114_write;
output  [3:0] block_B_loader_215_din;
input  [1:0] block_B_loader_215_num_data_valid;
input  [1:0] block_B_loader_215_fifo_cap;
input   block_B_loader_215_full_n;
output   block_B_loader_215_write;
output  [3:0] block_B_loader_316_din;
input  [1:0] block_B_loader_316_num_data_valid;
input  [1:0] block_B_loader_316_fifo_cap;
input   block_B_loader_316_full_n;
output   block_B_loader_316_write;
output  [3:0] block_B_loader_417_din;
input  [1:0] block_B_loader_417_num_data_valid;
input  [1:0] block_B_loader_417_fifo_cap;
input   block_B_loader_417_full_n;
output   block_B_loader_417_write;
output  [3:0] block_B_loader_518_din;
input  [1:0] block_B_loader_518_num_data_valid;
input  [1:0] block_B_loader_518_fifo_cap;
input   block_B_loader_518_full_n;
output   block_B_loader_518_write;
output  [3:0] block_B_loader_619_din;
input  [1:0] block_B_loader_619_num_data_valid;
input  [1:0] block_B_loader_619_fifo_cap;
input   block_B_loader_619_full_n;
output   block_B_loader_619_write;
output  [3:0] block_B_loader_720_din;
input  [1:0] block_B_loader_720_num_data_valid;
input  [1:0] block_B_loader_720_fifo_cap;
input   block_B_loader_720_full_n;
output   block_B_loader_720_write;
output  [3:0] block_B_loader_821_din;
input  [1:0] block_B_loader_821_num_data_valid;
input  [1:0] block_B_loader_821_fifo_cap;
input   block_B_loader_821_full_n;
output   block_B_loader_821_write;
output  [3:0] block_B_loader_922_din;
input  [1:0] block_B_loader_922_num_data_valid;
input  [1:0] block_B_loader_922_fifo_cap;
input   block_B_loader_922_full_n;
output   block_B_loader_922_write;
output  [3:0] block_B_loader_1023_din;
input  [1:0] block_B_loader_1023_num_data_valid;
input  [1:0] block_B_loader_1023_fifo_cap;
input   block_B_loader_1023_full_n;
output   block_B_loader_1023_write;
output  [3:0] block_B_loader_1124_din;
input  [1:0] block_B_loader_1124_num_data_valid;
input  [1:0] block_B_loader_1124_fifo_cap;
input   block_B_loader_1124_full_n;
output   block_B_loader_1124_write;
input  [15:0] sub_ln174_i;
output  [15:0] v330_0_address0;
output   v330_0_ce0;
input  [3:0] v330_0_q0;
output  [15:0] v330_1_address0;
output   v330_1_ce0;
input  [3:0] v330_1_q0;
output  [15:0] v330_2_address0;
output   v330_2_ce0;
input  [3:0] v330_2_q0;
output  [15:0] v330_3_address0;
output   v330_3_ce0;
input  [3:0] v330_3_q0;
output  [15:0] v330_4_address0;
output   v330_4_ce0;
input  [3:0] v330_4_q0;
output  [15:0] v330_5_address0;
output   v330_5_ce0;
input  [3:0] v330_5_q0;
output  [15:0] v330_6_address0;
output   v330_6_ce0;
input  [3:0] v330_6_q0;
output  [15:0] v330_7_address0;
output   v330_7_ce0;
input  [3:0] v330_7_q0;
output  [15:0] v330_8_address0;
output   v330_8_ce0;
input  [3:0] v330_8_q0;
output  [15:0] v330_9_address0;
output   v330_9_ce0;
input  [3:0] v330_9_q0;
output  [15:0] v330_10_address0;
output   v330_10_ce0;
input  [3:0] v330_10_q0;
output  [15:0] v330_11_address0;
output   v330_11_ce0;
input  [3:0] v330_11_q0;
output  [9:0] A_0_address0;
output   A_0_ce0;
input  [7:0] A_0_q0;
output  [9:0] A_1_address0;
output   A_1_ce0;
input  [7:0] A_1_q0;
output  [9:0] A_2_address0;
output   A_2_ce0;
input  [7:0] A_2_q0;
output  [9:0] A_3_address0;
output   A_3_ce0;
input  [7:0] A_3_q0;
output  [9:0] A_4_address0;
output   A_4_ce0;
input  [7:0] A_4_q0;
output  [9:0] A_5_address0;
output   A_5_ce0;
input  [7:0] A_5_q0;
output  [9:0] A_6_address0;
output   A_6_ce0;
input  [7:0] A_6_q0;
output  [9:0] A_7_address0;
output   A_7_ce0;
input  [7:0] A_7_q0;
output  [9:0] A_8_address0;
output   A_8_ce0;
input  [7:0] A_8_q0;
output  [9:0] A_9_address0;
output   A_9_ce0;
input  [7:0] A_9_q0;
output  [9:0] A_10_address0;
output   A_10_ce0;
input  [7:0] A_10_q0;
output  [9:0] A_11_address0;
output   A_11_ce0;
input  [7:0] A_11_q0;

reg ap_idle;
reg block_A_loader_01_write;
reg block_A_loader_12_write;
reg block_A_loader_23_write;
reg block_A_loader_34_write;
reg block_A_loader_45_write;
reg block_A_loader_56_write;
reg block_A_loader_67_write;
reg block_A_loader_78_write;
reg block_A_loader_89_write;
reg block_A_loader_910_write;
reg block_A_loader_1011_write;
reg block_A_loader_1112_write;
reg block_B_loader_013_write;
reg block_B_loader_114_write;
reg block_B_loader_215_write;
reg block_B_loader_316_write;
reg block_B_loader_417_write;
reg block_B_loader_518_write;
reg block_B_loader_619_write;
reg block_B_loader_720_write;
reg block_B_loader_821_write;
reg block_B_loader_922_write;
reg block_B_loader_1023_write;
reg block_B_loader_1124_write;
reg v330_0_ce0;
reg v330_1_ce0;
reg v330_2_ce0;
reg v330_3_ce0;
reg v330_4_ce0;
reg v330_5_ce0;
reg v330_6_ce0;
reg v330_7_ce0;
reg v330_8_ce0;
reg v330_9_ce0;
reg v330_10_ce0;
reg v330_11_ce0;
reg A_0_ce0;
reg A_1_ce0;
reg A_2_ce0;
reg A_3_ce0;
reg A_4_ce0;
reg A_5_ce0;
reg A_6_ce0;
reg A_7_ce0;
reg A_8_ce0;
reg A_9_ce0;
reg A_10_ce0;
reg A_11_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln163_fu_658_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    block_A_loader_01_blk_n;
wire    ap_block_pp0_stage0;
reg    block_A_loader_12_blk_n;
reg    block_A_loader_23_blk_n;
reg    block_A_loader_34_blk_n;
reg    block_A_loader_45_blk_n;
reg    block_A_loader_56_blk_n;
reg    block_A_loader_67_blk_n;
reg    block_A_loader_78_blk_n;
reg    block_A_loader_89_blk_n;
reg    block_A_loader_910_blk_n;
reg    block_A_loader_1011_blk_n;
reg    block_A_loader_1112_blk_n;
reg    block_B_loader_013_blk_n;
reg    block_B_loader_114_blk_n;
reg    block_B_loader_215_blk_n;
reg    block_B_loader_316_blk_n;
reg    block_B_loader_417_blk_n;
reg    block_B_loader_518_blk_n;
reg    block_B_loader_619_blk_n;
reg    block_B_loader_720_blk_n;
reg    block_B_loader_821_blk_n;
reg    block_B_loader_922_blk_n;
reg    block_B_loader_1023_blk_n;
reg    block_B_loader_1124_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln174_4_fu_696_p1;
wire   [63:0] zext_ln163_fu_670_p1;
reg   [9:0] k_fu_136;
wire   [9:0] add_ln163_fu_664_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_k_28;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln174_fu_686_p1;
wire   [15:0] add_ln174_fu_690_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln163_fu_658_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_136 <= add_ln163_fu_664_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_136 <= 10'd0;
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_10_ce0 = 1'b1;
    end else begin
        A_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_11_ce0 = 1'b1;
    end else begin
        A_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_ce0 = 1'b1;
    end else begin
        A_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_ce0 = 1'b1;
    end else begin
        A_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_ce0 = 1'b1;
    end else begin
        A_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_ce0 = 1'b1;
    end else begin
        A_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_ce0 = 1'b1;
    end else begin
        A_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_ce0 = 1'b1;
    end else begin
        A_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_ce0 = 1'b1;
    end else begin
        A_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_9_ce0 = 1'b1;
    end else begin
        A_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln163_fu_658_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_28 = 10'd0;
    end else begin
        ap_sig_allocacmp_k_28 = k_fu_136;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_01_blk_n = block_A_loader_01_full_n;
    end else begin
        block_A_loader_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_01_write = 1'b1;
    end else begin
        block_A_loader_01_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_1011_blk_n = block_A_loader_1011_full_n;
    end else begin
        block_A_loader_1011_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_1011_write = 1'b1;
    end else begin
        block_A_loader_1011_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_1112_blk_n = block_A_loader_1112_full_n;
    end else begin
        block_A_loader_1112_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_1112_write = 1'b1;
    end else begin
        block_A_loader_1112_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_12_blk_n = block_A_loader_12_full_n;
    end else begin
        block_A_loader_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_12_write = 1'b1;
    end else begin
        block_A_loader_12_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_23_blk_n = block_A_loader_23_full_n;
    end else begin
        block_A_loader_23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_23_write = 1'b1;
    end else begin
        block_A_loader_23_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_34_blk_n = block_A_loader_34_full_n;
    end else begin
        block_A_loader_34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_34_write = 1'b1;
    end else begin
        block_A_loader_34_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_45_blk_n = block_A_loader_45_full_n;
    end else begin
        block_A_loader_45_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_45_write = 1'b1;
    end else begin
        block_A_loader_45_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_56_blk_n = block_A_loader_56_full_n;
    end else begin
        block_A_loader_56_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_56_write = 1'b1;
    end else begin
        block_A_loader_56_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_67_blk_n = block_A_loader_67_full_n;
    end else begin
        block_A_loader_67_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_67_write = 1'b1;
    end else begin
        block_A_loader_67_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_78_blk_n = block_A_loader_78_full_n;
    end else begin
        block_A_loader_78_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_78_write = 1'b1;
    end else begin
        block_A_loader_78_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_89_blk_n = block_A_loader_89_full_n;
    end else begin
        block_A_loader_89_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_89_write = 1'b1;
    end else begin
        block_A_loader_89_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_910_blk_n = block_A_loader_910_full_n;
    end else begin
        block_A_loader_910_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_A_loader_910_write = 1'b1;
    end else begin
        block_A_loader_910_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_013_blk_n = block_B_loader_013_full_n;
    end else begin
        block_B_loader_013_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_013_write = 1'b1;
    end else begin
        block_B_loader_013_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_1023_blk_n = block_B_loader_1023_full_n;
    end else begin
        block_B_loader_1023_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_1023_write = 1'b1;
    end else begin
        block_B_loader_1023_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_1124_blk_n = block_B_loader_1124_full_n;
    end else begin
        block_B_loader_1124_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_1124_write = 1'b1;
    end else begin
        block_B_loader_1124_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_114_blk_n = block_B_loader_114_full_n;
    end else begin
        block_B_loader_114_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_114_write = 1'b1;
    end else begin
        block_B_loader_114_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_215_blk_n = block_B_loader_215_full_n;
    end else begin
        block_B_loader_215_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_215_write = 1'b1;
    end else begin
        block_B_loader_215_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_316_blk_n = block_B_loader_316_full_n;
    end else begin
        block_B_loader_316_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_316_write = 1'b1;
    end else begin
        block_B_loader_316_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_417_blk_n = block_B_loader_417_full_n;
    end else begin
        block_B_loader_417_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_417_write = 1'b1;
    end else begin
        block_B_loader_417_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_518_blk_n = block_B_loader_518_full_n;
    end else begin
        block_B_loader_518_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_518_write = 1'b1;
    end else begin
        block_B_loader_518_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_619_blk_n = block_B_loader_619_full_n;
    end else begin
        block_B_loader_619_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_619_write = 1'b1;
    end else begin
        block_B_loader_619_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_720_blk_n = block_B_loader_720_full_n;
    end else begin
        block_B_loader_720_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_720_write = 1'b1;
    end else begin
        block_B_loader_720_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_821_blk_n = block_B_loader_821_full_n;
    end else begin
        block_B_loader_821_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_821_write = 1'b1;
    end else begin
        block_B_loader_821_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_922_blk_n = block_B_loader_922_full_n;
    end else begin
        block_B_loader_922_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        block_B_loader_922_write = 1'b1;
    end else begin
        block_B_loader_922_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_0_ce0 = 1'b1;
    end else begin
        v330_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_10_ce0 = 1'b1;
    end else begin
        v330_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_11_ce0 = 1'b1;
    end else begin
        v330_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_1_ce0 = 1'b1;
    end else begin
        v330_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_2_ce0 = 1'b1;
    end else begin
        v330_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_3_ce0 = 1'b1;
    end else begin
        v330_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_4_ce0 = 1'b1;
    end else begin
        v330_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_5_ce0 = 1'b1;
    end else begin
        v330_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_6_ce0 = 1'b1;
    end else begin
        v330_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_7_ce0 = 1'b1;
    end else begin
        v330_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_8_ce0 = 1'b1;
    end else begin
        v330_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v330_9_ce0 = 1'b1;
    end else begin
        v330_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_0_address0 = zext_ln163_fu_670_p1;

assign A_10_address0 = zext_ln163_fu_670_p1;

assign A_11_address0 = zext_ln163_fu_670_p1;

assign A_1_address0 = zext_ln163_fu_670_p1;

assign A_2_address0 = zext_ln163_fu_670_p1;

assign A_3_address0 = zext_ln163_fu_670_p1;

assign A_4_address0 = zext_ln163_fu_670_p1;

assign A_5_address0 = zext_ln163_fu_670_p1;

assign A_6_address0 = zext_ln163_fu_670_p1;

assign A_7_address0 = zext_ln163_fu_670_p1;

assign A_8_address0 = zext_ln163_fu_670_p1;

assign A_9_address0 = zext_ln163_fu_670_p1;

assign add_ln163_fu_664_p2 = (ap_sig_allocacmp_k_28 + 10'd1);

assign add_ln174_fu_690_p2 = (sub_ln174_i + zext_ln174_fu_686_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((block_A_loader_89_full_n == 1'b0) | (block_A_loader_78_full_n == 1'b0) | (block_A_loader_67_full_n == 1'b0) | (block_A_loader_56_full_n == 1'b0) | (block_A_loader_45_full_n == 1'b0) | (block_A_loader_34_full_n == 1'b0) | (block_A_loader_23_full_n == 1'b0) | (block_A_loader_12_full_n == 1'b0) | (block_A_loader_01_full_n == 1'b0) | (block_B_loader_1124_full_n == 1'b0) | (block_B_loader_1023_full_n == 1'b0) | (block_B_loader_922_full_n == 1'b0) | (block_B_loader_821_full_n == 1'b0) | (block_B_loader_720_full_n == 1'b0) | (block_B_loader_619_full_n == 1'b0) | (block_B_loader_518_full_n == 1'b0) | (block_B_loader_417_full_n == 1'b0) | (block_B_loader_316_full_n == 1'b0) | (block_B_loader_215_full_n == 1'b0) | (block_B_loader_114_full_n == 1'b0) | (block_B_loader_013_full_n == 1'b0) | (block_A_loader_1112_full_n == 1'b0) | (block_A_loader_1011_full_n == 1'b0) | (block_A_loader_910_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((block_A_loader_89_full_n == 1'b0) | (block_A_loader_78_full_n == 1'b0) | (block_A_loader_67_full_n == 1'b0) | (block_A_loader_56_full_n == 1'b0) | (block_A_loader_45_full_n == 1'b0) | (block_A_loader_34_full_n == 1'b0) | (block_A_loader_23_full_n == 1'b0) | (block_A_loader_12_full_n == 1'b0) | (block_A_loader_01_full_n == 1'b0) | (block_B_loader_1124_full_n == 1'b0) | (block_B_loader_1023_full_n == 1'b0) | (block_B_loader_922_full_n == 1'b0) | (block_B_loader_821_full_n == 1'b0) | (block_B_loader_720_full_n == 1'b0) | (block_B_loader_619_full_n == 1'b0) | (block_B_loader_518_full_n == 1'b0) | (block_B_loader_417_full_n == 1'b0) | (block_B_loader_316_full_n == 1'b0) | (block_B_loader_215_full_n == 1'b0) | (block_B_loader_114_full_n == 1'b0) | (block_B_loader_013_full_n == 1'b0) | (block_A_loader_1112_full_n == 1'b0) | (block_A_loader_1011_full_n == 1'b0) | (block_A_loader_910_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((block_A_loader_89_full_n == 1'b0) | (block_A_loader_78_full_n == 1'b0) | (block_A_loader_67_full_n == 1'b0) | (block_A_loader_56_full_n == 1'b0) | (block_A_loader_45_full_n == 1'b0) | (block_A_loader_34_full_n == 1'b0) | (block_A_loader_23_full_n == 1'b0) | (block_A_loader_12_full_n == 1'b0) | (block_A_loader_01_full_n == 1'b0) | (block_B_loader_1124_full_n == 1'b0) | (block_B_loader_1023_full_n == 1'b0) | (block_B_loader_922_full_n == 1'b0) | (block_B_loader_821_full_n == 1'b0) | (block_B_loader_720_full_n == 1'b0) | (block_B_loader_619_full_n == 1'b0) | (block_B_loader_518_full_n == 1'b0) | (block_B_loader_417_full_n == 1'b0) | (block_B_loader_316_full_n == 1'b0) | (block_B_loader_215_full_n == 1'b0) | (block_B_loader_114_full_n == 1'b0) | (block_B_loader_013_full_n == 1'b0) | (block_A_loader_1112_full_n == 1'b0) | (block_A_loader_1011_full_n == 1'b0) | (block_A_loader_910_full_n == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((block_A_loader_89_full_n == 1'b0) | (block_A_loader_78_full_n == 1'b0) | (block_A_loader_67_full_n == 1'b0) | (block_A_loader_56_full_n == 1'b0) | (block_A_loader_45_full_n == 1'b0) | (block_A_loader_34_full_n == 1'b0) | (block_A_loader_23_full_n == 1'b0) | (block_A_loader_12_full_n == 1'b0) | (block_A_loader_01_full_n == 1'b0) | (block_B_loader_1124_full_n == 1'b0) | (block_B_loader_1023_full_n == 1'b0) | (block_B_loader_922_full_n == 1'b0) | (block_B_loader_821_full_n == 1'b0) | (block_B_loader_720_full_n == 1'b0) | (block_B_loader_619_full_n == 1'b0) | (block_B_loader_518_full_n == 1'b0) | (block_B_loader_417_full_n == 1'b0) | (block_B_loader_316_full_n == 1'b0) | (block_B_loader_215_full_n == 1'b0) | (block_B_loader_114_full_n == 1'b0) | (block_B_loader_013_full_n == 1'b0) | (block_A_loader_1112_full_n == 1'b0) | (block_A_loader_1011_full_n == 1'b0) | (block_A_loader_910_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign block_A_loader_01_din = A_0_q0;

assign block_A_loader_1011_din = A_10_q0;

assign block_A_loader_1112_din = A_11_q0;

assign block_A_loader_12_din = A_1_q0;

assign block_A_loader_23_din = A_2_q0;

assign block_A_loader_34_din = A_3_q0;

assign block_A_loader_45_din = A_4_q0;

assign block_A_loader_56_din = A_5_q0;

assign block_A_loader_67_din = A_6_q0;

assign block_A_loader_78_din = A_7_q0;

assign block_A_loader_89_din = A_8_q0;

assign block_A_loader_910_din = A_9_q0;

assign block_B_loader_013_din = v330_0_q0;

assign block_B_loader_1023_din = v330_10_q0;

assign block_B_loader_1124_din = v330_11_q0;

assign block_B_loader_114_din = v330_1_q0;

assign block_B_loader_215_din = v330_2_q0;

assign block_B_loader_316_din = v330_3_q0;

assign block_B_loader_417_din = v330_4_q0;

assign block_B_loader_518_din = v330_5_q0;

assign block_B_loader_619_din = v330_6_q0;

assign block_B_loader_720_din = v330_7_q0;

assign block_B_loader_821_din = v330_8_q0;

assign block_B_loader_922_din = v330_9_q0;

assign icmp_ln163_fu_658_p2 = ((ap_sig_allocacmp_k_28 == 10'd768) ? 1'b1 : 1'b0);

assign v330_0_address0 = zext_ln174_4_fu_696_p1;

assign v330_10_address0 = zext_ln174_4_fu_696_p1;

assign v330_11_address0 = zext_ln174_4_fu_696_p1;

assign v330_1_address0 = zext_ln174_4_fu_696_p1;

assign v330_2_address0 = zext_ln174_4_fu_696_p1;

assign v330_3_address0 = zext_ln174_4_fu_696_p1;

assign v330_4_address0 = zext_ln174_4_fu_696_p1;

assign v330_5_address0 = zext_ln174_4_fu_696_p1;

assign v330_6_address0 = zext_ln174_4_fu_696_p1;

assign v330_7_address0 = zext_ln174_4_fu_696_p1;

assign v330_8_address0 = zext_ln174_4_fu_696_p1;

assign v330_9_address0 = zext_ln174_4_fu_696_p1;

assign zext_ln163_fu_670_p1 = ap_sig_allocacmp_k_28;

assign zext_ln174_4_fu_696_p1 = add_ln174_fu_690_p2;

assign zext_ln174_fu_686_p1 = ap_sig_allocacmp_k_28;

endmodule //Bert_layer_init_block_AB_proc32_Pipeline_init_block_AB
