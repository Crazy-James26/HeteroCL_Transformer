// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_norm_i5_l_j5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v344_address0,
        v344_ce0,
        v344_q0,
        acc_outp1_V_address0,
        acc_outp1_V_ce0,
        acc_outp1_V_q0,
        acc_outp1_V_1_address0,
        acc_outp1_V_1_ce0,
        acc_outp1_V_1_q0,
        acc_outp1_V_2_address0,
        acc_outp1_V_2_ce0,
        acc_outp1_V_2_q0,
        acc_outp1_V_3_address0,
        acc_outp1_V_3_ce0,
        acc_outp1_V_3_q0,
        v123_address0,
        v123_ce0,
        v123_we0,
        v123_d0,
        v123_1_address0,
        v123_1_ce0,
        v123_1_we0,
        v123_1_d0,
        v123_2_address0,
        v123_2_ce0,
        v123_2_we0,
        v123_2_d0,
        v123_3_address0,
        v123_3_ce0,
        v123_3_we0,
        v123_3_d0,
        grp_fu_705_p_din0,
        grp_fu_705_p_din1,
        grp_fu_705_p_dout0,
        grp_fu_705_p_ce,
        grp_fu_709_p_din0,
        grp_fu_709_p_din1,
        grp_fu_709_p_dout0,
        grp_fu_709_p_ce,
        grp_fu_713_p_din0,
        grp_fu_713_p_dout0,
        grp_fu_713_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v344_address0;
output   v344_ce0;
input  [31:0] v344_q0;
output  [5:0] acc_outp1_V_address0;
output   acc_outp1_V_ce0;
input  [23:0] acc_outp1_V_q0;
output  [5:0] acc_outp1_V_1_address0;
output   acc_outp1_V_1_ce0;
input  [23:0] acc_outp1_V_1_q0;
output  [5:0] acc_outp1_V_2_address0;
output   acc_outp1_V_2_ce0;
input  [23:0] acc_outp1_V_2_q0;
output  [5:0] acc_outp1_V_3_address0;
output   acc_outp1_V_3_ce0;
input  [23:0] acc_outp1_V_3_q0;
output  [5:0] v123_address0;
output   v123_ce0;
output   v123_we0;
output  [31:0] v123_d0;
output  [5:0] v123_1_address0;
output   v123_1_ce0;
output   v123_1_we0;
output  [31:0] v123_1_d0;
output  [5:0] v123_2_address0;
output   v123_2_ce0;
output   v123_2_we0;
output  [31:0] v123_2_d0;
output  [5:0] v123_3_address0;
output   v123_3_ce0;
output   v123_3_we0;
output  [31:0] v123_3_d0;
output  [31:0] grp_fu_705_p_din0;
output  [31:0] grp_fu_705_p_din1;
input  [31:0] grp_fu_705_p_dout0;
output   grp_fu_705_p_ce;
output  [31:0] grp_fu_709_p_din0;
output  [31:0] grp_fu_709_p_din1;
input  [31:0] grp_fu_709_p_dout0;
output   grp_fu_709_p_ce;
output  [31:0] grp_fu_713_p_din0;
input  [31:0] grp_fu_713_p_dout0;
output   grp_fu_713_p_ce;

reg ap_idle;
reg v344_ce0;
reg acc_outp1_V_ce0;
reg acc_outp1_V_1_ce0;
reg acc_outp1_V_2_ce0;
reg acc_outp1_V_3_ce0;
reg v123_ce0;
reg v123_we0;
reg v123_1_ce0;
reg v123_1_we0;
reg v123_2_ce0;
reg v123_2_we0;
reg v123_3_ce0;
reg v123_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln99_fu_231_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln99_fu_261_p3;
reg   [3:0] select_ln99_reg_407;
wire   [3:0] select_ln99_1_fu_269_p3;
reg   [3:0] select_ln99_1_reg_412;
reg   [3:0] select_ln99_1_reg_412_pp0_iter1_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter2_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter3_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter4_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter5_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter6_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter7_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter8_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter9_reg;
reg   [3:0] select_ln99_1_reg_412_pp0_iter10_reg;
wire   [1:0] trunc_ln99_fu_277_p1;
reg   [1:0] trunc_ln99_reg_417;
reg   [1:0] trunc_ln99_reg_417_pp0_iter1_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter2_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter3_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter4_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter5_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter6_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter7_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter8_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter9_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter10_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter11_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter12_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter13_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter14_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter15_reg;
reg   [1:0] trunc_ln99_reg_417_pp0_iter16_reg;
reg   [1:0] p_cast11_mid2_v_reg_422;
reg   [5:0] v123_addr_reg_448;
reg   [5:0] v123_addr_reg_448_pp0_iter2_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter3_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter4_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter5_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter6_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter7_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter8_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter9_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter10_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter11_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter12_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter13_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter14_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter15_reg;
reg   [5:0] v123_addr_reg_448_pp0_iter16_reg;
reg   [5:0] v123_1_addr_reg_453;
reg   [5:0] v123_1_addr_reg_453_pp0_iter2_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter3_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter4_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter5_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter6_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter7_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter8_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter9_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter10_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter11_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter12_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter13_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter14_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter15_reg;
reg   [5:0] v123_1_addr_reg_453_pp0_iter16_reg;
reg   [5:0] v123_2_addr_reg_458;
reg   [5:0] v123_2_addr_reg_458_pp0_iter2_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter3_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter4_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter5_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter6_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter7_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter8_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter9_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter10_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter11_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter12_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter13_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter14_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter15_reg;
reg   [5:0] v123_2_addr_reg_458_pp0_iter16_reg;
reg   [5:0] v123_3_addr_reg_463;
reg   [5:0] v123_3_addr_reg_463_pp0_iter2_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter3_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter4_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter5_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter6_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter7_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter8_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter9_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter10_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter11_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter12_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter13_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter14_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter15_reg;
reg   [5:0] v123_3_addr_reg_463_pp0_iter16_reg;
wire   [23:0] v57_V_fu_357_p6;
reg   [23:0] v57_V_reg_468;
wire  signed [31:0] sext_ln104_fu_370_p1;
reg   [31:0] v58_reg_478;
reg   [31:0] v344_load_reg_488;
reg   [31:0] v59_reg_493;
wire   [31:0] bitcast_ln99_fu_378_p1;
reg   [31:0] v61_reg_503;
wire   [63:0] zext_ln102_2_fu_345_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln99_fu_374_p1;
reg   [3:0] j5_fu_76;
wire   [3:0] add_ln100_fu_291_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j5_load;
reg   [3:0] i5_fu_80;
reg   [3:0] ap_sig_allocacmp_i5_load;
reg   [7:0] indvar_flatten20_fu_84;
wire   [7:0] add_ln99_1_fu_237_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten20_load;
wire   [0:0] icmp_ln100_fu_255_p2;
wire   [3:0] add_ln99_fu_249_p2;
wire   [3:0] tmp_26_fu_319_p3;
wire   [5:0] tmp_s_fu_312_p3;
wire   [5:0] zext_ln102_fu_326_p1;
wire   [5:0] sub_ln102_fu_330_p2;
wire   [5:0] zext_ln102_1_fu_336_p1;
wire   [5:0] add_ln102_fu_339_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_42_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_42_24_1_1_U2757(
    .din0(acc_outp1_V_q0),
    .din1(acc_outp1_V_1_q0),
    .din2(acc_outp1_V_2_q0),
    .din3(acc_outp1_V_3_q0),
    .din4(trunc_ln99_reg_417_pp0_iter1_reg),
    .dout(v57_V_fu_357_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln99_fu_231_p2 == 1'd0))) begin
            i5_fu_80 <= select_ln99_1_fu_269_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i5_fu_80 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln99_fu_231_p2 == 1'd0))) begin
            indvar_flatten20_fu_84 <= add_ln99_1_fu_237_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten20_fu_84 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln99_fu_231_p2 == 1'd0))) begin
            j5_fu_76 <= add_ln100_fu_291_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j5_fu_76 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        select_ln99_1_reg_412_pp0_iter10_reg <= select_ln99_1_reg_412_pp0_iter9_reg;
        select_ln99_1_reg_412_pp0_iter2_reg <= select_ln99_1_reg_412_pp0_iter1_reg;
        select_ln99_1_reg_412_pp0_iter3_reg <= select_ln99_1_reg_412_pp0_iter2_reg;
        select_ln99_1_reg_412_pp0_iter4_reg <= select_ln99_1_reg_412_pp0_iter3_reg;
        select_ln99_1_reg_412_pp0_iter5_reg <= select_ln99_1_reg_412_pp0_iter4_reg;
        select_ln99_1_reg_412_pp0_iter6_reg <= select_ln99_1_reg_412_pp0_iter5_reg;
        select_ln99_1_reg_412_pp0_iter7_reg <= select_ln99_1_reg_412_pp0_iter6_reg;
        select_ln99_1_reg_412_pp0_iter8_reg <= select_ln99_1_reg_412_pp0_iter7_reg;
        select_ln99_1_reg_412_pp0_iter9_reg <= select_ln99_1_reg_412_pp0_iter8_reg;
        trunc_ln99_reg_417_pp0_iter10_reg <= trunc_ln99_reg_417_pp0_iter9_reg;
        trunc_ln99_reg_417_pp0_iter11_reg <= trunc_ln99_reg_417_pp0_iter10_reg;
        trunc_ln99_reg_417_pp0_iter12_reg <= trunc_ln99_reg_417_pp0_iter11_reg;
        trunc_ln99_reg_417_pp0_iter13_reg <= trunc_ln99_reg_417_pp0_iter12_reg;
        trunc_ln99_reg_417_pp0_iter14_reg <= trunc_ln99_reg_417_pp0_iter13_reg;
        trunc_ln99_reg_417_pp0_iter15_reg <= trunc_ln99_reg_417_pp0_iter14_reg;
        trunc_ln99_reg_417_pp0_iter16_reg <= trunc_ln99_reg_417_pp0_iter15_reg;
        trunc_ln99_reg_417_pp0_iter2_reg <= trunc_ln99_reg_417_pp0_iter1_reg;
        trunc_ln99_reg_417_pp0_iter3_reg <= trunc_ln99_reg_417_pp0_iter2_reg;
        trunc_ln99_reg_417_pp0_iter4_reg <= trunc_ln99_reg_417_pp0_iter3_reg;
        trunc_ln99_reg_417_pp0_iter5_reg <= trunc_ln99_reg_417_pp0_iter4_reg;
        trunc_ln99_reg_417_pp0_iter6_reg <= trunc_ln99_reg_417_pp0_iter5_reg;
        trunc_ln99_reg_417_pp0_iter7_reg <= trunc_ln99_reg_417_pp0_iter6_reg;
        trunc_ln99_reg_417_pp0_iter8_reg <= trunc_ln99_reg_417_pp0_iter7_reg;
        trunc_ln99_reg_417_pp0_iter9_reg <= trunc_ln99_reg_417_pp0_iter8_reg;
        v123_1_addr_reg_453_pp0_iter10_reg <= v123_1_addr_reg_453_pp0_iter9_reg;
        v123_1_addr_reg_453_pp0_iter11_reg <= v123_1_addr_reg_453_pp0_iter10_reg;
        v123_1_addr_reg_453_pp0_iter12_reg <= v123_1_addr_reg_453_pp0_iter11_reg;
        v123_1_addr_reg_453_pp0_iter13_reg <= v123_1_addr_reg_453_pp0_iter12_reg;
        v123_1_addr_reg_453_pp0_iter14_reg <= v123_1_addr_reg_453_pp0_iter13_reg;
        v123_1_addr_reg_453_pp0_iter15_reg <= v123_1_addr_reg_453_pp0_iter14_reg;
        v123_1_addr_reg_453_pp0_iter16_reg <= v123_1_addr_reg_453_pp0_iter15_reg;
        v123_1_addr_reg_453_pp0_iter2_reg <= v123_1_addr_reg_453;
        v123_1_addr_reg_453_pp0_iter3_reg <= v123_1_addr_reg_453_pp0_iter2_reg;
        v123_1_addr_reg_453_pp0_iter4_reg <= v123_1_addr_reg_453_pp0_iter3_reg;
        v123_1_addr_reg_453_pp0_iter5_reg <= v123_1_addr_reg_453_pp0_iter4_reg;
        v123_1_addr_reg_453_pp0_iter6_reg <= v123_1_addr_reg_453_pp0_iter5_reg;
        v123_1_addr_reg_453_pp0_iter7_reg <= v123_1_addr_reg_453_pp0_iter6_reg;
        v123_1_addr_reg_453_pp0_iter8_reg <= v123_1_addr_reg_453_pp0_iter7_reg;
        v123_1_addr_reg_453_pp0_iter9_reg <= v123_1_addr_reg_453_pp0_iter8_reg;
        v123_2_addr_reg_458_pp0_iter10_reg <= v123_2_addr_reg_458_pp0_iter9_reg;
        v123_2_addr_reg_458_pp0_iter11_reg <= v123_2_addr_reg_458_pp0_iter10_reg;
        v123_2_addr_reg_458_pp0_iter12_reg <= v123_2_addr_reg_458_pp0_iter11_reg;
        v123_2_addr_reg_458_pp0_iter13_reg <= v123_2_addr_reg_458_pp0_iter12_reg;
        v123_2_addr_reg_458_pp0_iter14_reg <= v123_2_addr_reg_458_pp0_iter13_reg;
        v123_2_addr_reg_458_pp0_iter15_reg <= v123_2_addr_reg_458_pp0_iter14_reg;
        v123_2_addr_reg_458_pp0_iter16_reg <= v123_2_addr_reg_458_pp0_iter15_reg;
        v123_2_addr_reg_458_pp0_iter2_reg <= v123_2_addr_reg_458;
        v123_2_addr_reg_458_pp0_iter3_reg <= v123_2_addr_reg_458_pp0_iter2_reg;
        v123_2_addr_reg_458_pp0_iter4_reg <= v123_2_addr_reg_458_pp0_iter3_reg;
        v123_2_addr_reg_458_pp0_iter5_reg <= v123_2_addr_reg_458_pp0_iter4_reg;
        v123_2_addr_reg_458_pp0_iter6_reg <= v123_2_addr_reg_458_pp0_iter5_reg;
        v123_2_addr_reg_458_pp0_iter7_reg <= v123_2_addr_reg_458_pp0_iter6_reg;
        v123_2_addr_reg_458_pp0_iter8_reg <= v123_2_addr_reg_458_pp0_iter7_reg;
        v123_2_addr_reg_458_pp0_iter9_reg <= v123_2_addr_reg_458_pp0_iter8_reg;
        v123_3_addr_reg_463_pp0_iter10_reg <= v123_3_addr_reg_463_pp0_iter9_reg;
        v123_3_addr_reg_463_pp0_iter11_reg <= v123_3_addr_reg_463_pp0_iter10_reg;
        v123_3_addr_reg_463_pp0_iter12_reg <= v123_3_addr_reg_463_pp0_iter11_reg;
        v123_3_addr_reg_463_pp0_iter13_reg <= v123_3_addr_reg_463_pp0_iter12_reg;
        v123_3_addr_reg_463_pp0_iter14_reg <= v123_3_addr_reg_463_pp0_iter13_reg;
        v123_3_addr_reg_463_pp0_iter15_reg <= v123_3_addr_reg_463_pp0_iter14_reg;
        v123_3_addr_reg_463_pp0_iter16_reg <= v123_3_addr_reg_463_pp0_iter15_reg;
        v123_3_addr_reg_463_pp0_iter2_reg <= v123_3_addr_reg_463;
        v123_3_addr_reg_463_pp0_iter3_reg <= v123_3_addr_reg_463_pp0_iter2_reg;
        v123_3_addr_reg_463_pp0_iter4_reg <= v123_3_addr_reg_463_pp0_iter3_reg;
        v123_3_addr_reg_463_pp0_iter5_reg <= v123_3_addr_reg_463_pp0_iter4_reg;
        v123_3_addr_reg_463_pp0_iter6_reg <= v123_3_addr_reg_463_pp0_iter5_reg;
        v123_3_addr_reg_463_pp0_iter7_reg <= v123_3_addr_reg_463_pp0_iter6_reg;
        v123_3_addr_reg_463_pp0_iter8_reg <= v123_3_addr_reg_463_pp0_iter7_reg;
        v123_3_addr_reg_463_pp0_iter9_reg <= v123_3_addr_reg_463_pp0_iter8_reg;
        v123_addr_reg_448_pp0_iter10_reg <= v123_addr_reg_448_pp0_iter9_reg;
        v123_addr_reg_448_pp0_iter11_reg <= v123_addr_reg_448_pp0_iter10_reg;
        v123_addr_reg_448_pp0_iter12_reg <= v123_addr_reg_448_pp0_iter11_reg;
        v123_addr_reg_448_pp0_iter13_reg <= v123_addr_reg_448_pp0_iter12_reg;
        v123_addr_reg_448_pp0_iter14_reg <= v123_addr_reg_448_pp0_iter13_reg;
        v123_addr_reg_448_pp0_iter15_reg <= v123_addr_reg_448_pp0_iter14_reg;
        v123_addr_reg_448_pp0_iter16_reg <= v123_addr_reg_448_pp0_iter15_reg;
        v123_addr_reg_448_pp0_iter2_reg <= v123_addr_reg_448;
        v123_addr_reg_448_pp0_iter3_reg <= v123_addr_reg_448_pp0_iter2_reg;
        v123_addr_reg_448_pp0_iter4_reg <= v123_addr_reg_448_pp0_iter3_reg;
        v123_addr_reg_448_pp0_iter5_reg <= v123_addr_reg_448_pp0_iter4_reg;
        v123_addr_reg_448_pp0_iter6_reg <= v123_addr_reg_448_pp0_iter5_reg;
        v123_addr_reg_448_pp0_iter7_reg <= v123_addr_reg_448_pp0_iter6_reg;
        v123_addr_reg_448_pp0_iter8_reg <= v123_addr_reg_448_pp0_iter7_reg;
        v123_addr_reg_448_pp0_iter9_reg <= v123_addr_reg_448_pp0_iter8_reg;
        v344_load_reg_488 <= v344_q0;
        v57_V_reg_468 <= v57_V_fu_357_p6;
        v58_reg_478 <= grp_fu_713_p_dout0;
        v59_reg_493 <= grp_fu_705_p_dout0;
        v61_reg_503 <= grp_fu_709_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln99_1_reg_412_pp0_iter1_reg <= select_ln99_1_reg_412;
        trunc_ln99_reg_417_pp0_iter1_reg <= trunc_ln99_reg_417;
        v123_1_addr_reg_453 <= zext_ln102_2_fu_345_p1;
        v123_2_addr_reg_458 <= zext_ln102_2_fu_345_p1;
        v123_3_addr_reg_463 <= zext_ln102_2_fu_345_p1;
        v123_addr_reg_448 <= zext_ln102_2_fu_345_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln99_fu_231_p2 == 1'd0))) begin
        p_cast11_mid2_v_reg_422 <= {{select_ln99_1_fu_269_p3[3:2]}};
        select_ln99_1_reg_412 <= select_ln99_1_fu_269_p3;
        select_ln99_reg_407 <= select_ln99_fu_261_p3;
        trunc_ln99_reg_417 <= trunc_ln99_fu_277_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp1_V_1_ce0 = 1'b1;
    end else begin
        acc_outp1_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp1_V_2_ce0 = 1'b1;
    end else begin
        acc_outp1_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp1_V_3_ce0 = 1'b1;
    end else begin
        acc_outp1_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_outp1_V_ce0 = 1'b1;
    end else begin
        acc_outp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln99_fu_231_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i5_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i5_load = i5_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten20_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten20_load = indvar_flatten20_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j5_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j5_load = j5_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        v123_1_ce0 = 1'b1;
    end else begin
        v123_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln99_reg_417_pp0_iter16_reg == 2'd1))) begin
        v123_1_we0 = 1'b1;
    end else begin
        v123_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        v123_2_ce0 = 1'b1;
    end else begin
        v123_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln99_reg_417_pp0_iter16_reg == 2'd2))) begin
        v123_2_we0 = 1'b1;
    end else begin
        v123_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        v123_3_ce0 = 1'b1;
    end else begin
        v123_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln99_reg_417_pp0_iter16_reg == 2'd3))) begin
        v123_3_we0 = 1'b1;
    end else begin
        v123_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        v123_ce0 = 1'b1;
    end else begin
        v123_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (trunc_ln99_reg_417_pp0_iter16_reg == 2'd0))) begin
        v123_we0 = 1'b1;
    end else begin
        v123_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        v344_ce0 = 1'b1;
    end else begin
        v344_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_outp1_V_1_address0 = zext_ln102_2_fu_345_p1;

assign acc_outp1_V_2_address0 = zext_ln102_2_fu_345_p1;

assign acc_outp1_V_3_address0 = zext_ln102_2_fu_345_p1;

assign acc_outp1_V_address0 = zext_ln102_2_fu_345_p1;

assign add_ln100_fu_291_p2 = (select_ln99_fu_261_p3 + 4'd1);

assign add_ln102_fu_339_p2 = (sub_ln102_fu_330_p2 + zext_ln102_1_fu_336_p1);

assign add_ln99_1_fu_237_p2 = (ap_sig_allocacmp_indvar_flatten20_load + 8'd1);

assign add_ln99_fu_249_p2 = (ap_sig_allocacmp_i5_load + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln99_fu_378_p1 = v344_load_reg_488;

assign grp_fu_705_p_ce = 1'b1;

assign grp_fu_705_p_din0 = v58_reg_478;

assign grp_fu_705_p_din1 = 32'd1040187392;

assign grp_fu_709_p_ce = 1'b1;

assign grp_fu_709_p_din0 = v59_reg_493;

assign grp_fu_709_p_din1 = bitcast_ln99_fu_378_p1;

assign grp_fu_713_p_ce = 1'b1;

assign grp_fu_713_p_din0 = sext_ln104_fu_370_p1;

assign icmp_ln100_fu_255_p2 = ((ap_sig_allocacmp_j5_load == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_231_p2 = ((ap_sig_allocacmp_indvar_flatten20_load == 8'd144) ? 1'b1 : 1'b0);

assign select_ln99_1_fu_269_p3 = ((icmp_ln100_fu_255_p2[0:0] == 1'b1) ? add_ln99_fu_249_p2 : ap_sig_allocacmp_i5_load);

assign select_ln99_fu_261_p3 = ((icmp_ln100_fu_255_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j5_load);

assign sext_ln104_fu_370_p1 = $signed(v57_V_reg_468);

assign sub_ln102_fu_330_p2 = (tmp_s_fu_312_p3 - zext_ln102_fu_326_p1);

assign tmp_26_fu_319_p3 = {{p_cast11_mid2_v_reg_422}, {2'd0}};

assign tmp_s_fu_312_p3 = {{p_cast11_mid2_v_reg_422}, {4'd0}};

assign trunc_ln99_fu_277_p1 = select_ln99_1_fu_269_p3[1:0];

assign v123_1_address0 = v123_1_addr_reg_453_pp0_iter16_reg;

assign v123_1_d0 = v61_reg_503;

assign v123_2_address0 = v123_2_addr_reg_458_pp0_iter16_reg;

assign v123_2_d0 = v61_reg_503;

assign v123_3_address0 = v123_3_addr_reg_463_pp0_iter16_reg;

assign v123_3_d0 = v61_reg_503;

assign v123_address0 = v123_addr_reg_448_pp0_iter16_reg;

assign v123_d0 = v61_reg_503;

assign v344_address0 = zext_ln99_fu_374_p1;

assign zext_ln102_1_fu_336_p1 = select_ln99_reg_407;

assign zext_ln102_2_fu_345_p1 = add_ln102_fu_339_p2;

assign zext_ln102_fu_326_p1 = tmp_26_fu_319_p3;

assign zext_ln99_fu_374_p1 = select_ln99_1_reg_412_pp0_iter10_reg;

endmodule //Bert_layer_Self_attention_Pipeline_l_norm_i5_l_j5
