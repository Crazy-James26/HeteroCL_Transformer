// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<29> top::ap_ST_fsm_state1 = "1";
const sc_lv<29> top::ap_ST_fsm_state2 = "10";
const sc_lv<29> top::ap_ST_fsm_state3 = "100";
const sc_lv<29> top::ap_ST_fsm_state4 = "1000";
const sc_lv<29> top::ap_ST_fsm_state5 = "10000";
const sc_lv<29> top::ap_ST_fsm_state6 = "100000";
const sc_lv<29> top::ap_ST_fsm_state7 = "1000000";
const sc_lv<29> top::ap_ST_fsm_state8 = "10000000";
const sc_lv<29> top::ap_ST_fsm_state9 = "100000000";
const sc_lv<29> top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<29> top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<29> top::ap_ST_fsm_state12 = "100000000000";
const sc_lv<29> top::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<29> top::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<29> top::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<29> top::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<29> top::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<29> top::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<29> top::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<29> top::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_D = "1101";
const sc_lv<32> top::ap_const_lv32_12 = "10010";
const sc_lv<32> top::ap_const_lv32_17 = "10111";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<32> top::ap_const_lv32_4 = "100";
const sc_lv<32> top::ap_const_lv32_8 = "1000";
const sc_lv<32> top::ap_const_lv32_1C = "11100";
const sc_lv<4> top::ap_const_lv4_0 = "0000";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<10> top::ap_const_lv10_0 = "0000000000";
const sc_lv<8> top::ap_const_lv8_0 = "00000000";
const sc_lv<32> top::ap_const_lv32_9 = "1001";
const sc_lv<32> top::ap_const_lv32_E = "1110";
const sc_lv<32> top::ap_const_lv32_13 = "10011";
const sc_lv<32> top::ap_const_lv32_18 = "11000";
const sc_lv<32> top::ap_const_lv32_5 = "101";
const sc_lv<4> top::ap_const_lv4_C = "1100";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const sc_lv<6> top::ap_const_lv6_0 = "000000";
const sc_lv<10> top::ap_const_lv10_300 = "1100000000";
const sc_lv<10> top::ap_const_lv10_1 = "1";
const sc_lv<8> top::ap_const_lv8_C0 = "11000000";
const sc_lv<8> top::ap_const_lv8_1 = "1";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_fadd_32ns_32nbkb_U1 = new top_fadd_32ns_32nbkb<1,5,32,32,32>("top_fadd_32ns_32nbkb_U1");
    top_fadd_32ns_32nbkb_U1->clk(ap_clk);
    top_fadd_32ns_32nbkb_U1->reset(ap_rst);
    top_fadd_32ns_32nbkb_U1->din0(grp_fu_240_p0);
    top_fadd_32ns_32nbkb_U1->din1(grp_fu_240_p1);
    top_fadd_32ns_32nbkb_U1->ce(ap_var_for_const0);
    top_fadd_32ns_32nbkb_U1->dout(grp_fu_240_p2);
    top_fmul_32ns_32ncud_U2 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U2");
    top_fmul_32ns_32ncud_U2->clk(ap_clk);
    top_fmul_32ns_32ncud_U2->reset(ap_rst);
    top_fmul_32ns_32ncud_U2->din0(v0_0_load_reg_516);
    top_fmul_32ns_32ncud_U2->din1(v1_0_load_reg_521);
    top_fmul_32ns_32ncud_U2->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U2->dout(grp_fu_245_p2);
    top_fmul_32ns_32ncud_U3 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U3");
    top_fmul_32ns_32ncud_U3->clk(ap_clk);
    top_fmul_32ns_32ncud_U3->reset(ap_rst);
    top_fmul_32ns_32ncud_U3->din0(v0_1_load_reg_526);
    top_fmul_32ns_32ncud_U3->din1(v1_1_load_reg_531);
    top_fmul_32ns_32ncud_U3->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U3->dout(grp_fu_249_p2);
    top_fmul_32ns_32ncud_U4 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U4");
    top_fmul_32ns_32ncud_U4->clk(ap_clk);
    top_fmul_32ns_32ncud_U4->reset(ap_rst);
    top_fmul_32ns_32ncud_U4->din0(v0_2_load_reg_536);
    top_fmul_32ns_32ncud_U4->din1(v1_2_load_reg_541);
    top_fmul_32ns_32ncud_U4->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U4->dout(grp_fu_253_p2);
    top_fmul_32ns_32ncud_U5 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U5");
    top_fmul_32ns_32ncud_U5->clk(ap_clk);
    top_fmul_32ns_32ncud_U5->reset(ap_rst);
    top_fmul_32ns_32ncud_U5->din0(v0_3_load_reg_546);
    top_fmul_32ns_32ncud_U5->din1(v1_3_load_reg_551);
    top_fmul_32ns_32ncud_U5->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U5->dout(grp_fu_257_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln35_fu_406_p2);
    sensitive << ( sub_ln35_reg_440 );
    sensitive << ( zext_ln35_4_fu_402_p1 );

    SC_METHOD(thread_add_ln36_fu_419_p2);
    sensitive << ( sub_ln36_reg_458 );
    sensitive << ( zext_ln35_3_fu_398_p1 );

    SC_METHOD(thread_add_ln45_fu_376_p2);
    sensitive << ( sub_ln45_reg_445 );
    sensitive << ( zext_ln36_fu_342_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln25_fu_266_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln25_fu_266_p2 );

    SC_METHOD(thread_grp_fu_240_p0);
    sensitive << ( v_reg_556 );
    sensitive << ( v12_1_reg_561 );
    sensitive << ( v12_2_reg_566 );
    sensitive << ( v12_3_reg_571 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_fu_240_p1);
    sensitive << ( reg_261 );
    sensitive << ( v15_reg_216 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_icmp_ln25_fu_266_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( x_0_reg_194 );

    SC_METHOD(thread_icmp_ln26_fu_330_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( y_0_reg_205 );

    SC_METHOD(thread_icmp_ln30_fu_386_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( r_outer_0_reg_229 );

    SC_METHOD(thread_r_outer_fu_392_p2);
    sensitive << ( r_outer_0_reg_229 );

    SC_METHOD(thread_sext_ln35_fu_411_p1);
    sensitive << ( add_ln35_fu_406_p2 );

    SC_METHOD(thread_sext_ln36_fu_424_p1);
    sensitive << ( add_ln36_fu_419_p2 );

    SC_METHOD(thread_sext_ln45_fu_381_p1);
    sensitive << ( add_ln45_fu_376_p2 );

    SC_METHOD(thread_sub_ln35_fu_306_p2);
    sensitive << ( zext_ln35_1_fu_290_p1 );
    sensitive << ( zext_ln35_2_fu_302_p1 );

    SC_METHOD(thread_sub_ln36_fu_370_p2);
    sensitive << ( zext_ln36_1_fu_354_p1 );
    sensitive << ( zext_ln36_2_fu_366_p1 );

    SC_METHOD(thread_sub_ln45_fu_324_p2);
    sensitive << ( zext_ln45_fu_320_p1 );
    sensitive << ( zext_ln35_fu_286_p1 );

    SC_METHOD(thread_tmp_2_fu_278_p3);
    sensitive << ( x_0_reg_194 );

    SC_METHOD(thread_tmp_3_fu_294_p3);
    sensitive << ( x_0_reg_194 );

    SC_METHOD(thread_tmp_4_fu_312_p3);
    sensitive << ( x_0_reg_194 );

    SC_METHOD(thread_tmp_6_fu_346_p3);
    sensitive << ( y_0_reg_205 );

    SC_METHOD(thread_tmp_7_fu_358_p3);
    sensitive << ( y_0_reg_205 );

    SC_METHOD(thread_v0_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln35_fu_411_p1 );

    SC_METHOD(thread_v0_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v0_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln35_fu_411_p1 );

    SC_METHOD(thread_v0_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v0_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln35_fu_411_p1 );

    SC_METHOD(thread_v0_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v0_3_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln35_fu_411_p1 );

    SC_METHOD(thread_v0_3_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v1_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln36_fu_424_p1 );

    SC_METHOD(thread_v1_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v1_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln36_fu_424_p1 );

    SC_METHOD(thread_v1_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v1_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln36_fu_424_p1 );

    SC_METHOD(thread_v1_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v1_3_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln36_fu_424_p1 );

    SC_METHOD(thread_v1_3_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v2_address0);
    sensitive << ( v2_addr_reg_463 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v2_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( v15_reg_216 );

    SC_METHOD(thread_v2_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln30_fu_386_p2 );

    SC_METHOD(thread_x_fu_272_p2);
    sensitive << ( x_0_reg_194 );

    SC_METHOD(thread_y_fu_336_p2);
    sensitive << ( y_0_reg_205 );

    SC_METHOD(thread_zext_ln35_1_fu_290_p1);
    sensitive << ( tmp_2_fu_278_p3 );

    SC_METHOD(thread_zext_ln35_2_fu_302_p1);
    sensitive << ( tmp_3_fu_294_p3 );

    SC_METHOD(thread_zext_ln35_3_fu_398_p1);
    sensitive << ( r_outer_0_reg_229 );

    SC_METHOD(thread_zext_ln35_4_fu_402_p1);
    sensitive << ( r_outer_0_reg_229 );

    SC_METHOD(thread_zext_ln35_fu_286_p1);
    sensitive << ( tmp_2_fu_278_p3 );

    SC_METHOD(thread_zext_ln36_1_fu_354_p1);
    sensitive << ( tmp_6_fu_346_p3 );

    SC_METHOD(thread_zext_ln36_2_fu_366_p1);
    sensitive << ( tmp_7_fu_358_p3 );

    SC_METHOD(thread_zext_ln36_fu_342_p1);
    sensitive << ( y_0_reg_205 );

    SC_METHOD(thread_zext_ln45_fu_320_p1);
    sensitive << ( tmp_4_fu_312_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln25_fu_266_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln26_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln30_fu_386_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v0_0_address0, "(port)v0_0_address0");
    sc_trace(mVcdFile, v0_0_ce0, "(port)v0_0_ce0");
    sc_trace(mVcdFile, v0_0_q0, "(port)v0_0_q0");
    sc_trace(mVcdFile, v0_1_address0, "(port)v0_1_address0");
    sc_trace(mVcdFile, v0_1_ce0, "(port)v0_1_ce0");
    sc_trace(mVcdFile, v0_1_q0, "(port)v0_1_q0");
    sc_trace(mVcdFile, v0_2_address0, "(port)v0_2_address0");
    sc_trace(mVcdFile, v0_2_ce0, "(port)v0_2_ce0");
    sc_trace(mVcdFile, v0_2_q0, "(port)v0_2_q0");
    sc_trace(mVcdFile, v0_3_address0, "(port)v0_3_address0");
    sc_trace(mVcdFile, v0_3_ce0, "(port)v0_3_ce0");
    sc_trace(mVcdFile, v0_3_q0, "(port)v0_3_q0");
    sc_trace(mVcdFile, v1_0_address0, "(port)v1_0_address0");
    sc_trace(mVcdFile, v1_0_ce0, "(port)v1_0_ce0");
    sc_trace(mVcdFile, v1_0_q0, "(port)v1_0_q0");
    sc_trace(mVcdFile, v1_1_address0, "(port)v1_1_address0");
    sc_trace(mVcdFile, v1_1_ce0, "(port)v1_1_ce0");
    sc_trace(mVcdFile, v1_1_q0, "(port)v1_1_q0");
    sc_trace(mVcdFile, v1_2_address0, "(port)v1_2_address0");
    sc_trace(mVcdFile, v1_2_ce0, "(port)v1_2_ce0");
    sc_trace(mVcdFile, v1_2_q0, "(port)v1_2_q0");
    sc_trace(mVcdFile, v1_3_address0, "(port)v1_3_address0");
    sc_trace(mVcdFile, v1_3_ce0, "(port)v1_3_ce0");
    sc_trace(mVcdFile, v1_3_q0, "(port)v1_3_q0");
    sc_trace(mVcdFile, v2_address0, "(port)v2_address0");
    sc_trace(mVcdFile, v2_ce0, "(port)v2_ce0");
    sc_trace(mVcdFile, v2_we0, "(port)v2_we0");
    sc_trace(mVcdFile, v2_d0, "(port)v2_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_240_p2, "grp_fu_240_p2");
    sc_trace(mVcdFile, reg_261, "reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, x_fu_272_p2, "x_fu_272_p2");
    sc_trace(mVcdFile, x_reg_435, "x_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln35_fu_306_p2, "sub_ln35_fu_306_p2");
    sc_trace(mVcdFile, sub_ln35_reg_440, "sub_ln35_reg_440");
    sc_trace(mVcdFile, icmp_ln25_fu_266_p2, "icmp_ln25_fu_266_p2");
    sc_trace(mVcdFile, sub_ln45_fu_324_p2, "sub_ln45_fu_324_p2");
    sc_trace(mVcdFile, sub_ln45_reg_445, "sub_ln45_reg_445");
    sc_trace(mVcdFile, y_fu_336_p2, "y_fu_336_p2");
    sc_trace(mVcdFile, y_reg_453, "y_reg_453");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln36_fu_370_p2, "sub_ln36_fu_370_p2");
    sc_trace(mVcdFile, sub_ln36_reg_458, "sub_ln36_reg_458");
    sc_trace(mVcdFile, icmp_ln26_fu_330_p2, "icmp_ln26_fu_330_p2");
    sc_trace(mVcdFile, v2_addr_reg_463, "v2_addr_reg_463");
    sc_trace(mVcdFile, r_outer_fu_392_p2, "r_outer_fu_392_p2");
    sc_trace(mVcdFile, r_outer_reg_471, "r_outer_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln30_fu_386_p2, "icmp_ln30_fu_386_p2");
    sc_trace(mVcdFile, v0_0_load_reg_516, "v0_0_load_reg_516");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, v1_0_load_reg_521, "v1_0_load_reg_521");
    sc_trace(mVcdFile, v0_1_load_reg_526, "v0_1_load_reg_526");
    sc_trace(mVcdFile, v1_1_load_reg_531, "v1_1_load_reg_531");
    sc_trace(mVcdFile, v0_2_load_reg_536, "v0_2_load_reg_536");
    sc_trace(mVcdFile, v1_2_load_reg_541, "v1_2_load_reg_541");
    sc_trace(mVcdFile, v0_3_load_reg_546, "v0_3_load_reg_546");
    sc_trace(mVcdFile, v1_3_load_reg_551, "v1_3_load_reg_551");
    sc_trace(mVcdFile, grp_fu_245_p2, "grp_fu_245_p2");
    sc_trace(mVcdFile, v_reg_556, "v_reg_556");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_249_p2, "grp_fu_249_p2");
    sc_trace(mVcdFile, v12_1_reg_561, "v12_1_reg_561");
    sc_trace(mVcdFile, grp_fu_253_p2, "grp_fu_253_p2");
    sc_trace(mVcdFile, v12_2_reg_566, "v12_2_reg_566");
    sc_trace(mVcdFile, grp_fu_257_p2, "grp_fu_257_p2");
    sc_trace(mVcdFile, v12_3_reg_571, "v12_3_reg_571");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, x_0_reg_194, "x_0_reg_194");
    sc_trace(mVcdFile, y_0_reg_205, "y_0_reg_205");
    sc_trace(mVcdFile, v15_reg_216, "v15_reg_216");
    sc_trace(mVcdFile, r_outer_0_reg_229, "r_outer_0_reg_229");
    sc_trace(mVcdFile, sext_ln45_fu_381_p1, "sext_ln45_fu_381_p1");
    sc_trace(mVcdFile, sext_ln35_fu_411_p1, "sext_ln35_fu_411_p1");
    sc_trace(mVcdFile, sext_ln36_fu_424_p1, "sext_ln36_fu_424_p1");
    sc_trace(mVcdFile, grp_fu_240_p0, "grp_fu_240_p0");
    sc_trace(mVcdFile, grp_fu_240_p1, "grp_fu_240_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_2_fu_278_p3, "tmp_2_fu_278_p3");
    sc_trace(mVcdFile, tmp_3_fu_294_p3, "tmp_3_fu_294_p3");
    sc_trace(mVcdFile, zext_ln35_1_fu_290_p1, "zext_ln35_1_fu_290_p1");
    sc_trace(mVcdFile, zext_ln35_2_fu_302_p1, "zext_ln35_2_fu_302_p1");
    sc_trace(mVcdFile, tmp_4_fu_312_p3, "tmp_4_fu_312_p3");
    sc_trace(mVcdFile, zext_ln45_fu_320_p1, "zext_ln45_fu_320_p1");
    sc_trace(mVcdFile, zext_ln35_fu_286_p1, "zext_ln35_fu_286_p1");
    sc_trace(mVcdFile, tmp_6_fu_346_p3, "tmp_6_fu_346_p3");
    sc_trace(mVcdFile, tmp_7_fu_358_p3, "tmp_7_fu_358_p3");
    sc_trace(mVcdFile, zext_ln36_1_fu_354_p1, "zext_ln36_1_fu_354_p1");
    sc_trace(mVcdFile, zext_ln36_2_fu_366_p1, "zext_ln36_2_fu_366_p1");
    sc_trace(mVcdFile, zext_ln36_fu_342_p1, "zext_ln36_fu_342_p1");
    sc_trace(mVcdFile, add_ln45_fu_376_p2, "add_ln45_fu_376_p2");
    sc_trace(mVcdFile, zext_ln35_4_fu_402_p1, "zext_ln35_4_fu_402_p1");
    sc_trace(mVcdFile, add_ln35_fu_406_p2, "add_ln35_fu_406_p2");
    sc_trace(mVcdFile, zext_ln35_3_fu_398_p1, "zext_ln35_3_fu_398_p1");
    sc_trace(mVcdFile, add_ln36_fu_419_p2, "add_ln36_fu_419_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete top_fadd_32ns_32nbkb_U1;
    delete top_fmul_32ns_32ncud_U2;
    delete top_fmul_32ns_32ncud_U3;
    delete top_fmul_32ns_32ncud_U4;
    delete top_fmul_32ns_32ncud_U5;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        r_outer_0_reg_229 = r_outer_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_330_p2.read()))) {
        r_outer_0_reg_229 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        v15_reg_216 = grp_fu_240_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_330_p2.read()))) {
        v15_reg_216 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_330_p2.read(), ap_const_lv1_1))) {
        x_0_reg_194 = x_reg_435.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_194 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_386_p2.read(), ap_const_lv1_1))) {
        y_0_reg_205 = y_reg_453.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln25_fu_266_p2.read(), ap_const_lv1_0))) {
        y_0_reg_205 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_outer_reg_471 = r_outer_fu_392_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_261 = grp_fu_240_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln25_fu_266_p2.read(), ap_const_lv1_0))) {
        sub_ln35_reg_440 = sub_ln35_fu_306_p2.read();
        sub_ln45_reg_445 = sub_ln45_fu_324_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_330_p2.read()))) {
        sub_ln36_reg_458 = sub_ln36_fu_370_p2.read();
        v2_addr_reg_463 =  (sc_lv<14>) (sext_ln45_fu_381_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        v0_0_load_reg_516 = v0_0_q0.read();
        v0_1_load_reg_526 = v0_1_q0.read();
        v0_2_load_reg_536 = v0_2_q0.read();
        v0_3_load_reg_546 = v0_3_q0.read();
        v1_0_load_reg_521 = v1_0_q0.read();
        v1_1_load_reg_531 = v1_1_q0.read();
        v1_2_load_reg_541 = v1_2_q0.read();
        v1_3_load_reg_551 = v1_3_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        v12_1_reg_561 = grp_fu_249_p2.read();
        v12_2_reg_566 = grp_fu_253_p2.read();
        v12_3_reg_571 = grp_fu_257_p2.read();
        v_reg_556 = grp_fu_245_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_reg_435 = x_fu_272_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        y_reg_453 = y_fu_336_p2.read();
    }
}

void top::thread_add_ln35_fu_406_p2() {
    add_ln35_fu_406_p2 = (!sub_ln35_reg_440.read().is_01() || !zext_ln35_4_fu_402_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(sub_ln35_reg_440.read()) + sc_biguint<13>(zext_ln35_4_fu_402_p1.read()));
}

void top::thread_add_ln36_fu_419_p2() {
    add_ln36_fu_419_p2 = (!sub_ln36_reg_458.read().is_01() || !zext_ln35_3_fu_398_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(sub_ln36_reg_458.read()) + sc_biguint<19>(zext_ln35_3_fu_398_p1.read()));
}

void top::thread_add_ln45_fu_376_p2() {
    add_ln45_fu_376_p2 = (!sub_ln45_reg_445.read().is_01() || !zext_ln36_fu_342_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln45_reg_445.read()) + sc_biguint<15>(zext_ln36_fu_342_p1.read()));
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void top::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void top::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void top::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void top::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void top::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void top::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_fu_266_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_fu_266_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_grp_fu_240_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_fu_240_p0 = v12_3_reg_571.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_240_p0 = v12_2_reg_566.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_240_p0 = v12_1_reg_561.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_240_p0 = v_reg_556.read();
    } else {
        grp_fu_240_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_grp_fu_240_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        grp_fu_240_p1 = reg_261.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_240_p1 = v15_reg_216.read();
    } else {
        grp_fu_240_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_icmp_ln25_fu_266_p2() {
    icmp_ln25_fu_266_p2 = (!x_0_reg_194.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_194.read() == ap_const_lv4_C);
}

void top::thread_icmp_ln26_fu_330_p2() {
    icmp_ln26_fu_330_p2 = (!y_0_reg_205.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_205.read() == ap_const_lv10_300);
}

void top::thread_icmp_ln30_fu_386_p2() {
    icmp_ln30_fu_386_p2 = (!r_outer_0_reg_229.read().is_01() || !ap_const_lv8_C0.is_01())? sc_lv<1>(): sc_lv<1>(r_outer_0_reg_229.read() == ap_const_lv8_C0);
}

void top::thread_r_outer_fu_392_p2() {
    r_outer_fu_392_p2 = (!r_outer_0_reg_229.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(r_outer_0_reg_229.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void top::thread_sext_ln35_fu_411_p1() {
    sext_ln35_fu_411_p1 = esl_sext<64,13>(add_ln35_fu_406_p2.read());
}

void top::thread_sext_ln36_fu_424_p1() {
    sext_ln36_fu_424_p1 = esl_sext<64,19>(add_ln36_fu_419_p2.read());
}

void top::thread_sext_ln45_fu_381_p1() {
    sext_ln45_fu_381_p1 = esl_sext<64,15>(add_ln45_fu_376_p2.read());
}

void top::thread_sub_ln35_fu_306_p2() {
    sub_ln35_fu_306_p2 = (!zext_ln35_1_fu_290_p1.read().is_01() || !zext_ln35_2_fu_302_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln35_1_fu_290_p1.read()) - sc_biguint<13>(zext_ln35_2_fu_302_p1.read()));
}

void top::thread_sub_ln36_fu_370_p2() {
    sub_ln36_fu_370_p2 = (!zext_ln36_1_fu_354_p1.read().is_01() || !zext_ln36_2_fu_366_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(zext_ln36_1_fu_354_p1.read()) - sc_biguint<19>(zext_ln36_2_fu_366_p1.read()));
}

void top::thread_sub_ln45_fu_324_p2() {
    sub_ln45_fu_324_p2 = (!zext_ln45_fu_320_p1.read().is_01() || !zext_ln35_fu_286_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln45_fu_320_p1.read()) - sc_biguint<15>(zext_ln35_fu_286_p1.read()));
}

void top::thread_tmp_2_fu_278_p3() {
    tmp_2_fu_278_p3 = esl_concat<4,8>(x_0_reg_194.read(), ap_const_lv8_0);
}

void top::thread_tmp_3_fu_294_p3() {
    tmp_3_fu_294_p3 = esl_concat<4,6>(x_0_reg_194.read(), ap_const_lv6_0);
}

void top::thread_tmp_4_fu_312_p3() {
    tmp_4_fu_312_p3 = esl_concat<4,10>(x_0_reg_194.read(), ap_const_lv10_0);
}

void top::thread_tmp_6_fu_346_p3() {
    tmp_6_fu_346_p3 = esl_concat<10,8>(y_0_reg_205.read(), ap_const_lv8_0);
}

void top::thread_tmp_7_fu_358_p3() {
    tmp_7_fu_358_p3 = esl_concat<10,6>(y_0_reg_205.read(), ap_const_lv6_0);
}

void top::thread_v0_0_address0() {
    v0_0_address0 =  (sc_lv<12>) (sext_ln35_fu_411_p1.read());
}

void top::thread_v0_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_0_ce0 = ap_const_logic_1;
    } else {
        v0_0_ce0 = ap_const_logic_0;
    }
}

void top::thread_v0_1_address0() {
    v0_1_address0 =  (sc_lv<12>) (sext_ln35_fu_411_p1.read());
}

void top::thread_v0_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_1_ce0 = ap_const_logic_1;
    } else {
        v0_1_ce0 = ap_const_logic_0;
    }
}

void top::thread_v0_2_address0() {
    v0_2_address0 =  (sc_lv<12>) (sext_ln35_fu_411_p1.read());
}

void top::thread_v0_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_2_ce0 = ap_const_logic_1;
    } else {
        v0_2_ce0 = ap_const_logic_0;
    }
}

void top::thread_v0_3_address0() {
    v0_3_address0 =  (sc_lv<12>) (sext_ln35_fu_411_p1.read());
}

void top::thread_v0_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_3_ce0 = ap_const_logic_1;
    } else {
        v0_3_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_0_address0() {
    v1_0_address0 =  (sc_lv<18>) (sext_ln36_fu_424_p1.read());
}

void top::thread_v1_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_0_ce0 = ap_const_logic_1;
    } else {
        v1_0_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_1_address0() {
    v1_1_address0 =  (sc_lv<18>) (sext_ln36_fu_424_p1.read());
}

void top::thread_v1_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_1_ce0 = ap_const_logic_1;
    } else {
        v1_1_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_2_address0() {
    v1_2_address0 =  (sc_lv<18>) (sext_ln36_fu_424_p1.read());
}

void top::thread_v1_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_2_ce0 = ap_const_logic_1;
    } else {
        v1_2_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_3_address0() {
    v1_3_address0 =  (sc_lv<18>) (sext_ln36_fu_424_p1.read());
}

void top::thread_v1_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_3_ce0 = ap_const_logic_1;
    } else {
        v1_3_ce0 = ap_const_logic_0;
    }
}

void top::thread_v2_address0() {
    v2_address0 = v2_addr_reg_463.read();
}

void top::thread_v2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v2_ce0 = ap_const_logic_1;
    } else {
        v2_ce0 = ap_const_logic_0;
    }
}

void top::thread_v2_d0() {
    v2_d0 = v15_reg_216.read();
}

void top::thread_v2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_386_p2.read(), ap_const_lv1_1))) {
        v2_we0 = ap_const_logic_1;
    } else {
        v2_we0 = ap_const_logic_0;
    }
}

void top::thread_x_fu_272_p2() {
    x_fu_272_p2 = (!x_0_reg_194.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_reg_194.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_y_fu_336_p2() {
    y_fu_336_p2 = (!y_0_reg_205.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(y_0_reg_205.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_zext_ln35_1_fu_290_p1() {
    zext_ln35_1_fu_290_p1 = esl_zext<13,12>(tmp_2_fu_278_p3.read());
}

void top::thread_zext_ln35_2_fu_302_p1() {
    zext_ln35_2_fu_302_p1 = esl_zext<13,10>(tmp_3_fu_294_p3.read());
}

void top::thread_zext_ln35_3_fu_398_p1() {
    zext_ln35_3_fu_398_p1 = esl_zext<19,8>(r_outer_0_reg_229.read());
}

void top::thread_zext_ln35_4_fu_402_p1() {
    zext_ln35_4_fu_402_p1 = esl_zext<13,8>(r_outer_0_reg_229.read());
}

void top::thread_zext_ln35_fu_286_p1() {
    zext_ln35_fu_286_p1 = esl_zext<15,12>(tmp_2_fu_278_p3.read());
}

void top::thread_zext_ln36_1_fu_354_p1() {
    zext_ln36_1_fu_354_p1 = esl_zext<19,18>(tmp_6_fu_346_p3.read());
}

void top::thread_zext_ln36_2_fu_366_p1() {
    zext_ln36_2_fu_366_p1 = esl_zext<19,16>(tmp_7_fu_358_p3.read());
}

void top::thread_zext_ln36_fu_342_p1() {
    zext_ln36_fu_342_p1 = esl_zext<15,10>(y_0_reg_205.read());
}

void top::thread_zext_ln45_fu_320_p1() {
    zext_ln45_fu_320_p1 = esl_zext<15,14>(tmp_4_fu_312_p3.read());
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln25_fu_266_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_330_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_386_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<29>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_0_address0\" :  \"" << v0_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_0_ce0\" :  \"" << v0_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_q0\" :  \"" << v0_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_1_address0\" :  \"" << v0_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_1_ce0\" :  \"" << v0_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_q0\" :  \"" << v0_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_2_address0\" :  \"" << v0_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_2_ce0\" :  \"" << v0_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_q0\" :  \"" << v0_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_3_address0\" :  \"" << v0_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_3_ce0\" :  \"" << v0_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_q0\" :  \"" << v0_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_0_address0\" :  \"" << v1_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_0_ce0\" :  \"" << v1_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_0_q0\" :  \"" << v1_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_1_address0\" :  \"" << v1_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_1_ce0\" :  \"" << v1_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_1_q0\" :  \"" << v1_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_2_address0\" :  \"" << v1_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_2_ce0\" :  \"" << v1_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_2_q0\" :  \"" << v1_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_3_address0\" :  \"" << v1_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_3_ce0\" :  \"" << v1_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_3_q0\" :  \"" << v1_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_address0\" :  \"" << v2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_ce0\" :  \"" << v2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_we0\" :  \"" << v2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_d0\" :  \"" << v2_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

