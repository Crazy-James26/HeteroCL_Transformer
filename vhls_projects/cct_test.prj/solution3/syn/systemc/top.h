// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _top_HH_
#define _top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_fadd_32ns_32nbkb.h"
#include "top_fmul_32ns_32ncud.h"

namespace ap_rtl {

struct top : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > v0_0_address0;
    sc_out< sc_logic > v0_0_ce0;
    sc_in< sc_lv<32> > v0_0_q0;
    sc_out< sc_lv<13> > v0_1_address0;
    sc_out< sc_logic > v0_1_ce0;
    sc_in< sc_lv<32> > v0_1_q0;
    sc_out< sc_lv<19> > v1_0_address0;
    sc_out< sc_logic > v1_0_ce0;
    sc_in< sc_lv<32> > v1_0_q0;
    sc_out< sc_lv<19> > v1_1_address0;
    sc_out< sc_logic > v1_1_ce0;
    sc_in< sc_lv<32> > v1_1_q0;
    sc_out< sc_lv<14> > v2_address0;
    sc_out< sc_logic > v2_ce0;
    sc_out< sc_logic > v2_we0;
    sc_out< sc_lv<32> > v2_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    top(sc_module_name name);
    SC_HAS_PROCESS(top);

    ~top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    top_fadd_32ns_32nbkb<1,5,32,32,32>* top_fadd_32ns_32nbkb_U1;
    top_fmul_32ns_32ncud<1,4,32,32,32>* top_fmul_32ns_32ncud_U2;
    top_fmul_32ns_32ncud<1,4,32,32,32>* top_fmul_32ns_32ncud_U3;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > x_fu_207_p2;
    sc_signal< sc_lv<4> > x_reg_384;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > sub_ln33_fu_237_p2;
    sc_signal< sc_lv<14> > sub_ln33_reg_389;
    sc_signal< sc_lv<1> > icmp_ln25_fu_201_p2;
    sc_signal< sc_lv<15> > sub_ln42_fu_267_p2;
    sc_signal< sc_lv<15> > sub_ln42_reg_394;
    sc_signal< sc_lv<10> > y_fu_279_p2;
    sc_signal< sc_lv<10> > y_reg_402;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<20> > sub_ln34_fu_313_p2;
    sc_signal< sc_lv<20> > sub_ln34_reg_407;
    sc_signal< sc_lv<1> > icmp_ln26_fu_273_p2;
    sc_signal< sc_lv<14> > v2_addr_reg_412;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln30_fu_329_p2;
    sc_signal< sc_lv<10> > add_ln30_fu_375_p2;
    sc_signal< sc_lv<10> > add_ln30_reg_440;
    sc_signal< sc_lv<32> > v0_0_load_reg_445;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > v1_0_load_reg_450;
    sc_signal< sc_lv<32> > v0_1_load_reg_455;
    sc_signal< sc_lv<32> > v1_1_load_reg_460;
    sc_signal< sc_lv<32> > grp_fu_193_p2;
    sc_signal< sc_lv<32> > v_reg_465;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_197_p2;
    sc_signal< sc_lv<32> > v10_1_reg_470;
    sc_signal< sc_lv<32> > grp_fu_188_p2;
    sc_signal< sc_lv<32> > v1_reg_475;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<4> > x_0_reg_142;
    sc_signal< sc_lv<10> > y_0_reg_153;
    sc_signal< sc_lv<32> > v11_0_reg_164;
    sc_signal< sc_lv<10> > r_0_0_reg_177;
    sc_signal< sc_lv<64> > sext_ln42_fu_324_p1;
    sc_signal< sc_lv<64> > sext_ln33_fu_358_p1;
    sc_signal< sc_lv<64> > sext_ln34_fu_369_p1;
    sc_signal< sc_lv<32> > grp_fu_188_p0;
    sc_signal< sc_lv<32> > grp_fu_188_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<13> > tmp_2_fu_213_p3;
    sc_signal< sc_lv<11> > tmp_3_fu_225_p3;
    sc_signal< sc_lv<14> > zext_ln33_fu_221_p1;
    sc_signal< sc_lv<14> > zext_ln33_1_fu_233_p1;
    sc_signal< sc_lv<14> > tmp_4_fu_243_p3;
    sc_signal< sc_lv<12> > tmp_5_fu_255_p3;
    sc_signal< sc_lv<15> > zext_ln42_fu_251_p1;
    sc_signal< sc_lv<15> > zext_ln42_1_fu_263_p1;
    sc_signal< sc_lv<19> > tmp_6_fu_289_p3;
    sc_signal< sc_lv<17> > tmp_7_fu_301_p3;
    sc_signal< sc_lv<20> > zext_ln34_1_fu_297_p1;
    sc_signal< sc_lv<20> > zext_ln34_2_fu_309_p1;
    sc_signal< sc_lv<15> > zext_ln34_fu_285_p1;
    sc_signal< sc_lv<15> > add_ln42_fu_319_p2;
    sc_signal< sc_lv<9> > tmp_8_fu_335_p4;
    sc_signal< sc_lv<14> > zext_ln33_3_fu_349_p1;
    sc_signal< sc_lv<14> > add_ln33_fu_353_p2;
    sc_signal< sc_lv<20> > zext_ln33_2_fu_345_p1;
    sc_signal< sc_lv<20> > add_ln34_fu_364_p2;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_state3;
    static const sc_lv<19> ap_ST_fsm_state4;
    static const sc_lv<19> ap_ST_fsm_state5;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_state7;
    static const sc_lv<19> ap_ST_fsm_state8;
    static const sc_lv<19> ap_ST_fsm_state9;
    static const sc_lv<19> ap_ST_fsm_state10;
    static const sc_lv<19> ap_ST_fsm_state11;
    static const sc_lv<19> ap_ST_fsm_state12;
    static const sc_lv<19> ap_ST_fsm_state13;
    static const sc_lv<19> ap_ST_fsm_state14;
    static const sc_lv<19> ap_ST_fsm_state15;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_state17;
    static const sc_lv<19> ap_ST_fsm_state18;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln30_fu_375_p2();
    void thread_add_ln33_fu_353_p2();
    void thread_add_ln34_fu_364_p2();
    void thread_add_ln42_fu_319_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_188_p0();
    void thread_grp_fu_188_p1();
    void thread_icmp_ln25_fu_201_p2();
    void thread_icmp_ln26_fu_273_p2();
    void thread_icmp_ln30_fu_329_p2();
    void thread_sext_ln33_fu_358_p1();
    void thread_sext_ln34_fu_369_p1();
    void thread_sext_ln42_fu_324_p1();
    void thread_sub_ln33_fu_237_p2();
    void thread_sub_ln34_fu_313_p2();
    void thread_sub_ln42_fu_267_p2();
    void thread_tmp_2_fu_213_p3();
    void thread_tmp_3_fu_225_p3();
    void thread_tmp_4_fu_243_p3();
    void thread_tmp_5_fu_255_p3();
    void thread_tmp_6_fu_289_p3();
    void thread_tmp_7_fu_301_p3();
    void thread_tmp_8_fu_335_p4();
    void thread_v0_0_address0();
    void thread_v0_0_ce0();
    void thread_v0_1_address0();
    void thread_v0_1_ce0();
    void thread_v1_0_address0();
    void thread_v1_0_ce0();
    void thread_v1_1_address0();
    void thread_v1_1_ce0();
    void thread_v2_address0();
    void thread_v2_ce0();
    void thread_v2_d0();
    void thread_v2_we0();
    void thread_x_fu_207_p2();
    void thread_y_fu_279_p2();
    void thread_zext_ln33_1_fu_233_p1();
    void thread_zext_ln33_2_fu_345_p1();
    void thread_zext_ln33_3_fu_349_p1();
    void thread_zext_ln33_fu_221_p1();
    void thread_zext_ln34_1_fu_297_p1();
    void thread_zext_ln34_2_fu_309_p1();
    void thread_zext_ln34_fu_285_p1();
    void thread_zext_ln42_1_fu_263_p1();
    void thread_zext_ln42_fu_251_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
