// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> top::ap_ST_fsm_state1 = "1";
const sc_lv<19> top::ap_ST_fsm_state2 = "10";
const sc_lv<19> top::ap_ST_fsm_state3 = "100";
const sc_lv<19> top::ap_ST_fsm_state4 = "1000";
const sc_lv<19> top::ap_ST_fsm_state5 = "10000";
const sc_lv<19> top::ap_ST_fsm_state6 = "100000";
const sc_lv<19> top::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> top::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> top::ap_ST_fsm_state9 = "100000000";
const sc_lv<19> top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<19> top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<19> top::ap_ST_fsm_state12 = "100000000000";
const sc_lv<19> top::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<19> top::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<19> top::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<19> top::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<19> top::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<19> top::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<19> top::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<32> top::ap_const_lv32_4 = "100";
const sc_lv<32> top::ap_const_lv32_8 = "1000";
const sc_lv<32> top::ap_const_lv32_D = "1101";
const sc_lv<32> top::ap_const_lv32_12 = "10010";
const sc_lv<4> top::ap_const_lv4_0 = "0000";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<10> top::ap_const_lv10_0 = "0000000000";
const sc_lv<32> top::ap_const_lv32_9 = "1001";
const sc_lv<32> top::ap_const_lv32_E = "1110";
const sc_lv<32> top::ap_const_lv32_5 = "101";
const sc_lv<4> top::ap_const_lv4_C = "1100";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const sc_lv<9> top::ap_const_lv9_0 = "000000000";
const sc_lv<7> top::ap_const_lv7_0 = "0000000";
const sc_lv<8> top::ap_const_lv8_0 = "00000000";
const sc_lv<10> top::ap_const_lv10_300 = "1100000000";
const sc_lv<10> top::ap_const_lv10_1 = "1";
const sc_lv<10> top::ap_const_lv10_2 = "10";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_fadd_32ns_32nbkb_U1 = new top_fadd_32ns_32nbkb<1,5,32,32,32>("top_fadd_32ns_32nbkb_U1");
    top_fadd_32ns_32nbkb_U1->clk(ap_clk);
    top_fadd_32ns_32nbkb_U1->reset(ap_rst);
    top_fadd_32ns_32nbkb_U1->din0(grp_fu_188_p0);
    top_fadd_32ns_32nbkb_U1->din1(grp_fu_188_p1);
    top_fadd_32ns_32nbkb_U1->ce(ap_var_for_const0);
    top_fadd_32ns_32nbkb_U1->dout(grp_fu_188_p2);
    top_fmul_32ns_32ncud_U2 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U2");
    top_fmul_32ns_32ncud_U2->clk(ap_clk);
    top_fmul_32ns_32ncud_U2->reset(ap_rst);
    top_fmul_32ns_32ncud_U2->din0(v0_0_load_reg_445);
    top_fmul_32ns_32ncud_U2->din1(v1_0_load_reg_450);
    top_fmul_32ns_32ncud_U2->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U2->dout(grp_fu_193_p2);
    top_fmul_32ns_32ncud_U3 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U3");
    top_fmul_32ns_32ncud_U3->clk(ap_clk);
    top_fmul_32ns_32ncud_U3->reset(ap_rst);
    top_fmul_32ns_32ncud_U3->din0(v0_1_load_reg_455);
    top_fmul_32ns_32ncud_U3->din1(v1_1_load_reg_460);
    top_fmul_32ns_32ncud_U3->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U3->dout(grp_fu_197_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln30_fu_375_p2);
    sensitive << ( r_0_0_reg_177 );

    SC_METHOD(thread_add_ln33_fu_353_p2);
    sensitive << ( sub_ln33_reg_389 );
    sensitive << ( zext_ln33_3_fu_349_p1 );

    SC_METHOD(thread_add_ln34_fu_364_p2);
    sensitive << ( sub_ln34_reg_407 );
    sensitive << ( zext_ln33_2_fu_345_p1 );

    SC_METHOD(thread_add_ln42_fu_319_p2);
    sensitive << ( sub_ln42_reg_394 );
    sensitive << ( zext_ln34_fu_285_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln25_fu_201_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln25_fu_201_p2 );

    SC_METHOD(thread_grp_fu_188_p0);
    sensitive << ( v_reg_465 );
    sensitive << ( v10_1_reg_470 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_188_p1);
    sensitive << ( v1_reg_475 );
    sensitive << ( v11_0_reg_164 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_icmp_ln25_fu_201_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( x_0_reg_142 );

    SC_METHOD(thread_icmp_ln26_fu_273_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( y_0_reg_153 );

    SC_METHOD(thread_icmp_ln30_fu_329_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( r_0_0_reg_177 );

    SC_METHOD(thread_sext_ln33_fu_358_p1);
    sensitive << ( add_ln33_fu_353_p2 );

    SC_METHOD(thread_sext_ln34_fu_369_p1);
    sensitive << ( add_ln34_fu_364_p2 );

    SC_METHOD(thread_sext_ln42_fu_324_p1);
    sensitive << ( add_ln42_fu_319_p2 );

    SC_METHOD(thread_sub_ln33_fu_237_p2);
    sensitive << ( zext_ln33_fu_221_p1 );
    sensitive << ( zext_ln33_1_fu_233_p1 );

    SC_METHOD(thread_sub_ln34_fu_313_p2);
    sensitive << ( zext_ln34_1_fu_297_p1 );
    sensitive << ( zext_ln34_2_fu_309_p1 );

    SC_METHOD(thread_sub_ln42_fu_267_p2);
    sensitive << ( zext_ln42_fu_251_p1 );
    sensitive << ( zext_ln42_1_fu_263_p1 );

    SC_METHOD(thread_tmp_2_fu_213_p3);
    sensitive << ( x_0_reg_142 );

    SC_METHOD(thread_tmp_3_fu_225_p3);
    sensitive << ( x_0_reg_142 );

    SC_METHOD(thread_tmp_4_fu_243_p3);
    sensitive << ( x_0_reg_142 );

    SC_METHOD(thread_tmp_5_fu_255_p3);
    sensitive << ( x_0_reg_142 );

    SC_METHOD(thread_tmp_6_fu_289_p3);
    sensitive << ( y_0_reg_153 );

    SC_METHOD(thread_tmp_7_fu_301_p3);
    sensitive << ( y_0_reg_153 );

    SC_METHOD(thread_tmp_8_fu_335_p4);
    sensitive << ( r_0_0_reg_177 );

    SC_METHOD(thread_v0_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln33_fu_358_p1 );

    SC_METHOD(thread_v0_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v0_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln33_fu_358_p1 );

    SC_METHOD(thread_v0_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v1_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln34_fu_369_p1 );

    SC_METHOD(thread_v1_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v1_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln34_fu_369_p1 );

    SC_METHOD(thread_v1_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v2_address0);
    sensitive << ( v2_addr_reg_412 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v2_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( v11_0_reg_164 );

    SC_METHOD(thread_v2_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln30_fu_329_p2 );

    SC_METHOD(thread_x_fu_207_p2);
    sensitive << ( x_0_reg_142 );

    SC_METHOD(thread_y_fu_279_p2);
    sensitive << ( y_0_reg_153 );

    SC_METHOD(thread_zext_ln33_1_fu_233_p1);
    sensitive << ( tmp_3_fu_225_p3 );

    SC_METHOD(thread_zext_ln33_2_fu_345_p1);
    sensitive << ( tmp_8_fu_335_p4 );

    SC_METHOD(thread_zext_ln33_3_fu_349_p1);
    sensitive << ( tmp_8_fu_335_p4 );

    SC_METHOD(thread_zext_ln33_fu_221_p1);
    sensitive << ( tmp_2_fu_213_p3 );

    SC_METHOD(thread_zext_ln34_1_fu_297_p1);
    sensitive << ( tmp_6_fu_289_p3 );

    SC_METHOD(thread_zext_ln34_2_fu_309_p1);
    sensitive << ( tmp_7_fu_301_p3 );

    SC_METHOD(thread_zext_ln34_fu_285_p1);
    sensitive << ( y_0_reg_153 );

    SC_METHOD(thread_zext_ln42_1_fu_263_p1);
    sensitive << ( tmp_5_fu_255_p3 );

    SC_METHOD(thread_zext_ln42_fu_251_p1);
    sensitive << ( tmp_4_fu_243_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln25_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln26_fu_273_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln30_fu_329_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v0_0_address0, "(port)v0_0_address0");
    sc_trace(mVcdFile, v0_0_ce0, "(port)v0_0_ce0");
    sc_trace(mVcdFile, v0_0_q0, "(port)v0_0_q0");
    sc_trace(mVcdFile, v0_1_address0, "(port)v0_1_address0");
    sc_trace(mVcdFile, v0_1_ce0, "(port)v0_1_ce0");
    sc_trace(mVcdFile, v0_1_q0, "(port)v0_1_q0");
    sc_trace(mVcdFile, v1_0_address0, "(port)v1_0_address0");
    sc_trace(mVcdFile, v1_0_ce0, "(port)v1_0_ce0");
    sc_trace(mVcdFile, v1_0_q0, "(port)v1_0_q0");
    sc_trace(mVcdFile, v1_1_address0, "(port)v1_1_address0");
    sc_trace(mVcdFile, v1_1_ce0, "(port)v1_1_ce0");
    sc_trace(mVcdFile, v1_1_q0, "(port)v1_1_q0");
    sc_trace(mVcdFile, v2_address0, "(port)v2_address0");
    sc_trace(mVcdFile, v2_ce0, "(port)v2_ce0");
    sc_trace(mVcdFile, v2_we0, "(port)v2_we0");
    sc_trace(mVcdFile, v2_d0, "(port)v2_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, x_fu_207_p2, "x_fu_207_p2");
    sc_trace(mVcdFile, x_reg_384, "x_reg_384");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln33_fu_237_p2, "sub_ln33_fu_237_p2");
    sc_trace(mVcdFile, sub_ln33_reg_389, "sub_ln33_reg_389");
    sc_trace(mVcdFile, icmp_ln25_fu_201_p2, "icmp_ln25_fu_201_p2");
    sc_trace(mVcdFile, sub_ln42_fu_267_p2, "sub_ln42_fu_267_p2");
    sc_trace(mVcdFile, sub_ln42_reg_394, "sub_ln42_reg_394");
    sc_trace(mVcdFile, y_fu_279_p2, "y_fu_279_p2");
    sc_trace(mVcdFile, y_reg_402, "y_reg_402");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln34_fu_313_p2, "sub_ln34_fu_313_p2");
    sc_trace(mVcdFile, sub_ln34_reg_407, "sub_ln34_reg_407");
    sc_trace(mVcdFile, icmp_ln26_fu_273_p2, "icmp_ln26_fu_273_p2");
    sc_trace(mVcdFile, v2_addr_reg_412, "v2_addr_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln30_fu_329_p2, "icmp_ln30_fu_329_p2");
    sc_trace(mVcdFile, add_ln30_fu_375_p2, "add_ln30_fu_375_p2");
    sc_trace(mVcdFile, add_ln30_reg_440, "add_ln30_reg_440");
    sc_trace(mVcdFile, v0_0_load_reg_445, "v0_0_load_reg_445");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, v1_0_load_reg_450, "v1_0_load_reg_450");
    sc_trace(mVcdFile, v0_1_load_reg_455, "v0_1_load_reg_455");
    sc_trace(mVcdFile, v1_1_load_reg_460, "v1_1_load_reg_460");
    sc_trace(mVcdFile, grp_fu_193_p2, "grp_fu_193_p2");
    sc_trace(mVcdFile, v_reg_465, "v_reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, v10_1_reg_470, "v10_1_reg_470");
    sc_trace(mVcdFile, grp_fu_188_p2, "grp_fu_188_p2");
    sc_trace(mVcdFile, v1_reg_475, "v1_reg_475");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, x_0_reg_142, "x_0_reg_142");
    sc_trace(mVcdFile, y_0_reg_153, "y_0_reg_153");
    sc_trace(mVcdFile, v11_0_reg_164, "v11_0_reg_164");
    sc_trace(mVcdFile, r_0_0_reg_177, "r_0_0_reg_177");
    sc_trace(mVcdFile, sext_ln42_fu_324_p1, "sext_ln42_fu_324_p1");
    sc_trace(mVcdFile, sext_ln33_fu_358_p1, "sext_ln33_fu_358_p1");
    sc_trace(mVcdFile, sext_ln34_fu_369_p1, "sext_ln34_fu_369_p1");
    sc_trace(mVcdFile, grp_fu_188_p0, "grp_fu_188_p0");
    sc_trace(mVcdFile, grp_fu_188_p1, "grp_fu_188_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_2_fu_213_p3, "tmp_2_fu_213_p3");
    sc_trace(mVcdFile, tmp_3_fu_225_p3, "tmp_3_fu_225_p3");
    sc_trace(mVcdFile, zext_ln33_fu_221_p1, "zext_ln33_fu_221_p1");
    sc_trace(mVcdFile, zext_ln33_1_fu_233_p1, "zext_ln33_1_fu_233_p1");
    sc_trace(mVcdFile, tmp_4_fu_243_p3, "tmp_4_fu_243_p3");
    sc_trace(mVcdFile, tmp_5_fu_255_p3, "tmp_5_fu_255_p3");
    sc_trace(mVcdFile, zext_ln42_fu_251_p1, "zext_ln42_fu_251_p1");
    sc_trace(mVcdFile, zext_ln42_1_fu_263_p1, "zext_ln42_1_fu_263_p1");
    sc_trace(mVcdFile, tmp_6_fu_289_p3, "tmp_6_fu_289_p3");
    sc_trace(mVcdFile, tmp_7_fu_301_p3, "tmp_7_fu_301_p3");
    sc_trace(mVcdFile, zext_ln34_1_fu_297_p1, "zext_ln34_1_fu_297_p1");
    sc_trace(mVcdFile, zext_ln34_2_fu_309_p1, "zext_ln34_2_fu_309_p1");
    sc_trace(mVcdFile, zext_ln34_fu_285_p1, "zext_ln34_fu_285_p1");
    sc_trace(mVcdFile, add_ln42_fu_319_p2, "add_ln42_fu_319_p2");
    sc_trace(mVcdFile, tmp_8_fu_335_p4, "tmp_8_fu_335_p4");
    sc_trace(mVcdFile, zext_ln33_3_fu_349_p1, "zext_ln33_3_fu_349_p1");
    sc_trace(mVcdFile, add_ln33_fu_353_p2, "add_ln33_fu_353_p2");
    sc_trace(mVcdFile, zext_ln33_2_fu_345_p1, "zext_ln33_2_fu_345_p1");
    sc_trace(mVcdFile, add_ln34_fu_364_p2, "add_ln34_fu_364_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete top_fadd_32ns_32nbkb_U1;
    delete top_fmul_32ns_32ncud_U2;
    delete top_fmul_32ns_32ncud_U3;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        r_0_0_reg_177 = add_ln30_reg_440.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_273_p2.read()))) {
        r_0_0_reg_177 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        v11_0_reg_164 = grp_fu_188_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_273_p2.read()))) {
        v11_0_reg_164 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_273_p2.read(), ap_const_lv1_1))) {
        x_0_reg_142 = x_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_142 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_329_p2.read(), ap_const_lv1_1))) {
        y_0_reg_153 = y_reg_402.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln25_fu_201_p2.read(), ap_const_lv1_0))) {
        y_0_reg_153 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_fu_329_p2.read()))) {
        add_ln30_reg_440 = add_ln30_fu_375_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln25_fu_201_p2.read(), ap_const_lv1_0))) {
        sub_ln33_reg_389 = sub_ln33_fu_237_p2.read();
        sub_ln42_reg_394 = sub_ln42_fu_267_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_273_p2.read()))) {
        sub_ln34_reg_407 = sub_ln34_fu_313_p2.read();
        v2_addr_reg_412 =  (sc_lv<14>) (sext_ln42_fu_324_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        v0_0_load_reg_445 = v0_0_q0.read();
        v0_1_load_reg_455 = v0_1_q0.read();
        v1_0_load_reg_450 = v1_0_q0.read();
        v1_1_load_reg_460 = v1_1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        v10_1_reg_470 = grp_fu_197_p2.read();
        v_reg_465 = grp_fu_193_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        v1_reg_475 = grp_fu_188_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_reg_384 = x_fu_207_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        y_reg_402 = y_fu_279_p2.read();
    }
}

void top::thread_add_ln30_fu_375_p2() {
    add_ln30_fu_375_p2 = (!r_0_0_reg_177.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(r_0_0_reg_177.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void top::thread_add_ln33_fu_353_p2() {
    add_ln33_fu_353_p2 = (!zext_ln33_3_fu_349_p1.read().is_01() || !sub_ln33_reg_389.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln33_3_fu_349_p1.read()) + sc_biguint<14>(sub_ln33_reg_389.read()));
}

void top::thread_add_ln34_fu_364_p2() {
    add_ln34_fu_364_p2 = (!zext_ln33_2_fu_345_p1.read().is_01() || !sub_ln34_reg_407.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln33_2_fu_345_p1.read()) + sc_biguint<20>(sub_ln34_reg_407.read()));
}

void top::thread_add_ln42_fu_319_p2() {
    add_ln42_fu_319_p2 = (!sub_ln42_reg_394.read().is_01() || !zext_ln34_fu_285_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln42_reg_394.read()) + sc_biguint<15>(zext_ln34_fu_285_p1.read()));
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void top::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void top::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void top::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_fu_201_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_fu_201_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_grp_fu_188_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_188_p0 = v10_1_reg_470.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_188_p0 = v_reg_465.read();
    } else {
        grp_fu_188_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_grp_fu_188_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_188_p1 = v1_reg_475.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_188_p1 = v11_0_reg_164.read();
    } else {
        grp_fu_188_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void top::thread_icmp_ln25_fu_201_p2() {
    icmp_ln25_fu_201_p2 = (!x_0_reg_142.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_142.read() == ap_const_lv4_C);
}

void top::thread_icmp_ln26_fu_273_p2() {
    icmp_ln26_fu_273_p2 = (!y_0_reg_153.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_153.read() == ap_const_lv10_300);
}

void top::thread_icmp_ln30_fu_329_p2() {
    icmp_ln30_fu_329_p2 = (!r_0_0_reg_177.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(r_0_0_reg_177.read() == ap_const_lv10_300);
}

void top::thread_sext_ln33_fu_358_p1() {
    sext_ln33_fu_358_p1 = esl_sext<64,14>(add_ln33_fu_353_p2.read());
}

void top::thread_sext_ln34_fu_369_p1() {
    sext_ln34_fu_369_p1 = esl_sext<64,20>(add_ln34_fu_364_p2.read());
}

void top::thread_sext_ln42_fu_324_p1() {
    sext_ln42_fu_324_p1 = esl_sext<64,15>(add_ln42_fu_319_p2.read());
}

void top::thread_sub_ln33_fu_237_p2() {
    sub_ln33_fu_237_p2 = (!zext_ln33_fu_221_p1.read().is_01() || !zext_ln33_1_fu_233_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln33_fu_221_p1.read()) - sc_biguint<14>(zext_ln33_1_fu_233_p1.read()));
}

void top::thread_sub_ln34_fu_313_p2() {
    sub_ln34_fu_313_p2 = (!zext_ln34_1_fu_297_p1.read().is_01() || !zext_ln34_2_fu_309_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln34_1_fu_297_p1.read()) - sc_biguint<20>(zext_ln34_2_fu_309_p1.read()));
}

void top::thread_sub_ln42_fu_267_p2() {
    sub_ln42_fu_267_p2 = (!zext_ln42_fu_251_p1.read().is_01() || !zext_ln42_1_fu_263_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln42_fu_251_p1.read()) - sc_biguint<15>(zext_ln42_1_fu_263_p1.read()));
}

void top::thread_tmp_2_fu_213_p3() {
    tmp_2_fu_213_p3 = esl_concat<4,9>(x_0_reg_142.read(), ap_const_lv9_0);
}

void top::thread_tmp_3_fu_225_p3() {
    tmp_3_fu_225_p3 = esl_concat<4,7>(x_0_reg_142.read(), ap_const_lv7_0);
}

void top::thread_tmp_4_fu_243_p3() {
    tmp_4_fu_243_p3 = esl_concat<4,10>(x_0_reg_142.read(), ap_const_lv10_0);
}

void top::thread_tmp_5_fu_255_p3() {
    tmp_5_fu_255_p3 = esl_concat<4,8>(x_0_reg_142.read(), ap_const_lv8_0);
}

void top::thread_tmp_6_fu_289_p3() {
    tmp_6_fu_289_p3 = esl_concat<10,9>(y_0_reg_153.read(), ap_const_lv9_0);
}

void top::thread_tmp_7_fu_301_p3() {
    tmp_7_fu_301_p3 = esl_concat<10,7>(y_0_reg_153.read(), ap_const_lv7_0);
}

void top::thread_tmp_8_fu_335_p4() {
    tmp_8_fu_335_p4 = r_0_0_reg_177.read().range(9, 1);
}

void top::thread_v0_0_address0() {
    v0_0_address0 =  (sc_lv<13>) (sext_ln33_fu_358_p1.read());
}

void top::thread_v0_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_0_ce0 = ap_const_logic_1;
    } else {
        v0_0_ce0 = ap_const_logic_0;
    }
}

void top::thread_v0_1_address0() {
    v0_1_address0 =  (sc_lv<13>) (sext_ln33_fu_358_p1.read());
}

void top::thread_v0_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_1_ce0 = ap_const_logic_1;
    } else {
        v0_1_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_0_address0() {
    v1_0_address0 =  (sc_lv<19>) (sext_ln34_fu_369_p1.read());
}

void top::thread_v1_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_0_ce0 = ap_const_logic_1;
    } else {
        v1_0_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_1_address0() {
    v1_1_address0 =  (sc_lv<19>) (sext_ln34_fu_369_p1.read());
}

void top::thread_v1_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_1_ce0 = ap_const_logic_1;
    } else {
        v1_1_ce0 = ap_const_logic_0;
    }
}

void top::thread_v2_address0() {
    v2_address0 = v2_addr_reg_412.read();
}

void top::thread_v2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v2_ce0 = ap_const_logic_1;
    } else {
        v2_ce0 = ap_const_logic_0;
    }
}

void top::thread_v2_d0() {
    v2_d0 = v11_0_reg_164.read();
}

void top::thread_v2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_329_p2.read(), ap_const_lv1_1))) {
        v2_we0 = ap_const_logic_1;
    } else {
        v2_we0 = ap_const_logic_0;
    }
}

void top::thread_x_fu_207_p2() {
    x_fu_207_p2 = (!x_0_reg_142.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_reg_142.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_y_fu_279_p2() {
    y_fu_279_p2 = (!y_0_reg_153.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(y_0_reg_153.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_zext_ln33_1_fu_233_p1() {
    zext_ln33_1_fu_233_p1 = esl_zext<14,11>(tmp_3_fu_225_p3.read());
}

void top::thread_zext_ln33_2_fu_345_p1() {
    zext_ln33_2_fu_345_p1 = esl_zext<20,9>(tmp_8_fu_335_p4.read());
}

void top::thread_zext_ln33_3_fu_349_p1() {
    zext_ln33_3_fu_349_p1 = esl_zext<14,9>(tmp_8_fu_335_p4.read());
}

void top::thread_zext_ln33_fu_221_p1() {
    zext_ln33_fu_221_p1 = esl_zext<14,13>(tmp_2_fu_213_p3.read());
}

void top::thread_zext_ln34_1_fu_297_p1() {
    zext_ln34_1_fu_297_p1 = esl_zext<20,19>(tmp_6_fu_289_p3.read());
}

void top::thread_zext_ln34_2_fu_309_p1() {
    zext_ln34_2_fu_309_p1 = esl_zext<20,17>(tmp_7_fu_301_p3.read());
}

void top::thread_zext_ln34_fu_285_p1() {
    zext_ln34_fu_285_p1 = esl_zext<15,10>(y_0_reg_153.read());
}

void top::thread_zext_ln42_1_fu_263_p1() {
    zext_ln42_1_fu_263_p1 = esl_zext<15,12>(tmp_5_fu_255_p3.read());
}

void top::thread_zext_ln42_fu_251_p1() {
    zext_ln42_fu_251_p1 = esl_zext<15,14>(tmp_4_fu_243_p3.read());
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln25_fu_201_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_273_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_329_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_0_address0\" :  \"" << v0_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_0_ce0\" :  \"" << v0_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_q0\" :  \"" << v0_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_1_address0\" :  \"" << v0_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_1_ce0\" :  \"" << v0_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_q0\" :  \"" << v0_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_0_address0\" :  \"" << v1_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_0_ce0\" :  \"" << v1_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_0_q0\" :  \"" << v1_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_1_address0\" :  \"" << v1_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_1_ce0\" :  \"" << v1_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_1_q0\" :  \"" << v1_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_address0\" :  \"" << v2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_ce0\" :  \"" << v2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_we0\" :  \"" << v2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_d0\" :  \"" << v2_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

