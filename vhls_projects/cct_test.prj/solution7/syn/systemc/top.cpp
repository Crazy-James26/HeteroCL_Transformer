// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<40> top::ap_ST_fsm_state1 = "1";
const sc_lv<40> top::ap_ST_fsm_state2 = "10";
const sc_lv<40> top::ap_ST_fsm_state3 = "100";
const sc_lv<40> top::ap_ST_fsm_state4 = "1000";
const sc_lv<40> top::ap_ST_fsm_state5 = "10000";
const sc_lv<40> top::ap_ST_fsm_state6 = "100000";
const sc_lv<40> top::ap_ST_fsm_state7 = "1000000";
const sc_lv<40> top::ap_ST_fsm_state8 = "10000000";
const sc_lv<40> top::ap_ST_fsm_state9 = "100000000";
const sc_lv<40> top::ap_ST_fsm_state10 = "1000000000";
const sc_lv<40> top::ap_ST_fsm_state11 = "10000000000";
const sc_lv<40> top::ap_ST_fsm_state12 = "100000000000";
const sc_lv<40> top::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<40> top::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<40> top::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<40> top::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<40> top::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<40> top::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<40> top::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<40> top::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_6 = "110";
const sc_lv<32> top::ap_const_lv32_15 = "10101";
const sc_lv<32> top::ap_const_lv32_A = "1010";
const sc_lv<32> top::ap_const_lv32_19 = "11001";
const sc_lv<32> top::ap_const_lv32_F = "1111";
const sc_lv<32> top::ap_const_lv32_1E = "11110";
const sc_lv<32> top::ap_const_lv32_26 = "100110";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<32> top::ap_const_lv32_5 = "101";
const sc_lv<32> top::ap_const_lv32_10 = "10000";
const sc_lv<32> top::ap_const_lv32_11 = "10001";
const sc_lv<32> top::ap_const_lv32_12 = "10010";
const sc_lv<32> top::ap_const_lv32_14 = "10100";
const sc_lv<32> top::ap_const_lv32_1F = "11111";
const sc_lv<32> top::ap_const_lv32_20 = "100000";
const sc_lv<32> top::ap_const_lv32_21 = "100001";
const sc_lv<4> top::ap_const_lv4_0 = "0000";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<10> top::ap_const_lv10_0 = "0000000000";
const sc_lv<32> top::ap_const_lv32_27 = "100111";
const sc_lv<32> top::ap_const_lv32_4 = "100";
const sc_lv<32> top::ap_const_lv32_13 = "10011";
const sc_lv<32> top::ap_const_lv32_B = "1011";
const sc_lv<32> top::ap_const_lv32_1A = "11010";
const sc_lv<32> top::ap_const_lv32_22 = "100010";
const sc_lv<32> top::ap_const_lv32_7 = "111";
const sc_lv<32> top::ap_const_lv32_16 = "10110";
const sc_lv<4> top::ap_const_lv4_C = "1100";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const sc_lv<8> top::ap_const_lv8_0 = "00000000";
const sc_lv<10> top::ap_const_lv10_300 = "1100000000";
const sc_lv<10> top::ap_const_lv10_1 = "1";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    B_U = new top_B("B_U");
    B_U->clk(ap_clk);
    B_U->reset(ap_rst);
    B_U->address0(B_address0);
    B_U->ce0(B_ce0);
    B_U->we0(B_we0);
    B_U->d0(v13_reg_207);
    B_U->q0(B_q0);
    C_U = new top_B("C_U");
    C_U->clk(ap_clk);
    C_U->reset(ap_rst);
    C_U->address0(C_address0);
    C_U->ce0(C_ce0);
    C_U->we0(C_we0);
    C_U->d0(v25_reg_242);
    C_U->q0(C_q0);
    top_fadd_32ns_32nbkb_U1 = new top_fadd_32ns_32nbkb<1,5,32,32,32>("top_fadd_32ns_32nbkb_U1");
    top_fadd_32ns_32nbkb_U1->clk(ap_clk);
    top_fadd_32ns_32nbkb_U1->reset(ap_rst);
    top_fadd_32ns_32nbkb_U1->din0(grp_fu_288_p0);
    top_fadd_32ns_32nbkb_U1->din1(grp_fu_288_p1);
    top_fadd_32ns_32nbkb_U1->ce(ap_var_for_const0);
    top_fadd_32ns_32nbkb_U1->dout(grp_fu_288_p2);
    top_fmul_32ns_32ncud_U2 = new top_fmul_32ns_32ncud<1,4,32,32,32>("top_fmul_32ns_32ncud_U2");
    top_fmul_32ns_32ncud_U2->clk(ap_clk);
    top_fmul_32ns_32ncud_U2->reset(ap_rst);
    top_fmul_32ns_32ncud_U2->din0(reg_298);
    top_fmul_32ns_32ncud_U2->din1(grp_fu_294_p1);
    top_fmul_32ns_32ncud_U2->ce(ap_var_for_const0);
    top_fmul_32ns_32ncud_U2->dout(grp_fu_294_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_address0);
    sensitive << ( B_addr_reg_685 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( sext_ln67_fu_652_p1 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_B_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln28_fu_413_p2 );

    SC_METHOD(thread_C_address0);
    sensitive << ( C_addr_1_reg_745 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( sext_ln67_fu_652_p1 );

    SC_METHOD(thread_C_ce0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_C_we0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln48_fu_550_p2 );

    SC_METHOD(thread_add_ln30_fu_433_p2);
    sensitive << ( sub_ln30_reg_666 );
    sensitive << ( zext_ln30_3_fu_429_p1 );

    SC_METHOD(thread_add_ln31_fu_438_p2);
    sensitive << ( sub_ln31_reg_680 );
    sensitive << ( zext_ln30_2_fu_425_p1 );

    SC_METHOD(thread_add_ln39_fu_403_p2);
    sensitive << ( sub_ln30_reg_666 );
    sensitive << ( zext_ln31_fu_369_p1 );

    SC_METHOD(thread_add_ln50_fu_570_p2);
    sensitive << ( sub_ln50_reg_726 );
    sensitive << ( zext_ln50_3_fu_566_p1 );

    SC_METHOD(thread_add_ln51_fu_575_p2);
    sensitive << ( sub_ln51_reg_740 );
    sensitive << ( zext_ln50_2_fu_562_p1 );

    SC_METHOD(thread_add_ln59_fu_540_p2);
    sensitive << ( sub_ln50_reg_726 );
    sensitive << ( zext_ln51_fu_506_p1 );

    SC_METHOD(thread_add_ln67_fu_647_p2);
    sensitive << ( sub_ln67_reg_786 );
    sensitive << ( zext_ln67_2_fu_643_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( icmp_ln62_fu_589_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( icmp_ln62_fu_589_p2 );

    SC_METHOD(thread_grp_fu_288_p0);
    sensitive << ( reg_303 );
    sensitive << ( v30_reg_814 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_288_p1);
    sensitive << ( v31_reg_819 );
    sensitive << ( v13_reg_207 );
    sensitive << ( v25_reg_242 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_grp_fu_294_p1);
    sensitive << ( v11_reg_713 );
    sensitive << ( v23_reg_773 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_icmp_ln23_fu_315_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( x_0_3_reg_174 );

    SC_METHOD(thread_icmp_ln24_fu_357_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( y_0_4_reg_185 );

    SC_METHOD(thread_icmp_ln28_fu_413_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( r_0_reg_196 );

    SC_METHOD(thread_icmp_ln43_fu_452_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( x_0_0_reg_220 );

    SC_METHOD(thread_icmp_ln44_fu_494_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( y_0_0_reg_231 );

    SC_METHOD(thread_icmp_ln48_fu_550_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( r1_0_reg_255 );

    SC_METHOD(thread_icmp_ln62_fu_589_p2);
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( x_1_0_reg_266 );

    SC_METHOD(thread_icmp_ln63_fu_631_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( y_1_0_reg_277 );

    SC_METHOD(thread_r1_fu_556_p2);
    sensitive << ( r1_0_reg_255 );

    SC_METHOD(thread_r_fu_419_p2);
    sensitive << ( r_0_reg_196 );

    SC_METHOD(thread_sext_ln30_fu_448_p1);
    sensitive << ( add_ln30_reg_698 );

    SC_METHOD(thread_sext_ln31_fu_443_p1);
    sensitive << ( add_ln31_fu_438_p2 );

    SC_METHOD(thread_sext_ln39_fu_408_p1);
    sensitive << ( add_ln39_fu_403_p2 );

    SC_METHOD(thread_sext_ln50_fu_585_p1);
    sensitive << ( add_ln50_reg_758 );

    SC_METHOD(thread_sext_ln51_fu_580_p1);
    sensitive << ( add_ln51_fu_575_p2 );

    SC_METHOD(thread_sext_ln59_fu_545_p1);
    sensitive << ( add_ln59_fu_540_p2 );

    SC_METHOD(thread_sext_ln67_fu_652_p1);
    sensitive << ( add_ln67_fu_647_p2 );

    SC_METHOD(thread_sub_ln30_fu_351_p2);
    sensitive << ( zext_ln30_fu_335_p1 );
    sensitive << ( zext_ln30_1_fu_347_p1 );

    SC_METHOD(thread_sub_ln31_fu_397_p2);
    sensitive << ( zext_ln31_1_fu_381_p1 );
    sensitive << ( zext_ln31_2_fu_393_p1 );

    SC_METHOD(thread_sub_ln50_fu_488_p2);
    sensitive << ( zext_ln50_fu_472_p1 );
    sensitive << ( zext_ln50_1_fu_484_p1 );

    SC_METHOD(thread_sub_ln51_fu_534_p2);
    sensitive << ( zext_ln51_1_fu_518_p1 );
    sensitive << ( zext_ln51_2_fu_530_p1 );

    SC_METHOD(thread_sub_ln67_fu_625_p2);
    sensitive << ( zext_ln67_fu_609_p1 );
    sensitive << ( zext_ln67_1_fu_621_p1 );

    SC_METHOD(thread_tmp_10_fu_601_p3);
    sensitive << ( x_1_0_reg_266 );

    SC_METHOD(thread_tmp_11_fu_613_p3);
    sensitive << ( x_1_0_reg_266 );

    SC_METHOD(thread_tmp_12_fu_510_p3);
    sensitive << ( y_0_0_reg_231 );

    SC_METHOD(thread_tmp_13_fu_522_p3);
    sensitive << ( y_0_0_reg_231 );

    SC_METHOD(thread_tmp_5_fu_327_p3);
    sensitive << ( x_0_3_reg_174 );

    SC_METHOD(thread_tmp_6_fu_339_p3);
    sensitive << ( x_0_3_reg_174 );

    SC_METHOD(thread_tmp_7_fu_464_p3);
    sensitive << ( x_0_0_reg_220 );

    SC_METHOD(thread_tmp_8_fu_476_p3);
    sensitive << ( x_0_0_reg_220 );

    SC_METHOD(thread_tmp_9_fu_373_p3);
    sensitive << ( y_0_4_reg_185 );

    SC_METHOD(thread_tmp_s_fu_385_p3);
    sensitive << ( y_0_4_reg_185 );

    SC_METHOD(thread_v0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( sext_ln30_fu_448_p1 );
    sensitive << ( sext_ln50_fu_585_p1 );

    SC_METHOD(thread_v0_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_v1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln31_fu_443_p1 );

    SC_METHOD(thread_v1_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_v2_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( sext_ln51_fu_580_p1 );

    SC_METHOD(thread_v2_ce0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_v3_address0);
    sensitive << ( sext_ln67_reg_799 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_v3_ce0);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_v3_d0);
    sensitive << ( reg_308 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_v3_we0);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_x_0_fu_458_p2);
    sensitive << ( x_0_0_reg_220 );

    SC_METHOD(thread_x_1_fu_595_p2);
    sensitive << ( x_1_0_reg_266 );

    SC_METHOD(thread_x_fu_321_p2);
    sensitive << ( x_0_3_reg_174 );

    SC_METHOD(thread_y_0_fu_500_p2);
    sensitive << ( y_0_0_reg_231 );

    SC_METHOD(thread_y_1_fu_637_p2);
    sensitive << ( y_1_0_reg_277 );

    SC_METHOD(thread_y_fu_363_p2);
    sensitive << ( y_0_4_reg_185 );

    SC_METHOD(thread_zext_ln30_1_fu_347_p1);
    sensitive << ( tmp_6_fu_339_p3 );

    SC_METHOD(thread_zext_ln30_2_fu_425_p1);
    sensitive << ( r_0_reg_196 );

    SC_METHOD(thread_zext_ln30_3_fu_429_p1);
    sensitive << ( r_0_reg_196 );

    SC_METHOD(thread_zext_ln30_fu_335_p1);
    sensitive << ( tmp_5_fu_327_p3 );

    SC_METHOD(thread_zext_ln31_1_fu_381_p1);
    sensitive << ( tmp_9_fu_373_p3 );

    SC_METHOD(thread_zext_ln31_2_fu_393_p1);
    sensitive << ( tmp_s_fu_385_p3 );

    SC_METHOD(thread_zext_ln31_fu_369_p1);
    sensitive << ( y_0_4_reg_185 );

    SC_METHOD(thread_zext_ln50_1_fu_484_p1);
    sensitive << ( tmp_8_fu_476_p3 );

    SC_METHOD(thread_zext_ln50_2_fu_562_p1);
    sensitive << ( r1_0_reg_255 );

    SC_METHOD(thread_zext_ln50_3_fu_566_p1);
    sensitive << ( r1_0_reg_255 );

    SC_METHOD(thread_zext_ln50_fu_472_p1);
    sensitive << ( tmp_7_fu_464_p3 );

    SC_METHOD(thread_zext_ln51_1_fu_518_p1);
    sensitive << ( tmp_12_fu_510_p3 );

    SC_METHOD(thread_zext_ln51_2_fu_530_p1);
    sensitive << ( tmp_13_fu_522_p3 );

    SC_METHOD(thread_zext_ln51_fu_506_p1);
    sensitive << ( y_0_0_reg_231 );

    SC_METHOD(thread_zext_ln67_1_fu_621_p1);
    sensitive << ( tmp_11_fu_613_p3 );

    SC_METHOD(thread_zext_ln67_2_fu_643_p1);
    sensitive << ( y_1_0_reg_277 );

    SC_METHOD(thread_zext_ln67_fu_609_p1);
    sensitive << ( tmp_10_fu_601_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln24_fu_357_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln28_fu_413_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( icmp_ln43_fu_452_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( icmp_ln44_fu_494_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln48_fu_550_p2 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( icmp_ln62_fu_589_p2 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( icmp_ln63_fu_631_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v0_address0, "(port)v0_address0");
    sc_trace(mVcdFile, v0_ce0, "(port)v0_ce0");
    sc_trace(mVcdFile, v0_q0, "(port)v0_q0");
    sc_trace(mVcdFile, v1_address0, "(port)v1_address0");
    sc_trace(mVcdFile, v1_ce0, "(port)v1_ce0");
    sc_trace(mVcdFile, v1_q0, "(port)v1_q0");
    sc_trace(mVcdFile, v2_address0, "(port)v2_address0");
    sc_trace(mVcdFile, v2_ce0, "(port)v2_ce0");
    sc_trace(mVcdFile, v2_q0, "(port)v2_q0");
    sc_trace(mVcdFile, v3_address0, "(port)v3_address0");
    sc_trace(mVcdFile, v3_ce0, "(port)v3_ce0");
    sc_trace(mVcdFile, v3_we0, "(port)v3_we0");
    sc_trace(mVcdFile, v3_d0, "(port)v3_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_298, "reg_298");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_294_p2, "grp_fu_294_p2");
    sc_trace(mVcdFile, reg_303, "reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_288_p2, "grp_fu_288_p2");
    sc_trace(mVcdFile, reg_308, "reg_308");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, x_fu_321_p2, "x_fu_321_p2");
    sc_trace(mVcdFile, x_reg_661, "x_reg_661");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln30_fu_351_p2, "sub_ln30_fu_351_p2");
    sc_trace(mVcdFile, sub_ln30_reg_666, "sub_ln30_reg_666");
    sc_trace(mVcdFile, icmp_ln23_fu_315_p2, "icmp_ln23_fu_315_p2");
    sc_trace(mVcdFile, y_fu_363_p2, "y_fu_363_p2");
    sc_trace(mVcdFile, y_reg_675, "y_reg_675");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln31_fu_397_p2, "sub_ln31_fu_397_p2");
    sc_trace(mVcdFile, sub_ln31_reg_680, "sub_ln31_reg_680");
    sc_trace(mVcdFile, icmp_ln24_fu_357_p2, "icmp_ln24_fu_357_p2");
    sc_trace(mVcdFile, B_addr_reg_685, "B_addr_reg_685");
    sc_trace(mVcdFile, r_fu_419_p2, "r_fu_419_p2");
    sc_trace(mVcdFile, r_reg_693, "r_reg_693");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln30_fu_433_p2, "add_ln30_fu_433_p2");
    sc_trace(mVcdFile, add_ln30_reg_698, "add_ln30_reg_698");
    sc_trace(mVcdFile, icmp_ln28_fu_413_p2, "icmp_ln28_fu_413_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, v11_reg_713, "v11_reg_713");
    sc_trace(mVcdFile, x_0_fu_458_p2, "x_0_fu_458_p2");
    sc_trace(mVcdFile, x_0_reg_721, "x_0_reg_721");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, sub_ln50_fu_488_p2, "sub_ln50_fu_488_p2");
    sc_trace(mVcdFile, sub_ln50_reg_726, "sub_ln50_reg_726");
    sc_trace(mVcdFile, icmp_ln43_fu_452_p2, "icmp_ln43_fu_452_p2");
    sc_trace(mVcdFile, y_0_fu_500_p2, "y_0_fu_500_p2");
    sc_trace(mVcdFile, y_0_reg_735, "y_0_reg_735");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, sub_ln51_fu_534_p2, "sub_ln51_fu_534_p2");
    sc_trace(mVcdFile, sub_ln51_reg_740, "sub_ln51_reg_740");
    sc_trace(mVcdFile, icmp_ln44_fu_494_p2, "icmp_ln44_fu_494_p2");
    sc_trace(mVcdFile, C_addr_1_reg_745, "C_addr_1_reg_745");
    sc_trace(mVcdFile, r1_fu_556_p2, "r1_fu_556_p2");
    sc_trace(mVcdFile, r1_reg_753, "r1_reg_753");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, add_ln50_fu_570_p2, "add_ln50_fu_570_p2");
    sc_trace(mVcdFile, add_ln50_reg_758, "add_ln50_reg_758");
    sc_trace(mVcdFile, icmp_ln48_fu_550_p2, "icmp_ln48_fu_550_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, v23_reg_773, "v23_reg_773");
    sc_trace(mVcdFile, x_1_fu_595_p2, "x_1_fu_595_p2");
    sc_trace(mVcdFile, x_1_reg_781, "x_1_reg_781");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, sub_ln67_fu_625_p2, "sub_ln67_fu_625_p2");
    sc_trace(mVcdFile, sub_ln67_reg_786, "sub_ln67_reg_786");
    sc_trace(mVcdFile, icmp_ln62_fu_589_p2, "icmp_ln62_fu_589_p2");
    sc_trace(mVcdFile, y_1_fu_637_p2, "y_1_fu_637_p2");
    sc_trace(mVcdFile, y_1_reg_794, "y_1_reg_794");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, sext_ln67_fu_652_p1, "sext_ln67_fu_652_p1");
    sc_trace(mVcdFile, sext_ln67_reg_799, "sext_ln67_reg_799");
    sc_trace(mVcdFile, icmp_ln63_fu_631_p2, "icmp_ln63_fu_631_p2");
    sc_trace(mVcdFile, B_q0, "B_q0");
    sc_trace(mVcdFile, v30_reg_814, "v30_reg_814");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, C_q0, "C_q0");
    sc_trace(mVcdFile, v31_reg_819, "v31_reg_819");
    sc_trace(mVcdFile, B_address0, "B_address0");
    sc_trace(mVcdFile, B_ce0, "B_ce0");
    sc_trace(mVcdFile, B_we0, "B_we0");
    sc_trace(mVcdFile, C_address0, "C_address0");
    sc_trace(mVcdFile, C_ce0, "C_ce0");
    sc_trace(mVcdFile, C_we0, "C_we0");
    sc_trace(mVcdFile, x_0_3_reg_174, "x_0_3_reg_174");
    sc_trace(mVcdFile, y_0_4_reg_185, "y_0_4_reg_185");
    sc_trace(mVcdFile, r_0_reg_196, "r_0_reg_196");
    sc_trace(mVcdFile, v13_reg_207, "v13_reg_207");
    sc_trace(mVcdFile, x_0_0_reg_220, "x_0_0_reg_220");
    sc_trace(mVcdFile, y_0_0_reg_231, "y_0_0_reg_231");
    sc_trace(mVcdFile, v25_reg_242, "v25_reg_242");
    sc_trace(mVcdFile, r1_0_reg_255, "r1_0_reg_255");
    sc_trace(mVcdFile, x_1_0_reg_266, "x_1_0_reg_266");
    sc_trace(mVcdFile, y_1_0_reg_277, "y_1_0_reg_277");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, sext_ln39_fu_408_p1, "sext_ln39_fu_408_p1");
    sc_trace(mVcdFile, sext_ln31_fu_443_p1, "sext_ln31_fu_443_p1");
    sc_trace(mVcdFile, sext_ln30_fu_448_p1, "sext_ln30_fu_448_p1");
    sc_trace(mVcdFile, sext_ln59_fu_545_p1, "sext_ln59_fu_545_p1");
    sc_trace(mVcdFile, sext_ln51_fu_580_p1, "sext_ln51_fu_580_p1");
    sc_trace(mVcdFile, sext_ln50_fu_585_p1, "sext_ln50_fu_585_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, grp_fu_288_p0, "grp_fu_288_p0");
    sc_trace(mVcdFile, grp_fu_288_p1, "grp_fu_288_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_fu_294_p1, "grp_fu_294_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_5_fu_327_p3, "tmp_5_fu_327_p3");
    sc_trace(mVcdFile, tmp_6_fu_339_p3, "tmp_6_fu_339_p3");
    sc_trace(mVcdFile, zext_ln30_fu_335_p1, "zext_ln30_fu_335_p1");
    sc_trace(mVcdFile, zext_ln30_1_fu_347_p1, "zext_ln30_1_fu_347_p1");
    sc_trace(mVcdFile, tmp_9_fu_373_p3, "tmp_9_fu_373_p3");
    sc_trace(mVcdFile, tmp_s_fu_385_p3, "tmp_s_fu_385_p3");
    sc_trace(mVcdFile, zext_ln31_1_fu_381_p1, "zext_ln31_1_fu_381_p1");
    sc_trace(mVcdFile, zext_ln31_2_fu_393_p1, "zext_ln31_2_fu_393_p1");
    sc_trace(mVcdFile, zext_ln31_fu_369_p1, "zext_ln31_fu_369_p1");
    sc_trace(mVcdFile, add_ln39_fu_403_p2, "add_ln39_fu_403_p2");
    sc_trace(mVcdFile, zext_ln30_3_fu_429_p1, "zext_ln30_3_fu_429_p1");
    sc_trace(mVcdFile, zext_ln30_2_fu_425_p1, "zext_ln30_2_fu_425_p1");
    sc_trace(mVcdFile, add_ln31_fu_438_p2, "add_ln31_fu_438_p2");
    sc_trace(mVcdFile, tmp_7_fu_464_p3, "tmp_7_fu_464_p3");
    sc_trace(mVcdFile, tmp_8_fu_476_p3, "tmp_8_fu_476_p3");
    sc_trace(mVcdFile, zext_ln50_fu_472_p1, "zext_ln50_fu_472_p1");
    sc_trace(mVcdFile, zext_ln50_1_fu_484_p1, "zext_ln50_1_fu_484_p1");
    sc_trace(mVcdFile, tmp_12_fu_510_p3, "tmp_12_fu_510_p3");
    sc_trace(mVcdFile, tmp_13_fu_522_p3, "tmp_13_fu_522_p3");
    sc_trace(mVcdFile, zext_ln51_1_fu_518_p1, "zext_ln51_1_fu_518_p1");
    sc_trace(mVcdFile, zext_ln51_2_fu_530_p1, "zext_ln51_2_fu_530_p1");
    sc_trace(mVcdFile, zext_ln51_fu_506_p1, "zext_ln51_fu_506_p1");
    sc_trace(mVcdFile, add_ln59_fu_540_p2, "add_ln59_fu_540_p2");
    sc_trace(mVcdFile, zext_ln50_3_fu_566_p1, "zext_ln50_3_fu_566_p1");
    sc_trace(mVcdFile, zext_ln50_2_fu_562_p1, "zext_ln50_2_fu_562_p1");
    sc_trace(mVcdFile, add_ln51_fu_575_p2, "add_ln51_fu_575_p2");
    sc_trace(mVcdFile, tmp_10_fu_601_p3, "tmp_10_fu_601_p3");
    sc_trace(mVcdFile, tmp_11_fu_613_p3, "tmp_11_fu_613_p3");
    sc_trace(mVcdFile, zext_ln67_fu_609_p1, "zext_ln67_fu_609_p1");
    sc_trace(mVcdFile, zext_ln67_1_fu_621_p1, "zext_ln67_1_fu_621_p1");
    sc_trace(mVcdFile, zext_ln67_2_fu_643_p1, "zext_ln67_2_fu_643_p1");
    sc_trace(mVcdFile, add_ln67_fu_647_p2, "add_ln67_fu_647_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete B_U;
    delete C_U;
    delete top_fadd_32ns_32nbkb_U1;
    delete top_fmul_32ns_32ncud_U2;
}

void top::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        r1_0_reg_255 = r1_reg_753.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_fu_494_p2.read()))) {
        r1_0_reg_255 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_0_reg_196 = r_reg_693.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_357_p2.read()))) {
        r_0_reg_196 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        v13_reg_207 = grp_fu_288_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_357_p2.read()))) {
        v13_reg_207 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        v25_reg_242 = grp_fu_288_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_fu_494_p2.read()))) {
        v25_reg_242 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_315_p2.read(), ap_const_lv1_1))) {
        x_0_0_reg_220 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                esl_seteq<1,1,1>(icmp_ln44_fu_494_p2.read(), ap_const_lv1_1))) {
        x_0_0_reg_220 = x_0_reg_721.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_357_p2.read(), ap_const_lv1_1))) {
        x_0_3_reg_174 = x_reg_661.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_3_reg_174 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(icmp_ln43_fu_452_p2.read(), ap_const_lv1_1))) {
        x_1_0_reg_266 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                esl_seteq<1,1,1>(icmp_ln63_fu_631_p2.read(), ap_const_lv1_1))) {
        x_1_0_reg_266 = x_1_reg_781.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(icmp_ln48_fu_550_p2.read(), ap_const_lv1_1))) {
        y_0_0_reg_231 = y_0_reg_735.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln43_fu_452_p2.read()))) {
        y_0_0_reg_231 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_413_p2.read(), ap_const_lv1_1))) {
        y_0_4_reg_185 = y_reg_675.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln23_fu_315_p2.read(), ap_const_lv1_0))) {
        y_0_4_reg_185 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        y_1_0_reg_277 = y_1_reg_794.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln62_fu_589_p2.read()))) {
        y_1_0_reg_277 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_fu_357_p2.read()))) {
        B_addr_reg_685 =  (sc_lv<14>) (sext_ln39_fu_408_p1.read());
        sub_ln31_reg_680 = sub_ln31_fu_397_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_fu_494_p2.read()))) {
        C_addr_1_reg_745 =  (sc_lv<14>) (sext_ln59_fu_545_p1.read());
        sub_ln51_reg_740 = sub_ln51_fu_534_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_413_p2.read()))) {
        add_ln30_reg_698 = add_ln30_fu_433_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln48_fu_550_p2.read()))) {
        add_ln50_reg_758 = add_ln50_fu_570_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        r1_reg_753 = r1_fu_556_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_reg_693 = r_fu_419_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_298 = v0_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        reg_303 = grp_fu_294_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        reg_308 = grp_fu_288_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln63_fu_631_p2.read()))) {
        sext_ln67_reg_799 = sext_ln67_fu_652_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_315_p2.read(), ap_const_lv1_0))) {
        sub_ln30_reg_666 = sub_ln30_fu_351_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln43_fu_452_p2.read()))) {
        sub_ln50_reg_726 = sub_ln50_fu_488_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln62_fu_589_p2.read()))) {
        sub_ln67_reg_786 = sub_ln67_fu_625_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        v11_reg_713 = v1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        v23_reg_773 = v2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        v30_reg_814 = B_q0.read();
        v31_reg_819 = C_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        x_0_reg_721 = x_0_fu_458_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        x_1_reg_781 = x_1_fu_595_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_reg_661 = x_fu_321_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        y_0_reg_735 = y_0_fu_500_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        y_1_reg_794 = y_1_fu_637_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        y_reg_675 = y_fu_363_p2.read();
    }
}

void top::thread_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        B_address0 =  (sc_lv<14>) (sext_ln67_fu_652_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        B_address0 = B_addr_reg_685.read();
    } else {
        B_address0 = "XXXXXXXXXXXXXX";
    }
}

void top::thread_B_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        B_ce0 = ap_const_logic_1;
    } else {
        B_ce0 = ap_const_logic_0;
    }
}

void top::thread_B_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln28_fu_413_p2.read(), ap_const_lv1_1))) {
        B_we0 = ap_const_logic_1;
    } else {
        B_we0 = ap_const_logic_0;
    }
}

void top::thread_C_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        C_address0 =  (sc_lv<14>) (sext_ln67_fu_652_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        C_address0 = C_addr_1_reg_745.read();
    } else {
        C_address0 = "XXXXXXXXXXXXXX";
    }
}

void top::thread_C_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        C_ce0 = ap_const_logic_1;
    } else {
        C_ce0 = ap_const_logic_0;
    }
}

void top::thread_C_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(icmp_ln48_fu_550_p2.read(), ap_const_lv1_1))) {
        C_we0 = ap_const_logic_1;
    } else {
        C_we0 = ap_const_logic_0;
    }
}

void top::thread_add_ln30_fu_433_p2() {
    add_ln30_fu_433_p2 = (!sub_ln30_reg_666.read().is_01() || !zext_ln30_3_fu_429_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln30_reg_666.read()) + sc_biguint<15>(zext_ln30_3_fu_429_p1.read()));
}

void top::thread_add_ln31_fu_438_p2() {
    add_ln31_fu_438_p2 = (!sub_ln31_reg_680.read().is_01() || !zext_ln30_2_fu_425_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(sub_ln31_reg_680.read()) + sc_biguint<21>(zext_ln30_2_fu_425_p1.read()));
}

void top::thread_add_ln39_fu_403_p2() {
    add_ln39_fu_403_p2 = (!sub_ln30_reg_666.read().is_01() || !zext_ln31_fu_369_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln30_reg_666.read()) + sc_biguint<15>(zext_ln31_fu_369_p1.read()));
}

void top::thread_add_ln50_fu_570_p2() {
    add_ln50_fu_570_p2 = (!sub_ln50_reg_726.read().is_01() || !zext_ln50_3_fu_566_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln50_reg_726.read()) + sc_biguint<15>(zext_ln50_3_fu_566_p1.read()));
}

void top::thread_add_ln51_fu_575_p2() {
    add_ln51_fu_575_p2 = (!sub_ln51_reg_740.read().is_01() || !zext_ln50_2_fu_562_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(sub_ln51_reg_740.read()) + sc_biguint<21>(zext_ln50_2_fu_562_p1.read()));
}

void top::thread_add_ln59_fu_540_p2() {
    add_ln59_fu_540_p2 = (!sub_ln50_reg_726.read().is_01() || !zext_ln51_fu_506_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln50_reg_726.read()) + sc_biguint<15>(zext_ln51_fu_506_p1.read()));
}

void top::thread_add_ln67_fu_647_p2() {
    add_ln67_fu_647_p2 = (!sub_ln67_reg_786.read().is_01() || !zext_ln67_2_fu_643_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln67_reg_786.read()) + sc_biguint<15>(zext_ln67_2_fu_643_p1.read()));
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void top::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void top::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void top::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void top::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void top::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void top::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void top::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void top::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void top::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void top::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void top::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void top::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void top::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void top::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void top::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void top::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(icmp_ln62_fu_589_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
         esl_seteq<1,1,1>(icmp_ln62_fu_589_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_grp_fu_288_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_288_p0 = v30_reg_814.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        grp_fu_288_p0 = reg_303.read();
    } else {
        grp_fu_288_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top::thread_grp_fu_288_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        grp_fu_288_p1 = v31_reg_819.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_288_p1 = v25_reg_242.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_288_p1 = v13_reg_207.read();
    } else {
        grp_fu_288_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top::thread_grp_fu_294_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_294_p1 = v23_reg_773.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_294_p1 = v11_reg_713.read();
    } else {
        grp_fu_294_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top::thread_icmp_ln23_fu_315_p2() {
    icmp_ln23_fu_315_p2 = (!x_0_3_reg_174.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(x_0_3_reg_174.read() == ap_const_lv4_C);
}

void top::thread_icmp_ln24_fu_357_p2() {
    icmp_ln24_fu_357_p2 = (!y_0_4_reg_185.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(y_0_4_reg_185.read() == ap_const_lv10_300);
}

void top::thread_icmp_ln28_fu_413_p2() {
    icmp_ln28_fu_413_p2 = (!r_0_reg_196.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_196.read() == ap_const_lv10_300);
}

void top::thread_icmp_ln43_fu_452_p2() {
    icmp_ln43_fu_452_p2 = (!x_0_0_reg_220.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(x_0_0_reg_220.read() == ap_const_lv4_C);
}

void top::thread_icmp_ln44_fu_494_p2() {
    icmp_ln44_fu_494_p2 = (!y_0_0_reg_231.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(y_0_0_reg_231.read() == ap_const_lv10_300);
}

void top::thread_icmp_ln48_fu_550_p2() {
    icmp_ln48_fu_550_p2 = (!r1_0_reg_255.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(r1_0_reg_255.read() == ap_const_lv10_300);
}

void top::thread_icmp_ln62_fu_589_p2() {
    icmp_ln62_fu_589_p2 = (!x_1_0_reg_266.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(x_1_0_reg_266.read() == ap_const_lv4_C);
}

void top::thread_icmp_ln63_fu_631_p2() {
    icmp_ln63_fu_631_p2 = (!y_1_0_reg_277.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(y_1_0_reg_277.read() == ap_const_lv10_300);
}

void top::thread_r1_fu_556_p2() {
    r1_fu_556_p2 = (!r1_0_reg_255.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(r1_0_reg_255.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_r_fu_419_p2() {
    r_fu_419_p2 = (!r_0_reg_196.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(r_0_reg_196.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_sext_ln30_fu_448_p1() {
    sext_ln30_fu_448_p1 = esl_sext<64,15>(add_ln30_reg_698.read());
}

void top::thread_sext_ln31_fu_443_p1() {
    sext_ln31_fu_443_p1 = esl_sext<64,21>(add_ln31_fu_438_p2.read());
}

void top::thread_sext_ln39_fu_408_p1() {
    sext_ln39_fu_408_p1 = esl_sext<64,15>(add_ln39_fu_403_p2.read());
}

void top::thread_sext_ln50_fu_585_p1() {
    sext_ln50_fu_585_p1 = esl_sext<64,15>(add_ln50_reg_758.read());
}

void top::thread_sext_ln51_fu_580_p1() {
    sext_ln51_fu_580_p1 = esl_sext<64,21>(add_ln51_fu_575_p2.read());
}

void top::thread_sext_ln59_fu_545_p1() {
    sext_ln59_fu_545_p1 = esl_sext<64,15>(add_ln59_fu_540_p2.read());
}

void top::thread_sext_ln67_fu_652_p1() {
    sext_ln67_fu_652_p1 = esl_sext<64,15>(add_ln67_fu_647_p2.read());
}

void top::thread_sub_ln30_fu_351_p2() {
    sub_ln30_fu_351_p2 = (!zext_ln30_fu_335_p1.read().is_01() || !zext_ln30_1_fu_347_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln30_fu_335_p1.read()) - sc_biguint<15>(zext_ln30_1_fu_347_p1.read()));
}

void top::thread_sub_ln31_fu_397_p2() {
    sub_ln31_fu_397_p2 = (!zext_ln31_1_fu_381_p1.read().is_01() || !zext_ln31_2_fu_393_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(zext_ln31_1_fu_381_p1.read()) - sc_biguint<21>(zext_ln31_2_fu_393_p1.read()));
}

void top::thread_sub_ln50_fu_488_p2() {
    sub_ln50_fu_488_p2 = (!zext_ln50_fu_472_p1.read().is_01() || !zext_ln50_1_fu_484_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln50_fu_472_p1.read()) - sc_biguint<15>(zext_ln50_1_fu_484_p1.read()));
}

void top::thread_sub_ln51_fu_534_p2() {
    sub_ln51_fu_534_p2 = (!zext_ln51_1_fu_518_p1.read().is_01() || !zext_ln51_2_fu_530_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(zext_ln51_1_fu_518_p1.read()) - sc_biguint<21>(zext_ln51_2_fu_530_p1.read()));
}

void top::thread_sub_ln67_fu_625_p2() {
    sub_ln67_fu_625_p2 = (!zext_ln67_fu_609_p1.read().is_01() || !zext_ln67_1_fu_621_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln67_fu_609_p1.read()) - sc_biguint<15>(zext_ln67_1_fu_621_p1.read()));
}

void top::thread_tmp_10_fu_601_p3() {
    tmp_10_fu_601_p3 = esl_concat<4,10>(x_1_0_reg_266.read(), ap_const_lv10_0);
}

void top::thread_tmp_11_fu_613_p3() {
    tmp_11_fu_613_p3 = esl_concat<4,8>(x_1_0_reg_266.read(), ap_const_lv8_0);
}

void top::thread_tmp_12_fu_510_p3() {
    tmp_12_fu_510_p3 = esl_concat<10,10>(y_0_0_reg_231.read(), ap_const_lv10_0);
}

void top::thread_tmp_13_fu_522_p3() {
    tmp_13_fu_522_p3 = esl_concat<10,8>(y_0_0_reg_231.read(), ap_const_lv8_0);
}

void top::thread_tmp_5_fu_327_p3() {
    tmp_5_fu_327_p3 = esl_concat<4,10>(x_0_3_reg_174.read(), ap_const_lv10_0);
}

void top::thread_tmp_6_fu_339_p3() {
    tmp_6_fu_339_p3 = esl_concat<4,8>(x_0_3_reg_174.read(), ap_const_lv8_0);
}

void top::thread_tmp_7_fu_464_p3() {
    tmp_7_fu_464_p3 = esl_concat<4,10>(x_0_0_reg_220.read(), ap_const_lv10_0);
}

void top::thread_tmp_8_fu_476_p3() {
    tmp_8_fu_476_p3 = esl_concat<4,8>(x_0_0_reg_220.read(), ap_const_lv8_0);
}

void top::thread_tmp_9_fu_373_p3() {
    tmp_9_fu_373_p3 = esl_concat<10,10>(y_0_4_reg_185.read(), ap_const_lv10_0);
}

void top::thread_tmp_s_fu_385_p3() {
    tmp_s_fu_385_p3 = esl_concat<10,8>(y_0_4_reg_185.read(), ap_const_lv8_0);
}

void top::thread_v0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        v0_address0 =  (sc_lv<14>) (sext_ln50_fu_585_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v0_address0 =  (sc_lv<14>) (sext_ln30_fu_448_p1.read());
    } else {
        v0_address0 = "XXXXXXXXXXXXXX";
    }
}

void top::thread_v0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        v0_ce0 = ap_const_logic_1;
    } else {
        v0_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_address0() {
    v1_address0 =  (sc_lv<20>) (sext_ln31_fu_443_p1.read());
}

void top::thread_v1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        v1_ce0 = ap_const_logic_1;
    } else {
        v1_ce0 = ap_const_logic_0;
    }
}

void top::thread_v2_address0() {
    v2_address0 =  (sc_lv<20>) (sext_ln51_fu_580_p1.read());
}

void top::thread_v2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        v2_ce0 = ap_const_logic_1;
    } else {
        v2_ce0 = ap_const_logic_0;
    }
}

void top::thread_v3_address0() {
    v3_address0 =  (sc_lv<14>) (sext_ln67_reg_799.read());
}

void top::thread_v3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        v3_ce0 = ap_const_logic_1;
    } else {
        v3_ce0 = ap_const_logic_0;
    }
}

void top::thread_v3_d0() {
    v3_d0 = reg_308.read();
}

void top::thread_v3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        v3_we0 = ap_const_logic_1;
    } else {
        v3_we0 = ap_const_logic_0;
    }
}

void top::thread_x_0_fu_458_p2() {
    x_0_fu_458_p2 = (!x_0_0_reg_220.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_0_reg_220.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_x_1_fu_595_p2() {
    x_1_fu_595_p2 = (!x_1_0_reg_266.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_1_0_reg_266.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_x_fu_321_p2() {
    x_fu_321_p2 = (!x_0_3_reg_174.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_0_3_reg_174.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_y_0_fu_500_p2() {
    y_0_fu_500_p2 = (!y_0_0_reg_231.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(y_0_0_reg_231.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_y_1_fu_637_p2() {
    y_1_fu_637_p2 = (!y_1_0_reg_277.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(y_1_0_reg_277.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_y_fu_363_p2() {
    y_fu_363_p2 = (!y_0_4_reg_185.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(y_0_4_reg_185.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void top::thread_zext_ln30_1_fu_347_p1() {
    zext_ln30_1_fu_347_p1 = esl_zext<15,12>(tmp_6_fu_339_p3.read());
}

void top::thread_zext_ln30_2_fu_425_p1() {
    zext_ln30_2_fu_425_p1 = esl_zext<21,10>(r_0_reg_196.read());
}

void top::thread_zext_ln30_3_fu_429_p1() {
    zext_ln30_3_fu_429_p1 = esl_zext<15,10>(r_0_reg_196.read());
}

void top::thread_zext_ln30_fu_335_p1() {
    zext_ln30_fu_335_p1 = esl_zext<15,14>(tmp_5_fu_327_p3.read());
}

void top::thread_zext_ln31_1_fu_381_p1() {
    zext_ln31_1_fu_381_p1 = esl_zext<21,20>(tmp_9_fu_373_p3.read());
}

void top::thread_zext_ln31_2_fu_393_p1() {
    zext_ln31_2_fu_393_p1 = esl_zext<21,18>(tmp_s_fu_385_p3.read());
}

void top::thread_zext_ln31_fu_369_p1() {
    zext_ln31_fu_369_p1 = esl_zext<15,10>(y_0_4_reg_185.read());
}

void top::thread_zext_ln50_1_fu_484_p1() {
    zext_ln50_1_fu_484_p1 = esl_zext<15,12>(tmp_8_fu_476_p3.read());
}

void top::thread_zext_ln50_2_fu_562_p1() {
    zext_ln50_2_fu_562_p1 = esl_zext<21,10>(r1_0_reg_255.read());
}

void top::thread_zext_ln50_3_fu_566_p1() {
    zext_ln50_3_fu_566_p1 = esl_zext<15,10>(r1_0_reg_255.read());
}

void top::thread_zext_ln50_fu_472_p1() {
    zext_ln50_fu_472_p1 = esl_zext<15,14>(tmp_7_fu_464_p3.read());
}

void top::thread_zext_ln51_1_fu_518_p1() {
    zext_ln51_1_fu_518_p1 = esl_zext<21,20>(tmp_12_fu_510_p3.read());
}

void top::thread_zext_ln51_2_fu_530_p1() {
    zext_ln51_2_fu_530_p1 = esl_zext<21,18>(tmp_13_fu_522_p3.read());
}

void top::thread_zext_ln51_fu_506_p1() {
    zext_ln51_fu_506_p1 = esl_zext<15,10>(y_0_0_reg_231.read());
}

void top::thread_zext_ln67_1_fu_621_p1() {
    zext_ln67_1_fu_621_p1 = esl_zext<15,12>(tmp_11_fu_613_p3.read());
}

void top::thread_zext_ln67_2_fu_643_p1() {
    zext_ln67_2_fu_643_p1 = esl_zext<15,10>(y_1_0_reg_277.read());
}

void top::thread_zext_ln67_fu_609_p1() {
    zext_ln67_fu_609_p1 = esl_zext<15,14>(tmp_10_fu_601_p3.read());
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_315_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_357_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln28_fu_413_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(icmp_ln43_fu_452_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(icmp_ln44_fu_494_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(icmp_ln48_fu_550_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(icmp_ln62_fu_589_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_631_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_address0\" :  \"" << v0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v0_ce0\" :  \"" << v0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_q0\" :  \"" << v0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_address0\" :  \"" << v1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_ce0\" :  \"" << v1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v1_q0\" :  \"" << v1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_address0\" :  \"" << v2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v2_ce0\" :  \"" << v2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v2_q0\" :  \"" << v2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v3_address0\" :  \"" << v3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v3_ce0\" :  \"" << v3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v3_we0\" :  \"" << v3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v3_d0\" :  \"" << v3_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

