-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pow_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    base_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of pow_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv9_182 : STD_LOGIC_VECTOR (8 downto 0) := "110000010";
    constant ap_const_lv52_B17217F7D1C : STD_LOGIC_VECTOR (51 downto 0) := "0000000010110001011100100001011111110111110100011100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv67_C00000 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000110000000000000000000000";
    constant ap_const_lv67_1800000 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000001100000000000000000000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv46_B17217F7D : STD_LOGIC_VECTOR (45 downto 0) := "0000000000101100010111001000010111111101111101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_382 : STD_LOGIC_VECTOR (9 downto 0) := "1110000010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv31_3F800000 : STD_LOGIC_VECTOR (30 downto 0) := "0111111100000000000000000000000";
    constant ap_const_lv31_7F800000 : STD_LOGIC_VECTOR (30 downto 0) := "1111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymo_7_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_7_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_7_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_6_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_6_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_6_q0 : STD_LOGIC_VECTOR (55 downto 0);
    signal pow_reduce_anonymo_9_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pow_reduce_anonymo_9_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_9_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal pow_reduce_anonymo_10_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_10_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_10_q0 : STD_LOGIC_VECTOR (48 downto 0);
    signal pow_reduce_anonymo_8_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal pow_reduce_anonymo_8_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_8_q0 : STD_LOGIC_VECTOR (43 downto 0);
    signal pow_reduce_anonymo_11_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pow_reduce_anonymo_11_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_11_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal pow_reduce_anonymo_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal pow_reduce_anonymo_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1635_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_27_reg_1642 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_27_reg_1642_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_28_fu_381_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_V_28_reg_1649 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_V_28_reg_1649_pp0_iter1_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_157_reg_1657 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_reg_1657_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_frac_tilde_inverse_reg_1673 : STD_LOGIC_VECTOR (5 downto 0);
    signal log_sum_V_reg_1678 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter2_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter3_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter4_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter5_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter6_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter7_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_reg_1678_pp0_iter8_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal icmp_ln833_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1683_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1689_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln682_fu_1611_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln682_reg_1694 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln682_reg_1694_pp0_iter3_reg : STD_LOGIC_VECTOR (24 downto 0);
    signal a_V_reg_1703 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_V_reg_1703_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_V_reg_1703_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_V_reg_1703_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_V_reg_1703_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal a_V_reg_1703_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_23_fu_472_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_23_reg_1709 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_101_reg_1714 : STD_LOGIC_VECTOR (40 downto 0);
    signal a_V_1_reg_1720 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_V_1_reg_1720_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal a_V_1_reg_1720_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_125_reg_1726 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_4_fu_605_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_4_reg_1731 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_4_reg_1731_pp0_iter6_reg : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_617_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal r_V_24_reg_1746 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_108_reg_1751 : STD_LOGIC_VECTOR (43 downto 0);
    signal a_V_2_fu_657_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_V_2_reg_1762 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_126_reg_1767 : STD_LOGIC_VECTOR (37 downto 0);
    signal ret_V_6_fu_712_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_6_reg_1782 : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_6_reg_1782_pp0_iter9_reg : STD_LOGIC_VECTOR (62 downto 0);
    signal ret_V_6_reg_1782_pp0_iter10_reg : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln657_1_fu_734_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal add_ln657_1_reg_1797 : STD_LOGIC_VECTOR (49 downto 0);
    signal log_sum_V_1_fu_752_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1802 : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1802_pp0_iter10_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1802_pp0_iter11_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal log_sum_V_1_reg_1802_pp0_iter12_reg : STD_LOGIC_VECTOR (55 downto 0);
    signal and_ln369_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln369_reg_1807_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_1_reg_1814_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_reg_1820_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1826_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal b_exp_3_fu_818_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_3_reg_1833 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_724_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_25_reg_1838 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_127_reg_1848 : STD_LOGIC_VECTOR (38 downto 0);
    signal tmp_127_reg_1848_pp0_iter12_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln_reg_1853 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_828_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal Elog2_V_reg_1858 : STD_LOGIC_VECTOR (51 downto 0);
    signal lshr_ln_reg_1863 : STD_LOGIC_VECTOR (44 downto 0);
    signal log_base_V_reg_1868 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln657_1_fu_975_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal grp_fu_978_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal m_frac_l_V_reg_1879 : STD_LOGIC_VECTOR (66 downto 0);
    signal trunc_ln1_reg_1884 : STD_LOGIC_VECTOR (64 downto 0);
    signal m_fix_V_reg_1889 : STD_LOGIC_VECTOR (35 downto 0);
    signal m_fix_V_reg_1889_pp0_iter16_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal m_fix_V_reg_1889_pp0_iter17_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal m_fix_hi_V_reg_1894 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_105_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_1904 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_1904_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_1904_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_1904_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_1904_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_reg_1904_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_3_fu_1089_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1910 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1910_pp0_iter17_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1910_pp0_iter18_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1910_pp0_iter19_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_1910_pp0_iter20_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln657_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1917 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1917_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1917_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1917_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1917_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fix_a_V_reg_1923 : STD_LOGIC_VECTOR (35 downto 0);
    signal m_diff_lo_V_fu_1146_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal m_diff_lo_V_reg_1928 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1_V_reg_1943 : STD_LOGIC_VECTOR (26 downto 0);
    signal exp_Z1P_m_1_V_reg_1948 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1_hi_V_reg_1953 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_14_fu_1206_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_14_reg_1958 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_29_fu_1629_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_29_reg_1963 : STD_LOGIC_VECTOR (35 downto 0);
    signal xor_ln936_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln936_reg_1968 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_sign_reg_1973 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_106_fu_1375_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_106_reg_1980 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln460_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_reg_1985 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln181_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln181_reg_1990 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_2_fu_1505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_2_reg_2000 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_3_fu_1511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_3_reg_2005 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_reg_2010 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln498_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_3_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_4_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_2_fu_682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_1_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_5_fu_1165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index0_V_fu_385_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_s_fu_428_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_22_fu_435_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Result_103_fu_419_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal z1_V_fu_458_p3 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_23_fu_472_p0 : STD_LOGIC_VECTOR (38 downto 0);
    signal r_V_23_fu_472_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sf_fu_488_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_158_fu_481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_497_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln1287_fu_506_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln657_fu_478_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_V_fu_518_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal eZ_V_fu_510_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln682_1_fu_526_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal rhs_V_fu_530_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal ret_V_2_fu_534_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal lhs_V_1_fu_540_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal rhs_V_1_fu_544_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal ret_V_3_fu_547_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal lhs_V_2_fu_590_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal eZ_V_1_fu_583_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal zext_ln682_2_fu_597_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal rhs_V_2_fu_601_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_617_p0 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_617_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal rhs_V_3_fu_626_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal lhs_V_3_fu_623_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln682_3_fu_633_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_5_fu_637_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_V_4_fu_697_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal eZ_V_2_fu_690_p3 : STD_LOGIC_VECTOR (56 downto 0);
    signal zext_ln682_4_fu_704_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal rhs_V_4_fu_708_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_724_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_724_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln157_1_fu_686_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln157_2_fu_730_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal zext_ln157_fu_740_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln657_10_fu_749_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal add_ln657_fu_744_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln339_fu_758_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_exp_fu_761_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln369_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_2_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln415_1_fu_798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_exp_1_fu_812_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_828_p0 : STD_LOGIC_VECTOR (44 downto 0);
    signal rhs_V_5_fu_837_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal lhs_V_5_fu_834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln682_5_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_7_fu_848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_26_fu_877_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln1070_fu_874_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal r_V_26_fu_877_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_26_fu_877_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal lhs_V_6_fu_896_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln682_6_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln657_11_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_8_fu_910_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln662_1_fu_916_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal lhs_V_7_fu_930_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln657_2_fu_893_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal sext_ln682_fu_937_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln657_fu_941_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal ret_V_9_fu_945_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal sum_V_fu_926_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln657_1_fu_951_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal zext_ln657_2_fu_955_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal ret_V_10_fu_959_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal grp_fu_978_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_978_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_984_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_984_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_984_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal rhs_V_6_fu_1039_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1618_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln805_fu_1066_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_1050_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln805_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln805_fu_1075_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Result_88_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln805_fu_1081_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1453_fu_1097_p1 : STD_LOGIC_VECTOR (66 downto 0);
    signal r_V_28_fu_1108_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_28_fu_1108_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal lhs_V_8_fu_1124_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal rhs_V_7_fu_1127_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal ret_V_12_fu_1130_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal m_diff_hi_V_fu_1136_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z2_ind_V_fu_1155_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs_V_9_fu_1170_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal rhs_V_8_fu_1173_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_13_fu_1177_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_10_fu_1203_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal or_ln386_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln386_1_fu_1232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln460_2_fu_1243_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln467_2_fu_1256_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_11_fu_1269_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal zext_ln657_15_fu_1276_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal ret_V_15_fu_1279_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_161_fu_1285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_1293_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_2_fu_1298_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_162_fu_1305_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln849_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1347_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1_fu_1337_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln168_fu_1365_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_V_fu_1369_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_fu_1357_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal x_is_n1_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln370_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln371_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln371_1_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln370_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln371_2_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln460_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln460_1_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln467_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_1_fu_1447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln657_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln657_fu_1453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln181_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln657_1_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln853_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln657_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln853_fu_1481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln853_1_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln181_1_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln467_fu_1441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln371_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln853_1_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln415_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_102_fu_1539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_104_fu_1546_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_101_fu_1532_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln853_fu_1553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln853_1_fu_1560_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln853_2_fu_1567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln853_3_fu_1574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln853_4_fu_1580_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_is_p1_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln415_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln415_fu_1591_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln853_fu_1587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln682_fu_1611_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln682_fu_1611_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1618_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_29_fu_1629_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_29_fu_1629_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to21 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_617_p00 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_617_p10 : STD_LOGIC_VECTOR (46 downto 0);
    signal grp_fu_724_p00 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_724_p10 : STD_LOGIC_VECTOR (49 downto 0);
    signal mul_ln682_fu_1611_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_23_fu_472_p00 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_23_fu_472_p10 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_29_fu_1629_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_29_fu_1629_p10 : STD_LOGIC_VECTOR (35 downto 0);

    component top_mul_41ns_6ns_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (40 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (46 downto 0) );
    end component;


    component top_mul_44ns_6ns_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (43 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component top_mul_45ns_9s_5kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (44 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component top_mul_25ns_43s_lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (42 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;


    component top_mul_26ns_43s_mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (42 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;


    component top_mul_mul_25s_6ncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_mac_muladd_13ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component top_mul_mul_18ns_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component pow_generic_floatbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component pow_generic_floatcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (55 downto 0) );
    end component;


    component pow_generic_floatdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component pow_generic_floateOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component pow_generic_floatfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (43 downto 0) );
    end component;


    component pow_generic_floatg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component pow_generic_floathbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    pow_reduce_anonymo_7_U : component pow_generic_floatbkb
    generic map (
        DataWidth => 6,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_7_address0,
        ce0 => pow_reduce_anonymo_7_ce0,
        q0 => pow_reduce_anonymo_7_q0);

    pow_reduce_anonymo_6_U : component pow_generic_floatcud
    generic map (
        DataWidth => 56,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_6_address0,
        ce0 => pow_reduce_anonymo_6_ce0,
        q0 => pow_reduce_anonymo_6_q0);

    pow_reduce_anonymo_9_U : component pow_generic_floatdEe
    generic map (
        DataWidth => 52,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_9_address0,
        ce0 => pow_reduce_anonymo_9_ce0,
        q0 => pow_reduce_anonymo_9_q0);

    pow_reduce_anonymo_10_U : component pow_generic_floateOg
    generic map (
        DataWidth => 49,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_10_address0,
        ce0 => pow_reduce_anonymo_10_ce0,
        q0 => pow_reduce_anonymo_10_q0);

    pow_reduce_anonymo_8_U : component pow_generic_floatfYi
    generic map (
        DataWidth => 44,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_8_address0,
        ce0 => pow_reduce_anonymo_8_ce0,
        q0 => pow_reduce_anonymo_8_q0);

    pow_reduce_anonymo_11_U : component pow_generic_floatg8j
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_11_address0,
        ce0 => pow_reduce_anonymo_11_ce0,
        q0 => pow_reduce_anonymo_11_q0);

    pow_reduce_anonymo_U : component pow_generic_floathbi
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_address0,
        ce0 => pow_reduce_anonymo_ce0,
        q0 => pow_reduce_anonymo_q0);

    top_mul_41ns_6ns_ibs_U1 : component top_mul_41ns_6ns_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 41,
        din1_WIDTH => 6,
        dout_WIDTH => 47)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_617_p0,
        din1 => grp_fu_617_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_617_p2);

    top_mul_44ns_6ns_jbC_U2 : component top_mul_44ns_6ns_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 44,
        din1_WIDTH => 6,
        dout_WIDTH => 50)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_724_p0,
        din1 => grp_fu_724_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_724_p2);

    top_mul_45ns_9s_5kbM_U3 : component top_mul_45ns_9s_5kbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 45,
        din1_WIDTH => 9,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_828_p0,
        din1 => b_exp_3_reg_1833,
        ce => ap_const_logic_1,
        dout => grp_fu_828_p2);

    top_mul_25ns_43s_lbW_U4 : component top_mul_25ns_43s_lbW
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 25,
        din1_WIDTH => 43,
        dout_WIDTH => 67)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_978_p0,
        din1 => grp_fu_978_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_978_p2);

    top_mul_26ns_43s_mb6_U5 : component top_mul_26ns_43s_mb6
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 26,
        din1_WIDTH => 43,
        dout_WIDTH => 67)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_984_p0,
        din1 => grp_fu_984_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_984_p2);

    top_mul_mul_25s_6ncg_U6 : component top_mul_mul_25s_6ncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 6,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln682_fu_1611_p0,
        din1 => mul_ln682_fu_1611_p1,
        dout => mul_ln682_fu_1611_p2);

    top_mac_muladd_13ocq_U7 : component top_mac_muladd_13ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1618_p0,
        din1 => m_fix_hi_V_reg_1894,
        din2 => rhs_V_6_fu_1039_p3,
        dout => grp_fu_1618_p3);

    top_mul_mul_18ns_pcA_U8 : component top_mul_mul_18ns_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => r_V_29_fu_1629_p0,
        din1 => r_V_29_fu_1629_p1,
        dout => r_V_29_fu_1629_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Elog2_V_reg_1858 <= grp_fu_828_p2;
                a_V_1_reg_1720 <= ret_V_3_fu_547_p2(43 downto 38);
                a_V_1_reg_1720_pp0_iter5_reg <= a_V_1_reg_1720;
                a_V_1_reg_1720_pp0_iter6_reg <= a_V_1_reg_1720_pp0_iter5_reg;
                a_V_2_reg_1762 <= ret_V_5_fu_637_p2(49 downto 44);
                a_V_reg_1703 <= mul_ln682_fu_1611_p2(24 downto 21);
                a_V_reg_1703_pp0_iter3_reg <= a_V_reg_1703;
                a_V_reg_1703_pp0_iter4_reg <= a_V_reg_1703_pp0_iter3_reg;
                a_V_reg_1703_pp0_iter5_reg <= a_V_reg_1703_pp0_iter4_reg;
                a_V_reg_1703_pp0_iter6_reg <= a_V_reg_1703_pp0_iter5_reg;
                a_V_reg_1703_pp0_iter7_reg <= a_V_reg_1703_pp0_iter6_reg;
                add_ln657_1_reg_1797 <= add_ln657_1_fu_734_p2;
                and_ln181_reg_1990 <= and_ln181_fu_1459_p2;
                and_ln18_1_reg_1820 <= and_ln18_1_fu_793_p2;
                and_ln18_1_reg_1820_pp0_iter11_reg <= and_ln18_1_reg_1820;
                and_ln18_1_reg_1820_pp0_iter12_reg <= and_ln18_1_reg_1820_pp0_iter11_reg;
                and_ln18_1_reg_1820_pp0_iter13_reg <= and_ln18_1_reg_1820_pp0_iter12_reg;
                and_ln18_1_reg_1820_pp0_iter14_reg <= and_ln18_1_reg_1820_pp0_iter13_reg;
                and_ln18_1_reg_1820_pp0_iter15_reg <= and_ln18_1_reg_1820_pp0_iter14_reg;
                and_ln18_1_reg_1820_pp0_iter16_reg <= and_ln18_1_reg_1820_pp0_iter15_reg;
                and_ln18_1_reg_1820_pp0_iter17_reg <= and_ln18_1_reg_1820_pp0_iter16_reg;
                and_ln18_1_reg_1820_pp0_iter18_reg <= and_ln18_1_reg_1820_pp0_iter17_reg;
                and_ln18_1_reg_1820_pp0_iter19_reg <= and_ln18_1_reg_1820_pp0_iter18_reg;
                and_ln18_1_reg_1820_pp0_iter20_reg <= and_ln18_1_reg_1820_pp0_iter19_reg;
                and_ln369_reg_1807 <= and_ln369_fu_773_p2;
                and_ln369_reg_1807_pp0_iter11_reg <= and_ln369_reg_1807;
                and_ln369_reg_1807_pp0_iter12_reg <= and_ln369_reg_1807_pp0_iter11_reg;
                and_ln369_reg_1807_pp0_iter13_reg <= and_ln369_reg_1807_pp0_iter12_reg;
                and_ln369_reg_1807_pp0_iter14_reg <= and_ln369_reg_1807_pp0_iter13_reg;
                and_ln369_reg_1807_pp0_iter15_reg <= and_ln369_reg_1807_pp0_iter14_reg;
                and_ln369_reg_1807_pp0_iter16_reg <= and_ln369_reg_1807_pp0_iter15_reg;
                and_ln369_reg_1807_pp0_iter17_reg <= and_ln369_reg_1807_pp0_iter16_reg;
                and_ln369_reg_1807_pp0_iter18_reg <= and_ln369_reg_1807_pp0_iter17_reg;
                and_ln369_reg_1807_pp0_iter19_reg <= and_ln369_reg_1807_pp0_iter18_reg;
                and_ln369_reg_1807_pp0_iter20_reg <= and_ln369_reg_1807_pp0_iter19_reg;
                and_ln369_reg_1807_pp0_iter21_reg <= and_ln369_reg_1807_pp0_iter20_reg;
                and_ln415_reg_2010 <= and_ln415_fu_1522_p2;
                and_ln460_reg_1985 <= and_ln460_fu_1423_p2;
                b_exp_3_reg_1833 <= b_exp_3_fu_818_p3;
                exp_Z1P_m_1_V_reg_1948 <= ret_V_13_fu_1177_p2(18 downto 1);
                exp_Z1_V_reg_1943 <= pow_reduce_anonymo_11_q0;
                exp_Z1_hi_V_reg_1953 <= pow_reduce_anonymo_11_q0(26 downto 9);
                icmp_ln415_reg_1826 <= icmp_ln415_fu_806_p2;
                icmp_ln415_reg_1826_pp0_iter11_reg <= icmp_ln415_reg_1826;
                icmp_ln415_reg_1826_pp0_iter12_reg <= icmp_ln415_reg_1826_pp0_iter11_reg;
                icmp_ln415_reg_1826_pp0_iter13_reg <= icmp_ln415_reg_1826_pp0_iter12_reg;
                icmp_ln415_reg_1826_pp0_iter14_reg <= icmp_ln415_reg_1826_pp0_iter13_reg;
                icmp_ln415_reg_1826_pp0_iter15_reg <= icmp_ln415_reg_1826_pp0_iter14_reg;
                icmp_ln415_reg_1826_pp0_iter16_reg <= icmp_ln415_reg_1826_pp0_iter15_reg;
                icmp_ln415_reg_1826_pp0_iter17_reg <= icmp_ln415_reg_1826_pp0_iter16_reg;
                icmp_ln415_reg_1826_pp0_iter18_reg <= icmp_ln415_reg_1826_pp0_iter17_reg;
                icmp_ln415_reg_1826_pp0_iter19_reg <= icmp_ln415_reg_1826_pp0_iter18_reg;
                icmp_ln415_reg_1826_pp0_iter20_reg <= icmp_ln415_reg_1826_pp0_iter19_reg;
                icmp_ln657_reg_1917 <= icmp_ln657_fu_1100_p2;
                icmp_ln657_reg_1917_pp0_iter17_reg <= icmp_ln657_reg_1917;
                icmp_ln657_reg_1917_pp0_iter18_reg <= icmp_ln657_reg_1917_pp0_iter17_reg;
                icmp_ln657_reg_1917_pp0_iter19_reg <= icmp_ln657_reg_1917_pp0_iter18_reg;
                icmp_ln657_reg_1917_pp0_iter20_reg <= icmp_ln657_reg_1917_pp0_iter19_reg;
                icmp_ln833_1_reg_1814 <= icmp_ln833_1_fu_788_p2;
                icmp_ln833_1_reg_1814_pp0_iter11_reg <= icmp_ln833_1_reg_1814;
                icmp_ln833_1_reg_1814_pp0_iter12_reg <= icmp_ln833_1_reg_1814_pp0_iter11_reg;
                icmp_ln833_1_reg_1814_pp0_iter13_reg <= icmp_ln833_1_reg_1814_pp0_iter12_reg;
                icmp_ln833_1_reg_1814_pp0_iter14_reg <= icmp_ln833_1_reg_1814_pp0_iter13_reg;
                icmp_ln833_1_reg_1814_pp0_iter15_reg <= icmp_ln833_1_reg_1814_pp0_iter14_reg;
                icmp_ln833_1_reg_1814_pp0_iter16_reg <= icmp_ln833_1_reg_1814_pp0_iter15_reg;
                icmp_ln833_1_reg_1814_pp0_iter17_reg <= icmp_ln833_1_reg_1814_pp0_iter16_reg;
                icmp_ln833_1_reg_1814_pp0_iter18_reg <= icmp_ln833_1_reg_1814_pp0_iter17_reg;
                icmp_ln833_1_reg_1814_pp0_iter19_reg <= icmp_ln833_1_reg_1814_pp0_iter18_reg;
                icmp_ln833_1_reg_1814_pp0_iter20_reg <= icmp_ln833_1_reg_1814_pp0_iter19_reg;
                icmp_ln833_reg_1683 <= icmp_ln833_fu_409_p2;
                icmp_ln833_reg_1683_pp0_iter3_reg <= icmp_ln833_reg_1683;
                icmp_ln833_reg_1683_pp0_iter4_reg <= icmp_ln833_reg_1683_pp0_iter3_reg;
                icmp_ln833_reg_1683_pp0_iter5_reg <= icmp_ln833_reg_1683_pp0_iter4_reg;
                icmp_ln833_reg_1683_pp0_iter6_reg <= icmp_ln833_reg_1683_pp0_iter5_reg;
                icmp_ln833_reg_1683_pp0_iter7_reg <= icmp_ln833_reg_1683_pp0_iter6_reg;
                icmp_ln833_reg_1683_pp0_iter8_reg <= icmp_ln833_reg_1683_pp0_iter7_reg;
                icmp_ln833_reg_1683_pp0_iter9_reg <= icmp_ln833_reg_1683_pp0_iter8_reg;
                icmp_ln837_reg_1689 <= icmp_ln837_fu_414_p2;
                icmp_ln837_reg_1689_pp0_iter3_reg <= icmp_ln837_reg_1689;
                icmp_ln837_reg_1689_pp0_iter4_reg <= icmp_ln837_reg_1689_pp0_iter3_reg;
                icmp_ln837_reg_1689_pp0_iter5_reg <= icmp_ln837_reg_1689_pp0_iter4_reg;
                icmp_ln837_reg_1689_pp0_iter6_reg <= icmp_ln837_reg_1689_pp0_iter5_reg;
                icmp_ln837_reg_1689_pp0_iter7_reg <= icmp_ln837_reg_1689_pp0_iter6_reg;
                icmp_ln837_reg_1689_pp0_iter8_reg <= icmp_ln837_reg_1689_pp0_iter7_reg;
                icmp_ln837_reg_1689_pp0_iter9_reg <= icmp_ln837_reg_1689_pp0_iter8_reg;
                log_base_V_reg_1868 <= ret_V_10_fu_959_p2(64 downto 22);
                log_sum_V_1_reg_1802 <= log_sum_V_1_fu_752_p2;
                log_sum_V_1_reg_1802_pp0_iter10_reg <= log_sum_V_1_reg_1802;
                log_sum_V_1_reg_1802_pp0_iter11_reg <= log_sum_V_1_reg_1802_pp0_iter10_reg;
                log_sum_V_1_reg_1802_pp0_iter12_reg <= log_sum_V_1_reg_1802_pp0_iter11_reg;
                log_sum_V_reg_1678_pp0_iter2_reg <= log_sum_V_reg_1678;
                log_sum_V_reg_1678_pp0_iter3_reg <= log_sum_V_reg_1678_pp0_iter2_reg;
                log_sum_V_reg_1678_pp0_iter4_reg <= log_sum_V_reg_1678_pp0_iter3_reg;
                log_sum_V_reg_1678_pp0_iter5_reg <= log_sum_V_reg_1678_pp0_iter4_reg;
                log_sum_V_reg_1678_pp0_iter6_reg <= log_sum_V_reg_1678_pp0_iter5_reg;
                log_sum_V_reg_1678_pp0_iter7_reg <= log_sum_V_reg_1678_pp0_iter6_reg;
                log_sum_V_reg_1678_pp0_iter8_reg <= log_sum_V_reg_1678_pp0_iter7_reg;
                lshr_ln_reg_1863 <= r_V_26_fu_877_p2(45 downto 1);
                m_diff_lo_V_reg_1928 <= m_diff_lo_V_fu_1146_p1;
                m_fix_V_reg_1889 <= grp_fu_984_p2(65 downto 30);
                m_fix_V_reg_1889_pp0_iter16_reg <= m_fix_V_reg_1889;
                m_fix_V_reg_1889_pp0_iter17_reg <= m_fix_V_reg_1889_pp0_iter16_reg;
                m_fix_a_V_reg_1923 <= r_V_28_fu_1108_p2(44 downto 9);
                m_fix_hi_V_reg_1894 <= grp_fu_984_p2(65 downto 53);
                m_frac_l_V_reg_1879 <= grp_fu_978_p2;
                mul_ln682_reg_1694 <= mul_ln682_fu_1611_p2;
                mul_ln682_reg_1694_pp0_iter3_reg <= mul_ln682_reg_1694;
                or_ln853_2_reg_2000 <= or_ln853_2_fu_1505_p2;
                or_ln853_3_reg_2005 <= or_ln853_3_fu_1511_p2;
                or_ln853_reg_1995 <= or_ln853_fu_1493_p2;
                p_Result_105_reg_1899 <= grp_fu_984_p2(65 downto 65);
                p_Result_106_reg_1980 <= p_Result_106_fu_1375_p4;
                p_Result_s_reg_1635_pp0_iter10_reg <= p_Result_s_reg_1635_pp0_iter9_reg;
                p_Result_s_reg_1635_pp0_iter11_reg <= p_Result_s_reg_1635_pp0_iter10_reg;
                p_Result_s_reg_1635_pp0_iter12_reg <= p_Result_s_reg_1635_pp0_iter11_reg;
                p_Result_s_reg_1635_pp0_iter13_reg <= p_Result_s_reg_1635_pp0_iter12_reg;
                p_Result_s_reg_1635_pp0_iter14_reg <= p_Result_s_reg_1635_pp0_iter13_reg;
                p_Result_s_reg_1635_pp0_iter15_reg <= p_Result_s_reg_1635_pp0_iter14_reg;
                p_Result_s_reg_1635_pp0_iter16_reg <= p_Result_s_reg_1635_pp0_iter15_reg;
                p_Result_s_reg_1635_pp0_iter17_reg <= p_Result_s_reg_1635_pp0_iter16_reg;
                p_Result_s_reg_1635_pp0_iter18_reg <= p_Result_s_reg_1635_pp0_iter17_reg;
                p_Result_s_reg_1635_pp0_iter19_reg <= p_Result_s_reg_1635_pp0_iter18_reg;
                p_Result_s_reg_1635_pp0_iter20_reg <= p_Result_s_reg_1635_pp0_iter19_reg;
                p_Result_s_reg_1635_pp0_iter2_reg <= p_Result_s_reg_1635_pp0_iter1_reg;
                p_Result_s_reg_1635_pp0_iter3_reg <= p_Result_s_reg_1635_pp0_iter2_reg;
                p_Result_s_reg_1635_pp0_iter4_reg <= p_Result_s_reg_1635_pp0_iter3_reg;
                p_Result_s_reg_1635_pp0_iter5_reg <= p_Result_s_reg_1635_pp0_iter4_reg;
                p_Result_s_reg_1635_pp0_iter6_reg <= p_Result_s_reg_1635_pp0_iter5_reg;
                p_Result_s_reg_1635_pp0_iter7_reg <= p_Result_s_reg_1635_pp0_iter6_reg;
                p_Result_s_reg_1635_pp0_iter8_reg <= p_Result_s_reg_1635_pp0_iter7_reg;
                p_Result_s_reg_1635_pp0_iter9_reg <= p_Result_s_reg_1635_pp0_iter8_reg;
                p_Val2_101_reg_1714 <= ret_V_3_fu_547_p2(43 downto 3);
                p_Val2_108_reg_1751 <= ret_V_5_fu_637_p2(49 downto 6);
                r_V_23_reg_1709 <= r_V_23_fu_472_p2;
                r_V_24_reg_1746 <= grp_fu_617_p2;
                r_V_25_reg_1838 <= grp_fu_724_p2;
                r_V_29_reg_1963 <= r_V_29_fu_1629_p2;
                r_exp_V_3_reg_1910 <= r_exp_V_3_fu_1089_p3;
                r_exp_V_3_reg_1910_pp0_iter17_reg <= r_exp_V_3_reg_1910;
                r_exp_V_3_reg_1910_pp0_iter18_reg <= r_exp_V_3_reg_1910_pp0_iter17_reg;
                r_exp_V_3_reg_1910_pp0_iter19_reg <= r_exp_V_3_reg_1910_pp0_iter18_reg;
                r_exp_V_3_reg_1910_pp0_iter20_reg <= r_exp_V_3_reg_1910_pp0_iter19_reg;
                r_sign_reg_1973 <= r_sign_fu_1237_p2;
                ret_V_14_reg_1958 <= ret_V_14_fu_1206_p2;
                ret_V_4_reg_1731 <= ret_V_4_fu_605_p2;
                ret_V_4_reg_1731_pp0_iter6_reg <= ret_V_4_reg_1731;
                ret_V_6_reg_1782 <= ret_V_6_fu_712_p2;
                ret_V_6_reg_1782_pp0_iter10_reg <= ret_V_6_reg_1782_pp0_iter9_reg;
                ret_V_6_reg_1782_pp0_iter9_reg <= ret_V_6_reg_1782;
                tmp_125_reg_1726 <= ret_V_3_fu_547_p2(37 downto 3);
                tmp_126_reg_1767 <= ret_V_5_fu_637_p2(43 downto 6);
                tmp_127_reg_1848 <= ret_V_7_fu_848_p2(62 downto 24);
                tmp_127_reg_1848_pp0_iter12_reg <= tmp_127_reg_1848;
                tmp_157_reg_1657_pp0_iter2_reg <= tmp_157_reg_1657_pp0_iter1_reg;
                tmp_157_reg_1657_pp0_iter3_reg <= tmp_157_reg_1657_pp0_iter2_reg;
                tmp_157_reg_1657_pp0_iter4_reg <= tmp_157_reg_1657_pp0_iter3_reg;
                tmp_157_reg_1657_pp0_iter5_reg <= tmp_157_reg_1657_pp0_iter4_reg;
                tmp_157_reg_1657_pp0_iter6_reg <= tmp_157_reg_1657_pp0_iter5_reg;
                tmp_157_reg_1657_pp0_iter7_reg <= tmp_157_reg_1657_pp0_iter6_reg;
                tmp_157_reg_1657_pp0_iter8_reg <= tmp_157_reg_1657_pp0_iter7_reg;
                tmp_157_reg_1657_pp0_iter9_reg <= tmp_157_reg_1657_pp0_iter8_reg;
                tmp_163_reg_1904 <= grp_fu_978_p2(66 downto 66);
                tmp_163_reg_1904_pp0_iter16_reg <= tmp_163_reg_1904;
                tmp_163_reg_1904_pp0_iter17_reg <= tmp_163_reg_1904_pp0_iter16_reg;
                tmp_163_reg_1904_pp0_iter18_reg <= tmp_163_reg_1904_pp0_iter17_reg;
                tmp_163_reg_1904_pp0_iter19_reg <= tmp_163_reg_1904_pp0_iter18_reg;
                tmp_163_reg_1904_pp0_iter20_reg <= tmp_163_reg_1904_pp0_iter19_reg;
                tmp_V_27_reg_1642_pp0_iter2_reg <= tmp_V_27_reg_1642_pp0_iter1_reg;
                tmp_V_27_reg_1642_pp0_iter3_reg <= tmp_V_27_reg_1642_pp0_iter2_reg;
                tmp_V_27_reg_1642_pp0_iter4_reg <= tmp_V_27_reg_1642_pp0_iter3_reg;
                tmp_V_27_reg_1642_pp0_iter5_reg <= tmp_V_27_reg_1642_pp0_iter4_reg;
                tmp_V_27_reg_1642_pp0_iter6_reg <= tmp_V_27_reg_1642_pp0_iter5_reg;
                tmp_V_27_reg_1642_pp0_iter7_reg <= tmp_V_27_reg_1642_pp0_iter6_reg;
                tmp_V_27_reg_1642_pp0_iter8_reg <= tmp_V_27_reg_1642_pp0_iter7_reg;
                tmp_V_27_reg_1642_pp0_iter9_reg <= tmp_V_27_reg_1642_pp0_iter8_reg;
                trunc_ln1_reg_1884 <= grp_fu_984_p2(65 downto 1);
                trunc_ln_reg_1853 <= ret_V_7_fu_848_p2(62 downto 40);
                xor_ln936_reg_1968 <= xor_ln936_fu_1218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                b_frac_tilde_inverse_reg_1673 <= pow_reduce_anonymo_7_q0;
                log_sum_V_reg_1678 <= pow_reduce_anonymo_6_q0;
                p_Result_s_reg_1635 <= p_Val2_s_fu_359_p1(31 downto 31);
                p_Result_s_reg_1635_pp0_iter1_reg <= p_Result_s_reg_1635;
                tmp_157_reg_1657 <= p_Val2_s_fu_359_p1(22 downto 22);
                tmp_157_reg_1657_pp0_iter1_reg <= tmp_157_reg_1657;
                tmp_V_27_reg_1642 <= p_Val2_s_fu_359_p1(30 downto 23);
                tmp_V_27_reg_1642_pp0_iter1_reg <= tmp_V_27_reg_1642;
                tmp_V_28_reg_1649 <= tmp_V_28_fu_381_p1;
                tmp_V_28_reg_1649_pp0_iter1_reg <= tmp_V_28_reg_1649;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z2_ind_V_fu_1155_p4 <= ret_V_12_fu_1130_p2(17 downto 13);
    a_V_2_fu_657_p4 <= ret_V_5_fu_637_p2(49 downto 44);
    add_ln657_1_fu_734_p2 <= std_logic_vector(unsigned(zext_ln157_1_fu_686_p1) + unsigned(zext_ln157_2_fu_730_p1));
    add_ln657_fu_744_p2 <= std_logic_vector(unsigned(zext_ln157_fu_740_p1) + unsigned(log_sum_V_reg_1678_pp0_iter8_reg));
    add_ln805_fu_1075_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_fu_1050_p4));
    and_ln181_1_fu_1465_p2 <= (tmp_163_reg_1904_pp0_iter20_reg and and_ln657_fu_1453_p2);
    and_ln181_fu_1459_p2 <= (xor_ln181_fu_1326_p2 and and_ln657_fu_1453_p2);
    and_ln18_1_fu_793_p2 <= (icmp_ln833_reg_1683_pp0_iter9_reg and icmp_ln833_2_fu_778_p2);
    and_ln18_fu_783_p2 <= (icmp_ln837_reg_1689_pp0_iter9_reg and icmp_ln833_2_fu_778_p2);
    and_ln369_fu_773_p2 <= (icmp_ln833_reg_1683_pp0_iter9_reg and icmp_ln369_fu_767_p2);
    and_ln371_1_fu_1406_p2 <= (xor_ln371_fu_1400_p2 and icmp_ln415_reg_1826_pp0_iter20_reg);
    and_ln371_2_fu_1411_p2 <= (or_ln370_fu_1395_p2 and and_ln371_1_fu_1406_p2);
    and_ln371_fu_1385_p2 <= (x_is_n1_fu_1223_p2 and icmp_ln415_reg_1826_pp0_iter20_reg);
    and_ln415_fu_1522_p2 <= (xor_ln415_fu_1517_p2 and or_ln370_fu_1395_p2);
    and_ln460_1_fu_1429_p2 <= (icmp_ln460_fu_1250_p2 and and_ln371_2_fu_1411_p2);
    and_ln460_fu_1423_p2 <= (xor_ln460_fu_1417_p2 and and_ln371_2_fu_1411_p2);
    and_ln467_1_fu_1447_p2 <= (icmp_ln467_fu_1263_p2 and and_ln460_1_fu_1429_p2);
    and_ln467_fu_1441_p2 <= (xor_ln467_fu_1435_p2 and and_ln460_1_fu_1429_p2);
    and_ln657_fu_1453_p2 <= (or_ln657_fu_1321_p2 and and_ln467_1_fu_1447_p2);
    and_ln853_1_fu_1487_p2 <= (and_ln853_fu_1481_p2 and and_ln467_1_fu_1447_p2);
    and_ln853_fu_1481_p2 <= (xor_ln657_fu_1475_p2 and icmp_ln853_fu_1331_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter22, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22)
    begin
        if (((ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to21_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to21 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to21)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to21 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln415_fu_1591_p3 when (or_ln415_fu_1598_p2(0) = '1') else 
        bitcast_ln853_fu_1587_p1;
    b_exp_1_fu_812_p2 <= std_logic_vector(signed(ap_const_lv9_182) + signed(zext_ln339_fu_758_p1));
    b_exp_3_fu_818_p3 <= 
        b_exp_1_fu_812_p2 when (tmp_157_reg_1657_pp0_iter9_reg(0) = '1') else 
        b_exp_fu_761_p2;
    b_exp_fu_761_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(zext_ln339_fu_758_p1));
    bitcast_ln853_fu_1587_p1 <= select_ln853_4_fu_1580_p3;
    eZ_V_1_fu_583_p3 <= (ap_const_lv8_80 & p_Val2_101_reg_1714);
    eZ_V_2_fu_690_p3 <= (ap_const_lv13_1000 & p_Val2_108_reg_1751);
    eZ_V_fu_510_p3 <= 
        tmp_s_fu_497_p4 when (tmp_158_fu_481_p3(0) = '1') else 
        zext_ln1287_fu_506_p1;
    grp_fu_1618_p0 <= ap_const_lv25_B8A(13 - 1 downto 0);
    grp_fu_617_p0 <= grp_fu_617_p00(41 - 1 downto 0);
    grp_fu_617_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_101_reg_1714),47));
    grp_fu_617_p1 <= grp_fu_617_p10(6 - 1 downto 0);
    grp_fu_617_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_1_reg_1720),47));
    grp_fu_724_p0 <= grp_fu_724_p00(44 - 1 downto 0);
    grp_fu_724_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_108_reg_1751),50));
    grp_fu_724_p1 <= grp_fu_724_p10(6 - 1 downto 0);
    grp_fu_724_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_2_reg_1762),50));
    grp_fu_828_p0 <= ap_const_lv52_B17217F7D1C(45 - 1 downto 0);
    grp_fu_978_p0 <= ap_const_lv67_C00000(25 - 1 downto 0);
    grp_fu_978_p1 <= sext_ln657_1_fu_975_p1(43 - 1 downto 0);
    grp_fu_984_p0 <= ap_const_lv67_1800000(26 - 1 downto 0);
    grp_fu_984_p1 <= sext_ln657_1_fu_975_p1(43 - 1 downto 0);
    icmp_ln369_fu_767_p2 <= "1" when (b_exp_fu_761_p2 = ap_const_lv9_0) else "0";
    icmp_ln415_fu_806_p2 <= "1" when (or_ln415_1_fu_798_p3 = ap_const_lv32_0) else "0";
    icmp_ln460_fu_1250_p2 <= "1" when (or_ln460_2_fu_1243_p3 = ap_const_lv32_0) else "0";
    icmp_ln467_fu_1263_p2 <= "1" when (or_ln467_2_fu_1256_p3 = ap_const_lv32_0) else "0";
    icmp_ln657_fu_1100_p2 <= "0" when (sext_ln1453_fu_1097_p1 = m_frac_l_V_reg_1879) else "1";
    icmp_ln805_fu_1069_p2 <= "1" when (trunc_ln805_fu_1066_p1 = ap_const_lv15_0) else "0";
    icmp_ln833_1_fu_788_p2 <= "1" when (tmp_V_27_reg_1642_pp0_iter9_reg = ap_const_lv8_0) else "0";
    icmp_ln833_2_fu_778_p2 <= "1" when (tmp_V_27_reg_1642_pp0_iter9_reg = ap_const_lv8_FF) else "0";
    icmp_ln833_fu_409_p2 <= "1" when (tmp_V_28_reg_1649_pp0_iter1_reg = ap_const_lv23_0) else "0";
    icmp_ln837_fu_414_p2 <= "0" when (tmp_V_28_reg_1649_pp0_iter1_reg = ap_const_lv23_0) else "1";
    icmp_ln849_fu_1315_p2 <= "1" when (signed(tmp_162_fu_1305_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln853_fu_1331_p2 <= "1" when (signed(r_exp_V_2_fu_1298_p3) < signed(ap_const_lv10_382)) else "0";
    index0_V_fu_385_p4 <= p_Val2_s_fu_359_p1(22 downto 17);
    lhs_V_10_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_V_reg_1943),28));
    lhs_V_11_fu_1269_p3 <= (ret_V_14_reg_1958 & ap_const_lv17_0);
    lhs_V_1_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_fu_534_p2),46));
    lhs_V_2_fu_590_p3 <= (tmp_125_reg_1726 & ap_const_lv14_0);
    lhs_V_3_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_reg_1731_pp0_iter6_reg),51));
    lhs_V_4_fu_697_p3 <= (tmp_126_reg_1767 & ap_const_lv24_0);
    lhs_V_5_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_reg_1782_pp0_iter10_reg),64));
    lhs_V_6_fu_896_p3 <= (tmp_127_reg_1848_pp0_iter12_reg & ap_const_lv24_0);
    lhs_V_7_fu_930_p3 <= (Elog2_V_reg_1858 & ap_const_lv12_0);
        lhs_V_8_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_fix_V_reg_1889_pp0_iter17_reg),37));

    lhs_V_9_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_lo_V_reg_1928),19));
    lhs_V_fu_518_p3 <= (trunc_ln657_fu_478_p1 & ap_const_lv22_0);
    log_sum_V_1_fu_752_p2 <= std_logic_vector(unsigned(zext_ln657_10_fu_749_p1) + unsigned(add_ln657_fu_744_p2));
    m_diff_hi_V_fu_1136_p4 <= ret_V_12_fu_1130_p2(26 downto 18);
    m_diff_lo_V_fu_1146_p1 <= ret_V_12_fu_1130_p2(18 - 1 downto 0);
    mul_ln682_fu_1611_p0 <= 
        r_V_22_fu_435_p1 when (tmp_157_reg_1657_pp0_iter1_reg(0) = '1') else 
        p_Result_103_fu_419_p4;
    mul_ln682_fu_1611_p1 <= mul_ln682_fu_1611_p10(6 - 1 downto 0);
    mul_ln682_fu_1611_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_frac_tilde_inverse_reg_1673),25));
    or_ln370_fu_1395_p2 <= (xor_ln370_fu_1390_p2 or p_Result_s_reg_1635_pp0_iter20_reg);
    or_ln386_1_fu_1232_p2 <= (or_ln386_fu_1227_p2 or icmp_ln833_1_reg_1814_pp0_iter20_reg);
    or_ln386_fu_1227_p2 <= (xor_ln936_fu_1218_p2 or and_ln18_1_reg_1820_pp0_iter20_reg);
    or_ln415_1_fu_798_p3 <= (ap_const_lv31_0 & and_ln18_fu_783_p2);
    or_ln415_fu_1598_p2 <= (x_is_p1_fu_1528_p2 or and_ln415_reg_2010);
    or_ln460_2_fu_1243_p3 <= (ap_const_lv31_0 & and_ln18_1_reg_1820_pp0_iter20_reg);
    or_ln467_2_fu_1256_p3 <= (ap_const_lv31_0 & icmp_ln833_1_reg_1814_pp0_iter20_reg);
    or_ln657_1_fu_1470_p2 <= (icmp_ln849_fu_1315_p2 or icmp_ln657_reg_1917_pp0_iter20_reg);
    or_ln657_fu_1321_p2 <= (icmp_ln849_fu_1315_p2 or icmp_ln657_reg_1917_pp0_iter20_reg);
    or_ln853_1_fu_1499_p2 <= (and_ln467_fu_1441_p2 or and_ln181_fu_1459_p2);
    or_ln853_2_fu_1505_p2 <= (and_ln460_fu_1423_p2 or and_ln371_fu_1385_p2);
    or_ln853_3_fu_1511_p2 <= (or_ln853_fu_1493_p2 or or_ln853_1_fu_1499_p2);
    or_ln853_fu_1493_p2 <= (and_ln853_1_fu_1487_p2 or and_ln181_1_fu_1465_p2);
    out_exp_V_fu_1369_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) + unsigned(trunc_ln168_fu_1365_p1));
    p_Result_101_fu_1532_p3 <= (r_sign_reg_1973 & ap_const_lv31_3F800000);
    p_Result_102_fu_1539_p3 <= (r_sign_reg_1973 & ap_const_lv31_7F800000);
    p_Result_103_fu_419_p4 <= ((ap_const_lv1_1 & tmp_V_28_reg_1649_pp0_iter1_reg) & ap_const_lv1_0);
    p_Result_104_fu_1546_p3 <= (r_sign_reg_1973 & ap_const_lv31_0);
    p_Result_106_fu_1375_p4 <= ((r_sign_fu_1237_p2 & out_exp_V_fu_1369_p2) & tmp_V_fu_1357_p3);
    p_Result_88_fu_1059_p3 <= grp_fu_1618_p3(24 downto 24);
    p_Val2_s_fu_359_p1 <= base_r;
    pow_reduce_anonymo_10_address0 <= zext_ln498_3_fu_653_p1(6 - 1 downto 0);

    pow_reduce_anonymo_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_10_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_11_address0 <= zext_ln498_1_fu_1150_p1(9 - 1 downto 0);

    pow_reduce_anonymo_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_11_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_6_address0 <= zext_ln498_fu_403_p1(6 - 1 downto 0);

    pow_reduce_anonymo_6_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_6_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_7_address0 <= zext_ln498_fu_403_p1(6 - 1 downto 0);

    pow_reduce_anonymo_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_7_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_8_address0 <= zext_ln498_4_fu_677_p1(6 - 1 downto 0);

    pow_reduce_anonymo_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_8_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_9_address0 <= zext_ln498_2_fu_682_p1(4 - 1 downto 0);

    pow_reduce_anonymo_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_9_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_address0 <= zext_ln498_5_fu_1165_p1(5 - 1 downto 0);

    pow_reduce_anonymo_ce0_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_22_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_fu_428_p3),25));
    r_V_23_fu_472_p0 <= r_V_23_fu_472_p00(39 - 1 downto 0);
    r_V_23_fu_472_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_V_fu_458_p3),43));
    r_V_23_fu_472_p1 <= r_V_23_fu_472_p10(4 - 1 downto 0);
    r_V_23_fu_472_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_reg_1703),43));
    r_V_23_fu_472_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_23_fu_472_p0) * unsigned(r_V_23_fu_472_p1), 43));
    r_V_26_fu_877_p0 <= zext_ln1070_fu_874_p1(23 - 1 downto 0);
    r_V_26_fu_877_p1 <= zext_ln1070_fu_874_p1(23 - 1 downto 0);
    r_V_26_fu_877_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_26_fu_877_p0) * unsigned(r_V_26_fu_877_p1), 46));
    r_V_28_fu_1108_p1 <= r_exp_V_3_reg_1910;
    r_V_28_fu_1108_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv46_B17217F7D) * signed(r_V_28_fu_1108_p1))), 46));
    r_V_29_fu_1629_p0 <= r_V_29_fu_1629_p00(18 - 1 downto 0);
    r_V_29_fu_1629_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1953),36));
    r_V_29_fu_1629_p1 <= r_V_29_fu_1629_p10(18 - 1 downto 0);
    r_V_29_fu_1629_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1948),36));
    r_V_s_fu_428_p3 <= (ap_const_lv1_1 & tmp_V_28_reg_1649_pp0_iter1_reg);
    r_exp_V_2_fu_1298_p3 <= 
        r_exp_V_3_reg_1910_pp0_iter20_reg when (tmp_161_fu_1285_p3(0) = '1') else 
        r_exp_V_fu_1293_p2;
    r_exp_V_3_fu_1089_p3 <= 
        select_ln805_fu_1081_p3 when (p_Result_88_fu_1059_p3(0) = '1') else 
        tmp_fu_1050_p4;
    r_exp_V_fu_1293_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(r_exp_V_3_reg_1910_pp0_iter20_reg));
    r_sign_fu_1237_p2 <= (or_ln386_1_fu_1232_p2 xor ap_const_lv1_1);
    ret_V_10_fu_959_p2 <= std_logic_vector(unsigned(zext_ln657_1_fu_951_p1) + unsigned(zext_ln657_2_fu_955_p1));
    ret_V_12_fu_1130_p2 <= std_logic_vector(signed(lhs_V_8_fu_1124_p1) - signed(rhs_V_7_fu_1127_p1));
    ret_V_13_fu_1177_p2 <= std_logic_vector(unsigned(lhs_V_9_fu_1170_p1) + unsigned(rhs_V_8_fu_1173_p1));
    ret_V_14_fu_1206_p2 <= std_logic_vector(unsigned(ap_const_lv28_4) + unsigned(lhs_V_10_fu_1203_p1));
    ret_V_15_fu_1279_p2 <= std_logic_vector(unsigned(lhs_V_11_fu_1269_p3) + unsigned(zext_ln657_15_fu_1276_p1));
    ret_V_2_fu_534_p2 <= std_logic_vector(unsigned(zext_ln682_1_fu_526_p1) + unsigned(rhs_V_fu_530_p1));
    ret_V_3_fu_547_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_540_p1) - unsigned(rhs_V_1_fu_544_p1));
    ret_V_4_fu_605_p2 <= std_logic_vector(unsigned(zext_ln682_2_fu_597_p1) + unsigned(rhs_V_2_fu_601_p1));
    ret_V_5_fu_637_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_623_p1) - unsigned(zext_ln682_3_fu_633_p1));
    ret_V_6_fu_712_p2 <= std_logic_vector(unsigned(zext_ln682_4_fu_704_p1) + unsigned(rhs_V_4_fu_708_p1));
    ret_V_7_fu_848_p2 <= std_logic_vector(unsigned(lhs_V_5_fu_834_p1) - unsigned(zext_ln682_5_fu_844_p1));
    ret_V_8_fu_910_p2 <= std_logic_vector(unsigned(zext_ln682_6_fu_903_p1) - unsigned(zext_ln657_11_fu_907_p1));
    ret_V_9_fu_945_p2 <= std_logic_vector(signed(sext_ln682_fu_937_p1) + signed(zext_ln657_fu_941_p1));
    rhs_V_1_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_23_reg_1709),46));
    rhs_V_2_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_V_1_fu_583_p3),50));
    rhs_V_3_fu_626_p3 <= (r_V_24_reg_1746 & ap_const_lv1_0);
    rhs_V_4_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_V_2_fu_690_p3),63));
    rhs_V_5_fu_837_p3 <= (r_V_25_reg_1838 & ap_const_lv6_0);
    rhs_V_6_fu_1039_p3 <= (p_Result_105_reg_1899 & ap_const_lv15_4000);
        rhs_V_7_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_fix_a_V_reg_1923),37));

    rhs_V_8_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_q0),19));
    rhs_V_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(eZ_V_fu_510_p3),45));
    select_ln415_fu_1591_p3 <= 
        ap_const_lv32_7FFFFFFF when (and_ln415_reg_2010(0) = '1') else 
        ap_const_lv32_3F800000;
    select_ln805_fu_1081_p3 <= 
        tmp_fu_1050_p4 when (icmp_ln805_fu_1069_p2(0) = '1') else 
        add_ln805_fu_1075_p2;
    select_ln853_1_fu_1560_p3 <= 
        p_Result_102_fu_1539_p3 when (and_ln460_reg_1985(0) = '1') else 
        p_Result_101_fu_1532_p3;
    select_ln853_2_fu_1567_p3 <= 
        p_Result_104_fu_1546_p3 when (or_ln853_reg_1995(0) = '1') else 
        select_ln853_fu_1553_p3;
    select_ln853_3_fu_1574_p3 <= 
        select_ln853_1_fu_1560_p3 when (or_ln853_2_reg_2000(0) = '1') else 
        p_Result_106_reg_1980;
    select_ln853_4_fu_1580_p3 <= 
        select_ln853_2_fu_1567_p3 when (or_ln853_3_reg_2005(0) = '1') else 
        select_ln853_3_fu_1574_p3;
    select_ln853_fu_1553_p3 <= 
        p_Result_102_fu_1539_p3 when (and_ln181_reg_1990(0) = '1') else 
        p_Result_104_fu_1546_p3;
        sext_ln1453_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_1884),67));

        sext_ln657_1_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_base_V_reg_1868),67));

        sext_ln657_2_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(log_sum_V_1_reg_1802_pp0_iter12_reg),65));

        sext_ln682_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_7_fu_930_p3),66));

    sf_fu_488_p4 <= ((ap_const_lv5_10 & mul_ln682_reg_1694_pp0_iter3_reg) & ap_const_lv13_0);
        sum_V_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln662_1_fu_916_p4),65));

    tmp_158_fu_481_p3 <= mul_ln682_reg_1694_pp0_iter3_reg(24 downto 24);
    tmp_161_fu_1285_p3 <= ret_V_15_fu_1279_p2(43 downto 43);
    tmp_162_fu_1305_p4 <= r_exp_V_2_fu_1298_p3(9 downto 7);
    tmp_1_fu_1337_p4 <= ret_V_15_fu_1279_p2(41 downto 19);
    tmp_2_fu_1347_p4 <= ret_V_15_fu_1279_p2(42 downto 20);
    tmp_V_28_fu_381_p1 <= p_Val2_s_fu_359_p1(23 - 1 downto 0);
    tmp_V_fu_1357_p3 <= 
        tmp_2_fu_1347_p4 when (tmp_161_fu_1285_p3(0) = '1') else 
        tmp_1_fu_1337_p4;
    tmp_fu_1050_p4 <= grp_fu_1618_p3(24 downto 15);
    tmp_s_fu_497_p4 <= ((ap_const_lv5_10 & mul_ln682_reg_1694_pp0_iter3_reg) & ap_const_lv14_0);
    trunc_ln168_fu_1365_p1 <= r_exp_V_2_fu_1298_p3(8 - 1 downto 0);
    trunc_ln657_fu_478_p1 <= mul_ln682_reg_1694_pp0_iter3_reg(21 - 1 downto 0);
    trunc_ln662_1_fu_916_p4 <= ret_V_8_fu_910_p2(63 downto 24);
    trunc_ln805_fu_1066_p1 <= grp_fu_1618_p3(15 - 1 downto 0);
    x_is_n1_fu_1223_p2 <= (p_Result_s_reg_1635_pp0_iter20_reg and and_ln369_reg_1807_pp0_iter20_reg);
    x_is_p1_fu_1528_p2 <= (xor_ln936_reg_1968 and and_ln369_reg_1807_pp0_iter21_reg);
    xor_ln181_fu_1326_p2 <= (tmp_163_reg_1904_pp0_iter20_reg xor ap_const_lv1_1);
    xor_ln370_fu_1390_p2 <= (ap_const_lv1_1 xor and_ln369_reg_1807_pp0_iter20_reg);
    xor_ln371_fu_1400_p2 <= (x_is_n1_fu_1223_p2 xor ap_const_lv1_1);
    xor_ln415_fu_1517_p2 <= (icmp_ln415_reg_1826_pp0_iter20_reg xor ap_const_lv1_1);
    xor_ln460_fu_1417_p2 <= (icmp_ln460_fu_1250_p2 xor ap_const_lv1_1);
    xor_ln467_fu_1435_p2 <= (icmp_ln467_fu_1263_p2 xor ap_const_lv1_1);
    xor_ln657_fu_1475_p2 <= (or_ln657_1_fu_1470_p2 xor ap_const_lv1_1);
    xor_ln936_fu_1218_p2 <= (p_Result_s_reg_1635_pp0_iter20_reg xor ap_const_lv1_1);
    z1_V_fu_458_p3 <= (mul_ln682_reg_1694 & ap_const_lv14_0);
    zext_ln1070_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_reg_1853),46));
    zext_ln1287_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sf_fu_488_p4),44));
    zext_ln157_1_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_10_q0),50));
    zext_ln157_2_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_8_q0),50));
    zext_ln157_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pow_reduce_anonymo_9_q0),56));
    zext_ln339_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_27_reg_1642_pp0_iter9_reg),9));
    zext_ln498_1_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_fu_1136_p4),64));
    zext_ln498_2_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_reg_1703_pp0_iter7_reg),64));
    zext_ln498_3_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_1_reg_1720_pp0_iter6_reg),64));
    zext_ln498_4_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(a_V_2_fu_657_p4),64));
    zext_ln498_5_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_V_fu_1155_p4),64));
    zext_ln498_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index0_V_fu_385_p4),64));
    zext_ln657_10_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_1_reg_1797),56));
    zext_ln657_11_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_1863),64));
    zext_ln657_15_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_29_reg_1963),45));
    zext_ln657_1_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_9_fu_945_p2),67));
    zext_ln657_2_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_V_fu_926_p1),67));
    zext_ln657_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln657_2_fu_893_p1),66));
    zext_ln682_1_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_518_p3),45));
    zext_ln682_2_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_2_fu_590_p3),50));
    zext_ln682_3_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_3_fu_626_p3),51));
    zext_ln682_4_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_4_fu_697_p3),63));
    zext_ln682_5_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_5_fu_837_p3),64));
    zext_ln682_6_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_6_fu_896_p3),64));
end behav;
