-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity exp_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of exp_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv84_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (83 downto 0) := "000000000000010110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv59_10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal table_exp_Z1_array_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_exp_Z1_array_s_ce0 : STD_LOGIC;
    signal table_exp_Z1_array_s_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal table_f_Z3_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_array_V_ce0 : STD_LOGIC;
    signal table_f_Z3_array_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z3_array_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z3_array_V_ce1 : STD_LOGIC;
    signal table_f_Z3_array_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal table_f_Z2_array_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal table_f_Z2_array_V_ce0 : STD_LOGIC;
    signal table_f_Z2_array_V_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_130_fu_265_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1127_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_1132 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln837_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_5_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_5_reg_1144 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln253_fu_313_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter1_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter2_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter3_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter4_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter5_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter6_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter7_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter8_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter9_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter10_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter11_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter12_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter13_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter14_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter15_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter16_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter17_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln253_reg_1149_pp0_iter18_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln209_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln209_reg_1155_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_1162_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln682_fu_352_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln682_reg_1168 : STD_LOGIC_VECTOR (70 downto 0);
    signal isNeg_fu_356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1173 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1311_1_fu_381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1311_1_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_42_fu_409_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183_pp0_iter2_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183_pp0_iter3_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183_pp0_iter4_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183_pp0_iter5_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183_pp0_iter6_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_42_reg_1183_pp0_iter7_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_l_V_reg_1188 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fix_hi_V_reg_1194 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_131_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_reg_1204_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_6_fu_517_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_6_reg_1212_pp0_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln338_1_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln338_1_reg_1219_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1229 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_diff_hi_V_reg_1234 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1234_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1234_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1234_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1234_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1234_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1239_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_604_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1246 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1246_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_V_fu_614_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_V_reg_1251 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_19_fu_655_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_19_reg_1266 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_19_reg_1266_pp0_iter10_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_19_reg_1266_pp0_iter11_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_161_reg_1272 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_i_fu_661_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_i_reg_1277 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_i_reg_1277_pp0_iter11_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_128_reg_1292 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_V_fu_711_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1302 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1302_pp0_iter13_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1302_pp0_iter14_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_129_reg_1308 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_129_reg_1308_pp0_iter13_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_129_reg_1308_pp0_iter14_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_130_reg_1329 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_1334 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1334_pp0_iter16_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1334_pp0_iter17_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_1339 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_1344 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_820_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_47_reg_1359 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_47_reg_1359_pp0_iter18_reg : STD_LOGIC_VECTOR (99 downto 0);
    signal ret_V_21_fu_829_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal ret_V_21_reg_1365 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_168_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln498_6_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_7_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_8_fu_692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_fu_748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_fu_261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_31_fu_283_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_299_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_fu_307_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln833_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln502_fu_336_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_frac_l_V_fu_345_p3 : STD_LOGIC_VECTOR (60 downto 0);
    signal m_exp_fu_339_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1311_fu_364_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1311_fu_369_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_exp_2_fu_373_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1285_fu_389_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal r_V_fu_393_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln1287_fu_385_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal sext_ln1287_fu_399_p1 : STD_LOGIC_VECTOR (70 downto 0);
    signal r_V_30_fu_403_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal zext_ln1253_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_fu_467_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1116_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln805_fu_494_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_478_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln805_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln805_fu_503_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_122_fu_487_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln805_fu_509_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_32_fu_454_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_33_fu_459_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1322_fu_525_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_532_p3 : STD_LOGIC_VECTOR (70 downto 0);
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (71 downto 0);
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal rhs_V_9_fu_567_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal lhs_V_fu_564_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal sext_ln682_3_fu_574_p1 : STD_LOGIC_VECTOR (72 downto 0);
    signal ret_V_18_fu_578_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal Z4_ind_V_fu_618_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_Z4_V_fu_638_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_10_fu_651_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lhs_V_12_fu_648_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_676_p0 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_676_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_676_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln657_fu_699_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln657_fu_702_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_20_fu_696_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln657_18_fu_707_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lshr_ln662_s_fu_727_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_742_p0 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_742_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_742_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal lhs_V_13_fu_762_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln657_19_fu_776_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln657_4_fu_779_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln682_fu_772_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln657_20_fu_784_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_788_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_820_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_820_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_14_fu_826_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln1146_fu_838_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln_fu_842_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal zext_ln1146_fu_835_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal add_ln1146_1_fu_850_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal xor_ln936_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_is_pinf_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln214_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln214_fu_879_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln657_22_fu_905_p1 : STD_LOGIC_VECTOR (107 downto 0);
    signal lhs_V_15_fu_898_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal r_exp_V_fu_914_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_5_fu_919_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_169_fu_925_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln849_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_fu_946_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_22_fu_908_p2 : STD_LOGIC_VECTOR (107 downto 0);
    signal tmp_fu_967_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_5_fu_977_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln168_fu_994_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_exp_V_fu_998_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_32_fu_987_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_132_fu_1004_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln214_1_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln338_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln338_fu_1029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln849_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln849_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln214_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln339_fu_953_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln512_fu_1014_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln214_1_fu_890_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp6_fu_1052_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln338_1_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln849_1_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln338_1_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln849_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln849_2_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp19_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln853_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln214_2_fu_1060_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1116_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to18 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_676_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_676_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_742_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_742_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_820_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal grp_fu_820_p10 : STD_LOGIC_VECTOR (99 downto 0);

    component top_mul_72ns_13s_tde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (71 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (83 downto 0) );
    end component;


    component top_mul_36ns_43nsudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (35 downto 0);
        din1 : IN STD_LOGIC_VECTOR (42 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component top_mul_44ns_49nsvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (43 downto 0);
        din1 : IN STD_LOGIC_VECTOR (48 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component top_mul_50ns_50nswdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component top_mac_muladd_16xdS IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component exp_generic_doublqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component exp_generic_doublrcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component exp_generic_doublsc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    table_exp_Z1_array_s_U : component exp_generic_doublqcK
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_exp_Z1_array_s_address0,
        ce0 => table_exp_Z1_array_s_ce0,
        q0 => table_exp_Z1_array_s_q0);

    table_f_Z3_array_V_U : component exp_generic_doublrcU
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z3_array_V_address0,
        ce0 => table_f_Z3_array_V_ce0,
        q0 => table_f_Z3_array_V_q0,
        address1 => table_f_Z3_array_V_address1,
        ce1 => table_f_Z3_array_V_ce1,
        q1 => table_f_Z3_array_V_q1);

    table_f_Z2_array_V_U : component exp_generic_doublsc4
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => table_f_Z2_array_V_address0,
        ce0 => table_f_Z2_array_V_ce0,
        q0 => table_f_Z2_array_V_q0);

    top_mul_72ns_13s_tde_U25 : component top_mul_72ns_13s_tde
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 72,
        din1_WIDTH => 13,
        dout_WIDTH => 84)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_548_p0,
        din1 => r_exp_V_6_reg_1212,
        ce => ap_const_logic_1,
        dout => grp_fu_548_p2);

    top_mul_36ns_43nsudo_U26 : component top_mul_36ns_43nsudo
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 36,
        din1_WIDTH => 43,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_676_p0,
        din1 => grp_fu_676_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_676_p2);

    top_mul_44ns_49nsvdy_U27 : component top_mul_44ns_49nsvdy
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 44,
        din1_WIDTH => 49,
        dout_WIDTH => 93)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_742_p0,
        din1 => grp_fu_742_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_742_p2);

    top_mul_50ns_50nswdI_U28 : component top_mul_50ns_50nswdI
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_820_p0,
        din1 => grp_fu_820_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_820_p2);

    top_mac_muladd_16xdS_U29 : component top_mac_muladd_16xdS
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        din0 => grp_fu_1116_p0,
        din1 => m_fix_hi_V_reg_1194,
        din2 => rhs_V_fu_467_p3,
        dout => grp_fu_1116_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_1239 <= ret_V_18_fu_578_p2(50 downto 43);
                Z2_V_reg_1239_pp0_iter10_reg <= Z2_V_reg_1239_pp0_iter9_reg;
                Z2_V_reg_1239_pp0_iter11_reg <= Z2_V_reg_1239_pp0_iter10_reg;
                Z2_V_reg_1239_pp0_iter12_reg <= Z2_V_reg_1239_pp0_iter11_reg;
                Z2_V_reg_1239_pp0_iter13_reg <= Z2_V_reg_1239_pp0_iter12_reg;
                Z2_V_reg_1239_pp0_iter14_reg <= Z2_V_reg_1239_pp0_iter13_reg;
                Z2_V_reg_1239_pp0_iter9_reg <= Z2_V_reg_1239;
                Z3_V_reg_1246 <= ret_V_18_fu_578_p2(42 downto 35);
                Z3_V_reg_1246_pp0_iter9_reg <= Z3_V_reg_1246;
                Z4_V_reg_1251 <= Z4_V_fu_614_p1;
                and_ln18_reg_1162_pp0_iter10_reg <= and_ln18_reg_1162_pp0_iter9_reg;
                and_ln18_reg_1162_pp0_iter11_reg <= and_ln18_reg_1162_pp0_iter10_reg;
                and_ln18_reg_1162_pp0_iter12_reg <= and_ln18_reg_1162_pp0_iter11_reg;
                and_ln18_reg_1162_pp0_iter13_reg <= and_ln18_reg_1162_pp0_iter12_reg;
                and_ln18_reg_1162_pp0_iter14_reg <= and_ln18_reg_1162_pp0_iter13_reg;
                and_ln18_reg_1162_pp0_iter15_reg <= and_ln18_reg_1162_pp0_iter14_reg;
                and_ln18_reg_1162_pp0_iter16_reg <= and_ln18_reg_1162_pp0_iter15_reg;
                and_ln18_reg_1162_pp0_iter17_reg <= and_ln18_reg_1162_pp0_iter16_reg;
                and_ln18_reg_1162_pp0_iter18_reg <= and_ln18_reg_1162_pp0_iter17_reg;
                and_ln18_reg_1162_pp0_iter2_reg <= and_ln18_reg_1162;
                and_ln18_reg_1162_pp0_iter3_reg <= and_ln18_reg_1162_pp0_iter2_reg;
                and_ln18_reg_1162_pp0_iter4_reg <= and_ln18_reg_1162_pp0_iter3_reg;
                and_ln18_reg_1162_pp0_iter5_reg <= and_ln18_reg_1162_pp0_iter4_reg;
                and_ln18_reg_1162_pp0_iter6_reg <= and_ln18_reg_1162_pp0_iter5_reg;
                and_ln18_reg_1162_pp0_iter7_reg <= and_ln18_reg_1162_pp0_iter6_reg;
                and_ln18_reg_1162_pp0_iter8_reg <= and_ln18_reg_1162_pp0_iter7_reg;
                and_ln18_reg_1162_pp0_iter9_reg <= and_ln18_reg_1162_pp0_iter8_reg;
                and_ln209_reg_1155_pp0_iter10_reg <= and_ln209_reg_1155_pp0_iter9_reg;
                and_ln209_reg_1155_pp0_iter11_reg <= and_ln209_reg_1155_pp0_iter10_reg;
                and_ln209_reg_1155_pp0_iter12_reg <= and_ln209_reg_1155_pp0_iter11_reg;
                and_ln209_reg_1155_pp0_iter13_reg <= and_ln209_reg_1155_pp0_iter12_reg;
                and_ln209_reg_1155_pp0_iter14_reg <= and_ln209_reg_1155_pp0_iter13_reg;
                and_ln209_reg_1155_pp0_iter15_reg <= and_ln209_reg_1155_pp0_iter14_reg;
                and_ln209_reg_1155_pp0_iter16_reg <= and_ln209_reg_1155_pp0_iter15_reg;
                and_ln209_reg_1155_pp0_iter17_reg <= and_ln209_reg_1155_pp0_iter16_reg;
                and_ln209_reg_1155_pp0_iter18_reg <= and_ln209_reg_1155_pp0_iter17_reg;
                and_ln209_reg_1155_pp0_iter2_reg <= and_ln209_reg_1155;
                and_ln209_reg_1155_pp0_iter3_reg <= and_ln209_reg_1155_pp0_iter2_reg;
                and_ln209_reg_1155_pp0_iter4_reg <= and_ln209_reg_1155_pp0_iter3_reg;
                and_ln209_reg_1155_pp0_iter5_reg <= and_ln209_reg_1155_pp0_iter4_reg;
                and_ln209_reg_1155_pp0_iter6_reg <= and_ln209_reg_1155_pp0_iter5_reg;
                and_ln209_reg_1155_pp0_iter7_reg <= and_ln209_reg_1155_pp0_iter6_reg;
                and_ln209_reg_1155_pp0_iter8_reg <= and_ln209_reg_1155_pp0_iter7_reg;
                and_ln209_reg_1155_pp0_iter9_reg <= and_ln209_reg_1155_pp0_iter8_reg;
                exp_Z1P_m_1_V_reg_1339 <= exp_Z1P_m_1_l_V_fu_788_p2(51 downto 2);
                exp_Z1_V_reg_1334 <= table_exp_Z1_array_s_q0;
                exp_Z1_V_reg_1334_pp0_iter16_reg <= exp_Z1_V_reg_1334;
                exp_Z1_V_reg_1334_pp0_iter17_reg <= exp_Z1_V_reg_1334_pp0_iter16_reg;
                exp_Z1_hi_V_reg_1344 <= table_exp_Z1_array_s_q0(57 downto 8);
                exp_Z2P_m_1_V_reg_1302 <= exp_Z2P_m_1_V_fu_711_p2;
                exp_Z2P_m_1_V_reg_1302_pp0_iter13_reg <= exp_Z2P_m_1_V_reg_1302;
                exp_Z2P_m_1_V_reg_1302_pp0_iter14_reg <= exp_Z2P_m_1_V_reg_1302_pp0_iter13_reg;
                icmp_ln338_1_reg_1219 <= icmp_ln338_1_fu_540_p2;
                icmp_ln338_1_reg_1219_pp0_iter10_reg <= icmp_ln338_1_reg_1219_pp0_iter9_reg;
                icmp_ln338_1_reg_1219_pp0_iter11_reg <= icmp_ln338_1_reg_1219_pp0_iter10_reg;
                icmp_ln338_1_reg_1219_pp0_iter12_reg <= icmp_ln338_1_reg_1219_pp0_iter11_reg;
                icmp_ln338_1_reg_1219_pp0_iter13_reg <= icmp_ln338_1_reg_1219_pp0_iter12_reg;
                icmp_ln338_1_reg_1219_pp0_iter14_reg <= icmp_ln338_1_reg_1219_pp0_iter13_reg;
                icmp_ln338_1_reg_1219_pp0_iter15_reg <= icmp_ln338_1_reg_1219_pp0_iter14_reg;
                icmp_ln338_1_reg_1219_pp0_iter16_reg <= icmp_ln338_1_reg_1219_pp0_iter15_reg;
                icmp_ln338_1_reg_1219_pp0_iter17_reg <= icmp_ln338_1_reg_1219_pp0_iter16_reg;
                icmp_ln338_1_reg_1219_pp0_iter18_reg <= icmp_ln338_1_reg_1219_pp0_iter17_reg;
                icmp_ln338_1_reg_1219_pp0_iter3_reg <= icmp_ln338_1_reg_1219;
                icmp_ln338_1_reg_1219_pp0_iter4_reg <= icmp_ln338_1_reg_1219_pp0_iter3_reg;
                icmp_ln338_1_reg_1219_pp0_iter5_reg <= icmp_ln338_1_reg_1219_pp0_iter4_reg;
                icmp_ln338_1_reg_1219_pp0_iter6_reg <= icmp_ln338_1_reg_1219_pp0_iter5_reg;
                icmp_ln338_1_reg_1219_pp0_iter7_reg <= icmp_ln338_1_reg_1219_pp0_iter6_reg;
                icmp_ln338_1_reg_1219_pp0_iter8_reg <= icmp_ln338_1_reg_1219_pp0_iter7_reg;
                icmp_ln338_1_reg_1219_pp0_iter9_reg <= icmp_ln338_1_reg_1219_pp0_iter8_reg;
                icmp_ln338_reg_1204_pp0_iter10_reg <= icmp_ln338_reg_1204_pp0_iter9_reg;
                icmp_ln338_reg_1204_pp0_iter11_reg <= icmp_ln338_reg_1204_pp0_iter10_reg;
                icmp_ln338_reg_1204_pp0_iter12_reg <= icmp_ln338_reg_1204_pp0_iter11_reg;
                icmp_ln338_reg_1204_pp0_iter13_reg <= icmp_ln338_reg_1204_pp0_iter12_reg;
                icmp_ln338_reg_1204_pp0_iter14_reg <= icmp_ln338_reg_1204_pp0_iter13_reg;
                icmp_ln338_reg_1204_pp0_iter15_reg <= icmp_ln338_reg_1204_pp0_iter14_reg;
                icmp_ln338_reg_1204_pp0_iter16_reg <= icmp_ln338_reg_1204_pp0_iter15_reg;
                icmp_ln338_reg_1204_pp0_iter17_reg <= icmp_ln338_reg_1204_pp0_iter16_reg;
                icmp_ln338_reg_1204_pp0_iter18_reg <= icmp_ln338_reg_1204_pp0_iter17_reg;
                icmp_ln338_reg_1204_pp0_iter2_reg <= icmp_ln338_reg_1204;
                icmp_ln338_reg_1204_pp0_iter3_reg <= icmp_ln338_reg_1204_pp0_iter2_reg;
                icmp_ln338_reg_1204_pp0_iter4_reg <= icmp_ln338_reg_1204_pp0_iter3_reg;
                icmp_ln338_reg_1204_pp0_iter5_reg <= icmp_ln338_reg_1204_pp0_iter4_reg;
                icmp_ln338_reg_1204_pp0_iter6_reg <= icmp_ln338_reg_1204_pp0_iter5_reg;
                icmp_ln338_reg_1204_pp0_iter7_reg <= icmp_ln338_reg_1204_pp0_iter6_reg;
                icmp_ln338_reg_1204_pp0_iter8_reg <= icmp_ln338_reg_1204_pp0_iter7_reg;
                icmp_ln338_reg_1204_pp0_iter9_reg <= icmp_ln338_reg_1204_pp0_iter8_reg;
                m_diff_hi_V_reg_1234 <= ret_V_18_fu_578_p2(58 downto 51);
                m_diff_hi_V_reg_1234_pp0_iter10_reg <= m_diff_hi_V_reg_1234_pp0_iter9_reg;
                m_diff_hi_V_reg_1234_pp0_iter11_reg <= m_diff_hi_V_reg_1234_pp0_iter10_reg;
                m_diff_hi_V_reg_1234_pp0_iter12_reg <= m_diff_hi_V_reg_1234_pp0_iter11_reg;
                m_diff_hi_V_reg_1234_pp0_iter13_reg <= m_diff_hi_V_reg_1234_pp0_iter12_reg;
                m_diff_hi_V_reg_1234_pp0_iter9_reg <= m_diff_hi_V_reg_1234;
                p_Result_130_reg_1127_pp0_iter10_reg <= p_Result_130_reg_1127_pp0_iter9_reg;
                p_Result_130_reg_1127_pp0_iter11_reg <= p_Result_130_reg_1127_pp0_iter10_reg;
                p_Result_130_reg_1127_pp0_iter12_reg <= p_Result_130_reg_1127_pp0_iter11_reg;
                p_Result_130_reg_1127_pp0_iter13_reg <= p_Result_130_reg_1127_pp0_iter12_reg;
                p_Result_130_reg_1127_pp0_iter14_reg <= p_Result_130_reg_1127_pp0_iter13_reg;
                p_Result_130_reg_1127_pp0_iter15_reg <= p_Result_130_reg_1127_pp0_iter14_reg;
                p_Result_130_reg_1127_pp0_iter16_reg <= p_Result_130_reg_1127_pp0_iter15_reg;
                p_Result_130_reg_1127_pp0_iter17_reg <= p_Result_130_reg_1127_pp0_iter16_reg;
                p_Result_130_reg_1127_pp0_iter18_reg <= p_Result_130_reg_1127_pp0_iter17_reg;
                p_Result_130_reg_1127_pp0_iter2_reg <= p_Result_130_reg_1127_pp0_iter1_reg;
                p_Result_130_reg_1127_pp0_iter3_reg <= p_Result_130_reg_1127_pp0_iter2_reg;
                p_Result_130_reg_1127_pp0_iter4_reg <= p_Result_130_reg_1127_pp0_iter3_reg;
                p_Result_130_reg_1127_pp0_iter5_reg <= p_Result_130_reg_1127_pp0_iter4_reg;
                p_Result_130_reg_1127_pp0_iter6_reg <= p_Result_130_reg_1127_pp0_iter5_reg;
                p_Result_130_reg_1127_pp0_iter7_reg <= p_Result_130_reg_1127_pp0_iter6_reg;
                p_Result_130_reg_1127_pp0_iter8_reg <= p_Result_130_reg_1127_pp0_iter7_reg;
                p_Result_130_reg_1127_pp0_iter9_reg <= p_Result_130_reg_1127_pp0_iter8_reg;
                r_V_42_reg_1183_pp0_iter2_reg <= r_V_42_reg_1183;
                r_V_42_reg_1183_pp0_iter3_reg <= r_V_42_reg_1183_pp0_iter2_reg;
                r_V_42_reg_1183_pp0_iter4_reg <= r_V_42_reg_1183_pp0_iter3_reg;
                r_V_42_reg_1183_pp0_iter5_reg <= r_V_42_reg_1183_pp0_iter4_reg;
                r_V_42_reg_1183_pp0_iter6_reg <= r_V_42_reg_1183_pp0_iter5_reg;
                r_V_42_reg_1183_pp0_iter7_reg <= r_V_42_reg_1183_pp0_iter6_reg;
                r_V_47_reg_1359 <= grp_fu_820_p2;
                r_V_47_reg_1359_pp0_iter18_reg <= r_V_47_reg_1359;
                r_exp_V_6_reg_1212 <= r_exp_V_6_fu_517_p3;
                r_exp_V_6_reg_1212_pp0_iter10_reg <= r_exp_V_6_reg_1212_pp0_iter9_reg;
                r_exp_V_6_reg_1212_pp0_iter11_reg <= r_exp_V_6_reg_1212_pp0_iter10_reg;
                r_exp_V_6_reg_1212_pp0_iter12_reg <= r_exp_V_6_reg_1212_pp0_iter11_reg;
                r_exp_V_6_reg_1212_pp0_iter13_reg <= r_exp_V_6_reg_1212_pp0_iter12_reg;
                r_exp_V_6_reg_1212_pp0_iter14_reg <= r_exp_V_6_reg_1212_pp0_iter13_reg;
                r_exp_V_6_reg_1212_pp0_iter15_reg <= r_exp_V_6_reg_1212_pp0_iter14_reg;
                r_exp_V_6_reg_1212_pp0_iter16_reg <= r_exp_V_6_reg_1212_pp0_iter15_reg;
                r_exp_V_6_reg_1212_pp0_iter17_reg <= r_exp_V_6_reg_1212_pp0_iter16_reg;
                r_exp_V_6_reg_1212_pp0_iter18_reg <= r_exp_V_6_reg_1212_pp0_iter17_reg;
                r_exp_V_6_reg_1212_pp0_iter3_reg <= r_exp_V_6_reg_1212;
                r_exp_V_6_reg_1212_pp0_iter4_reg <= r_exp_V_6_reg_1212_pp0_iter3_reg;
                r_exp_V_6_reg_1212_pp0_iter5_reg <= r_exp_V_6_reg_1212_pp0_iter4_reg;
                r_exp_V_6_reg_1212_pp0_iter6_reg <= r_exp_V_6_reg_1212_pp0_iter5_reg;
                r_exp_V_6_reg_1212_pp0_iter7_reg <= r_exp_V_6_reg_1212_pp0_iter6_reg;
                r_exp_V_6_reg_1212_pp0_iter8_reg <= r_exp_V_6_reg_1212_pp0_iter7_reg;
                r_exp_V_6_reg_1212_pp0_iter9_reg <= r_exp_V_6_reg_1212_pp0_iter8_reg;
                ret_V_19_reg_1266 <= ret_V_19_fu_655_p2;
                ret_V_19_reg_1266_pp0_iter10_reg <= ret_V_19_reg_1266;
                ret_V_19_reg_1266_pp0_iter11_reg <= ret_V_19_reg_1266_pp0_iter10_reg;
                ret_V_21_reg_1365 <= ret_V_21_fu_829_p2;
                select_ln253_reg_1149_pp0_iter10_reg <= select_ln253_reg_1149_pp0_iter9_reg;
                select_ln253_reg_1149_pp0_iter11_reg <= select_ln253_reg_1149_pp0_iter10_reg;
                select_ln253_reg_1149_pp0_iter12_reg <= select_ln253_reg_1149_pp0_iter11_reg;
                select_ln253_reg_1149_pp0_iter13_reg <= select_ln253_reg_1149_pp0_iter12_reg;
                select_ln253_reg_1149_pp0_iter14_reg <= select_ln253_reg_1149_pp0_iter13_reg;
                select_ln253_reg_1149_pp0_iter15_reg <= select_ln253_reg_1149_pp0_iter14_reg;
                select_ln253_reg_1149_pp0_iter16_reg <= select_ln253_reg_1149_pp0_iter15_reg;
                select_ln253_reg_1149_pp0_iter17_reg <= select_ln253_reg_1149_pp0_iter16_reg;
                select_ln253_reg_1149_pp0_iter18_reg <= select_ln253_reg_1149_pp0_iter17_reg;
                select_ln253_reg_1149_pp0_iter2_reg <= select_ln253_reg_1149_pp0_iter1_reg;
                select_ln253_reg_1149_pp0_iter3_reg <= select_ln253_reg_1149_pp0_iter2_reg;
                select_ln253_reg_1149_pp0_iter4_reg <= select_ln253_reg_1149_pp0_iter3_reg;
                select_ln253_reg_1149_pp0_iter5_reg <= select_ln253_reg_1149_pp0_iter4_reg;
                select_ln253_reg_1149_pp0_iter6_reg <= select_ln253_reg_1149_pp0_iter5_reg;
                select_ln253_reg_1149_pp0_iter7_reg <= select_ln253_reg_1149_pp0_iter6_reg;
                select_ln253_reg_1149_pp0_iter8_reg <= select_ln253_reg_1149_pp0_iter7_reg;
                select_ln253_reg_1149_pp0_iter9_reg <= select_ln253_reg_1149_pp0_iter8_reg;
                tmp_128_reg_1292 <= grp_fu_676_p2(78 downto 59);
                tmp_129_reg_1308 <= table_f_Z2_array_V_q0(41 downto 2);
                tmp_129_reg_1308_pp0_iter13_reg <= tmp_129_reg_1308;
                tmp_129_reg_1308_pp0_iter14_reg <= tmp_129_reg_1308_pp0_iter13_reg;
                tmp_130_reg_1329 <= grp_fu_742_p2(92 downto 57);
                tmp_168_reg_1370 <= add_ln1146_1_fu_850_p2(106 downto 106);
                    tmp_i_reg_1277(25 downto 0) <= tmp_i_fu_661_p4(25 downto 0);    tmp_i_reg_1277(42 downto 35) <= tmp_i_fu_661_p4(42 downto 35);
                    tmp_i_reg_1277_pp0_iter11_reg(25 downto 0) <= tmp_i_reg_1277(25 downto 0);    tmp_i_reg_1277_pp0_iter11_reg(42 downto 35) <= tmp_i_reg_1277(42 downto 35);
                tmp_s_reg_1229 <= grp_fu_548_p2(83 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln18_reg_1162 <= and_ln18_fu_331_p2;
                and_ln209_reg_1155 <= and_ln209_fu_326_p2;
                icmp_ln338_reg_1204 <= icmp_ln338_fu_445_p2;
                icmp_ln833_5_reg_1144 <= icmp_ln833_5_fu_293_p2;
                icmp_ln837_reg_1139 <= icmp_ln837_fu_287_p2;
                isNeg_reg_1173 <= m_exp_fu_339_p2(11 downto 11);
                m_fix_hi_V_reg_1194 <= r_V_42_fu_409_p3(70 downto 55);
                m_fix_l_V_reg_1188 <= r_V_42_fu_409_p3(70 downto 7);
                p_Result_130_reg_1127 <= p_Val2_s_fu_261_p1(63 downto 63);
                p_Result_130_reg_1127_pp0_iter1_reg <= p_Result_130_reg_1127;
                p_Result_131_reg_1199 <= r_V_42_fu_409_p3(70 downto 70);
                r_V_42_reg_1183 <= r_V_42_fu_409_p3;
                select_ln253_reg_1149 <= select_ln253_fu_313_p3;
                select_ln253_reg_1149_pp0_iter1_reg <= select_ln253_reg_1149;
                sext_ln1311_1_reg_1178 <= sext_ln1311_1_fu_381_p1;
                    sext_ln682_reg_1168(70 downto 7) <= sext_ln682_fu_352_p1(70 downto 7);
                tmp_V_reg_1132 <= p_Val2_s_fu_261_p1(62 downto 52);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_161_reg_1272 <= table_f_Z3_array_V_q1;
            end if;
        end if;
    end process;
    sext_ln682_reg_1168(6 downto 0) <= "0000000";
    tmp_i_reg_1277(34 downto 26) <= "000000000";
    tmp_i_reg_1277_pp0_iter11_reg(34 downto 26) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z3_V_fu_604_p4 <= ret_V_18_fu_578_p2(42 downto 35);
    Z4_V_fu_614_p1 <= ret_V_18_fu_578_p2(35 - 1 downto 0);
    Z4_ind_V_fu_618_p4 <= ret_V_18_fu_578_p2(34 downto 27);
    add_ln1146_1_fu_850_p2 <= std_logic_vector(unsigned(trunc_ln_fu_842_p3) + unsigned(zext_ln1146_fu_835_p1));
    add_ln657_4_fu_779_p2 <= std_logic_vector(unsigned(zext_ln657_19_fu_776_p1) + unsigned(exp_Z2P_m_1_V_reg_1302_pp0_iter14_reg));
    add_ln657_fu_702_p2 <= std_logic_vector(unsigned(zext_ln657_fu_699_p1) + unsigned(ret_V_19_reg_1266_pp0_iter11_reg));
    add_ln805_fu_503_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_4_fu_478_p4));
    and_ln18_fu_331_p2 <= (icmp_ln833_fu_321_p2 and icmp_ln833_5_reg_1144);
    and_ln209_fu_326_p2 <= (icmp_ln837_reg_1139 and icmp_ln833_fu_321_p2);
    and_ln338_1_fu_1074_p2 <= (xor_ln338_1_fu_1068_p2 and icmp_ln338_reg_1204_pp0_iter18_reg);
    and_ln338_fu_1024_p2 <= (or_ln338_fu_941_p2 and icmp_ln338_reg_1204_pp0_iter18_reg);
    and_ln849_fu_1034_p2 <= (xor_ln338_fu_1029_p2 and icmp_ln849_fu_935_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter19, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to18_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to18 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to18)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to18 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv64_0 when (sel_tmp16_fu_1102_p2(0) = '1') else 
        select_ln214_2_fu_1060_p3;
    bitcast_ln512_fu_1014_p1 <= p_Result_132_fu_1004_p4;
    e_frac_V_fu_307_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_299_p3));
    exp_Z1P_m_1_l_V_fu_788_p2 <= std_logic_vector(unsigned(zext_ln682_fu_772_p1) + unsigned(zext_ln657_20_fu_784_p1));
    exp_Z2P_m_1_V_fu_711_p2 <= std_logic_vector(unsigned(ret_V_20_fu_696_p1) + unsigned(zext_ln657_18_fu_707_p1));
    f_Z4_V_fu_638_p4 <= table_f_Z3_array_V_q0(25 downto 16);
    grp_fu_1116_p0 <= ap_const_lv31_5C55(16 - 1 downto 0);
    grp_fu_548_p0 <= ap_const_lv84_58B90BFBE8E7BCD5E4(72 - 1 downto 0);
    grp_fu_676_p0 <= grp_fu_676_p00(36 - 1 downto 0);
    grp_fu_676_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_19_reg_1266),79));
    grp_fu_676_p1 <= grp_fu_676_p10(43 - 1 downto 0);
    grp_fu_676_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_661_p4),79));
    grp_fu_742_p0 <= grp_fu_742_p00(44 - 1 downto 0);
    grp_fu_742_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_reg_1302),93));
    grp_fu_742_p1 <= grp_fu_742_p10(49 - 1 downto 0);
    grp_fu_742_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln662_s_fu_727_p4),93));
    grp_fu_820_p0 <= grp_fu_820_p00(50 - 1 downto 0);
    grp_fu_820_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1339),100));
    grp_fu_820_p1 <= grp_fu_820_p10(50 - 1 downto 0);
    grp_fu_820_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1344),100));
    icmp_ln338_1_fu_540_p2 <= "0" when (shl_ln_fu_532_p3 = sext_ln682_reg_1168) else "1";
    icmp_ln338_fu_445_p2 <= "1" when (signed(m_exp_fu_339_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln805_fu_497_p2 <= "1" when (trunc_ln805_fu_494_p1 = ap_const_lv18_0) else "0";
    icmp_ln833_5_fu_293_p2 <= "1" when (tmp_V_31_fu_283_p1 = ap_const_lv52_0) else "0";
    icmp_ln833_fu_321_p2 <= "1" when (tmp_V_reg_1132 = ap_const_lv11_7FF) else "0";
    icmp_ln837_fu_287_p2 <= "0" when (tmp_V_31_fu_283_p1 = ap_const_lv52_0) else "1";
    icmp_ln849_fu_935_p2 <= "1" when (signed(tmp_169_fu_925_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln853_fu_961_p2 <= "1" when (signed(r_exp_V_5_fu_919_p3) < signed(ap_const_lv13_1C02)) else "0";
    isNeg_fu_356_p3 <= m_exp_fu_339_p2(11 downto 11);
    lhs_V_12_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_V_reg_1251),36));
    lhs_V_13_fu_762_p5 <= (((Z2_V_reg_1239_pp0_iter14_reg & ap_const_lv1_0) & tmp_129_reg_1308_pp0_iter14_reg) & ap_const_lv2_0);
    lhs_V_14_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_V_reg_1334_pp0_iter17_reg),59));
    lhs_V_15_fu_898_p3 <= (ret_V_21_reg_1365 & ap_const_lv49_0);
        lhs_V_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_42_reg_1183_pp0_iter7_reg),73));

    lshr_ln662_s_fu_727_p4 <= ((Z2_V_reg_1239_pp0_iter12_reg & ap_const_lv1_0) & tmp_129_reg_1308);
    m_exp_2_fu_373_p3 <= 
        sext_ln1311_fu_369_p1 when (isNeg_fu_356_p3(0) = '1') else 
        m_exp_fu_339_p2;
    m_exp_fu_339_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(zext_ln502_fu_336_p1));
    m_frac_l_V_fu_345_p3 <= (select_ln253_reg_1149 & ap_const_lv7_0);
    or_ln214_1_fu_886_p2 <= (and_ln209_reg_1155_pp0_iter18_reg or and_ln18_reg_1162_pp0_iter18_reg);
    or_ln214_fu_874_p2 <= (x_is_pinf_fu_869_p2 or and_ln209_reg_1155_pp0_iter18_reg);
    or_ln338_fu_941_p2 <= (icmp_ln849_fu_935_p2 or icmp_ln338_1_reg_1219_pp0_iter18_reg);
    or_ln849_1_fu_1079_p2 <= (icmp_ln849_fu_935_p2 or icmp_ln338_reg_1204_pp0_iter18_reg);
    or_ln849_2_fu_1090_p2 <= (xor_ln849_fu_1084_p2 or and_ln338_1_fu_1074_p2);
    or_ln849_fu_1040_p2 <= (and_ln849_fu_1034_p2 or and_ln338_fu_1024_p2);
    out_exp_V_fu_998_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) + unsigned(trunc_ln168_fu_994_p1));
    p_Result_122_fu_487_p3 <= grp_fu_1116_p3(30 downto 30);
    p_Result_130_fu_265_p3 <= p_Val2_s_fu_261_p1(63 downto 63);
    p_Result_132_fu_1004_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_998_p2) & tmp_V_32_fu_987_p3);
    p_Result_s_fu_299_p3 <= (ap_const_lv2_1 & tmp_V_31_fu_283_p1);
    p_Val2_s_fu_261_p1 <= x;
    r_V_30_fu_403_p2 <= std_logic_vector(shift_left(unsigned(sext_ln682_fu_352_p1),to_integer(unsigned('0' & zext_ln1287_fu_385_p1(31-1 downto 0)))));
    r_V_32_fu_454_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_V_reg_1188),to_integer(unsigned('0' & zext_ln1253_fu_451_p1(31-1 downto 0)))));
    r_V_33_fu_459_p2 <= std_logic_vector(shift_right(signed(m_fix_l_V_reg_1188),to_integer(unsigned('0' & zext_ln1253_fu_451_p1(31-1 downto 0)))));
    r_V_42_fu_409_p3 <= 
        sext_ln1287_fu_399_p1 when (isNeg_fu_356_p3(0) = '1') else 
        r_V_30_fu_403_p2;
    r_V_fu_393_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_fu_345_p3),to_integer(unsigned('0' & zext_ln1285_fu_389_p1(31-1 downto 0)))));
    r_exp_V_5_fu_919_p3 <= 
        r_exp_V_6_reg_1212_pp0_iter18_reg when (tmp_168_reg_1370(0) = '1') else 
        r_exp_V_fu_914_p2;
    r_exp_V_6_fu_517_p3 <= 
        select_ln805_fu_509_p3 when (p_Result_122_fu_487_p3(0) = '1') else 
        tmp_4_fu_478_p4;
    r_exp_V_fu_914_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(r_exp_V_6_reg_1212_pp0_iter18_reg));
    ret_V_18_fu_578_p2 <= std_logic_vector(signed(lhs_V_fu_564_p1) - signed(sext_ln682_3_fu_574_p1));
    ret_V_19_fu_655_p2 <= std_logic_vector(unsigned(rhs_V_10_fu_651_p1) + unsigned(lhs_V_12_fu_648_p1));
    ret_V_20_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_reg_1277_pp0_iter11_reg),44));
    ret_V_21_fu_829_p2 <= std_logic_vector(unsigned(ap_const_lv59_10) + unsigned(lhs_V_14_fu_826_p1));
    ret_V_22_fu_908_p2 <= std_logic_vector(unsigned(zext_ln657_22_fu_905_p1) + unsigned(lhs_V_15_fu_898_p3));
    rhs_V_10_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_V_fu_638_p4),36));
    rhs_V_9_fu_567_p3 <= (tmp_s_reg_1229 & ap_const_lv1_0);
    rhs_V_fu_467_p3 <= (p_Result_131_reg_1199 & ap_const_lv18_20000);
    sel_tmp16_fu_1102_p2 <= (tmp19_fu_1096_p2 and icmp_ln853_fu_961_p2);
    sel_tmp5_fu_1046_p2 <= (xor_ln214_fu_1018_p2 and or_ln849_fu_1040_p2);
    sel_tmp6_fu_1052_p3 <= 
        select_ln339_fu_953_p3 when (sel_tmp5_fu_1046_p2(0) = '1') else 
        bitcast_ln512_fu_1014_p1;
    select_ln1322_fu_525_p3 <= 
        r_V_32_fu_454_p2 when (isNeg_reg_1173(0) = '1') else 
        r_V_33_fu_459_p2;
    select_ln214_1_fu_890_p3 <= 
        select_ln214_fu_879_p3 when (or_ln214_fu_874_p2(0) = '1') else 
        ap_const_lv64_0;
    select_ln214_2_fu_1060_p3 <= 
        select_ln214_1_fu_890_p3 when (or_ln214_1_fu_886_p2(0) = '1') else 
        sel_tmp6_fu_1052_p3;
    select_ln214_fu_879_p3 <= 
        ap_const_lv64_7FFFFFFFFFFFFFFF when (and_ln209_reg_1155_pp0_iter18_reg(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln253_fu_313_p3 <= 
        e_frac_V_fu_307_p2 when (p_Result_130_fu_265_p3(0) = '1') else 
        p_Result_s_fu_299_p3;
    select_ln339_fu_953_p3 <= 
        ap_const_lv64_0 when (tmp_170_fu_946_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln805_fu_509_p3 <= 
        tmp_4_fu_478_p4 when (icmp_ln805_fu_497_p2(0) = '1') else 
        add_ln805_fu_503_p2;
        sext_ln1287_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_393_p2),71));

        sext_ln1311_1_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_exp_2_fu_373_p3),32));

        sext_ln1311_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_364_p2),12));

        sext_ln682_3_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_9_fu_567_p3),73));

        sext_ln682_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_fu_345_p3),71));

    shl_ln_fu_532_p3 <= (select_ln1322_fu_525_p3 & ap_const_lv7_0);
    sub_ln1311_fu_364_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_V_reg_1132));
    table_exp_Z1_array_s_address0 <= zext_ln498_fu_748_p1(8 - 1 downto 0);

    table_exp_Z1_array_s_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_exp_Z1_array_s_ce0 <= ap_const_logic_1;
        else 
            table_exp_Z1_array_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z2_array_V_address0 <= zext_ln498_8_fu_692_p1(8 - 1 downto 0);

    table_f_Z2_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z2_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z2_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    table_f_Z3_array_V_address0 <= zext_ln498_6_fu_628_p1(8 - 1 downto 0);
    table_f_Z3_array_V_address1 <= zext_ln498_7_fu_633_p1(8 - 1 downto 0);

    table_f_Z3_array_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_array_V_ce0 <= ap_const_logic_1;
        else 
            table_f_Z3_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    table_f_Z3_array_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            table_f_Z3_array_V_ce1 <= ap_const_logic_1;
        else 
            table_f_Z3_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp19_fu_1096_p2 <= (xor_ln214_fu_1018_p2 and or_ln849_2_fu_1090_p2);
    tmp_169_fu_925_p4 <= r_exp_V_5_fu_919_p3(12 downto 10);
    tmp_170_fu_946_p3 <= select_ln253_reg_1149_pp0_iter18_reg(53 downto 53);
    tmp_4_fu_478_p4 <= grp_fu_1116_p3(30 downto 18);
    tmp_5_fu_977_p4 <= ret_V_22_fu_908_p2(104 downto 53);
    tmp_V_31_fu_283_p1 <= p_Val2_s_fu_261_p1(52 - 1 downto 0);
    tmp_V_32_fu_987_p3 <= 
        tmp_fu_967_p4 when (tmp_168_reg_1370(0) = '1') else 
        tmp_5_fu_977_p4;
    tmp_fu_967_p4 <= ret_V_22_fu_908_p2(105 downto 54);
    tmp_i_fu_661_p4 <= ((Z3_V_reg_1246_pp0_iter9_reg & ap_const_lv9_0) & p_Val2_161_reg_1272);
    trunc_ln1146_fu_838_p1 <= ret_V_21_fu_829_p2(58 - 1 downto 0);
    trunc_ln168_fu_994_p1 <= r_exp_V_5_fu_919_p3(11 - 1 downto 0);
    trunc_ln805_fu_494_p1 <= grp_fu_1116_p3(18 - 1 downto 0);
    trunc_ln_fu_842_p3 <= (trunc_ln1146_fu_838_p1 & ap_const_lv49_0);
    x_is_pinf_fu_869_p2 <= (xor_ln936_fu_864_p2 and and_ln18_reg_1162_pp0_iter18_reg);
    xor_ln214_fu_1018_p2 <= (or_ln214_1_fu_886_p2 xor ap_const_lv1_1);
    xor_ln338_1_fu_1068_p2 <= (or_ln338_fu_941_p2 xor ap_const_lv1_1);
    xor_ln338_fu_1029_p2 <= (icmp_ln338_reg_1204_pp0_iter18_reg xor ap_const_lv1_1);
    xor_ln849_fu_1084_p2 <= (or_ln849_1_fu_1079_p2 xor ap_const_lv1_1);
    xor_ln936_fu_864_p2 <= (p_Result_130_reg_1127_pp0_iter18_reg xor ap_const_lv1_1);
    zext_ln1146_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_47_reg_1359),107));
    zext_ln1253_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_1_reg_1178),64));
    zext_ln1285_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_1_fu_381_p1),61));
    zext_ln1287_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_1_fu_381_p1),71));
    zext_ln498_6_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_V_fu_618_p4),64));
    zext_ln498_7_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_604_p4),64));
    zext_ln498_8_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_1239_pp0_iter10_reg),64));
    zext_ln498_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1234_pp0_iter13_reg),64));
    zext_ln502_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_1132),12));
    zext_ln657_18_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_fu_702_p2),44));
    zext_ln657_19_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_130_reg_1329),44));
    zext_ln657_20_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_4_fu_779_p2),52));
    zext_ln657_22_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_47_reg_1359_pp0_iter18_reg),108));
    zext_ln657_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_128_reg_1292),36));
    zext_ln682_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_13_fu_762_p5),52));
end behav;
