// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pow_generic_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        base_r,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] base_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] pow_reduce_anonymo_7_address0;
reg    pow_reduce_anonymo_7_ce0;
wire   [5:0] pow_reduce_anonymo_7_q0;
wire   [5:0] pow_reduce_anonymo_6_address0;
reg    pow_reduce_anonymo_6_ce0;
wire   [55:0] pow_reduce_anonymo_6_q0;
wire   [3:0] pow_reduce_anonymo_9_address0;
reg    pow_reduce_anonymo_9_ce0;
wire   [51:0] pow_reduce_anonymo_9_q0;
wire   [5:0] pow_reduce_anonymo_10_address0;
reg    pow_reduce_anonymo_10_ce0;
wire   [48:0] pow_reduce_anonymo_10_q0;
wire   [5:0] pow_reduce_anonymo_8_address0;
reg    pow_reduce_anonymo_8_ce0;
wire   [43:0] pow_reduce_anonymo_8_q0;
wire   [8:0] pow_reduce_anonymo_11_address0;
reg    pow_reduce_anonymo_11_ce0;
wire   [26:0] pow_reduce_anonymo_11_q0;
wire   [4:0] pow_reduce_anonymo_address0;
reg    pow_reduce_anonymo_ce0;
wire   [7:0] pow_reduce_anonymo_q0;
reg   [0:0] p_Result_s_reg_1635;
reg   [0:0] p_Result_s_reg_1635_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter6_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter7_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter8_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter9_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter10_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter11_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter12_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter13_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter14_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter15_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter16_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter17_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter18_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter19_reg;
reg   [0:0] p_Result_s_reg_1635_pp0_iter20_reg;
reg   [7:0] tmp_V_27_reg_1642;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter1_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter2_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter3_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter4_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter5_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter6_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter7_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter8_reg;
reg   [7:0] tmp_V_27_reg_1642_pp0_iter9_reg;
wire   [22:0] tmp_V_28_fu_381_p1;
reg   [22:0] tmp_V_28_reg_1649;
reg   [22:0] tmp_V_28_reg_1649_pp0_iter1_reg;
reg   [0:0] tmp_157_reg_1657;
reg   [0:0] tmp_157_reg_1657_pp0_iter1_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter2_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter3_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter4_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter5_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter6_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter7_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter8_reg;
reg   [0:0] tmp_157_reg_1657_pp0_iter9_reg;
reg   [5:0] b_frac_tilde_inverse_reg_1673;
reg   [55:0] log_sum_V_reg_1678;
reg   [55:0] log_sum_V_reg_1678_pp0_iter2_reg;
reg   [55:0] log_sum_V_reg_1678_pp0_iter3_reg;
reg   [55:0] log_sum_V_reg_1678_pp0_iter4_reg;
reg   [55:0] log_sum_V_reg_1678_pp0_iter5_reg;
reg   [55:0] log_sum_V_reg_1678_pp0_iter6_reg;
reg   [55:0] log_sum_V_reg_1678_pp0_iter7_reg;
reg   [55:0] log_sum_V_reg_1678_pp0_iter8_reg;
wire   [0:0] icmp_ln833_fu_409_p2;
reg   [0:0] icmp_ln833_reg_1683;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter3_reg;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter4_reg;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter5_reg;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter6_reg;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter7_reg;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter8_reg;
reg   [0:0] icmp_ln833_reg_1683_pp0_iter9_reg;
wire   [0:0] icmp_ln837_fu_414_p2;
reg   [0:0] icmp_ln837_reg_1689;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter3_reg;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter4_reg;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter5_reg;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter6_reg;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter7_reg;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter8_reg;
reg   [0:0] icmp_ln837_reg_1689_pp0_iter9_reg;
wire  signed [24:0] mul_ln682_fu_1611_p2;
reg  signed [24:0] mul_ln682_reg_1694;
reg  signed [24:0] mul_ln682_reg_1694_pp0_iter3_reg;
reg   [3:0] a_V_reg_1703;
reg   [3:0] a_V_reg_1703_pp0_iter3_reg;
reg   [3:0] a_V_reg_1703_pp0_iter4_reg;
reg   [3:0] a_V_reg_1703_pp0_iter5_reg;
reg   [3:0] a_V_reg_1703_pp0_iter6_reg;
reg   [3:0] a_V_reg_1703_pp0_iter7_reg;
wire   [42:0] r_V_23_fu_472_p2;
reg   [42:0] r_V_23_reg_1709;
reg   [40:0] p_Val2_101_reg_1714;
reg   [5:0] a_V_1_reg_1720;
reg   [5:0] a_V_1_reg_1720_pp0_iter5_reg;
reg   [5:0] a_V_1_reg_1720_pp0_iter6_reg;
reg   [34:0] tmp_125_reg_1726;
wire   [49:0] ret_V_4_fu_605_p2;
reg   [49:0] ret_V_4_reg_1731;
reg   [49:0] ret_V_4_reg_1731_pp0_iter6_reg;
wire   [46:0] grp_fu_617_p2;
reg   [46:0] r_V_24_reg_1746;
reg   [43:0] p_Val2_108_reg_1751;
wire   [5:0] a_V_2_fu_657_p4;
reg   [5:0] a_V_2_reg_1762;
reg   [37:0] tmp_126_reg_1767;
wire   [62:0] ret_V_6_fu_712_p2;
reg   [62:0] ret_V_6_reg_1782;
reg   [62:0] ret_V_6_reg_1782_pp0_iter9_reg;
reg   [62:0] ret_V_6_reg_1782_pp0_iter10_reg;
wire   [49:0] add_ln657_1_fu_734_p2;
reg   [49:0] add_ln657_1_reg_1797;
wire   [55:0] log_sum_V_1_fu_752_p2;
reg   [55:0] log_sum_V_1_reg_1802;
reg   [55:0] log_sum_V_1_reg_1802_pp0_iter10_reg;
reg   [55:0] log_sum_V_1_reg_1802_pp0_iter11_reg;
reg   [55:0] log_sum_V_1_reg_1802_pp0_iter12_reg;
wire   [0:0] and_ln369_fu_773_p2;
reg   [0:0] and_ln369_reg_1807;
reg   [0:0] and_ln369_reg_1807_pp0_iter11_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter12_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter13_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter14_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter15_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter16_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter17_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter18_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter19_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter20_reg;
reg   [0:0] and_ln369_reg_1807_pp0_iter21_reg;
wire   [0:0] icmp_ln833_1_fu_788_p2;
reg   [0:0] icmp_ln833_1_reg_1814;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter11_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter12_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter13_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter14_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter15_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter16_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter17_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter18_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter19_reg;
reg   [0:0] icmp_ln833_1_reg_1814_pp0_iter20_reg;
wire   [0:0] and_ln18_1_fu_793_p2;
reg   [0:0] and_ln18_1_reg_1820;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter11_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter12_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter13_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter14_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter15_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter16_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter17_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter18_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter19_reg;
reg   [0:0] and_ln18_1_reg_1820_pp0_iter20_reg;
wire   [0:0] icmp_ln415_fu_806_p2;
reg   [0:0] icmp_ln415_reg_1826;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter11_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter12_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter13_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter14_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter15_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter16_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter17_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter18_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter19_reg;
reg   [0:0] icmp_ln415_reg_1826_pp0_iter20_reg;
wire   [8:0] b_exp_3_fu_818_p3;
reg  signed [8:0] b_exp_3_reg_1833;
wire   [49:0] grp_fu_724_p2;
reg   [49:0] r_V_25_reg_1838;
reg   [38:0] tmp_127_reg_1848;
reg   [38:0] tmp_127_reg_1848_pp0_iter12_reg;
reg   [22:0] trunc_ln_reg_1853;
wire   [51:0] grp_fu_828_p2;
reg   [51:0] Elog2_V_reg_1858;
reg   [44:0] lshr_ln_reg_1863;
reg   [42:0] log_base_V_reg_1868;
wire  signed [66:0] sext_ln657_1_fu_975_p1;
wire   [66:0] grp_fu_978_p2;
reg   [66:0] m_frac_l_V_reg_1879;
reg   [64:0] trunc_ln1_reg_1884;
reg   [35:0] m_fix_V_reg_1889;
reg   [35:0] m_fix_V_reg_1889_pp0_iter16_reg;
reg   [35:0] m_fix_V_reg_1889_pp0_iter17_reg;
reg  signed [12:0] m_fix_hi_V_reg_1894;
reg   [0:0] p_Result_105_reg_1899;
reg   [0:0] tmp_163_reg_1904;
reg   [0:0] tmp_163_reg_1904_pp0_iter16_reg;
reg   [0:0] tmp_163_reg_1904_pp0_iter17_reg;
reg   [0:0] tmp_163_reg_1904_pp0_iter18_reg;
reg   [0:0] tmp_163_reg_1904_pp0_iter19_reg;
reg   [0:0] tmp_163_reg_1904_pp0_iter20_reg;
wire  signed [9:0] r_exp_V_3_fu_1089_p3;
reg  signed [9:0] r_exp_V_3_reg_1910;
reg  signed [9:0] r_exp_V_3_reg_1910_pp0_iter17_reg;
reg  signed [9:0] r_exp_V_3_reg_1910_pp0_iter18_reg;
reg  signed [9:0] r_exp_V_3_reg_1910_pp0_iter19_reg;
reg  signed [9:0] r_exp_V_3_reg_1910_pp0_iter20_reg;
wire   [0:0] icmp_ln657_fu_1100_p2;
reg   [0:0] icmp_ln657_reg_1917;
reg   [0:0] icmp_ln657_reg_1917_pp0_iter17_reg;
reg   [0:0] icmp_ln657_reg_1917_pp0_iter18_reg;
reg   [0:0] icmp_ln657_reg_1917_pp0_iter19_reg;
reg   [0:0] icmp_ln657_reg_1917_pp0_iter20_reg;
reg   [35:0] m_fix_a_V_reg_1923;
wire   [17:0] m_diff_lo_V_fu_1146_p1;
reg   [17:0] m_diff_lo_V_reg_1928;
reg   [26:0] exp_Z1_V_reg_1943;
reg   [17:0] exp_Z1P_m_1_V_reg_1948;
reg   [17:0] exp_Z1_hi_V_reg_1953;
wire   [27:0] ret_V_14_fu_1206_p2;
reg   [27:0] ret_V_14_reg_1958;
wire   [35:0] r_V_29_fu_1629_p2;
reg   [35:0] r_V_29_reg_1963;
wire   [0:0] xor_ln936_fu_1218_p2;
reg   [0:0] xor_ln936_reg_1968;
wire   [0:0] r_sign_fu_1237_p2;
reg   [0:0] r_sign_reg_1973;
wire   [31:0] p_Result_106_fu_1375_p4;
reg   [31:0] p_Result_106_reg_1980;
wire   [0:0] and_ln460_fu_1423_p2;
reg   [0:0] and_ln460_reg_1985;
wire   [0:0] and_ln181_fu_1459_p2;
reg   [0:0] and_ln181_reg_1990;
wire   [0:0] or_ln853_fu_1493_p2;
reg   [0:0] or_ln853_reg_1995;
wire   [0:0] or_ln853_2_fu_1505_p2;
reg   [0:0] or_ln853_2_reg_2000;
wire   [0:0] or_ln853_3_fu_1511_p2;
reg   [0:0] or_ln853_3_reg_2005;
wire   [0:0] and_ln415_fu_1522_p2;
reg   [0:0] and_ln415_reg_2010;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln498_fu_403_p1;
wire   [63:0] zext_ln498_3_fu_653_p1;
wire   [63:0] zext_ln498_4_fu_677_p1;
wire   [63:0] zext_ln498_2_fu_682_p1;
wire   [63:0] zext_ln498_1_fu_1150_p1;
wire   [63:0] zext_ln498_5_fu_1165_p1;
wire   [31:0] p_Val2_s_fu_359_p1;
wire   [5:0] index0_V_fu_385_p4;
wire   [23:0] r_V_s_fu_428_p3;
wire   [24:0] r_V_22_fu_435_p1;
wire   [24:0] p_Result_103_fu_419_p4;
wire   [38:0] z1_V_fu_458_p3;
wire   [38:0] r_V_23_fu_472_p0;
wire   [3:0] r_V_23_fu_472_p1;
wire   [42:0] sf_fu_488_p4;
wire   [0:0] tmp_158_fu_481_p3;
wire   [43:0] tmp_s_fu_497_p4;
wire   [43:0] zext_ln1287_fu_506_p1;
wire   [20:0] trunc_ln657_fu_478_p1;
wire   [42:0] lhs_V_fu_518_p3;
wire   [43:0] eZ_V_fu_510_p3;
wire   [44:0] zext_ln682_1_fu_526_p1;
wire   [44:0] rhs_V_fu_530_p1;
wire   [44:0] ret_V_2_fu_534_p2;
wire   [45:0] lhs_V_1_fu_540_p1;
wire   [45:0] rhs_V_1_fu_544_p1;
wire   [45:0] ret_V_3_fu_547_p2;
wire   [48:0] lhs_V_2_fu_590_p3;
wire   [48:0] eZ_V_1_fu_583_p3;
wire   [49:0] zext_ln682_2_fu_597_p1;
wire   [49:0] rhs_V_2_fu_601_p1;
wire   [40:0] grp_fu_617_p0;
wire   [5:0] grp_fu_617_p1;
wire   [47:0] rhs_V_3_fu_626_p3;
wire   [50:0] lhs_V_3_fu_623_p1;
wire   [50:0] zext_ln682_3_fu_633_p1;
wire   [50:0] ret_V_5_fu_637_p2;
wire   [61:0] lhs_V_4_fu_697_p3;
wire   [56:0] eZ_V_2_fu_690_p3;
wire   [62:0] zext_ln682_4_fu_704_p1;
wire   [62:0] rhs_V_4_fu_708_p1;
wire   [43:0] grp_fu_724_p0;
wire   [5:0] grp_fu_724_p1;
wire   [49:0] zext_ln157_1_fu_686_p1;
wire   [49:0] zext_ln157_2_fu_730_p1;
wire   [55:0] zext_ln157_fu_740_p1;
wire   [55:0] zext_ln657_10_fu_749_p1;
wire   [55:0] add_ln657_fu_744_p2;
wire   [8:0] zext_ln339_fu_758_p1;
wire   [8:0] b_exp_fu_761_p2;
wire   [0:0] icmp_ln369_fu_767_p2;
wire   [0:0] icmp_ln833_2_fu_778_p2;
wire   [0:0] and_ln18_fu_783_p2;
wire   [31:0] or_ln415_1_fu_798_p3;
wire   [8:0] b_exp_1_fu_812_p2;
wire   [44:0] grp_fu_828_p0;
wire   [55:0] rhs_V_5_fu_837_p3;
wire   [63:0] lhs_V_5_fu_834_p1;
wire   [63:0] zext_ln682_5_fu_844_p1;
wire   [63:0] ret_V_7_fu_848_p2;
wire   [22:0] r_V_26_fu_877_p0;
wire   [45:0] zext_ln1070_fu_874_p1;
wire   [22:0] r_V_26_fu_877_p1;
wire   [45:0] r_V_26_fu_877_p2;
wire   [62:0] lhs_V_6_fu_896_p3;
wire   [63:0] zext_ln682_6_fu_903_p1;
wire   [63:0] zext_ln657_11_fu_907_p1;
wire   [63:0] ret_V_8_fu_910_p2;
wire   [39:0] trunc_ln662_1_fu_916_p4;
wire   [63:0] lhs_V_7_fu_930_p3;
wire  signed [64:0] sext_ln657_2_fu_893_p1;
wire  signed [65:0] sext_ln682_fu_937_p1;
wire   [65:0] zext_ln657_fu_941_p1;
wire   [65:0] ret_V_9_fu_945_p2;
wire  signed [64:0] sum_V_fu_926_p1;
wire   [66:0] zext_ln657_1_fu_951_p1;
wire   [66:0] zext_ln657_2_fu_955_p1;
wire   [66:0] ret_V_10_fu_959_p2;
wire   [24:0] grp_fu_978_p0;
wire  signed [42:0] grp_fu_978_p1;
wire   [25:0] grp_fu_984_p0;
wire  signed [42:0] grp_fu_984_p1;
wire   [66:0] grp_fu_984_p2;
wire  signed [15:0] rhs_V_6_fu_1039_p3;
wire  signed [24:0] grp_fu_1618_p3;
wire   [14:0] trunc_ln805_fu_1066_p1;
wire   [9:0] tmp_fu_1050_p4;
wire   [0:0] icmp_ln805_fu_1069_p2;
wire   [9:0] add_ln805_fu_1075_p2;
wire   [0:0] p_Result_88_fu_1059_p3;
wire   [9:0] select_ln805_fu_1081_p3;
wire  signed [66:0] sext_ln1453_fu_1097_p1;
wire  signed [9:0] r_V_28_fu_1108_p1;
wire   [45:0] r_V_28_fu_1108_p2;
wire  signed [36:0] lhs_V_8_fu_1124_p1;
wire  signed [36:0] rhs_V_7_fu_1127_p1;
wire   [36:0] ret_V_12_fu_1130_p2;
wire   [8:0] m_diff_hi_V_fu_1136_p4;
wire   [4:0] Z2_ind_V_fu_1155_p4;
wire   [18:0] lhs_V_9_fu_1170_p1;
wire   [18:0] rhs_V_8_fu_1173_p1;
wire   [18:0] ret_V_13_fu_1177_p2;
wire   [27:0] lhs_V_10_fu_1203_p1;
wire   [0:0] or_ln386_fu_1227_p2;
wire   [0:0] or_ln386_1_fu_1232_p2;
wire   [31:0] or_ln460_2_fu_1243_p3;
wire   [31:0] or_ln467_2_fu_1256_p3;
wire   [44:0] lhs_V_11_fu_1269_p3;
wire   [44:0] zext_ln657_15_fu_1276_p1;
wire   [44:0] ret_V_15_fu_1279_p2;
wire   [0:0] tmp_161_fu_1285_p3;
wire   [9:0] r_exp_V_fu_1293_p2;
wire   [9:0] r_exp_V_2_fu_1298_p3;
wire   [2:0] tmp_162_fu_1305_p4;
wire   [0:0] icmp_ln849_fu_1315_p2;
wire   [22:0] tmp_2_fu_1347_p4;
wire   [22:0] tmp_1_fu_1337_p4;
wire   [7:0] trunc_ln168_fu_1365_p1;
wire   [7:0] out_exp_V_fu_1369_p2;
wire   [22:0] tmp_V_fu_1357_p3;
wire   [0:0] x_is_n1_fu_1223_p2;
wire   [0:0] xor_ln370_fu_1390_p2;
wire   [0:0] xor_ln371_fu_1400_p2;
wire   [0:0] and_ln371_1_fu_1406_p2;
wire   [0:0] or_ln370_fu_1395_p2;
wire   [0:0] icmp_ln460_fu_1250_p2;
wire   [0:0] and_ln371_2_fu_1411_p2;
wire   [0:0] xor_ln460_fu_1417_p2;
wire   [0:0] icmp_ln467_fu_1263_p2;
wire   [0:0] and_ln460_1_fu_1429_p2;
wire   [0:0] xor_ln467_fu_1435_p2;
wire   [0:0] and_ln467_1_fu_1447_p2;
wire   [0:0] or_ln657_fu_1321_p2;
wire   [0:0] and_ln657_fu_1453_p2;
wire   [0:0] xor_ln181_fu_1326_p2;
wire   [0:0] or_ln657_1_fu_1470_p2;
wire   [0:0] icmp_ln853_fu_1331_p2;
wire   [0:0] xor_ln657_fu_1475_p2;
wire   [0:0] and_ln853_fu_1481_p2;
wire   [0:0] and_ln853_1_fu_1487_p2;
wire   [0:0] and_ln181_1_fu_1465_p2;
wire   [0:0] and_ln467_fu_1441_p2;
wire   [0:0] and_ln371_fu_1385_p2;
wire   [0:0] or_ln853_1_fu_1499_p2;
wire   [0:0] xor_ln415_fu_1517_p2;
wire   [31:0] p_Result_102_fu_1539_p3;
wire   [31:0] p_Result_104_fu_1546_p3;
wire   [31:0] p_Result_101_fu_1532_p3;
wire   [31:0] select_ln853_fu_1553_p3;
wire   [31:0] select_ln853_1_fu_1560_p3;
wire   [31:0] select_ln853_2_fu_1567_p3;
wire   [31:0] select_ln853_3_fu_1574_p3;
wire   [31:0] select_ln853_4_fu_1580_p3;
wire   [0:0] x_is_p1_fu_1528_p2;
wire   [0:0] or_ln415_fu_1598_p2;
wire   [31:0] select_ln415_fu_1591_p3;
wire   [31:0] bitcast_ln853_fu_1587_p1;
wire  signed [24:0] mul_ln682_fu_1611_p0;
wire   [5:0] mul_ln682_fu_1611_p1;
wire   [12:0] grp_fu_1618_p0;
wire   [17:0] r_V_29_fu_1629_p0;
wire   [17:0] r_V_29_fu_1629_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to21;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [46:0] grp_fu_617_p00;
wire   [46:0] grp_fu_617_p10;
wire   [49:0] grp_fu_724_p00;
wire   [49:0] grp_fu_724_p10;
wire   [24:0] mul_ln682_fu_1611_p10;
wire   [42:0] r_V_23_fu_472_p00;
wire   [42:0] r_V_23_fu_472_p10;
wire   [35:0] r_V_29_fu_1629_p00;
wire   [35:0] r_V_29_fu_1629_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
end

pow_generic_floatbkb #(
    .DataWidth( 6 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_7_address0),
    .ce0(pow_reduce_anonymo_7_ce0),
    .q0(pow_reduce_anonymo_7_q0)
);

pow_generic_floatcud #(
    .DataWidth( 56 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_6_address0),
    .ce0(pow_reduce_anonymo_6_ce0),
    .q0(pow_reduce_anonymo_6_q0)
);

pow_generic_floatdEe #(
    .DataWidth( 52 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pow_reduce_anonymo_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_9_address0),
    .ce0(pow_reduce_anonymo_9_ce0),
    .q0(pow_reduce_anonymo_9_q0)
);

pow_generic_floateOg #(
    .DataWidth( 49 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_10_address0),
    .ce0(pow_reduce_anonymo_10_ce0),
    .q0(pow_reduce_anonymo_10_q0)
);

pow_generic_floatfYi #(
    .DataWidth( 44 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_8_address0),
    .ce0(pow_reduce_anonymo_8_ce0),
    .q0(pow_reduce_anonymo_8_q0)
);

pow_generic_floatg8j #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pow_reduce_anonymo_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_11_address0),
    .ce0(pow_reduce_anonymo_11_ce0),
    .q0(pow_reduce_anonymo_11_q0)
);

pow_generic_floathbi #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
pow_reduce_anonymo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_address0),
    .ce0(pow_reduce_anonymo_ce0),
    .q0(pow_reduce_anonymo_q0)
);

top_mul_41ns_6ns_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 47 ))
top_mul_41ns_6ns_ibs_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_617_p0),
    .din1(grp_fu_617_p1),
    .ce(1'b1),
    .dout(grp_fu_617_p2)
);

top_mul_44ns_6ns_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 50 ))
top_mul_44ns_6ns_jbC_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_724_p0),
    .din1(grp_fu_724_p1),
    .ce(1'b1),
    .dout(grp_fu_724_p2)
);

top_mul_45ns_9s_5kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 52 ))
top_mul_45ns_9s_5kbM_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_828_p0),
    .din1(b_exp_3_reg_1833),
    .ce(1'b1),
    .dout(grp_fu_828_p2)
);

top_mul_25ns_43s_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 43 ),
    .dout_WIDTH( 67 ))
top_mul_25ns_43s_lbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_978_p0),
    .din1(grp_fu_978_p1),
    .ce(1'b1),
    .dout(grp_fu_978_p2)
);

top_mul_26ns_43s_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 43 ),
    .dout_WIDTH( 67 ))
top_mul_26ns_43s_mb6_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_984_p0),
    .din1(grp_fu_984_p1),
    .ce(1'b1),
    .dout(grp_fu_984_p2)
);

top_mul_mul_25s_6ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 25 ))
top_mul_mul_25s_6ncg_U6(
    .din0(mul_ln682_fu_1611_p0),
    .din1(mul_ln682_fu_1611_p1),
    .dout(mul_ln682_fu_1611_p2)
);

top_mac_muladd_13ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
top_mac_muladd_13ocq_U7(
    .din0(grp_fu_1618_p0),
    .din1(m_fix_hi_V_reg_1894),
    .din2(rhs_V_6_fu_1039_p3),
    .dout(grp_fu_1618_p3)
);

top_mul_mul_18ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
top_mul_mul_18ns_pcA_U8(
    .din0(r_V_29_fu_1629_p0),
    .din1(r_V_29_fu_1629_p1),
    .dout(r_V_29_fu_1629_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Elog2_V_reg_1858 <= grp_fu_828_p2;
        a_V_1_reg_1720 <= {{ret_V_3_fu_547_p2[43:38]}};
        a_V_1_reg_1720_pp0_iter5_reg <= a_V_1_reg_1720;
        a_V_1_reg_1720_pp0_iter6_reg <= a_V_1_reg_1720_pp0_iter5_reg;
        a_V_2_reg_1762 <= {{ret_V_5_fu_637_p2[49:44]}};
        a_V_reg_1703 <= {{mul_ln682_fu_1611_p2[24:21]}};
        a_V_reg_1703_pp0_iter3_reg <= a_V_reg_1703;
        a_V_reg_1703_pp0_iter4_reg <= a_V_reg_1703_pp0_iter3_reg;
        a_V_reg_1703_pp0_iter5_reg <= a_V_reg_1703_pp0_iter4_reg;
        a_V_reg_1703_pp0_iter6_reg <= a_V_reg_1703_pp0_iter5_reg;
        a_V_reg_1703_pp0_iter7_reg <= a_V_reg_1703_pp0_iter6_reg;
        add_ln657_1_reg_1797 <= add_ln657_1_fu_734_p2;
        and_ln181_reg_1990 <= and_ln181_fu_1459_p2;
        and_ln18_1_reg_1820 <= and_ln18_1_fu_793_p2;
        and_ln18_1_reg_1820_pp0_iter11_reg <= and_ln18_1_reg_1820;
        and_ln18_1_reg_1820_pp0_iter12_reg <= and_ln18_1_reg_1820_pp0_iter11_reg;
        and_ln18_1_reg_1820_pp0_iter13_reg <= and_ln18_1_reg_1820_pp0_iter12_reg;
        and_ln18_1_reg_1820_pp0_iter14_reg <= and_ln18_1_reg_1820_pp0_iter13_reg;
        and_ln18_1_reg_1820_pp0_iter15_reg <= and_ln18_1_reg_1820_pp0_iter14_reg;
        and_ln18_1_reg_1820_pp0_iter16_reg <= and_ln18_1_reg_1820_pp0_iter15_reg;
        and_ln18_1_reg_1820_pp0_iter17_reg <= and_ln18_1_reg_1820_pp0_iter16_reg;
        and_ln18_1_reg_1820_pp0_iter18_reg <= and_ln18_1_reg_1820_pp0_iter17_reg;
        and_ln18_1_reg_1820_pp0_iter19_reg <= and_ln18_1_reg_1820_pp0_iter18_reg;
        and_ln18_1_reg_1820_pp0_iter20_reg <= and_ln18_1_reg_1820_pp0_iter19_reg;
        and_ln369_reg_1807 <= and_ln369_fu_773_p2;
        and_ln369_reg_1807_pp0_iter11_reg <= and_ln369_reg_1807;
        and_ln369_reg_1807_pp0_iter12_reg <= and_ln369_reg_1807_pp0_iter11_reg;
        and_ln369_reg_1807_pp0_iter13_reg <= and_ln369_reg_1807_pp0_iter12_reg;
        and_ln369_reg_1807_pp0_iter14_reg <= and_ln369_reg_1807_pp0_iter13_reg;
        and_ln369_reg_1807_pp0_iter15_reg <= and_ln369_reg_1807_pp0_iter14_reg;
        and_ln369_reg_1807_pp0_iter16_reg <= and_ln369_reg_1807_pp0_iter15_reg;
        and_ln369_reg_1807_pp0_iter17_reg <= and_ln369_reg_1807_pp0_iter16_reg;
        and_ln369_reg_1807_pp0_iter18_reg <= and_ln369_reg_1807_pp0_iter17_reg;
        and_ln369_reg_1807_pp0_iter19_reg <= and_ln369_reg_1807_pp0_iter18_reg;
        and_ln369_reg_1807_pp0_iter20_reg <= and_ln369_reg_1807_pp0_iter19_reg;
        and_ln369_reg_1807_pp0_iter21_reg <= and_ln369_reg_1807_pp0_iter20_reg;
        and_ln415_reg_2010 <= and_ln415_fu_1522_p2;
        and_ln460_reg_1985 <= and_ln460_fu_1423_p2;
        b_exp_3_reg_1833 <= b_exp_3_fu_818_p3;
        exp_Z1P_m_1_V_reg_1948 <= {{ret_V_13_fu_1177_p2[18:1]}};
        exp_Z1_V_reg_1943 <= pow_reduce_anonymo_11_q0;
        exp_Z1_hi_V_reg_1953 <= {{pow_reduce_anonymo_11_q0[26:9]}};
        icmp_ln415_reg_1826 <= icmp_ln415_fu_806_p2;
        icmp_ln415_reg_1826_pp0_iter11_reg <= icmp_ln415_reg_1826;
        icmp_ln415_reg_1826_pp0_iter12_reg <= icmp_ln415_reg_1826_pp0_iter11_reg;
        icmp_ln415_reg_1826_pp0_iter13_reg <= icmp_ln415_reg_1826_pp0_iter12_reg;
        icmp_ln415_reg_1826_pp0_iter14_reg <= icmp_ln415_reg_1826_pp0_iter13_reg;
        icmp_ln415_reg_1826_pp0_iter15_reg <= icmp_ln415_reg_1826_pp0_iter14_reg;
        icmp_ln415_reg_1826_pp0_iter16_reg <= icmp_ln415_reg_1826_pp0_iter15_reg;
        icmp_ln415_reg_1826_pp0_iter17_reg <= icmp_ln415_reg_1826_pp0_iter16_reg;
        icmp_ln415_reg_1826_pp0_iter18_reg <= icmp_ln415_reg_1826_pp0_iter17_reg;
        icmp_ln415_reg_1826_pp0_iter19_reg <= icmp_ln415_reg_1826_pp0_iter18_reg;
        icmp_ln415_reg_1826_pp0_iter20_reg <= icmp_ln415_reg_1826_pp0_iter19_reg;
        icmp_ln657_reg_1917 <= icmp_ln657_fu_1100_p2;
        icmp_ln657_reg_1917_pp0_iter17_reg <= icmp_ln657_reg_1917;
        icmp_ln657_reg_1917_pp0_iter18_reg <= icmp_ln657_reg_1917_pp0_iter17_reg;
        icmp_ln657_reg_1917_pp0_iter19_reg <= icmp_ln657_reg_1917_pp0_iter18_reg;
        icmp_ln657_reg_1917_pp0_iter20_reg <= icmp_ln657_reg_1917_pp0_iter19_reg;
        icmp_ln833_1_reg_1814 <= icmp_ln833_1_fu_788_p2;
        icmp_ln833_1_reg_1814_pp0_iter11_reg <= icmp_ln833_1_reg_1814;
        icmp_ln833_1_reg_1814_pp0_iter12_reg <= icmp_ln833_1_reg_1814_pp0_iter11_reg;
        icmp_ln833_1_reg_1814_pp0_iter13_reg <= icmp_ln833_1_reg_1814_pp0_iter12_reg;
        icmp_ln833_1_reg_1814_pp0_iter14_reg <= icmp_ln833_1_reg_1814_pp0_iter13_reg;
        icmp_ln833_1_reg_1814_pp0_iter15_reg <= icmp_ln833_1_reg_1814_pp0_iter14_reg;
        icmp_ln833_1_reg_1814_pp0_iter16_reg <= icmp_ln833_1_reg_1814_pp0_iter15_reg;
        icmp_ln833_1_reg_1814_pp0_iter17_reg <= icmp_ln833_1_reg_1814_pp0_iter16_reg;
        icmp_ln833_1_reg_1814_pp0_iter18_reg <= icmp_ln833_1_reg_1814_pp0_iter17_reg;
        icmp_ln833_1_reg_1814_pp0_iter19_reg <= icmp_ln833_1_reg_1814_pp0_iter18_reg;
        icmp_ln833_1_reg_1814_pp0_iter20_reg <= icmp_ln833_1_reg_1814_pp0_iter19_reg;
        icmp_ln833_reg_1683 <= icmp_ln833_fu_409_p2;
        icmp_ln833_reg_1683_pp0_iter3_reg <= icmp_ln833_reg_1683;
        icmp_ln833_reg_1683_pp0_iter4_reg <= icmp_ln833_reg_1683_pp0_iter3_reg;
        icmp_ln833_reg_1683_pp0_iter5_reg <= icmp_ln833_reg_1683_pp0_iter4_reg;
        icmp_ln833_reg_1683_pp0_iter6_reg <= icmp_ln833_reg_1683_pp0_iter5_reg;
        icmp_ln833_reg_1683_pp0_iter7_reg <= icmp_ln833_reg_1683_pp0_iter6_reg;
        icmp_ln833_reg_1683_pp0_iter8_reg <= icmp_ln833_reg_1683_pp0_iter7_reg;
        icmp_ln833_reg_1683_pp0_iter9_reg <= icmp_ln833_reg_1683_pp0_iter8_reg;
        icmp_ln837_reg_1689 <= icmp_ln837_fu_414_p2;
        icmp_ln837_reg_1689_pp0_iter3_reg <= icmp_ln837_reg_1689;
        icmp_ln837_reg_1689_pp0_iter4_reg <= icmp_ln837_reg_1689_pp0_iter3_reg;
        icmp_ln837_reg_1689_pp0_iter5_reg <= icmp_ln837_reg_1689_pp0_iter4_reg;
        icmp_ln837_reg_1689_pp0_iter6_reg <= icmp_ln837_reg_1689_pp0_iter5_reg;
        icmp_ln837_reg_1689_pp0_iter7_reg <= icmp_ln837_reg_1689_pp0_iter6_reg;
        icmp_ln837_reg_1689_pp0_iter8_reg <= icmp_ln837_reg_1689_pp0_iter7_reg;
        icmp_ln837_reg_1689_pp0_iter9_reg <= icmp_ln837_reg_1689_pp0_iter8_reg;
        log_base_V_reg_1868 <= {{ret_V_10_fu_959_p2[64:22]}};
        log_sum_V_1_reg_1802 <= log_sum_V_1_fu_752_p2;
        log_sum_V_1_reg_1802_pp0_iter10_reg <= log_sum_V_1_reg_1802;
        log_sum_V_1_reg_1802_pp0_iter11_reg <= log_sum_V_1_reg_1802_pp0_iter10_reg;
        log_sum_V_1_reg_1802_pp0_iter12_reg <= log_sum_V_1_reg_1802_pp0_iter11_reg;
        log_sum_V_reg_1678_pp0_iter2_reg <= log_sum_V_reg_1678;
        log_sum_V_reg_1678_pp0_iter3_reg <= log_sum_V_reg_1678_pp0_iter2_reg;
        log_sum_V_reg_1678_pp0_iter4_reg <= log_sum_V_reg_1678_pp0_iter3_reg;
        log_sum_V_reg_1678_pp0_iter5_reg <= log_sum_V_reg_1678_pp0_iter4_reg;
        log_sum_V_reg_1678_pp0_iter6_reg <= log_sum_V_reg_1678_pp0_iter5_reg;
        log_sum_V_reg_1678_pp0_iter7_reg <= log_sum_V_reg_1678_pp0_iter6_reg;
        log_sum_V_reg_1678_pp0_iter8_reg <= log_sum_V_reg_1678_pp0_iter7_reg;
        lshr_ln_reg_1863 <= {{r_V_26_fu_877_p2[45:1]}};
        m_diff_lo_V_reg_1928 <= m_diff_lo_V_fu_1146_p1;
        m_fix_V_reg_1889 <= {{grp_fu_984_p2[65:30]}};
        m_fix_V_reg_1889_pp0_iter16_reg <= m_fix_V_reg_1889;
        m_fix_V_reg_1889_pp0_iter17_reg <= m_fix_V_reg_1889_pp0_iter16_reg;
        m_fix_a_V_reg_1923 <= {{r_V_28_fu_1108_p2[44:9]}};
        m_fix_hi_V_reg_1894 <= {{grp_fu_984_p2[65:53]}};
        m_frac_l_V_reg_1879 <= grp_fu_978_p2;
        mul_ln682_reg_1694 <= mul_ln682_fu_1611_p2;
        mul_ln682_reg_1694_pp0_iter3_reg <= mul_ln682_reg_1694;
        or_ln853_2_reg_2000 <= or_ln853_2_fu_1505_p2;
        or_ln853_3_reg_2005 <= or_ln853_3_fu_1511_p2;
        or_ln853_reg_1995 <= or_ln853_fu_1493_p2;
        p_Result_105_reg_1899 <= grp_fu_984_p2[32'd65];
        p_Result_106_reg_1980 <= p_Result_106_fu_1375_p4;
        p_Result_s_reg_1635_pp0_iter10_reg <= p_Result_s_reg_1635_pp0_iter9_reg;
        p_Result_s_reg_1635_pp0_iter11_reg <= p_Result_s_reg_1635_pp0_iter10_reg;
        p_Result_s_reg_1635_pp0_iter12_reg <= p_Result_s_reg_1635_pp0_iter11_reg;
        p_Result_s_reg_1635_pp0_iter13_reg <= p_Result_s_reg_1635_pp0_iter12_reg;
        p_Result_s_reg_1635_pp0_iter14_reg <= p_Result_s_reg_1635_pp0_iter13_reg;
        p_Result_s_reg_1635_pp0_iter15_reg <= p_Result_s_reg_1635_pp0_iter14_reg;
        p_Result_s_reg_1635_pp0_iter16_reg <= p_Result_s_reg_1635_pp0_iter15_reg;
        p_Result_s_reg_1635_pp0_iter17_reg <= p_Result_s_reg_1635_pp0_iter16_reg;
        p_Result_s_reg_1635_pp0_iter18_reg <= p_Result_s_reg_1635_pp0_iter17_reg;
        p_Result_s_reg_1635_pp0_iter19_reg <= p_Result_s_reg_1635_pp0_iter18_reg;
        p_Result_s_reg_1635_pp0_iter20_reg <= p_Result_s_reg_1635_pp0_iter19_reg;
        p_Result_s_reg_1635_pp0_iter2_reg <= p_Result_s_reg_1635_pp0_iter1_reg;
        p_Result_s_reg_1635_pp0_iter3_reg <= p_Result_s_reg_1635_pp0_iter2_reg;
        p_Result_s_reg_1635_pp0_iter4_reg <= p_Result_s_reg_1635_pp0_iter3_reg;
        p_Result_s_reg_1635_pp0_iter5_reg <= p_Result_s_reg_1635_pp0_iter4_reg;
        p_Result_s_reg_1635_pp0_iter6_reg <= p_Result_s_reg_1635_pp0_iter5_reg;
        p_Result_s_reg_1635_pp0_iter7_reg <= p_Result_s_reg_1635_pp0_iter6_reg;
        p_Result_s_reg_1635_pp0_iter8_reg <= p_Result_s_reg_1635_pp0_iter7_reg;
        p_Result_s_reg_1635_pp0_iter9_reg <= p_Result_s_reg_1635_pp0_iter8_reg;
        p_Val2_101_reg_1714 <= {{ret_V_3_fu_547_p2[43:3]}};
        p_Val2_108_reg_1751 <= {{ret_V_5_fu_637_p2[49:6]}};
        r_V_23_reg_1709 <= r_V_23_fu_472_p2;
        r_V_24_reg_1746 <= grp_fu_617_p2;
        r_V_25_reg_1838 <= grp_fu_724_p2;
        r_V_29_reg_1963 <= r_V_29_fu_1629_p2;
        r_exp_V_3_reg_1910 <= r_exp_V_3_fu_1089_p3;
        r_exp_V_3_reg_1910_pp0_iter17_reg <= r_exp_V_3_reg_1910;
        r_exp_V_3_reg_1910_pp0_iter18_reg <= r_exp_V_3_reg_1910_pp0_iter17_reg;
        r_exp_V_3_reg_1910_pp0_iter19_reg <= r_exp_V_3_reg_1910_pp0_iter18_reg;
        r_exp_V_3_reg_1910_pp0_iter20_reg <= r_exp_V_3_reg_1910_pp0_iter19_reg;
        r_sign_reg_1973 <= r_sign_fu_1237_p2;
        ret_V_14_reg_1958 <= ret_V_14_fu_1206_p2;
        ret_V_4_reg_1731 <= ret_V_4_fu_605_p2;
        ret_V_4_reg_1731_pp0_iter6_reg <= ret_V_4_reg_1731;
        ret_V_6_reg_1782 <= ret_V_6_fu_712_p2;
        ret_V_6_reg_1782_pp0_iter10_reg <= ret_V_6_reg_1782_pp0_iter9_reg;
        ret_V_6_reg_1782_pp0_iter9_reg <= ret_V_6_reg_1782;
        tmp_125_reg_1726 <= {{ret_V_3_fu_547_p2[37:3]}};
        tmp_126_reg_1767 <= {{ret_V_5_fu_637_p2[43:6]}};
        tmp_127_reg_1848 <= {{ret_V_7_fu_848_p2[62:24]}};
        tmp_127_reg_1848_pp0_iter12_reg <= tmp_127_reg_1848;
        tmp_157_reg_1657_pp0_iter2_reg <= tmp_157_reg_1657_pp0_iter1_reg;
        tmp_157_reg_1657_pp0_iter3_reg <= tmp_157_reg_1657_pp0_iter2_reg;
        tmp_157_reg_1657_pp0_iter4_reg <= tmp_157_reg_1657_pp0_iter3_reg;
        tmp_157_reg_1657_pp0_iter5_reg <= tmp_157_reg_1657_pp0_iter4_reg;
        tmp_157_reg_1657_pp0_iter6_reg <= tmp_157_reg_1657_pp0_iter5_reg;
        tmp_157_reg_1657_pp0_iter7_reg <= tmp_157_reg_1657_pp0_iter6_reg;
        tmp_157_reg_1657_pp0_iter8_reg <= tmp_157_reg_1657_pp0_iter7_reg;
        tmp_157_reg_1657_pp0_iter9_reg <= tmp_157_reg_1657_pp0_iter8_reg;
        tmp_163_reg_1904 <= grp_fu_978_p2[32'd66];
        tmp_163_reg_1904_pp0_iter16_reg <= tmp_163_reg_1904;
        tmp_163_reg_1904_pp0_iter17_reg <= tmp_163_reg_1904_pp0_iter16_reg;
        tmp_163_reg_1904_pp0_iter18_reg <= tmp_163_reg_1904_pp0_iter17_reg;
        tmp_163_reg_1904_pp0_iter19_reg <= tmp_163_reg_1904_pp0_iter18_reg;
        tmp_163_reg_1904_pp0_iter20_reg <= tmp_163_reg_1904_pp0_iter19_reg;
        tmp_V_27_reg_1642_pp0_iter2_reg <= tmp_V_27_reg_1642_pp0_iter1_reg;
        tmp_V_27_reg_1642_pp0_iter3_reg <= tmp_V_27_reg_1642_pp0_iter2_reg;
        tmp_V_27_reg_1642_pp0_iter4_reg <= tmp_V_27_reg_1642_pp0_iter3_reg;
        tmp_V_27_reg_1642_pp0_iter5_reg <= tmp_V_27_reg_1642_pp0_iter4_reg;
        tmp_V_27_reg_1642_pp0_iter6_reg <= tmp_V_27_reg_1642_pp0_iter5_reg;
        tmp_V_27_reg_1642_pp0_iter7_reg <= tmp_V_27_reg_1642_pp0_iter6_reg;
        tmp_V_27_reg_1642_pp0_iter8_reg <= tmp_V_27_reg_1642_pp0_iter7_reg;
        tmp_V_27_reg_1642_pp0_iter9_reg <= tmp_V_27_reg_1642_pp0_iter8_reg;
        trunc_ln1_reg_1884 <= {{grp_fu_984_p2[65:1]}};
        trunc_ln_reg_1853 <= {{ret_V_7_fu_848_p2[62:40]}};
        xor_ln936_reg_1968 <= xor_ln936_fu_1218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_frac_tilde_inverse_reg_1673 <= pow_reduce_anonymo_7_q0;
        log_sum_V_reg_1678 <= pow_reduce_anonymo_6_q0;
        p_Result_s_reg_1635 <= p_Val2_s_fu_359_p1[32'd31];
        p_Result_s_reg_1635_pp0_iter1_reg <= p_Result_s_reg_1635;
        tmp_157_reg_1657 <= p_Val2_s_fu_359_p1[32'd22];
        tmp_157_reg_1657_pp0_iter1_reg <= tmp_157_reg_1657;
        tmp_V_27_reg_1642 <= {{p_Val2_s_fu_359_p1[30:23]}};
        tmp_V_27_reg_1642_pp0_iter1_reg <= tmp_V_27_reg_1642;
        tmp_V_28_reg_1649 <= tmp_V_28_fu_381_p1;
        tmp_V_28_reg_1649_pp0_iter1_reg <= tmp_V_28_reg_1649;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to21 = 1'b1;
    end else begin
        ap_idle_pp0_0to21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to21 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_10_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_11_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_6_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_7_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_8_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_9_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pow_reduce_anonymo_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Z2_ind_V_fu_1155_p4 = {{ret_V_12_fu_1130_p2[17:13]}};

assign a_V_2_fu_657_p4 = {{ret_V_5_fu_637_p2[49:44]}};

assign add_ln657_1_fu_734_p2 = (zext_ln157_1_fu_686_p1 + zext_ln157_2_fu_730_p1);

assign add_ln657_fu_744_p2 = (zext_ln157_fu_740_p1 + log_sum_V_reg_1678_pp0_iter8_reg);

assign add_ln805_fu_1075_p2 = (10'd1 + tmp_fu_1050_p4);

assign and_ln181_1_fu_1465_p2 = (tmp_163_reg_1904_pp0_iter20_reg & and_ln657_fu_1453_p2);

assign and_ln181_fu_1459_p2 = (xor_ln181_fu_1326_p2 & and_ln657_fu_1453_p2);

assign and_ln18_1_fu_793_p2 = (icmp_ln833_reg_1683_pp0_iter9_reg & icmp_ln833_2_fu_778_p2);

assign and_ln18_fu_783_p2 = (icmp_ln837_reg_1689_pp0_iter9_reg & icmp_ln833_2_fu_778_p2);

assign and_ln369_fu_773_p2 = (icmp_ln833_reg_1683_pp0_iter9_reg & icmp_ln369_fu_767_p2);

assign and_ln371_1_fu_1406_p2 = (xor_ln371_fu_1400_p2 & icmp_ln415_reg_1826_pp0_iter20_reg);

assign and_ln371_2_fu_1411_p2 = (or_ln370_fu_1395_p2 & and_ln371_1_fu_1406_p2);

assign and_ln371_fu_1385_p2 = (x_is_n1_fu_1223_p2 & icmp_ln415_reg_1826_pp0_iter20_reg);

assign and_ln415_fu_1522_p2 = (xor_ln415_fu_1517_p2 & or_ln370_fu_1395_p2);

assign and_ln460_1_fu_1429_p2 = (icmp_ln460_fu_1250_p2 & and_ln371_2_fu_1411_p2);

assign and_ln460_fu_1423_p2 = (xor_ln460_fu_1417_p2 & and_ln371_2_fu_1411_p2);

assign and_ln467_1_fu_1447_p2 = (icmp_ln467_fu_1263_p2 & and_ln460_1_fu_1429_p2);

assign and_ln467_fu_1441_p2 = (xor_ln467_fu_1435_p2 & and_ln460_1_fu_1429_p2);

assign and_ln657_fu_1453_p2 = (or_ln657_fu_1321_p2 & and_ln467_1_fu_1447_p2);

assign and_ln853_1_fu_1487_p2 = (and_ln853_fu_1481_p2 & and_ln467_1_fu_1447_p2);

assign and_ln853_fu_1481_p2 = (xor_ln657_fu_1475_p2 & icmp_ln853_fu_1331_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln415_fu_1598_p2[0:0] === 1'b1) ? select_ln415_fu_1591_p3 : bitcast_ln853_fu_1587_p1);

assign b_exp_1_fu_812_p2 = ($signed(9'd386) + $signed(zext_ln339_fu_758_p1));

assign b_exp_3_fu_818_p3 = ((tmp_157_reg_1657_pp0_iter9_reg[0:0] === 1'b1) ? b_exp_1_fu_812_p2 : b_exp_fu_761_p2);

assign b_exp_fu_761_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_758_p1));

assign bitcast_ln853_fu_1587_p1 = select_ln853_4_fu_1580_p3;

assign eZ_V_1_fu_583_p3 = {{8'd128}, {p_Val2_101_reg_1714}};

assign eZ_V_2_fu_690_p3 = {{13'd4096}, {p_Val2_108_reg_1751}};

assign eZ_V_fu_510_p3 = ((tmp_158_fu_481_p3[0:0] === 1'b1) ? tmp_s_fu_497_p4 : zext_ln1287_fu_506_p1);

assign grp_fu_1618_p0 = 25'd2954;

assign grp_fu_617_p0 = grp_fu_617_p00;

assign grp_fu_617_p00 = p_Val2_101_reg_1714;

assign grp_fu_617_p1 = grp_fu_617_p10;

assign grp_fu_617_p10 = a_V_1_reg_1720;

assign grp_fu_724_p0 = grp_fu_724_p00;

assign grp_fu_724_p00 = p_Val2_108_reg_1751;

assign grp_fu_724_p1 = grp_fu_724_p10;

assign grp_fu_724_p10 = a_V_2_reg_1762;

assign grp_fu_828_p0 = 52'd12193974156572;

assign grp_fu_978_p0 = 67'd12582912;

assign grp_fu_978_p1 = sext_ln657_1_fu_975_p1;

assign grp_fu_984_p0 = 67'd25165824;

assign grp_fu_984_p1 = sext_ln657_1_fu_975_p1;

assign icmp_ln369_fu_767_p2 = ((b_exp_fu_761_p2 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln415_fu_806_p2 = ((or_ln415_1_fu_798_p3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln460_fu_1250_p2 = ((or_ln460_2_fu_1243_p3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln467_fu_1263_p2 = ((or_ln467_2_fu_1256_p3 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln657_fu_1100_p2 = ((sext_ln1453_fu_1097_p1 != m_frac_l_V_reg_1879) ? 1'b1 : 1'b0);

assign icmp_ln805_fu_1069_p2 = ((trunc_ln805_fu_1066_p1 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_1_fu_788_p2 = ((tmp_V_27_reg_1642_pp0_iter9_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln833_2_fu_778_p2 = ((tmp_V_27_reg_1642_pp0_iter9_reg == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_409_p2 = ((tmp_V_28_reg_1649_pp0_iter1_reg == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln837_fu_414_p2 = ((tmp_V_28_reg_1649_pp0_iter1_reg != 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln849_fu_1315_p2 = (($signed(tmp_162_fu_1305_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign icmp_ln853_fu_1331_p2 = (($signed(r_exp_V_2_fu_1298_p3) < $signed(10'd898)) ? 1'b1 : 1'b0);

assign index0_V_fu_385_p4 = {{p_Val2_s_fu_359_p1[22:17]}};

assign lhs_V_10_fu_1203_p1 = exp_Z1_V_reg_1943;

assign lhs_V_11_fu_1269_p3 = {{ret_V_14_reg_1958}, {17'd0}};

assign lhs_V_1_fu_540_p1 = ret_V_2_fu_534_p2;

assign lhs_V_2_fu_590_p3 = {{tmp_125_reg_1726}, {14'd0}};

assign lhs_V_3_fu_623_p1 = ret_V_4_reg_1731_pp0_iter6_reg;

assign lhs_V_4_fu_697_p3 = {{tmp_126_reg_1767}, {24'd0}};

assign lhs_V_5_fu_834_p1 = ret_V_6_reg_1782_pp0_iter10_reg;

assign lhs_V_6_fu_896_p3 = {{tmp_127_reg_1848_pp0_iter12_reg}, {24'd0}};

assign lhs_V_7_fu_930_p3 = {{Elog2_V_reg_1858}, {12'd0}};

assign lhs_V_8_fu_1124_p1 = $signed(m_fix_V_reg_1889_pp0_iter17_reg);

assign lhs_V_9_fu_1170_p1 = m_diff_lo_V_reg_1928;

assign lhs_V_fu_518_p3 = {{trunc_ln657_fu_478_p1}, {22'd0}};

assign log_sum_V_1_fu_752_p2 = (zext_ln657_10_fu_749_p1 + add_ln657_fu_744_p2);

assign m_diff_hi_V_fu_1136_p4 = {{ret_V_12_fu_1130_p2[26:18]}};

assign m_diff_lo_V_fu_1146_p1 = ret_V_12_fu_1130_p2[17:0];

assign mul_ln682_fu_1611_p0 = ((tmp_157_reg_1657_pp0_iter1_reg[0:0] === 1'b1) ? r_V_22_fu_435_p1 : p_Result_103_fu_419_p4);

assign mul_ln682_fu_1611_p1 = mul_ln682_fu_1611_p10;

assign mul_ln682_fu_1611_p10 = b_frac_tilde_inverse_reg_1673;

assign or_ln370_fu_1395_p2 = (xor_ln370_fu_1390_p2 | p_Result_s_reg_1635_pp0_iter20_reg);

assign or_ln386_1_fu_1232_p2 = (or_ln386_fu_1227_p2 | icmp_ln833_1_reg_1814_pp0_iter20_reg);

assign or_ln386_fu_1227_p2 = (xor_ln936_fu_1218_p2 | and_ln18_1_reg_1820_pp0_iter20_reg);

assign or_ln415_1_fu_798_p3 = {{31'd0}, {and_ln18_fu_783_p2}};

assign or_ln415_fu_1598_p2 = (x_is_p1_fu_1528_p2 | and_ln415_reg_2010);

assign or_ln460_2_fu_1243_p3 = {{31'd0}, {and_ln18_1_reg_1820_pp0_iter20_reg}};

assign or_ln467_2_fu_1256_p3 = {{31'd0}, {icmp_ln833_1_reg_1814_pp0_iter20_reg}};

assign or_ln657_1_fu_1470_p2 = (icmp_ln849_fu_1315_p2 | icmp_ln657_reg_1917_pp0_iter20_reg);

assign or_ln657_fu_1321_p2 = (icmp_ln849_fu_1315_p2 | icmp_ln657_reg_1917_pp0_iter20_reg);

assign or_ln853_1_fu_1499_p2 = (and_ln467_fu_1441_p2 | and_ln181_fu_1459_p2);

assign or_ln853_2_fu_1505_p2 = (and_ln460_fu_1423_p2 | and_ln371_fu_1385_p2);

assign or_ln853_3_fu_1511_p2 = (or_ln853_fu_1493_p2 | or_ln853_1_fu_1499_p2);

assign or_ln853_fu_1493_p2 = (and_ln853_1_fu_1487_p2 | and_ln181_1_fu_1465_p2);

assign out_exp_V_fu_1369_p2 = (8'd127 + trunc_ln168_fu_1365_p1);

assign p_Result_101_fu_1532_p3 = {{r_sign_reg_1973}, {31'd1065353216}};

assign p_Result_102_fu_1539_p3 = {{r_sign_reg_1973}, {31'd2139095040}};

assign p_Result_103_fu_419_p4 = {{{{1'd1}, {tmp_V_28_reg_1649_pp0_iter1_reg}}}, {1'd0}};

assign p_Result_104_fu_1546_p3 = {{r_sign_reg_1973}, {31'd0}};

assign p_Result_106_fu_1375_p4 = {{{r_sign_fu_1237_p2}, {out_exp_V_fu_1369_p2}}, {tmp_V_fu_1357_p3}};

assign p_Result_88_fu_1059_p3 = grp_fu_1618_p3[32'd24];

assign p_Val2_s_fu_359_p1 = base_r;

assign pow_reduce_anonymo_10_address0 = zext_ln498_3_fu_653_p1;

assign pow_reduce_anonymo_11_address0 = zext_ln498_1_fu_1150_p1;

assign pow_reduce_anonymo_6_address0 = zext_ln498_fu_403_p1;

assign pow_reduce_anonymo_7_address0 = zext_ln498_fu_403_p1;

assign pow_reduce_anonymo_8_address0 = zext_ln498_4_fu_677_p1;

assign pow_reduce_anonymo_9_address0 = zext_ln498_2_fu_682_p1;

assign pow_reduce_anonymo_address0 = zext_ln498_5_fu_1165_p1;

assign r_V_22_fu_435_p1 = r_V_s_fu_428_p3;

assign r_V_23_fu_472_p0 = r_V_23_fu_472_p00;

assign r_V_23_fu_472_p00 = z1_V_fu_458_p3;

assign r_V_23_fu_472_p1 = r_V_23_fu_472_p10;

assign r_V_23_fu_472_p10 = a_V_reg_1703;

assign r_V_23_fu_472_p2 = (r_V_23_fu_472_p0 * r_V_23_fu_472_p1);

assign r_V_26_fu_877_p0 = zext_ln1070_fu_874_p1;

assign r_V_26_fu_877_p1 = zext_ln1070_fu_874_p1;

assign r_V_26_fu_877_p2 = (r_V_26_fu_877_p0 * r_V_26_fu_877_p1);

assign r_V_28_fu_1108_p1 = r_exp_V_3_reg_1910;

assign r_V_28_fu_1108_p2 = ($signed({{1'b0}, {46'd47632711549}}) * $signed(r_V_28_fu_1108_p1));

assign r_V_29_fu_1629_p0 = r_V_29_fu_1629_p00;

assign r_V_29_fu_1629_p00 = exp_Z1_hi_V_reg_1953;

assign r_V_29_fu_1629_p1 = r_V_29_fu_1629_p10;

assign r_V_29_fu_1629_p10 = exp_Z1P_m_1_V_reg_1948;

assign r_V_s_fu_428_p3 = {{1'd1}, {tmp_V_28_reg_1649_pp0_iter1_reg}};

assign r_exp_V_2_fu_1298_p3 = ((tmp_161_fu_1285_p3[0:0] === 1'b1) ? r_exp_V_3_reg_1910_pp0_iter20_reg : r_exp_V_fu_1293_p2);

assign r_exp_V_3_fu_1089_p3 = ((p_Result_88_fu_1059_p3[0:0] === 1'b1) ? select_ln805_fu_1081_p3 : tmp_fu_1050_p4);

assign r_exp_V_fu_1293_p2 = ($signed(10'd1023) + $signed(r_exp_V_3_reg_1910_pp0_iter20_reg));

assign r_sign_fu_1237_p2 = (or_ln386_1_fu_1232_p2 ^ 1'd1);

assign ret_V_10_fu_959_p2 = (zext_ln657_1_fu_951_p1 + zext_ln657_2_fu_955_p1);

assign ret_V_12_fu_1130_p2 = ($signed(lhs_V_8_fu_1124_p1) - $signed(rhs_V_7_fu_1127_p1));

assign ret_V_13_fu_1177_p2 = (lhs_V_9_fu_1170_p1 + rhs_V_8_fu_1173_p1);

assign ret_V_14_fu_1206_p2 = (28'd4 + lhs_V_10_fu_1203_p1);

assign ret_V_15_fu_1279_p2 = (lhs_V_11_fu_1269_p3 + zext_ln657_15_fu_1276_p1);

assign ret_V_2_fu_534_p2 = (zext_ln682_1_fu_526_p1 + rhs_V_fu_530_p1);

assign ret_V_3_fu_547_p2 = (lhs_V_1_fu_540_p1 - rhs_V_1_fu_544_p1);

assign ret_V_4_fu_605_p2 = (zext_ln682_2_fu_597_p1 + rhs_V_2_fu_601_p1);

assign ret_V_5_fu_637_p2 = (lhs_V_3_fu_623_p1 - zext_ln682_3_fu_633_p1);

assign ret_V_6_fu_712_p2 = (zext_ln682_4_fu_704_p1 + rhs_V_4_fu_708_p1);

assign ret_V_7_fu_848_p2 = (lhs_V_5_fu_834_p1 - zext_ln682_5_fu_844_p1);

assign ret_V_8_fu_910_p2 = (zext_ln682_6_fu_903_p1 - zext_ln657_11_fu_907_p1);

assign ret_V_9_fu_945_p2 = ($signed(sext_ln682_fu_937_p1) + $signed(zext_ln657_fu_941_p1));

assign rhs_V_1_fu_544_p1 = r_V_23_reg_1709;

assign rhs_V_2_fu_601_p1 = eZ_V_1_fu_583_p3;

assign rhs_V_3_fu_626_p3 = {{r_V_24_reg_1746}, {1'd0}};

assign rhs_V_4_fu_708_p1 = eZ_V_2_fu_690_p3;

assign rhs_V_5_fu_837_p3 = {{r_V_25_reg_1838}, {6'd0}};

assign rhs_V_6_fu_1039_p3 = {{p_Result_105_reg_1899}, {15'd16384}};

assign rhs_V_7_fu_1127_p1 = $signed(m_fix_a_V_reg_1923);

assign rhs_V_8_fu_1173_p1 = pow_reduce_anonymo_q0;

assign rhs_V_fu_530_p1 = eZ_V_fu_510_p3;

assign select_ln415_fu_1591_p3 = ((and_ln415_reg_2010[0:0] === 1'b1) ? 32'd2147483647 : 32'd1065353216);

assign select_ln805_fu_1081_p3 = ((icmp_ln805_fu_1069_p2[0:0] === 1'b1) ? tmp_fu_1050_p4 : add_ln805_fu_1075_p2);

assign select_ln853_1_fu_1560_p3 = ((and_ln460_reg_1985[0:0] === 1'b1) ? p_Result_102_fu_1539_p3 : p_Result_101_fu_1532_p3);

assign select_ln853_2_fu_1567_p3 = ((or_ln853_reg_1995[0:0] === 1'b1) ? p_Result_104_fu_1546_p3 : select_ln853_fu_1553_p3);

assign select_ln853_3_fu_1574_p3 = ((or_ln853_2_reg_2000[0:0] === 1'b1) ? select_ln853_1_fu_1560_p3 : p_Result_106_reg_1980);

assign select_ln853_4_fu_1580_p3 = ((or_ln853_3_reg_2005[0:0] === 1'b1) ? select_ln853_2_fu_1567_p3 : select_ln853_3_fu_1574_p3);

assign select_ln853_fu_1553_p3 = ((and_ln181_reg_1990[0:0] === 1'b1) ? p_Result_102_fu_1539_p3 : p_Result_104_fu_1546_p3);

assign sext_ln1453_fu_1097_p1 = $signed(trunc_ln1_reg_1884);

assign sext_ln657_1_fu_975_p1 = $signed(log_base_V_reg_1868);

assign sext_ln657_2_fu_893_p1 = $signed(log_sum_V_1_reg_1802_pp0_iter12_reg);

assign sext_ln682_fu_937_p1 = $signed(lhs_V_7_fu_930_p3);

assign sf_fu_488_p4 = {{{{5'd16}, {mul_ln682_reg_1694_pp0_iter3_reg}}}, {13'd0}};

assign sum_V_fu_926_p1 = $signed(trunc_ln662_1_fu_916_p4);

assign tmp_158_fu_481_p3 = mul_ln682_reg_1694_pp0_iter3_reg[32'd24];

assign tmp_161_fu_1285_p3 = ret_V_15_fu_1279_p2[32'd43];

assign tmp_162_fu_1305_p4 = {{r_exp_V_2_fu_1298_p3[9:7]}};

assign tmp_1_fu_1337_p4 = {{ret_V_15_fu_1279_p2[41:19]}};

assign tmp_2_fu_1347_p4 = {{ret_V_15_fu_1279_p2[42:20]}};

assign tmp_V_28_fu_381_p1 = p_Val2_s_fu_359_p1[22:0];

assign tmp_V_fu_1357_p3 = ((tmp_161_fu_1285_p3[0:0] === 1'b1) ? tmp_2_fu_1347_p4 : tmp_1_fu_1337_p4);

assign tmp_fu_1050_p4 = {{grp_fu_1618_p3[24:15]}};

assign tmp_s_fu_497_p4 = {{{{5'd16}, {mul_ln682_reg_1694_pp0_iter3_reg}}}, {14'd0}};

assign trunc_ln168_fu_1365_p1 = r_exp_V_2_fu_1298_p3[7:0];

assign trunc_ln657_fu_478_p1 = mul_ln682_reg_1694_pp0_iter3_reg[20:0];

assign trunc_ln662_1_fu_916_p4 = {{ret_V_8_fu_910_p2[63:24]}};

assign trunc_ln805_fu_1066_p1 = grp_fu_1618_p3[14:0];

assign x_is_n1_fu_1223_p2 = (p_Result_s_reg_1635_pp0_iter20_reg & and_ln369_reg_1807_pp0_iter20_reg);

assign x_is_p1_fu_1528_p2 = (xor_ln936_reg_1968 & and_ln369_reg_1807_pp0_iter21_reg);

assign xor_ln181_fu_1326_p2 = (tmp_163_reg_1904_pp0_iter20_reg ^ 1'd1);

assign xor_ln370_fu_1390_p2 = (1'd1 ^ and_ln369_reg_1807_pp0_iter20_reg);

assign xor_ln371_fu_1400_p2 = (x_is_n1_fu_1223_p2 ^ 1'd1);

assign xor_ln415_fu_1517_p2 = (icmp_ln415_reg_1826_pp0_iter20_reg ^ 1'd1);

assign xor_ln460_fu_1417_p2 = (icmp_ln460_fu_1250_p2 ^ 1'd1);

assign xor_ln467_fu_1435_p2 = (icmp_ln467_fu_1263_p2 ^ 1'd1);

assign xor_ln657_fu_1475_p2 = (or_ln657_1_fu_1470_p2 ^ 1'd1);

assign xor_ln936_fu_1218_p2 = (p_Result_s_reg_1635_pp0_iter20_reg ^ 1'd1);

assign z1_V_fu_458_p3 = {{mul_ln682_reg_1694}, {14'd0}};

assign zext_ln1070_fu_874_p1 = trunc_ln_reg_1853;

assign zext_ln1287_fu_506_p1 = sf_fu_488_p4;

assign zext_ln157_1_fu_686_p1 = pow_reduce_anonymo_10_q0;

assign zext_ln157_2_fu_730_p1 = pow_reduce_anonymo_8_q0;

assign zext_ln157_fu_740_p1 = pow_reduce_anonymo_9_q0;

assign zext_ln339_fu_758_p1 = tmp_V_27_reg_1642_pp0_iter9_reg;

assign zext_ln498_1_fu_1150_p1 = m_diff_hi_V_fu_1136_p4;

assign zext_ln498_2_fu_682_p1 = a_V_reg_1703_pp0_iter7_reg;

assign zext_ln498_3_fu_653_p1 = a_V_1_reg_1720_pp0_iter6_reg;

assign zext_ln498_4_fu_677_p1 = a_V_2_fu_657_p4;

assign zext_ln498_5_fu_1165_p1 = Z2_ind_V_fu_1155_p4;

assign zext_ln498_fu_403_p1 = index0_V_fu_385_p4;

assign zext_ln657_10_fu_749_p1 = add_ln657_1_reg_1797;

assign zext_ln657_11_fu_907_p1 = lshr_ln_reg_1863;

assign zext_ln657_15_fu_1276_p1 = r_V_29_reg_1963;

assign zext_ln657_1_fu_951_p1 = ret_V_9_fu_945_p2;

assign zext_ln657_2_fu_955_p1 = $unsigned(sum_V_fu_926_p1);

assign zext_ln657_fu_941_p1 = $unsigned(sext_ln657_2_fu_893_p1);

assign zext_ln682_1_fu_526_p1 = lhs_V_fu_518_p3;

assign zext_ln682_2_fu_597_p1 = lhs_V_2_fu_590_p3;

assign zext_ln682_3_fu_633_p1 = rhs_V_3_fu_626_p3;

assign zext_ln682_4_fu_704_p1 = lhs_V_4_fu_697_p3;

assign zext_ln682_5_fu_844_p1 = rhs_V_5_fu_837_p3;

assign zext_ln682_6_fu_903_p1 = lhs_V_6_fu_896_p3;

endmodule //pow_generic_float_s
