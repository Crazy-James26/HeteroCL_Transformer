// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> top::ap_ST_fsm_state1 = "1";
const sc_lv<4> top::ap_ST_fsm_state2 = "10";
const sc_lv<4> top::ap_ST_fsm_state3 = "100";
const sc_lv<4> top::ap_ST_fsm_state4 = "1000";
const sc_lv<32> top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top::ap_const_lv32_1 = "1";
const sc_lv<1> top::ap_const_lv1_0 = "0";
const sc_lv<32> top::ap_const_lv32_2 = "10";
const sc_lv<32> top::ap_const_lv32_3 = "11";
const sc_lv<4> top::ap_const_lv4_0 = "0000";
const sc_lv<1> top::ap_const_lv1_1 = "1";
const sc_lv<4> top::ap_const_lv4_A = "1010";
const sc_lv<4> top::ap_const_lv4_1 = "1";
const sc_lv<3> top::ap_const_lv3_0 = "000";
const bool top::ap_const_boolean_1 = true;

top::top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_mux_1007_32_1_1_U1 = new top_mux_1007_32_1_1<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,7,32>("top_mux_1007_32_1_1_U1");
    top_mux_1007_32_1_1_U1->din0(v0_0_0);
    top_mux_1007_32_1_1_U1->din1(v0_0_1);
    top_mux_1007_32_1_1_U1->din2(v0_0_2);
    top_mux_1007_32_1_1_U1->din3(v0_0_3);
    top_mux_1007_32_1_1_U1->din4(v0_0_4);
    top_mux_1007_32_1_1_U1->din5(v0_0_5);
    top_mux_1007_32_1_1_U1->din6(v0_0_6);
    top_mux_1007_32_1_1_U1->din7(v0_0_7);
    top_mux_1007_32_1_1_U1->din8(v0_0_8);
    top_mux_1007_32_1_1_U1->din9(v0_0_9);
    top_mux_1007_32_1_1_U1->din10(v0_1_0);
    top_mux_1007_32_1_1_U1->din11(v0_1_1);
    top_mux_1007_32_1_1_U1->din12(v0_1_2);
    top_mux_1007_32_1_1_U1->din13(v0_1_3);
    top_mux_1007_32_1_1_U1->din14(v0_1_4);
    top_mux_1007_32_1_1_U1->din15(v0_1_5);
    top_mux_1007_32_1_1_U1->din16(v0_1_6);
    top_mux_1007_32_1_1_U1->din17(v0_1_7);
    top_mux_1007_32_1_1_U1->din18(v0_1_8);
    top_mux_1007_32_1_1_U1->din19(v0_1_9);
    top_mux_1007_32_1_1_U1->din20(v0_2_0);
    top_mux_1007_32_1_1_U1->din21(v0_2_1);
    top_mux_1007_32_1_1_U1->din22(v0_2_2);
    top_mux_1007_32_1_1_U1->din23(v0_2_3);
    top_mux_1007_32_1_1_U1->din24(v0_2_4);
    top_mux_1007_32_1_1_U1->din25(v0_2_5);
    top_mux_1007_32_1_1_U1->din26(v0_2_6);
    top_mux_1007_32_1_1_U1->din27(v0_2_7);
    top_mux_1007_32_1_1_U1->din28(v0_2_8);
    top_mux_1007_32_1_1_U1->din29(v0_2_9);
    top_mux_1007_32_1_1_U1->din30(v0_3_0);
    top_mux_1007_32_1_1_U1->din31(v0_3_1);
    top_mux_1007_32_1_1_U1->din32(v0_3_2);
    top_mux_1007_32_1_1_U1->din33(v0_3_3);
    top_mux_1007_32_1_1_U1->din34(v0_3_4);
    top_mux_1007_32_1_1_U1->din35(v0_3_5);
    top_mux_1007_32_1_1_U1->din36(v0_3_6);
    top_mux_1007_32_1_1_U1->din37(v0_3_7);
    top_mux_1007_32_1_1_U1->din38(v0_3_8);
    top_mux_1007_32_1_1_U1->din39(v0_3_9);
    top_mux_1007_32_1_1_U1->din40(v0_4_0);
    top_mux_1007_32_1_1_U1->din41(v0_4_1);
    top_mux_1007_32_1_1_U1->din42(v0_4_2);
    top_mux_1007_32_1_1_U1->din43(v0_4_3);
    top_mux_1007_32_1_1_U1->din44(v0_4_4);
    top_mux_1007_32_1_1_U1->din45(v0_4_5);
    top_mux_1007_32_1_1_U1->din46(v0_4_6);
    top_mux_1007_32_1_1_U1->din47(v0_4_7);
    top_mux_1007_32_1_1_U1->din48(v0_4_8);
    top_mux_1007_32_1_1_U1->din49(v0_4_9);
    top_mux_1007_32_1_1_U1->din50(v0_5_0);
    top_mux_1007_32_1_1_U1->din51(v0_5_1);
    top_mux_1007_32_1_1_U1->din52(v0_5_2);
    top_mux_1007_32_1_1_U1->din53(v0_5_3);
    top_mux_1007_32_1_1_U1->din54(v0_5_4);
    top_mux_1007_32_1_1_U1->din55(v0_5_5);
    top_mux_1007_32_1_1_U1->din56(v0_5_6);
    top_mux_1007_32_1_1_U1->din57(v0_5_7);
    top_mux_1007_32_1_1_U1->din58(v0_5_8);
    top_mux_1007_32_1_1_U1->din59(v0_5_9);
    top_mux_1007_32_1_1_U1->din60(v0_6_0);
    top_mux_1007_32_1_1_U1->din61(v0_6_1);
    top_mux_1007_32_1_1_U1->din62(v0_6_2);
    top_mux_1007_32_1_1_U1->din63(v0_6_3);
    top_mux_1007_32_1_1_U1->din64(v0_6_4);
    top_mux_1007_32_1_1_U1->din65(v0_6_5);
    top_mux_1007_32_1_1_U1->din66(v0_6_6);
    top_mux_1007_32_1_1_U1->din67(v0_6_7);
    top_mux_1007_32_1_1_U1->din68(v0_6_8);
    top_mux_1007_32_1_1_U1->din69(v0_6_9);
    top_mux_1007_32_1_1_U1->din70(v0_7_0);
    top_mux_1007_32_1_1_U1->din71(v0_7_1);
    top_mux_1007_32_1_1_U1->din72(v0_7_2);
    top_mux_1007_32_1_1_U1->din73(v0_7_3);
    top_mux_1007_32_1_1_U1->din74(v0_7_4);
    top_mux_1007_32_1_1_U1->din75(v0_7_5);
    top_mux_1007_32_1_1_U1->din76(v0_7_6);
    top_mux_1007_32_1_1_U1->din77(v0_7_7);
    top_mux_1007_32_1_1_U1->din78(v0_7_8);
    top_mux_1007_32_1_1_U1->din79(v0_7_9);
    top_mux_1007_32_1_1_U1->din80(v0_8_0);
    top_mux_1007_32_1_1_U1->din81(v0_8_1);
    top_mux_1007_32_1_1_U1->din82(v0_8_2);
    top_mux_1007_32_1_1_U1->din83(v0_8_3);
    top_mux_1007_32_1_1_U1->din84(v0_8_4);
    top_mux_1007_32_1_1_U1->din85(v0_8_5);
    top_mux_1007_32_1_1_U1->din86(v0_8_6);
    top_mux_1007_32_1_1_U1->din87(v0_8_7);
    top_mux_1007_32_1_1_U1->din88(v0_8_8);
    top_mux_1007_32_1_1_U1->din89(v0_8_9);
    top_mux_1007_32_1_1_U1->din90(v0_9_0);
    top_mux_1007_32_1_1_U1->din91(v0_9_1);
    top_mux_1007_32_1_1_U1->din92(v0_9_2);
    top_mux_1007_32_1_1_U1->din93(v0_9_3);
    top_mux_1007_32_1_1_U1->din94(v0_9_4);
    top_mux_1007_32_1_1_U1->din95(v0_9_5);
    top_mux_1007_32_1_1_U1->din96(v0_9_6);
    top_mux_1007_32_1_1_U1->din97(v0_9_7);
    top_mux_1007_32_1_1_U1->din98(v0_9_8);
    top_mux_1007_32_1_1_U1->din99(v0_9_9);
    top_mux_1007_32_1_1_U1->din100(add_ln28_reg_1200);
    top_mux_1007_32_1_1_U1->dout(v5_fu_958_p102);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln28_1_fu_944_p2);
    sensitive << ( zext_ln28_1_reg_1187 );
    sensitive << ( zext_ln28_2_fu_940_p1 );

    SC_METHOD(thread_add_ln28_fu_953_p2);
    sensitive << ( shl_ln_reg_1182 );
    sensitive << ( zext_ln28_3_fu_949_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_892_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_892_p2 );

    SC_METHOD(thread_icmp_ln23_fu_892_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( y_0_reg_857 );

    SC_METHOD(thread_icmp_ln26_fu_928_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( r_0_reg_881 );

    SC_METHOD(thread_r_fu_934_p2);
    sensitive << ( r_0_reg_881 );

    SC_METHOD(thread_shl_ln28_1_fu_916_p3);
    sensitive << ( y_0_reg_857 );

    SC_METHOD(thread_shl_ln_fu_908_p3);
    sensitive << ( y_0_reg_857 );

    SC_METHOD(thread_v10_fu_1163_p2);
    sensitive << ( v6_reg_868 );
    sensitive << ( v5_fu_958_p102 );

    SC_METHOD(thread_v1_address0);
    sensitive << ( zext_ln28_reg_1177 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_v1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_v1_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( v6_reg_868 );

    SC_METHOD(thread_v1_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln26_fu_928_p2 );

    SC_METHOD(thread_y_fu_898_p2);
    sensitive << ( y_0_reg_857 );

    SC_METHOD(thread_zext_ln28_1_fu_924_p1);
    sensitive << ( shl_ln28_1_fu_916_p3 );

    SC_METHOD(thread_zext_ln28_2_fu_940_p1);
    sensitive << ( r_0_reg_881 );

    SC_METHOD(thread_zext_ln28_3_fu_949_p1);
    sensitive << ( add_ln28_1_fu_944_p2 );

    SC_METHOD(thread_zext_ln28_fu_904_p1);
    sensitive << ( y_0_reg_857 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln23_fu_892_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln26_fu_928_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v0_0_0, "(port)v0_0_0");
    sc_trace(mVcdFile, v0_0_1, "(port)v0_0_1");
    sc_trace(mVcdFile, v0_0_2, "(port)v0_0_2");
    sc_trace(mVcdFile, v0_0_3, "(port)v0_0_3");
    sc_trace(mVcdFile, v0_0_4, "(port)v0_0_4");
    sc_trace(mVcdFile, v0_0_5, "(port)v0_0_5");
    sc_trace(mVcdFile, v0_0_6, "(port)v0_0_6");
    sc_trace(mVcdFile, v0_0_7, "(port)v0_0_7");
    sc_trace(mVcdFile, v0_0_8, "(port)v0_0_8");
    sc_trace(mVcdFile, v0_0_9, "(port)v0_0_9");
    sc_trace(mVcdFile, v0_1_0, "(port)v0_1_0");
    sc_trace(mVcdFile, v0_1_1, "(port)v0_1_1");
    sc_trace(mVcdFile, v0_1_2, "(port)v0_1_2");
    sc_trace(mVcdFile, v0_1_3, "(port)v0_1_3");
    sc_trace(mVcdFile, v0_1_4, "(port)v0_1_4");
    sc_trace(mVcdFile, v0_1_5, "(port)v0_1_5");
    sc_trace(mVcdFile, v0_1_6, "(port)v0_1_6");
    sc_trace(mVcdFile, v0_1_7, "(port)v0_1_7");
    sc_trace(mVcdFile, v0_1_8, "(port)v0_1_8");
    sc_trace(mVcdFile, v0_1_9, "(port)v0_1_9");
    sc_trace(mVcdFile, v0_2_0, "(port)v0_2_0");
    sc_trace(mVcdFile, v0_2_1, "(port)v0_2_1");
    sc_trace(mVcdFile, v0_2_2, "(port)v0_2_2");
    sc_trace(mVcdFile, v0_2_3, "(port)v0_2_3");
    sc_trace(mVcdFile, v0_2_4, "(port)v0_2_4");
    sc_trace(mVcdFile, v0_2_5, "(port)v0_2_5");
    sc_trace(mVcdFile, v0_2_6, "(port)v0_2_6");
    sc_trace(mVcdFile, v0_2_7, "(port)v0_2_7");
    sc_trace(mVcdFile, v0_2_8, "(port)v0_2_8");
    sc_trace(mVcdFile, v0_2_9, "(port)v0_2_9");
    sc_trace(mVcdFile, v0_3_0, "(port)v0_3_0");
    sc_trace(mVcdFile, v0_3_1, "(port)v0_3_1");
    sc_trace(mVcdFile, v0_3_2, "(port)v0_3_2");
    sc_trace(mVcdFile, v0_3_3, "(port)v0_3_3");
    sc_trace(mVcdFile, v0_3_4, "(port)v0_3_4");
    sc_trace(mVcdFile, v0_3_5, "(port)v0_3_5");
    sc_trace(mVcdFile, v0_3_6, "(port)v0_3_6");
    sc_trace(mVcdFile, v0_3_7, "(port)v0_3_7");
    sc_trace(mVcdFile, v0_3_8, "(port)v0_3_8");
    sc_trace(mVcdFile, v0_3_9, "(port)v0_3_9");
    sc_trace(mVcdFile, v0_4_0, "(port)v0_4_0");
    sc_trace(mVcdFile, v0_4_1, "(port)v0_4_1");
    sc_trace(mVcdFile, v0_4_2, "(port)v0_4_2");
    sc_trace(mVcdFile, v0_4_3, "(port)v0_4_3");
    sc_trace(mVcdFile, v0_4_4, "(port)v0_4_4");
    sc_trace(mVcdFile, v0_4_5, "(port)v0_4_5");
    sc_trace(mVcdFile, v0_4_6, "(port)v0_4_6");
    sc_trace(mVcdFile, v0_4_7, "(port)v0_4_7");
    sc_trace(mVcdFile, v0_4_8, "(port)v0_4_8");
    sc_trace(mVcdFile, v0_4_9, "(port)v0_4_9");
    sc_trace(mVcdFile, v0_5_0, "(port)v0_5_0");
    sc_trace(mVcdFile, v0_5_1, "(port)v0_5_1");
    sc_trace(mVcdFile, v0_5_2, "(port)v0_5_2");
    sc_trace(mVcdFile, v0_5_3, "(port)v0_5_3");
    sc_trace(mVcdFile, v0_5_4, "(port)v0_5_4");
    sc_trace(mVcdFile, v0_5_5, "(port)v0_5_5");
    sc_trace(mVcdFile, v0_5_6, "(port)v0_5_6");
    sc_trace(mVcdFile, v0_5_7, "(port)v0_5_7");
    sc_trace(mVcdFile, v0_5_8, "(port)v0_5_8");
    sc_trace(mVcdFile, v0_5_9, "(port)v0_5_9");
    sc_trace(mVcdFile, v0_6_0, "(port)v0_6_0");
    sc_trace(mVcdFile, v0_6_1, "(port)v0_6_1");
    sc_trace(mVcdFile, v0_6_2, "(port)v0_6_2");
    sc_trace(mVcdFile, v0_6_3, "(port)v0_6_3");
    sc_trace(mVcdFile, v0_6_4, "(port)v0_6_4");
    sc_trace(mVcdFile, v0_6_5, "(port)v0_6_5");
    sc_trace(mVcdFile, v0_6_6, "(port)v0_6_6");
    sc_trace(mVcdFile, v0_6_7, "(port)v0_6_7");
    sc_trace(mVcdFile, v0_6_8, "(port)v0_6_8");
    sc_trace(mVcdFile, v0_6_9, "(port)v0_6_9");
    sc_trace(mVcdFile, v0_7_0, "(port)v0_7_0");
    sc_trace(mVcdFile, v0_7_1, "(port)v0_7_1");
    sc_trace(mVcdFile, v0_7_2, "(port)v0_7_2");
    sc_trace(mVcdFile, v0_7_3, "(port)v0_7_3");
    sc_trace(mVcdFile, v0_7_4, "(port)v0_7_4");
    sc_trace(mVcdFile, v0_7_5, "(port)v0_7_5");
    sc_trace(mVcdFile, v0_7_6, "(port)v0_7_6");
    sc_trace(mVcdFile, v0_7_7, "(port)v0_7_7");
    sc_trace(mVcdFile, v0_7_8, "(port)v0_7_8");
    sc_trace(mVcdFile, v0_7_9, "(port)v0_7_9");
    sc_trace(mVcdFile, v0_8_0, "(port)v0_8_0");
    sc_trace(mVcdFile, v0_8_1, "(port)v0_8_1");
    sc_trace(mVcdFile, v0_8_2, "(port)v0_8_2");
    sc_trace(mVcdFile, v0_8_3, "(port)v0_8_3");
    sc_trace(mVcdFile, v0_8_4, "(port)v0_8_4");
    sc_trace(mVcdFile, v0_8_5, "(port)v0_8_5");
    sc_trace(mVcdFile, v0_8_6, "(port)v0_8_6");
    sc_trace(mVcdFile, v0_8_7, "(port)v0_8_7");
    sc_trace(mVcdFile, v0_8_8, "(port)v0_8_8");
    sc_trace(mVcdFile, v0_8_9, "(port)v0_8_9");
    sc_trace(mVcdFile, v0_9_0, "(port)v0_9_0");
    sc_trace(mVcdFile, v0_9_1, "(port)v0_9_1");
    sc_trace(mVcdFile, v0_9_2, "(port)v0_9_2");
    sc_trace(mVcdFile, v0_9_3, "(port)v0_9_3");
    sc_trace(mVcdFile, v0_9_4, "(port)v0_9_4");
    sc_trace(mVcdFile, v0_9_5, "(port)v0_9_5");
    sc_trace(mVcdFile, v0_9_6, "(port)v0_9_6");
    sc_trace(mVcdFile, v0_9_7, "(port)v0_9_7");
    sc_trace(mVcdFile, v0_9_8, "(port)v0_9_8");
    sc_trace(mVcdFile, v0_9_9, "(port)v0_9_9");
    sc_trace(mVcdFile, v1_address0, "(port)v1_address0");
    sc_trace(mVcdFile, v1_ce0, "(port)v1_ce0");
    sc_trace(mVcdFile, v1_we0, "(port)v1_we0");
    sc_trace(mVcdFile, v1_d0, "(port)v1_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, y_fu_898_p2, "y_fu_898_p2");
    sc_trace(mVcdFile, y_reg_1172, "y_reg_1172");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln28_fu_904_p1, "zext_ln28_fu_904_p1");
    sc_trace(mVcdFile, zext_ln28_reg_1177, "zext_ln28_reg_1177");
    sc_trace(mVcdFile, icmp_ln23_fu_892_p2, "icmp_ln23_fu_892_p2");
    sc_trace(mVcdFile, shl_ln_fu_908_p3, "shl_ln_fu_908_p3");
    sc_trace(mVcdFile, shl_ln_reg_1182, "shl_ln_reg_1182");
    sc_trace(mVcdFile, zext_ln28_1_fu_924_p1, "zext_ln28_1_fu_924_p1");
    sc_trace(mVcdFile, zext_ln28_1_reg_1187, "zext_ln28_1_reg_1187");
    sc_trace(mVcdFile, r_fu_934_p2, "r_fu_934_p2");
    sc_trace(mVcdFile, r_reg_1195, "r_reg_1195");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln28_fu_953_p2, "add_ln28_fu_953_p2");
    sc_trace(mVcdFile, add_ln28_reg_1200, "add_ln28_reg_1200");
    sc_trace(mVcdFile, icmp_ln26_fu_928_p2, "icmp_ln26_fu_928_p2");
    sc_trace(mVcdFile, v10_fu_1163_p2, "v10_fu_1163_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, y_0_reg_857, "y_0_reg_857");
    sc_trace(mVcdFile, v6_reg_868, "v6_reg_868");
    sc_trace(mVcdFile, r_0_reg_881, "r_0_reg_881");
    sc_trace(mVcdFile, shl_ln28_1_fu_916_p3, "shl_ln28_1_fu_916_p3");
    sc_trace(mVcdFile, zext_ln28_2_fu_940_p1, "zext_ln28_2_fu_940_p1");
    sc_trace(mVcdFile, add_ln28_1_fu_944_p2, "add_ln28_1_fu_944_p2");
    sc_trace(mVcdFile, zext_ln28_3_fu_949_p1, "zext_ln28_3_fu_949_p1");
    sc_trace(mVcdFile, v5_fu_958_p102, "v5_fu_958_p102");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top.hdltvin.dat");
    mHdltvoutHandle.open("top.hdltvout.dat");
}

top::~top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete top_mux_1007_32_1_1_U1;
}

void top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_0_reg_881 = r_reg_1195.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln23_fu_892_p2.read(), ap_const_lv1_0))) {
        r_0_reg_881 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v6_reg_868 = v10_fu_1163_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln23_fu_892_p2.read(), ap_const_lv1_0))) {
        v6_reg_868 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_928_p2.read(), ap_const_lv1_1))) {
        y_0_reg_857 = y_reg_1172.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        y_0_reg_857 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_fu_928_p2.read()))) {
        add_ln28_reg_1200 = add_ln28_fu_953_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_reg_1195 = r_fu_934_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_892_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_1182 = shl_ln_fu_908_p3.read();
        zext_ln28_1_reg_1187 = zext_ln28_1_fu_924_p1.read();
        zext_ln28_reg_1177 = zext_ln28_fu_904_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        y_reg_1172 = y_fu_898_p2.read();
    }
}

void top::thread_add_ln28_1_fu_944_p2() {
    add_ln28_1_fu_944_p2 = (!zext_ln28_1_reg_1187.read().is_01() || !zext_ln28_2_fu_940_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln28_1_reg_1187.read()) + sc_biguint<6>(zext_ln28_2_fu_940_p1.read()));
}

void top::thread_add_ln28_fu_953_p2() {
    add_ln28_fu_953_p2 = (!zext_ln28_3_fu_949_p1.read().is_01() || !shl_ln_reg_1182.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln28_3_fu_949_p1.read()) + sc_biguint<7>(shl_ln_reg_1182.read()));
}

void top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void top::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_892_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln23_fu_892_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top::thread_icmp_ln23_fu_892_p2() {
    icmp_ln23_fu_892_p2 = (!y_0_reg_857.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_857.read() == ap_const_lv4_A);
}

void top::thread_icmp_ln26_fu_928_p2() {
    icmp_ln26_fu_928_p2 = (!r_0_reg_881.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_881.read() == ap_const_lv4_A);
}

void top::thread_r_fu_934_p2() {
    r_fu_934_p2 = (!r_0_reg_881.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_0_reg_881.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_shl_ln28_1_fu_916_p3() {
    shl_ln28_1_fu_916_p3 = esl_concat<4,1>(y_0_reg_857.read(), ap_const_lv1_0);
}

void top::thread_shl_ln_fu_908_p3() {
    shl_ln_fu_908_p3 = esl_concat<4,3>(y_0_reg_857.read(), ap_const_lv3_0);
}

void top::thread_v10_fu_1163_p2() {
    v10_fu_1163_p2 = (!v5_fu_958_p102.read().is_01() || !v6_reg_868.read().is_01())? sc_lv<32>(): (sc_biguint<32>(v5_fu_958_p102.read()) + sc_biguint<32>(v6_reg_868.read()));
}

void top::thread_v1_address0() {
    v1_address0 =  (sc_lv<4>) (zext_ln28_reg_1177.read());
}

void top::thread_v1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v1_ce0 = ap_const_logic_1;
    } else {
        v1_ce0 = ap_const_logic_0;
    }
}

void top::thread_v1_d0() {
    v1_d0 = v6_reg_868.read();
}

void top::thread_v1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln26_fu_928_p2.read(), ap_const_lv1_1))) {
        v1_we0 = ap_const_logic_1;
    } else {
        v1_we0 = ap_const_logic_0;
    }
}

void top::thread_y_fu_898_p2() {
    y_fu_898_p2 = (!y_0_reg_857.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(y_0_reg_857.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void top::thread_zext_ln28_1_fu_924_p1() {
    zext_ln28_1_fu_924_p1 = esl_zext<6,5>(shl_ln28_1_fu_916_p3.read());
}

void top::thread_zext_ln28_2_fu_940_p1() {
    zext_ln28_2_fu_940_p1 = esl_zext<6,4>(r_0_reg_881.read());
}

void top::thread_zext_ln28_3_fu_949_p1() {
    zext_ln28_3_fu_949_p1 = esl_zext<7,6>(add_ln28_1_fu_944_p2.read());
}

void top::thread_zext_ln28_fu_904_p1() {
    zext_ln28_fu_904_p1 = esl_zext<64,4>(y_0_reg_857.read());
}

void top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln23_fu_892_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln26_fu_928_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_0\" :  \"" << v0_0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_1\" :  \"" << v0_0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_2\" :  \"" << v0_0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_3\" :  \"" << v0_0_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_4\" :  \"" << v0_0_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_5\" :  \"" << v0_0_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_6\" :  \"" << v0_0_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_7\" :  \"" << v0_0_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_8\" :  \"" << v0_0_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_0_9\" :  \"" << v0_0_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_0\" :  \"" << v0_1_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_1\" :  \"" << v0_1_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_2\" :  \"" << v0_1_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_3\" :  \"" << v0_1_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_4\" :  \"" << v0_1_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_5\" :  \"" << v0_1_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_6\" :  \"" << v0_1_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_7\" :  \"" << v0_1_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_8\" :  \"" << v0_1_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_1_9\" :  \"" << v0_1_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_0\" :  \"" << v0_2_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_1\" :  \"" << v0_2_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_2\" :  \"" << v0_2_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_3\" :  \"" << v0_2_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_4\" :  \"" << v0_2_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_5\" :  \"" << v0_2_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_6\" :  \"" << v0_2_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_7\" :  \"" << v0_2_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_8\" :  \"" << v0_2_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_2_9\" :  \"" << v0_2_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_0\" :  \"" << v0_3_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_1\" :  \"" << v0_3_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_2\" :  \"" << v0_3_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_3\" :  \"" << v0_3_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_4\" :  \"" << v0_3_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_5\" :  \"" << v0_3_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_6\" :  \"" << v0_3_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_7\" :  \"" << v0_3_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_8\" :  \"" << v0_3_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_3_9\" :  \"" << v0_3_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_0\" :  \"" << v0_4_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_1\" :  \"" << v0_4_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_2\" :  \"" << v0_4_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_3\" :  \"" << v0_4_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_4\" :  \"" << v0_4_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_5\" :  \"" << v0_4_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_6\" :  \"" << v0_4_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_7\" :  \"" << v0_4_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_8\" :  \"" << v0_4_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_4_9\" :  \"" << v0_4_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_0\" :  \"" << v0_5_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_1\" :  \"" << v0_5_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_2\" :  \"" << v0_5_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_3\" :  \"" << v0_5_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_4\" :  \"" << v0_5_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_5\" :  \"" << v0_5_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_6\" :  \"" << v0_5_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_7\" :  \"" << v0_5_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_8\" :  \"" << v0_5_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_5_9\" :  \"" << v0_5_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_0\" :  \"" << v0_6_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_1\" :  \"" << v0_6_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_2\" :  \"" << v0_6_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_3\" :  \"" << v0_6_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_4\" :  \"" << v0_6_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_5\" :  \"" << v0_6_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_6\" :  \"" << v0_6_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_7\" :  \"" << v0_6_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_8\" :  \"" << v0_6_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_6_9\" :  \"" << v0_6_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_0\" :  \"" << v0_7_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_1\" :  \"" << v0_7_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_2\" :  \"" << v0_7_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_3\" :  \"" << v0_7_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_4\" :  \"" << v0_7_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_5\" :  \"" << v0_7_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_6\" :  \"" << v0_7_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_7\" :  \"" << v0_7_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_8\" :  \"" << v0_7_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_7_9\" :  \"" << v0_7_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_0\" :  \"" << v0_8_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_1\" :  \"" << v0_8_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_2\" :  \"" << v0_8_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_3\" :  \"" << v0_8_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_4\" :  \"" << v0_8_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_5\" :  \"" << v0_8_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_6\" :  \"" << v0_8_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_7\" :  \"" << v0_8_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_8\" :  \"" << v0_8_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_8_9\" :  \"" << v0_8_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_0\" :  \"" << v0_9_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_1\" :  \"" << v0_9_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_2\" :  \"" << v0_9_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_3\" :  \"" << v0_9_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_4\" :  \"" << v0_9_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_5\" :  \"" << v0_9_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_6\" :  \"" << v0_9_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_7\" :  \"" << v0_9_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_8\" :  \"" << v0_9_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"v0_9_9\" :  \"" << v0_9_9.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_address0\" :  \"" << v1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_ce0\" :  \"" << v1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_we0\" :  \"" << v1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"v1_d0\" :  \"" << v1_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

