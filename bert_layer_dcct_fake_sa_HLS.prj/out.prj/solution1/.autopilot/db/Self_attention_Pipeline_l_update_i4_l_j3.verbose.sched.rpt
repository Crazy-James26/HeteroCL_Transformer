

================================================================
== Vitis HLS Report for 'Self_attention_Pipeline_l_update_i4_l_j3'
================================================================
* Date:           Tue Sep  5 09:21:24 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.222 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      169|      169|  1.690 us|  1.690 us|  169|  169|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_update_i4_l_j3  |      167|      167|        25|          1|          1|   144|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 25


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 1
  Pipeline-0 : II = 1, D = 25, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.64>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%j3 = alloca i32 1"   --->   Operation 28 'alloca' 'j3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%i4 = alloca i32 1"   --->   Operation 29 'alloca' 'i4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten10 = alloca i32 1"   --->   Operation 30 'alloca' 'indvar_flatten10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten10"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i4"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j3"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc49.i"   --->   Operation 34 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%indvar_flatten10_load = load i8 %indvar_flatten10" [kernel.cpp:139]   --->   Operation 35 'load' 'indvar_flatten10_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.55ns)   --->   "%icmp_ln139 = icmp_eq  i8 %indvar_flatten10_load, i8 144" [kernel.cpp:139]   --->   Operation 36 'icmp' 'icmp_ln139' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.91ns)   --->   "%add_ln139_1 = add i8 %indvar_flatten10_load, i8 1" [kernel.cpp:139]   --->   Operation 37 'add' 'add_ln139_1' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln139 = br i1 %icmp_ln139, void %for.inc52.i, void %_Z13Softmax_layerPA12_fPA12_8ap_fixedILi24ELi8EL9ap_q_mode5EL9ap_o_mode3ELi0EE.exit.exitStub" [kernel.cpp:139]   --->   Operation 38 'br' 'br_ln139' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%j3_load = load i4 %j3" [kernel.cpp:140]   --->   Operation 39 'load' 'j3_load' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%i4_load = load i4 %i4" [kernel.cpp:139]   --->   Operation 40 'load' 'i4_load' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.73ns)   --->   "%add_ln139 = add i4 %i4_load, i4 1" [kernel.cpp:139]   --->   Operation 41 'add' 'add_ln139' <Predicate = (!icmp_ln139)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (1.30ns)   --->   "%icmp_ln140 = icmp_eq  i4 %j3_load, i4 12" [kernel.cpp:140]   --->   Operation 42 'icmp' 'icmp_ln140' <Predicate = (!icmp_ln139)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (1.02ns)   --->   "%select_ln139 = select i1 %icmp_ln140, i4 0, i4 %j3_load" [kernel.cpp:139]   --->   Operation 43 'select' 'select_ln139' <Predicate = (!icmp_ln139)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (1.02ns)   --->   "%select_ln139_1 = select i1 %icmp_ln140, i4 %add_ln139, i4 %i4_load" [kernel.cpp:139]   --->   Operation 44 'select' 'select_ln139_1' <Predicate = (!icmp_ln139)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln139 = trunc i4 %select_ln139_1" [kernel.cpp:139]   --->   Operation 45 'trunc' 'trunc_ln139' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_cast21_mid2_v = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %select_ln139_1, i32 2, i32 3" [kernel.cpp:139]   --->   Operation 46 'partselect' 'p_cast21_mid2_v' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln140 = trunc i4 %select_ln139" [kernel.cpp:140]   --->   Operation 47 'trunc' 'trunc_ln140' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%lshr_ln1 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %select_ln139, i32 2, i32 3" [kernel.cpp:142]   --->   Operation 48 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.95ns)   --->   "%switch_ln146 = switch i2 %trunc_ln139, void %arrayidx482.0.0.02.i13.case.3, i2 0, void %arrayidx482.0.0.02.i13.case.0, i2 1, void %arrayidx482.0.0.02.i13.case.1, i2 2, void %arrayidx482.0.0.02.i13.case.2" [kernel.cpp:146]   --->   Operation 49 'switch' 'switch_ln146' <Predicate = (!icmp_ln139)> <Delay = 0.95>
ST_1 : Operation 50 [1/1] (1.73ns)   --->   "%add_ln140 = add i4 %select_ln139, i4 1" [kernel.cpp:140]   --->   Operation 50 'add' 'add_ln140' <Predicate = (!icmp_ln139)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (1.58ns)   --->   "%store_ln140 = store i8 %add_ln139_1, i8 %indvar_flatten10" [kernel.cpp:140]   --->   Operation 51 'store' 'store_ln140' <Predicate = (!icmp_ln139)> <Delay = 1.58>
ST_1 : Operation 52 [1/1] (1.58ns)   --->   "%store_ln140 = store i4 %select_ln139_1, i4 %i4" [kernel.cpp:140]   --->   Operation 52 'store' 'store_ln140' <Predicate = (!icmp_ln139)> <Delay = 1.58>
ST_1 : Operation 53 [1/1] (1.58ns)   --->   "%store_ln140 = store i4 %add_ln140, i4 %j3" [kernel.cpp:140]   --->   Operation 53 'store' 'store_ln140' <Predicate = (!icmp_ln139)> <Delay = 1.58>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln140 = br void %for.inc49.i" [kernel.cpp:140]   --->   Operation 54 'br' 'br_ln140' <Predicate = (!icmp_ln139)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.63>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln139 = zext i4 %select_ln139_1" [kernel.cpp:139]   --->   Operation 55 'zext' 'zext_ln139' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%inp_sumRow_addr = getelementptr i32 %inp_sumRow, i64 0, i64 %zext_ln139" [kernel.cpp:139]   --->   Operation 56 'getelementptr' 'inp_sumRow_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [2/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:139]   --->   Operation 57 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln142 = zext i2 %p_cast21_mid2_v" [kernel.cpp:142]   --->   Operation 58 'zext' 'zext_ln142' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %p_cast21_mid2_v, i2 0" [kernel.cpp:142]   --->   Operation 59 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln142_1 = zext i4 %tmp_s" [kernel.cpp:142]   --->   Operation 60 'zext' 'zext_ln142_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln142 = sub i4 %tmp_s, i4 %zext_ln142" [kernel.cpp:142]   --->   Operation 61 'sub' 'sub_ln142' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_19 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i2.i4, i2 %p_cast21_mid2_v, i4 0" [kernel.cpp:146]   --->   Operation 62 'bitconcatenate' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln146 = sub i6 %tmp_19, i6 %zext_ln142_1" [kernel.cpp:146]   --->   Operation 63 'sub' 'sub_ln146' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln146 = zext i4 %select_ln139" [kernel.cpp:146]   --->   Operation 64 'zext' 'zext_ln146' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%add_ln146 = add i6 %sub_ln146, i6 %zext_ln146" [kernel.cpp:146]   --->   Operation 65 'add' 'add_ln146' <Predicate = true> <Delay = 3.49> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln142_2 = zext i2 %lshr_ln1" [kernel.cpp:142]   --->   Operation 66 'zext' 'zext_ln142_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (3.31ns) (root node of TernaryAdder)   --->   "%add_ln142 = add i4 %sub_ln142, i4 %zext_ln142_2" [kernel.cpp:142]   --->   Operation 67 'add' 'add_ln142' <Predicate = true> <Delay = 3.31> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln142_3 = zext i4 %add_ln142" [kernel.cpp:142]   --->   Operation 68 'zext' 'zext_ln142_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%v100_addr = getelementptr i32 %v100, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 69 'getelementptr' 'v100_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%v100_1_addr = getelementptr i32 %v100_1, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 70 'getelementptr' 'v100_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%v100_2_addr = getelementptr i32 %v100_2, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 71 'getelementptr' 'v100_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%v100_3_addr = getelementptr i32 %v100_3, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 72 'getelementptr' 'v100_3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%v100_4_addr = getelementptr i32 %v100_4, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 73 'getelementptr' 'v100_4_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%v100_5_addr = getelementptr i32 %v100_5, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 74 'getelementptr' 'v100_5_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%v100_6_addr = getelementptr i32 %v100_6, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 75 'getelementptr' 'v100_6_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%v100_7_addr = getelementptr i32 %v100_7, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 76 'getelementptr' 'v100_7_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%v100_8_addr = getelementptr i32 %v100_8, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 77 'getelementptr' 'v100_8_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%v100_9_addr = getelementptr i32 %v100_9, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 78 'getelementptr' 'v100_9_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%v100_10_addr = getelementptr i32 %v100_10, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 79 'getelementptr' 'v100_10_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%v100_11_addr = getelementptr i32 %v100_11, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 80 'getelementptr' 'v100_11_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%v100_12_addr = getelementptr i32 %v100_12, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 81 'getelementptr' 'v100_12_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%v100_13_addr = getelementptr i32 %v100_13, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 82 'getelementptr' 'v100_13_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%v100_14_addr = getelementptr i32 %v100_14, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 83 'getelementptr' 'v100_14_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%v100_15_addr = getelementptr i32 %v100_15, i64 0, i64 %zext_ln142_3" [kernel.cpp:142]   --->   Operation 84 'getelementptr' 'v100_15_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 85 [2/2] (2.32ns)   --->   "%v100_load = load i4 %v100_addr" [kernel.cpp:142]   --->   Operation 85 'load' 'v100_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 86 [2/2] (2.32ns)   --->   "%v100_1_load = load i4 %v100_1_addr" [kernel.cpp:142]   --->   Operation 86 'load' 'v100_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 87 [2/2] (2.32ns)   --->   "%v100_2_load = load i4 %v100_2_addr" [kernel.cpp:142]   --->   Operation 87 'load' 'v100_2_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 88 [2/2] (2.32ns)   --->   "%v100_3_load = load i4 %v100_3_addr" [kernel.cpp:142]   --->   Operation 88 'load' 'v100_3_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 89 [2/2] (2.32ns)   --->   "%v100_4_load = load i4 %v100_4_addr" [kernel.cpp:142]   --->   Operation 89 'load' 'v100_4_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 90 [2/2] (2.32ns)   --->   "%v100_5_load = load i4 %v100_5_addr" [kernel.cpp:142]   --->   Operation 90 'load' 'v100_5_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 91 [2/2] (2.32ns)   --->   "%v100_6_load = load i4 %v100_6_addr" [kernel.cpp:142]   --->   Operation 91 'load' 'v100_6_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 92 [2/2] (2.32ns)   --->   "%v100_7_load = load i4 %v100_7_addr" [kernel.cpp:142]   --->   Operation 92 'load' 'v100_7_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 93 [2/2] (2.32ns)   --->   "%v100_8_load = load i4 %v100_8_addr" [kernel.cpp:142]   --->   Operation 93 'load' 'v100_8_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 94 [2/2] (2.32ns)   --->   "%v100_9_load = load i4 %v100_9_addr" [kernel.cpp:142]   --->   Operation 94 'load' 'v100_9_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 95 [2/2] (2.32ns)   --->   "%v100_10_load = load i4 %v100_10_addr" [kernel.cpp:142]   --->   Operation 95 'load' 'v100_10_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 96 [2/2] (2.32ns)   --->   "%v100_11_load = load i4 %v100_11_addr" [kernel.cpp:142]   --->   Operation 96 'load' 'v100_11_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 97 [2/2] (2.32ns)   --->   "%v100_12_load = load i4 %v100_12_addr" [kernel.cpp:142]   --->   Operation 97 'load' 'v100_12_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 98 [2/2] (2.32ns)   --->   "%v100_13_load = load i4 %v100_13_addr" [kernel.cpp:142]   --->   Operation 98 'load' 'v100_13_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 99 [2/2] (2.32ns)   --->   "%v100_14_load = load i4 %v100_14_addr" [kernel.cpp:142]   --->   Operation 99 'load' 'v100_14_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 100 [2/2] (2.32ns)   --->   "%v100_15_load = load i4 %v100_15_addr" [kernel.cpp:142]   --->   Operation 100 'load' 'v100_15_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 3 <SV = 2> <Delay = 5.97>
ST_3 : Operation 101 [1/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:139]   --->   Operation 101 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_3 : Operation 102 [1/2] (2.32ns)   --->   "%v100_load = load i4 %v100_addr" [kernel.cpp:142]   --->   Operation 102 'load' 'v100_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 103 [1/2] (2.32ns)   --->   "%v100_1_load = load i4 %v100_1_addr" [kernel.cpp:142]   --->   Operation 103 'load' 'v100_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 104 [1/2] (2.32ns)   --->   "%v100_2_load = load i4 %v100_2_addr" [kernel.cpp:142]   --->   Operation 104 'load' 'v100_2_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 105 [1/2] (2.32ns)   --->   "%v100_3_load = load i4 %v100_3_addr" [kernel.cpp:142]   --->   Operation 105 'load' 'v100_3_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 106 [1/1] (1.82ns)   --->   "%tmp_20 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %v100_load, i32 %v100_1_load, i32 %v100_2_load, i32 %v100_3_load, i2 %trunc_ln140" [kernel.cpp:142]   --->   Operation 106 'mux' 'tmp_20' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/2] (2.32ns)   --->   "%v100_4_load = load i4 %v100_4_addr" [kernel.cpp:142]   --->   Operation 107 'load' 'v100_4_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 108 [1/2] (2.32ns)   --->   "%v100_5_load = load i4 %v100_5_addr" [kernel.cpp:142]   --->   Operation 108 'load' 'v100_5_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 109 [1/2] (2.32ns)   --->   "%v100_6_load = load i4 %v100_6_addr" [kernel.cpp:142]   --->   Operation 109 'load' 'v100_6_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 110 [1/2] (2.32ns)   --->   "%v100_7_load = load i4 %v100_7_addr" [kernel.cpp:142]   --->   Operation 110 'load' 'v100_7_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 111 [1/1] (1.82ns)   --->   "%tmp_21 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %v100_4_load, i32 %v100_5_load, i32 %v100_6_load, i32 %v100_7_load, i2 %trunc_ln140" [kernel.cpp:142]   --->   Operation 111 'mux' 'tmp_21' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 112 [1/2] (2.32ns)   --->   "%v100_8_load = load i4 %v100_8_addr" [kernel.cpp:142]   --->   Operation 112 'load' 'v100_8_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 113 [1/2] (2.32ns)   --->   "%v100_9_load = load i4 %v100_9_addr" [kernel.cpp:142]   --->   Operation 113 'load' 'v100_9_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 114 [1/2] (2.32ns)   --->   "%v100_10_load = load i4 %v100_10_addr" [kernel.cpp:142]   --->   Operation 114 'load' 'v100_10_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 115 [1/2] (2.32ns)   --->   "%v100_11_load = load i4 %v100_11_addr" [kernel.cpp:142]   --->   Operation 115 'load' 'v100_11_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 116 [1/1] (1.82ns)   --->   "%tmp_22 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %v100_8_load, i32 %v100_9_load, i32 %v100_10_load, i32 %v100_11_load, i2 %trunc_ln140" [kernel.cpp:142]   --->   Operation 116 'mux' 'tmp_22' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/2] (2.32ns)   --->   "%v100_12_load = load i4 %v100_12_addr" [kernel.cpp:142]   --->   Operation 117 'load' 'v100_12_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 118 [1/2] (2.32ns)   --->   "%v100_13_load = load i4 %v100_13_addr" [kernel.cpp:142]   --->   Operation 118 'load' 'v100_13_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 119 [1/2] (2.32ns)   --->   "%v100_14_load = load i4 %v100_14_addr" [kernel.cpp:142]   --->   Operation 119 'load' 'v100_14_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 120 [1/2] (2.32ns)   --->   "%v100_15_load = load i4 %v100_15_addr" [kernel.cpp:142]   --->   Operation 120 'load' 'v100_15_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 121 [1/1] (1.82ns)   --->   "%tmp_23 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %v100_12_load, i32 %v100_13_load, i32 %v100_14_load, i32 %v100_15_load, i2 %trunc_ln140" [kernel.cpp:142]   --->   Operation 121 'mux' 'tmp_23' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 122 [1/1] (1.82ns)   --->   "%v62 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %tmp_20, i32 %tmp_21, i32 %tmp_22, i32 %tmp_23, i2 %trunc_ln139" [kernel.cpp:142]   --->   Operation 122 'mux' 'v62' <Predicate = true> <Delay = 1.82> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.07>
ST_4 : Operation 123 [16/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 123 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.07>
ST_5 : Operation 124 [15/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 124 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.07>
ST_6 : Operation 125 [14/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 125 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.07>
ST_7 : Operation 126 [13/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 126 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.07>
ST_8 : Operation 127 [12/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 127 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.07>
ST_9 : Operation 128 [11/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 128 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.07>
ST_10 : Operation 129 [10/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 129 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.07>
ST_11 : Operation 130 [9/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 130 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.07>
ST_12 : Operation 131 [8/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 131 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.07>
ST_13 : Operation 132 [7/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 132 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.07>
ST_14 : Operation 133 [6/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 133 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.07>
ST_15 : Operation 134 [5/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 134 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 6.07>
ST_16 : Operation 135 [4/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 135 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.07>
ST_17 : Operation 136 [3/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 136 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.07>
ST_18 : Operation 137 [2/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 137 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.07>
ST_19 : Operation 138 [1/16] (6.07ns)   --->   "%v64 = fdiv i32 %v62, i32 %inp_sumRow_load" [kernel.cpp:144]   --->   Operation 138 'fdiv' 'v64' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 4.43>
ST_20 : Operation 139 [2/2] (4.43ns)   --->   "%d = fpext i32 %v64"   --->   Operation 139 'fpext' 'd' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 20> <Delay = 7.22>
ST_21 : Operation 140 [1/2] (4.43ns)   --->   "%d = fpext i32 %v64"   --->   Operation 140 'fpext' 'd' <Predicate = true> <Delay = 4.43> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 1> <II = 1> <Delay = 4.43> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_21 : Operation 141 [1/1] (0.00ns)   --->   "%ireg = bitcast i64 %d"   --->   Operation 141 'bitcast' 'ireg' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 142 [1/1] (0.00ns)   --->   "%trunc_ln590 = trunc i64 %ireg"   --->   Operation 142 'trunc' 'trunc_ln590' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 143 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ireg, i32 63"   --->   Operation 143 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 144 [1/1] (0.00ns)   --->   "%exp_tmp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %ireg, i32 52, i32 62"   --->   Operation 144 'partselect' 'exp_tmp' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 145 [1/1] (0.00ns)   --->   "%trunc_ln600 = trunc i64 %ireg"   --->   Operation 145 'trunc' 'trunc_ln600' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 146 [1/1] (2.78ns)   --->   "%icmp_ln606 = icmp_eq  i63 %trunc_ln590, i63 0"   --->   Operation 146 'icmp' 'icmp_ln606' <Predicate = true> <Delay = 2.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.51>
ST_22 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln501 = zext i11 %exp_tmp"   --->   Operation 147 'zext' 'zext_ln501' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 148 [1/1] (0.00ns)   --->   "%p_Result_33 = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln600"   --->   Operation 148 'bitconcatenate' 'p_Result_33' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln604 = zext i53 %p_Result_33"   --->   Operation 149 'zext' 'zext_ln604' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 150 [1/1] (3.23ns)   --->   "%man_V_1 = sub i54 0, i54 %zext_ln604"   --->   Operation 150 'sub' 'man_V_1' <Predicate = (!icmp_ln606 & p_Result_s)> <Delay = 3.23> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.23> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 151 [1/1] (0.94ns)   --->   "%man_V_2 = select i1 %p_Result_s, i54 %man_V_1, i54 %zext_ln604"   --->   Operation 151 'select' 'man_V_2' <Predicate = (!icmp_ln606)> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 152 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, i12 %zext_ln501"   --->   Operation 152 'sub' 'F2' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 153 [1/1] (1.99ns)   --->   "%icmp_ln616 = icmp_sgt  i12 %F2, i12 16"   --->   Operation 153 'icmp' 'icmp_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 154 [1/1] (1.54ns)   --->   "%add_ln616 = add i12 %F2, i12 4080"   --->   Operation 154 'add' 'add_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 155 [1/1] (1.54ns)   --->   "%sub_ln616 = sub i12 16, i12 %F2"   --->   Operation 155 'sub' 'sub_ln616' <Predicate = (!icmp_ln606)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 156 [1/1] (0.69ns)   --->   "%sh_amt = select i1 %icmp_ln616, i12 %add_ln616, i12 %sub_ln616"   --->   Operation 156 'select' 'sh_amt' <Predicate = (!icmp_ln606)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 157 [1/1] (1.99ns)   --->   "%icmp_ln617 = icmp_eq  i12 %F2, i12 16"   --->   Operation 157 'icmp' 'icmp_ln617' <Predicate = (!icmp_ln606)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 158 [1/1] (0.00ns)   --->   "%trunc_ln618 = trunc i54 %man_V_2"   --->   Operation 158 'trunc' 'trunc_ln618' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_22 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node and_ln616)   --->   "%or_ln617 = or i1 %icmp_ln606, i1 %icmp_ln617"   --->   Operation 159 'or' 'or_ln617' <Predicate = (!icmp_ln606)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node and_ln616)   --->   "%xor_ln617 = xor i1 %or_ln617, i1 1"   --->   Operation 160 'xor' 'xor_ln617' <Predicate = (!icmp_ln606)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 161 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln616 = and i1 %icmp_ln616, i1 %xor_ln617"   --->   Operation 161 'and' 'and_ln616' <Predicate = (!icmp_ln606)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.19>
ST_23 : Operation 162 [1/1] (0.00ns)   --->   "%sext_ln616 = sext i12 %sh_amt"   --->   Operation 162 'sext' 'sext_ln616' <Predicate = (!icmp_ln606)> <Delay = 0.00>
ST_23 : Operation 163 [1/1] (1.99ns)   --->   "%icmp_ln620 = icmp_ult  i12 %sh_amt, i12 54"   --->   Operation 163 'icmp' 'icmp_ln620' <Predicate = (!icmp_ln606 & and_ln616)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 164 [1/1] (1.99ns)   --->   "%icmp_ln638 = icmp_ult  i12 %sh_amt, i12 24"   --->   Operation 164 'icmp' 'icmp_ln638' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%sext_ln616cast = trunc i32 %sext_ln616"   --->   Operation 165 'trunc' 'sext_ln616cast' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00>
ST_23 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%shl_ln639 = shl i24 %trunc_ln618, i24 %sext_ln616cast"   --->   Operation 166 'shl' 'shl_ln639' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.20> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%select_ln638 = select i1 %icmp_ln638, i24 %shl_ln639, i24 0"   --->   Operation 167 'select' 'select_ln638' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%xor_ln606 = xor i1 %icmp_ln606, i1 1"   --->   Operation 168 'xor' 'xor_ln606' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node select_ln617)   --->   "%and_ln617 = and i1 %icmp_ln617, i1 %xor_ln606"   --->   Operation 169 'and' 'and_ln617' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 170 [1/1] (4.20ns) (out node of the LUT)   --->   "%select_ln617 = select i1 %and_ln617, i24 %trunc_ln618, i24 %select_ln638"   --->   Operation 170 'select' 'select_ln617' <Predicate = (!icmp_ln606 & !and_ln616)> <Delay = 4.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 24 <SV = 23> <Delay = 5.30>
ST_24 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%zext_ln621 = zext i32 %sext_ln616"   --->   Operation 171 'zext' 'zext_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%ashr_ln621 = ashr i54 %man_V_2, i54 %zext_ln621"   --->   Operation 172 'ashr' 'ashr_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.61> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%trunc_ln621 = trunc i54 %ashr_ln621"   --->   Operation 173 'trunc' 'trunc_ln621' <Predicate = (!icmp_ln606 & icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%bitcast_ln768 = bitcast i32 %v64"   --->   Operation 174 'bitcast' 'bitcast_ln768' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %bitcast_ln768, i32 31"   --->   Operation 175 'bitselect' 'tmp' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00>
ST_24 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%select_ln623 = select i1 %tmp, i24 16777215, i24 0"   --->   Operation 176 'select' 'select_ln623' <Predicate = (!icmp_ln606 & !icmp_ln620 & and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node select_ln616)   --->   "%select_ln620 = select i1 %icmp_ln620, i24 %trunc_ln621, i24 %select_ln623"   --->   Operation 177 'select' 'select_ln620' <Predicate = (!icmp_ln606 & and_ln616)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 178 [1/1] (4.61ns) (out node of the LUT)   --->   "%select_ln616 = select i1 %and_ln616, i24 %select_ln620, i24 %select_ln617"   --->   Operation 178 'select' 'select_ln616' <Predicate = (!icmp_ln606)> <Delay = 4.61> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 179 [1/1] (0.69ns) (out node of the LUT)   --->   "%v65_V = select i1 %icmp_ln606, i24 0, i24 %select_ln616"   --->   Operation 179 'select' 'v65_V' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 197 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 197 'ret' 'ret_ln0' <Predicate = (icmp_ln139)> <Delay = 0.00>

State 25 <SV = 24> <Delay = 2.32>
ST_25 : Operation 180 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @l_update_i4_l_j3_str"   --->   Operation 180 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 181 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 144, i64 144, i64 144"   --->   Operation 181 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln146_1 = zext i6 %add_ln146" [kernel.cpp:146]   --->   Operation 182 'zext' 'zext_ln146_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 183 [1/1] (0.00ns)   --->   "%v101_V_addr = getelementptr i24 %v101_V, i64 0, i64 %zext_ln146_1" [kernel.cpp:146]   --->   Operation 183 'getelementptr' 'v101_V_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 184 [1/1] (0.00ns)   --->   "%v101_V_1_addr = getelementptr i24 %v101_V_1, i64 0, i64 %zext_ln146_1" [kernel.cpp:146]   --->   Operation 184 'getelementptr' 'v101_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 185 [1/1] (0.00ns)   --->   "%v101_V_2_addr = getelementptr i24 %v101_V_2, i64 0, i64 %zext_ln146_1" [kernel.cpp:146]   --->   Operation 185 'getelementptr' 'v101_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 186 [1/1] (0.00ns)   --->   "%v101_V_3_addr = getelementptr i24 %v101_V_3, i64 0, i64 %zext_ln146_1" [kernel.cpp:146]   --->   Operation 186 'getelementptr' 'v101_V_3_addr' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 187 [1/1] (0.00ns)   --->   "%specpipeline_ln141 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_31" [kernel.cpp:141]   --->   Operation 187 'specpipeline' 'specpipeline_ln141' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 188 [1/1] (0.00ns)   --->   "%specloopname_ln140 = specloopname void @_ssdm_op_SpecLoopName, void @empty_34" [kernel.cpp:140]   --->   Operation 188 'specloopname' 'specloopname_ln140' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 189 [1/1] (2.32ns)   --->   "%store_ln146 = store i24 %v65_V, i6 %v101_V_2_addr" [kernel.cpp:146]   --->   Operation 189 'store' 'store_ln146' <Predicate = (trunc_ln139 == 2)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 190 [1/1] (0.00ns)   --->   "%br_ln146 = br void %arrayidx482.0.0.02.i13.exit" [kernel.cpp:146]   --->   Operation 190 'br' 'br_ln146' <Predicate = (trunc_ln139 == 2)> <Delay = 0.00>
ST_25 : Operation 191 [1/1] (2.32ns)   --->   "%store_ln146 = store i24 %v65_V, i6 %v101_V_1_addr" [kernel.cpp:146]   --->   Operation 191 'store' 'store_ln146' <Predicate = (trunc_ln139 == 1)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 192 [1/1] (0.00ns)   --->   "%br_ln146 = br void %arrayidx482.0.0.02.i13.exit" [kernel.cpp:146]   --->   Operation 192 'br' 'br_ln146' <Predicate = (trunc_ln139 == 1)> <Delay = 0.00>
ST_25 : Operation 193 [1/1] (2.32ns)   --->   "%store_ln146 = store i24 %v65_V, i6 %v101_V_addr" [kernel.cpp:146]   --->   Operation 193 'store' 'store_ln146' <Predicate = (trunc_ln139 == 0)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 194 [1/1] (0.00ns)   --->   "%br_ln146 = br void %arrayidx482.0.0.02.i13.exit" [kernel.cpp:146]   --->   Operation 194 'br' 'br_ln146' <Predicate = (trunc_ln139 == 0)> <Delay = 0.00>
ST_25 : Operation 195 [1/1] (2.32ns)   --->   "%store_ln146 = store i24 %v65_V, i6 %v101_V_3_addr" [kernel.cpp:146]   --->   Operation 195 'store' 'store_ln146' <Predicate = (trunc_ln139 == 3)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 36> <RAM>
ST_25 : Operation 196 [1/1] (0.00ns)   --->   "%br_ln146 = br void %arrayidx482.0.0.02.i13.exit" [kernel.cpp:146]   --->   Operation 196 'br' 'br_ln146' <Predicate = (trunc_ln139 == 3)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.65ns
The critical path consists of the following:
	'alloca' operation ('j3') [22]  (0 ns)
	'load' operation ('j3_load', kernel.cpp:140) on local variable 'j3' [35]  (0 ns)
	'icmp' operation ('icmp_ln140', kernel.cpp:140) [40]  (1.3 ns)
	'select' operation ('select_ln139', kernel.cpp:139) [41]  (1.02 ns)
	'add' operation ('add_ln140', kernel.cpp:140) [160]  (1.74 ns)
	'store' operation ('store_ln140', kernel.cpp:140) of variable 'add_ln140', kernel.cpp:140 on local variable 'j3' [163]  (1.59 ns)

 <State 2>: 5.64ns
The critical path consists of the following:
	'sub' operation ('sub_ln142', kernel.cpp:142) [51]  (0 ns)
	'add' operation ('add_ln142', kernel.cpp:142) [66]  (3.32 ns)
	'getelementptr' operation ('v100_addr', kernel.cpp:142) [68]  (0 ns)
	'load' operation ('v100_load', kernel.cpp:142) on array 'v100' [84]  (2.32 ns)

 <State 3>: 5.98ns
The critical path consists of the following:
	'load' operation ('v100_load', kernel.cpp:142) on array 'v100' [84]  (2.32 ns)
	'mux' operation ('tmp_20', kernel.cpp:142) [88]  (1.83 ns)
	'mux' operation ('v62', kernel.cpp:142) [104]  (1.83 ns)

 <State 4>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 6>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 7>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 8>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 9>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 10>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 11>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 12>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 13>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 14>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 15>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 16>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 17>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 18>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 19>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v64', kernel.cpp:144) [105]  (6.08 ns)

 <State 20>: 4.44ns
The critical path consists of the following:
	'fpext' operation ('d') [106]  (4.44 ns)

 <State 21>: 7.22ns
The critical path consists of the following:
	'fpext' operation ('d') [106]  (4.44 ns)
	'icmp' operation ('icmp_ln606') [117]  (2.79 ns)

 <State 22>: 4.51ns
The critical path consists of the following:
	'sub' operation ('F2') [118]  (1.55 ns)
	'icmp' operation ('icmp_ln617') [124]  (1.99 ns)
	'or' operation ('or_ln617') [141]  (0 ns)
	'xor' operation ('xor_ln617') [142]  (0 ns)
	'and' operation ('and_ln616') [143]  (0.978 ns)

 <State 23>: 6.19ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln638') [134]  (1.99 ns)
	'select' operation ('select_ln638') [137]  (0 ns)
	'select' operation ('select_ln617') [140]  (4.2 ns)

 <State 24>: 5.31ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln621') [128]  (0 ns)
	'select' operation ('select_ln620') [133]  (0 ns)
	'select' operation ('select_ln616') [144]  (4.61 ns)
	'select' operation ('v65.V') [145]  (0.694 ns)

 <State 25>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('v101_V_2_addr', kernel.cpp:146) [59]  (0 ns)
	'store' operation ('store_ln146', kernel.cpp:146) of variable 'v65.V' on array 'v101_V_2' [148]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
