// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Context_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v66_0_V_address0,
        v66_0_V_ce0,
        v66_0_V_q0,
        v66_1_V_address0,
        v66_1_V_ce0,
        v66_1_V_q0,
        v66_2_V_address0,
        v66_2_V_ce0,
        v66_2_V_q0,
        v66_3_V_address0,
        v66_3_V_ce0,
        v66_3_V_q0,
        v67_0_V_address0,
        v67_0_V_ce0,
        v67_0_V_q0,
        v67_1_V_address0,
        v67_1_V_ce0,
        v67_1_V_q0,
        v67_2_V_address0,
        v67_2_V_ce0,
        v67_2_V_q0,
        v67_3_V_address0,
        v67_3_V_ce0,
        v67_3_V_q0,
        v68_0_0_V_address0,
        v68_0_0_V_ce0,
        v68_0_0_V_we0,
        v68_0_0_V_d0,
        v68_0_0_V_q0,
        v68_0_1_V_address0,
        v68_0_1_V_ce0,
        v68_0_1_V_we0,
        v68_0_1_V_d0,
        v68_0_1_V_q0,
        v68_0_2_V_address0,
        v68_0_2_V_ce0,
        v68_0_2_V_we0,
        v68_0_2_V_d0,
        v68_0_2_V_q0,
        v68_0_3_V_address0,
        v68_0_3_V_ce0,
        v68_0_3_V_we0,
        v68_0_3_V_d0,
        v68_0_3_V_q0,
        v68_1_0_V_address0,
        v68_1_0_V_ce0,
        v68_1_0_V_we0,
        v68_1_0_V_d0,
        v68_1_0_V_q0,
        v68_1_1_V_address0,
        v68_1_1_V_ce0,
        v68_1_1_V_we0,
        v68_1_1_V_d0,
        v68_1_1_V_q0,
        v68_1_2_V_address0,
        v68_1_2_V_ce0,
        v68_1_2_V_we0,
        v68_1_2_V_d0,
        v68_1_2_V_q0,
        v68_1_3_V_address0,
        v68_1_3_V_ce0,
        v68_1_3_V_we0,
        v68_1_3_V_d0,
        v68_1_3_V_q0,
        v68_2_0_V_address0,
        v68_2_0_V_ce0,
        v68_2_0_V_we0,
        v68_2_0_V_d0,
        v68_2_0_V_q0,
        v68_2_1_V_address0,
        v68_2_1_V_ce0,
        v68_2_1_V_we0,
        v68_2_1_V_d0,
        v68_2_1_V_q0,
        v68_2_2_V_address0,
        v68_2_2_V_ce0,
        v68_2_2_V_we0,
        v68_2_2_V_d0,
        v68_2_2_V_q0,
        v68_2_3_V_address0,
        v68_2_3_V_ce0,
        v68_2_3_V_we0,
        v68_2_3_V_d0,
        v68_2_3_V_q0,
        v68_3_0_V_address0,
        v68_3_0_V_ce0,
        v68_3_0_V_we0,
        v68_3_0_V_d0,
        v68_3_0_V_q0,
        v68_3_1_V_address0,
        v68_3_1_V_ce0,
        v68_3_1_V_we0,
        v68_3_1_V_d0,
        v68_3_1_V_q0,
        v68_3_2_V_address0,
        v68_3_2_V_ce0,
        v68_3_2_V_we0,
        v68_3_2_V_d0,
        v68_3_2_V_q0,
        v68_3_3_V_address0,
        v68_3_3_V_ce0,
        v68_3_3_V_we0,
        v68_3_3_V_d0,
        v68_3_3_V_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_pp0_stage0 = 6'd8;
parameter    ap_ST_fsm_pp0_stage1 = 6'd16;
parameter    ap_ST_fsm_state10 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] v66_0_V_address0;
output   v66_0_V_ce0;
input  [23:0] v66_0_V_q0;
output  [5:0] v66_1_V_address0;
output   v66_1_V_ce0;
input  [23:0] v66_1_V_q0;
output  [5:0] v66_2_V_address0;
output   v66_2_V_ce0;
input  [23:0] v66_2_V_q0;
output  [5:0] v66_3_V_address0;
output   v66_3_V_ce0;
input  [23:0] v66_3_V_q0;
output  [7:0] v67_0_V_address0;
output   v67_0_V_ce0;
input  [23:0] v67_0_V_q0;
output  [7:0] v67_1_V_address0;
output   v67_1_V_ce0;
input  [23:0] v67_1_V_q0;
output  [7:0] v67_2_V_address0;
output   v67_2_V_ce0;
input  [23:0] v67_2_V_q0;
output  [7:0] v67_3_V_address0;
output   v67_3_V_ce0;
input  [23:0] v67_3_V_q0;
output  [5:0] v68_0_0_V_address0;
output   v68_0_0_V_ce0;
output   v68_0_0_V_we0;
output  [23:0] v68_0_0_V_d0;
input  [23:0] v68_0_0_V_q0;
output  [5:0] v68_0_1_V_address0;
output   v68_0_1_V_ce0;
output   v68_0_1_V_we0;
output  [23:0] v68_0_1_V_d0;
input  [23:0] v68_0_1_V_q0;
output  [5:0] v68_0_2_V_address0;
output   v68_0_2_V_ce0;
output   v68_0_2_V_we0;
output  [23:0] v68_0_2_V_d0;
input  [23:0] v68_0_2_V_q0;
output  [5:0] v68_0_3_V_address0;
output   v68_0_3_V_ce0;
output   v68_0_3_V_we0;
output  [23:0] v68_0_3_V_d0;
input  [23:0] v68_0_3_V_q0;
output  [5:0] v68_1_0_V_address0;
output   v68_1_0_V_ce0;
output   v68_1_0_V_we0;
output  [23:0] v68_1_0_V_d0;
input  [23:0] v68_1_0_V_q0;
output  [5:0] v68_1_1_V_address0;
output   v68_1_1_V_ce0;
output   v68_1_1_V_we0;
output  [23:0] v68_1_1_V_d0;
input  [23:0] v68_1_1_V_q0;
output  [5:0] v68_1_2_V_address0;
output   v68_1_2_V_ce0;
output   v68_1_2_V_we0;
output  [23:0] v68_1_2_V_d0;
input  [23:0] v68_1_2_V_q0;
output  [5:0] v68_1_3_V_address0;
output   v68_1_3_V_ce0;
output   v68_1_3_V_we0;
output  [23:0] v68_1_3_V_d0;
input  [23:0] v68_1_3_V_q0;
output  [5:0] v68_2_0_V_address0;
output   v68_2_0_V_ce0;
output   v68_2_0_V_we0;
output  [23:0] v68_2_0_V_d0;
input  [23:0] v68_2_0_V_q0;
output  [5:0] v68_2_1_V_address0;
output   v68_2_1_V_ce0;
output   v68_2_1_V_we0;
output  [23:0] v68_2_1_V_d0;
input  [23:0] v68_2_1_V_q0;
output  [5:0] v68_2_2_V_address0;
output   v68_2_2_V_ce0;
output   v68_2_2_V_we0;
output  [23:0] v68_2_2_V_d0;
input  [23:0] v68_2_2_V_q0;
output  [5:0] v68_2_3_V_address0;
output   v68_2_3_V_ce0;
output   v68_2_3_V_we0;
output  [23:0] v68_2_3_V_d0;
input  [23:0] v68_2_3_V_q0;
output  [5:0] v68_3_0_V_address0;
output   v68_3_0_V_ce0;
output   v68_3_0_V_we0;
output  [23:0] v68_3_0_V_d0;
input  [23:0] v68_3_0_V_q0;
output  [5:0] v68_3_1_V_address0;
output   v68_3_1_V_ce0;
output   v68_3_1_V_we0;
output  [23:0] v68_3_1_V_d0;
input  [23:0] v68_3_1_V_q0;
output  [5:0] v68_3_2_V_address0;
output   v68_3_2_V_ce0;
output   v68_3_2_V_we0;
output  [23:0] v68_3_2_V_d0;
input  [23:0] v68_3_2_V_q0;
output  [5:0] v68_3_3_V_address0;
output   v68_3_3_V_ce0;
output   v68_3_3_V_we0;
output  [23:0] v68_3_3_V_d0;
input  [23:0] v68_3_3_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v66_0_V_ce0;
reg v66_1_V_ce0;
reg v66_2_V_ce0;
reg v66_3_V_ce0;
reg v67_0_V_ce0;
reg v67_1_V_ce0;
reg v67_2_V_ce0;
reg v67_3_V_ce0;
reg[5:0] v68_0_0_V_address0;
reg v68_0_0_V_ce0;
reg v68_0_0_V_we0;
reg[23:0] v68_0_0_V_d0;
reg[5:0] v68_0_1_V_address0;
reg v68_0_1_V_ce0;
reg v68_0_1_V_we0;
reg[23:0] v68_0_1_V_d0;
reg[5:0] v68_0_2_V_address0;
reg v68_0_2_V_ce0;
reg v68_0_2_V_we0;
reg[23:0] v68_0_2_V_d0;
reg[5:0] v68_0_3_V_address0;
reg v68_0_3_V_ce0;
reg v68_0_3_V_we0;
reg[23:0] v68_0_3_V_d0;
reg[5:0] v68_1_0_V_address0;
reg v68_1_0_V_ce0;
reg v68_1_0_V_we0;
reg[23:0] v68_1_0_V_d0;
reg[5:0] v68_1_1_V_address0;
reg v68_1_1_V_ce0;
reg v68_1_1_V_we0;
reg[23:0] v68_1_1_V_d0;
reg[5:0] v68_1_2_V_address0;
reg v68_1_2_V_ce0;
reg v68_1_2_V_we0;
reg[23:0] v68_1_2_V_d0;
reg[5:0] v68_1_3_V_address0;
reg v68_1_3_V_ce0;
reg v68_1_3_V_we0;
reg[23:0] v68_1_3_V_d0;
reg[5:0] v68_2_0_V_address0;
reg v68_2_0_V_ce0;
reg v68_2_0_V_we0;
reg[23:0] v68_2_0_V_d0;
reg[5:0] v68_2_1_V_address0;
reg v68_2_1_V_ce0;
reg v68_2_1_V_we0;
reg[23:0] v68_2_1_V_d0;
reg[5:0] v68_2_2_V_address0;
reg v68_2_2_V_ce0;
reg v68_2_2_V_we0;
reg[23:0] v68_2_2_V_d0;
reg[5:0] v68_2_3_V_address0;
reg v68_2_3_V_ce0;
reg v68_2_3_V_we0;
reg[23:0] v68_2_3_V_d0;
reg[5:0] v68_3_0_V_address0;
reg v68_3_0_V_ce0;
reg v68_3_0_V_we0;
reg[23:0] v68_3_0_V_d0;
reg[5:0] v68_3_1_V_address0;
reg v68_3_1_V_ce0;
reg v68_3_1_V_we0;
reg[23:0] v68_3_1_V_d0;
reg[5:0] v68_3_2_V_address0;
reg v68_3_2_V_ce0;
reg v68_3_2_V_we0;
reg[23:0] v68_3_2_V_d0;
reg[5:0] v68_3_3_V_address0;
reg v68_3_3_V_ce0;
reg v68_3_3_V_we0;
reg[23:0] v68_3_3_V_d0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten45_reg_612;
reg   [1:0] i_outer1_0_reg_623;
reg   [8:0] indvar_flatten_reg_634;
reg   [4:0] j_outer2_0_reg_645;
reg   [3:0] k2_0_reg_656;
wire   [0:0] icmp_ln164_fu_667_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] v70_fu_673_p2;
reg   [3:0] v70_reg_1401;
wire   [1:0] trunc_ln203_fu_679_p1;
reg   [1:0] trunc_ln203_reg_1406;
wire   [6:0] zext_ln165_fu_701_p1;
reg   [6:0] zext_ln165_reg_1410;
wire   [6:0] v71_fu_711_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln169_fu_760_p2;
reg   [0:0] icmp_ln169_reg_1426;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln169_reg_1426_pp0_iter1_reg;
reg   [0:0] icmp_ln169_reg_1426_pp0_iter2_reg;
wire   [9:0] add_ln169_fu_766_p2;
reg   [9:0] add_ln169_reg_1430;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] select_ln177_1_fu_792_p3;
reg   [1:0] select_ln177_1_reg_1435;
wire   [3:0] select_ln178_fu_830_p3;
reg   [3:0] select_ln178_reg_1442;
wire   [4:0] select_ln178_1_fu_838_p3;
reg   [4:0] select_ln178_1_reg_1449;
wire   [8:0] select_ln170_fu_852_p3;
reg   [8:0] select_ln170_reg_1456;
wire   [6:0] zext_ln177_fu_867_p1;
reg   [6:0] zext_ln177_reg_1461;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
wire   [3:0] k2_fu_933_p2;
reg   [3:0] k2_reg_1506;
wire   [6:0] add_ln182_fu_941_p2;
reg   [6:0] add_ln182_reg_1511;
reg   [23:0] v66_0_V_load_reg_1516;
reg   [23:0] v67_0_V_load_reg_1521;
reg   [23:0] v67_1_V_load_reg_1526;
reg   [23:0] v67_2_V_load_reg_1531;
reg   [23:0] v67_3_V_load_reg_1536;
reg   [23:0] v66_1_V_load_reg_1541;
reg   [23:0] v66_2_V_load_reg_1546;
reg   [23:0] v66_3_V_load_reg_1551;
reg   [5:0] v68_0_0_V_addr_1_reg_1556;
reg   [5:0] v68_0_1_V_addr_1_reg_1561;
reg   [5:0] v68_0_2_V_addr_1_reg_1566;
reg   [5:0] v68_0_3_V_addr_1_reg_1571;
reg   [5:0] v68_1_0_V_addr_1_reg_1576;
reg   [5:0] v68_1_1_V_addr_1_reg_1581;
reg   [5:0] v68_1_2_V_addr_1_reg_1586;
reg   [5:0] v68_1_3_V_addr_1_reg_1591;
reg   [5:0] v68_2_0_V_addr_1_reg_1596;
reg   [5:0] v68_2_1_V_addr_1_reg_1601;
reg   [5:0] v68_2_2_V_addr_1_reg_1606;
reg   [5:0] v68_2_3_V_addr_1_reg_1611;
reg   [5:0] v68_3_0_V_addr_1_reg_1616;
reg   [5:0] v68_3_1_V_addr_1_reg_1621;
reg   [5:0] v68_3_2_V_addr_1_reg_1626;
reg   [5:0] v68_3_3_V_addr_1_reg_1631;
wire  signed [71:0] sext_ln1118_93_fu_983_p1;
reg  signed [71:0] sext_ln1118_93_reg_1636;
reg   [23:0] trunc_ln_reg_1642;
wire  signed [71:0] sext_ln1118_94_fu_1010_p1;
reg  signed [71:0] sext_ln1118_94_reg_1647;
reg   [23:0] trunc_ln708_s_reg_1653;
wire  signed [71:0] sext_ln1118_95_fu_1037_p1;
reg  signed [71:0] sext_ln1118_95_reg_1658;
reg   [23:0] trunc_ln708_569_reg_1664;
wire  signed [71:0] sext_ln1118_96_fu_1064_p1;
reg  signed [71:0] sext_ln1118_96_reg_1669;
reg   [23:0] trunc_ln708_570_reg_1675;
reg   [23:0] trunc_ln708_571_reg_1680;
reg   [23:0] trunc_ln708_572_reg_1685;
reg   [23:0] trunc_ln708_573_reg_1690;
reg   [23:0] trunc_ln708_574_reg_1695;
reg   [23:0] trunc_ln708_575_reg_1700;
reg   [23:0] trunc_ln708_576_reg_1705;
reg   [23:0] trunc_ln708_577_reg_1710;
reg   [23:0] trunc_ln708_578_reg_1715;
reg   [23:0] trunc_ln708_579_reg_1720;
reg   [23:0] trunc_ln708_580_reg_1725;
reg   [23:0] trunc_ln708_581_reg_1730;
reg   [23:0] trunc_ln708_582_reg_1735;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [3:0] v70_0_reg_590;
wire   [0:0] icmp_ln165_fu_705_p2;
reg   [6:0] v71_0_reg_601;
reg   [9:0] ap_phi_mux_indvar_flatten45_phi_fu_616_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_i_outer1_0_phi_fu_627_p4;
reg   [8:0] ap_phi_mux_indvar_flatten_phi_fu_638_p4;
reg   [4:0] ap_phi_mux_j_outer2_0_phi_fu_649_p4;
reg   [3:0] ap_phi_mux_k2_0_phi_fu_660_p4;
wire   [63:0] zext_ln203_9_fu_740_p1;
wire  signed [63:0] sext_ln177_fu_900_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln178_3_fu_925_p1;
wire   [63:0] zext_ln182_fu_946_p1;
wire   [1:0] trunc_ln203_1_fu_717_p1;
wire   [23:0] add_ln703_582_fu_1361_p2;
wire   [23:0] add_ln703_581_fu_1355_p2;
wire   [23:0] add_ln703_580_fu_1349_p2;
wire   [23:0] add_ln703_583_fu_1367_p2;
wire   [23:0] add_ln703_578_fu_1195_p2;
wire   [23:0] add_ln703_577_fu_1189_p2;
wire   [23:0] add_ln703_576_fu_1183_p2;
wire   [23:0] add_ln703_579_fu_1201_p2;
wire   [23:0] add_ln703_574_fu_1171_p2;
wire   [23:0] add_ln703_573_fu_1165_p2;
wire   [23:0] add_ln703_fu_1159_p2;
wire   [23:0] add_ln703_575_fu_1177_p2;
wire   [23:0] add_ln703_586_fu_1385_p2;
wire   [23:0] add_ln703_585_fu_1379_p2;
wire   [23:0] add_ln703_584_fu_1373_p2;
wire   [23:0] add_ln703_587_fu_1391_p2;
wire   [1:0] lshr_ln_fu_683_p4;
wire   [5:0] tmp_fu_693_p3;
wire   [4:0] tmp_59_fu_721_p4;
wire   [6:0] zext_ln203_fu_731_p1;
wire   [6:0] add_ln203_fu_735_p2;
wire   [0:0] icmp_ln170_fu_778_p2;
wire   [1:0] i_outer1_fu_772_p2;
wire   [0:0] icmp_ln171_fu_806_p2;
wire   [0:0] xor_ln177_fu_800_p2;
wire   [4:0] select_ln177_fu_784_p3;
wire   [0:0] and_ln177_fu_812_p2;
wire   [0:0] or_ln178_fu_824_p2;
wire   [4:0] j_outer2_fu_818_p2;
wire   [8:0] add_ln170_fu_846_p2;
wire   [5:0] tmp_23_fu_860_p3;
wire   [3:0] tmp_24_fu_871_p3;
wire   [6:0] zext_ln177_1_fu_878_p1;
wire   [6:0] sub_ln177_fu_882_p2;
wire   [6:0] zext_ln177_2_fu_891_p1;
wire   [6:0] add_ln177_fu_894_p2;
wire   [7:0] tmp_25_fu_908_p3;
wire   [8:0] zext_ln178_2_fu_915_p1;
wire   [8:0] zext_ln178_fu_888_p1;
wire   [8:0] add_ln178_fu_919_p2;
wire   [6:0] zext_ln178_1_fu_938_p1;
wire   [39:0] shl_ln_fu_965_p3;
wire   [39:0] shl_ln728_s_fu_972_p3;
wire  signed [39:0] mul_ln1118_fu_987_p0;
wire  signed [39:0] mul_ln1118_fu_987_p1;
wire  signed [71:0] sext_ln1118_fu_979_p1;
wire   [71:0] mul_ln1118_fu_987_p2;
wire   [39:0] shl_ln728_89_fu_1003_p3;
wire  signed [39:0] mul_ln1118_573_fu_1014_p0;
wire  signed [39:0] mul_ln1118_573_fu_1014_p1;
wire   [71:0] mul_ln1118_573_fu_1014_p2;
wire   [39:0] shl_ln728_90_fu_1030_p3;
wire  signed [39:0] mul_ln1118_574_fu_1041_p0;
wire  signed [39:0] mul_ln1118_574_fu_1041_p1;
wire   [71:0] mul_ln1118_574_fu_1041_p2;
wire   [39:0] shl_ln728_91_fu_1057_p3;
wire  signed [39:0] mul_ln1118_575_fu_1068_p0;
wire  signed [39:0] mul_ln1118_575_fu_1068_p1;
wire   [71:0] mul_ln1118_575_fu_1068_p2;
wire   [39:0] shl_ln728_92_fu_1084_p3;
wire  signed [39:0] mul_ln1118_576_fu_1095_p0;
wire  signed [39:0] mul_ln1118_576_fu_1095_p1;
wire  signed [71:0] sext_ln1118_97_fu_1091_p1;
wire   [71:0] mul_ln1118_576_fu_1095_p2;
wire  signed [39:0] mul_ln1118_577_fu_1111_p0;
wire  signed [39:0] mul_ln1118_577_fu_1111_p1;
wire   [71:0] mul_ln1118_577_fu_1111_p2;
wire  signed [39:0] mul_ln1118_578_fu_1127_p0;
wire  signed [39:0] mul_ln1118_578_fu_1127_p1;
wire   [71:0] mul_ln1118_578_fu_1127_p2;
wire  signed [39:0] mul_ln1118_579_fu_1143_p0;
wire  signed [39:0] mul_ln1118_579_fu_1143_p1;
wire   [71:0] mul_ln1118_579_fu_1143_p2;
wire   [39:0] shl_ln728_93_fu_1207_p3;
wire  signed [39:0] mul_ln1118_580_fu_1218_p0;
wire  signed [39:0] mul_ln1118_580_fu_1218_p1;
wire  signed [71:0] sext_ln1118_98_fu_1214_p1;
wire   [71:0] mul_ln1118_580_fu_1218_p2;
wire  signed [39:0] mul_ln1118_581_fu_1233_p0;
wire  signed [39:0] mul_ln1118_581_fu_1233_p1;
wire   [71:0] mul_ln1118_581_fu_1233_p2;
wire  signed [39:0] mul_ln1118_582_fu_1248_p0;
wire  signed [39:0] mul_ln1118_582_fu_1248_p1;
wire   [71:0] mul_ln1118_582_fu_1248_p2;
wire  signed [39:0] mul_ln1118_583_fu_1263_p0;
wire  signed [39:0] mul_ln1118_583_fu_1263_p1;
wire   [71:0] mul_ln1118_583_fu_1263_p2;
wire   [39:0] shl_ln728_94_fu_1278_p3;
wire  signed [39:0] mul_ln1118_584_fu_1289_p0;
wire  signed [39:0] mul_ln1118_584_fu_1289_p1;
wire  signed [71:0] sext_ln1118_99_fu_1285_p1;
wire   [71:0] mul_ln1118_584_fu_1289_p2;
wire  signed [39:0] mul_ln1118_585_fu_1304_p0;
wire  signed [39:0] mul_ln1118_585_fu_1304_p1;
wire   [71:0] mul_ln1118_585_fu_1304_p2;
wire  signed [39:0] mul_ln1118_586_fu_1319_p0;
wire  signed [39:0] mul_ln1118_586_fu_1319_p1;
wire   [71:0] mul_ln1118_586_fu_1319_p2;
wire  signed [39:0] mul_ln1118_587_fu_1334_p0;
wire  signed [39:0] mul_ln1118_587_fu_1334_p1;
wire   [71:0] mul_ln1118_587_fu_1334_p2;
wire    ap_CS_fsm_state10;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_outer1_0_reg_623 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_outer1_0_reg_623 <= select_ln177_1_reg_1435;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten45_reg_612 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten45_reg_612 <= add_ln169_reg_1430;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_634 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_634 <= select_ln170_reg_1456;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_outer2_0_reg_645 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_outer2_0_reg_645 <= select_ln178_1_reg_1449;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        k2_0_reg_656 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k2_0_reg_656 <= k2_reg_1506;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        v70_0_reg_590 <= v70_reg_1401;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v70_0_reg_590 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v71_0_reg_601 <= 7'd0;
    end else if (((icmp_ln165_fu_705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v71_0_reg_601 <= v71_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln169_reg_1430 <= add_ln169_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln182_reg_1511 <= add_ln182_fu_941_p2;
        v66_0_V_load_reg_1516 <= v66_0_V_q0;
        v66_1_V_load_reg_1541 <= v66_1_V_q0;
        v66_2_V_load_reg_1546 <= v66_2_V_q0;
        v66_3_V_load_reg_1551 <= v66_3_V_q0;
        v67_0_V_load_reg_1521 <= v67_0_V_q0;
        v67_1_V_load_reg_1526 <= v67_1_V_q0;
        v67_2_V_load_reg_1531 <= v67_2_V_q0;
        v67_3_V_load_reg_1536 <= v67_3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln169_reg_1426 <= icmp_ln169_fu_760_p2;
        icmp_ln169_reg_1426_pp0_iter1_reg <= icmp_ln169_reg_1426;
        icmp_ln169_reg_1426_pp0_iter2_reg <= icmp_ln169_reg_1426_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        k2_reg_1506 <= k2_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_fu_760_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln170_reg_1456 <= select_ln170_fu_852_p3;
        select_ln177_1_reg_1435 <= select_ln177_1_fu_792_p3;
        select_ln178_1_reg_1449 <= select_ln178_1_fu_838_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln178_reg_1442 <= select_ln178_fu_830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sext_ln1118_93_reg_1636[71 : 16] <= sext_ln1118_93_fu_983_p1[71 : 16];
        sext_ln1118_94_reg_1647[71 : 16] <= sext_ln1118_94_fu_1010_p1[71 : 16];
        sext_ln1118_95_reg_1658[71 : 16] <= sext_ln1118_95_fu_1037_p1[71 : 16];
        sext_ln1118_96_reg_1669[71 : 16] <= sext_ln1118_96_fu_1064_p1[71 : 16];
        trunc_ln708_569_reg_1664 <= {{mul_ln1118_574_fu_1041_p2[71:48]}};
        trunc_ln708_570_reg_1675 <= {{mul_ln1118_575_fu_1068_p2[71:48]}};
        trunc_ln708_571_reg_1680 <= {{mul_ln1118_576_fu_1095_p2[71:48]}};
        trunc_ln708_572_reg_1685 <= {{mul_ln1118_577_fu_1111_p2[71:48]}};
        trunc_ln708_573_reg_1690 <= {{mul_ln1118_578_fu_1127_p2[71:48]}};
        trunc_ln708_574_reg_1695 <= {{mul_ln1118_579_fu_1143_p2[71:48]}};
        trunc_ln708_s_reg_1653 <= {{mul_ln1118_573_fu_1014_p2[71:48]}};
        trunc_ln_reg_1642 <= {{mul_ln1118_fu_987_p2[71:48]}};
        v68_0_0_V_addr_1_reg_1556 <= zext_ln182_fu_946_p1;
        v68_0_1_V_addr_1_reg_1561 <= zext_ln182_fu_946_p1;
        v68_0_2_V_addr_1_reg_1566 <= zext_ln182_fu_946_p1;
        v68_0_3_V_addr_1_reg_1571 <= zext_ln182_fu_946_p1;
        v68_1_0_V_addr_1_reg_1576 <= zext_ln182_fu_946_p1;
        v68_1_1_V_addr_1_reg_1581 <= zext_ln182_fu_946_p1;
        v68_1_2_V_addr_1_reg_1586 <= zext_ln182_fu_946_p1;
        v68_1_3_V_addr_1_reg_1591 <= zext_ln182_fu_946_p1;
        v68_2_0_V_addr_1_reg_1596 <= zext_ln182_fu_946_p1;
        v68_2_1_V_addr_1_reg_1601 <= zext_ln182_fu_946_p1;
        v68_2_2_V_addr_1_reg_1606 <= zext_ln182_fu_946_p1;
        v68_2_3_V_addr_1_reg_1611 <= zext_ln182_fu_946_p1;
        v68_3_0_V_addr_1_reg_1616 <= zext_ln182_fu_946_p1;
        v68_3_1_V_addr_1_reg_1621 <= zext_ln182_fu_946_p1;
        v68_3_2_V_addr_1_reg_1626 <= zext_ln182_fu_946_p1;
        v68_3_3_V_addr_1_reg_1631 <= zext_ln182_fu_946_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln164_fu_667_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln203_reg_1406 <= trunc_ln203_fu_679_p1;
        zext_ln165_reg_1410[5 : 4] <= zext_ln165_fu_701_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln708_575_reg_1700 <= {{mul_ln1118_580_fu_1218_p2[71:48]}};
        trunc_ln708_576_reg_1705 <= {{mul_ln1118_581_fu_1233_p2[71:48]}};
        trunc_ln708_577_reg_1710 <= {{mul_ln1118_582_fu_1248_p2[71:48]}};
        trunc_ln708_578_reg_1715 <= {{mul_ln1118_583_fu_1263_p2[71:48]}};
        trunc_ln708_579_reg_1720 <= {{mul_ln1118_584_fu_1289_p2[71:48]}};
        trunc_ln708_580_reg_1725 <= {{mul_ln1118_585_fu_1304_p2[71:48]}};
        trunc_ln708_581_reg_1730 <= {{mul_ln1118_586_fu_1319_p2[71:48]}};
        trunc_ln708_582_reg_1735 <= {{mul_ln1118_587_fu_1334_p2[71:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v70_reg_1401 <= v70_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln177_reg_1461[5 : 4] <= zext_ln177_fu_867_p1[5 : 4];
    end
end

always @ (*) begin
    if ((icmp_ln169_fu_760_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_outer1_0_phi_fu_627_p4 = select_ln177_1_reg_1435;
    end else begin
        ap_phi_mux_i_outer1_0_phi_fu_627_p4 = i_outer1_0_reg_623;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten45_phi_fu_616_p4 = add_ln169_reg_1430;
    end else begin
        ap_phi_mux_indvar_flatten45_phi_fu_616_p4 = indvar_flatten45_reg_612;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_638_p4 = select_ln170_reg_1456;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_638_p4 = indvar_flatten_reg_634;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_outer2_0_phi_fu_649_p4 = select_ln178_1_reg_1449;
    end else begin
        ap_phi_mux_j_outer2_0_phi_fu_649_p4 = j_outer2_0_reg_645;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln169_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_k2_0_phi_fu_660_p4 = k2_reg_1506;
    end else begin
        ap_phi_mux_k2_0_phi_fu_660_p4 = k2_0_reg_656;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v66_0_V_ce0 = 1'b1;
    end else begin
        v66_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v66_1_V_ce0 = 1'b1;
    end else begin
        v66_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v66_2_V_ce0 = 1'b1;
    end else begin
        v66_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v66_3_V_ce0 = 1'b1;
    end else begin
        v66_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v67_0_V_ce0 = 1'b1;
    end else begin
        v67_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v67_1_V_ce0 = 1'b1;
    end else begin
        v67_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v67_2_V_ce0 = 1'b1;
    end else begin
        v67_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v67_3_V_ce0 = 1'b1;
    end else begin
        v67_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_0_V_address0 = v68_0_0_V_addr_1_reg_1556;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_0_0_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_0_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_0_0_V_ce0 = 1'b1;
    end else begin
        v68_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_0_V_d0 = add_ln703_fu_1159_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_0_V_d0 = 24'd0;
    end else begin
        v68_0_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd0) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_0_0_V_we0 = 1'b1;
    end else begin
        v68_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_1_V_address0 = v68_0_1_V_addr_1_reg_1561;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_0_1_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_1_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_0_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_0_1_V_ce0 = 1'b1;
    end else begin
        v68_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_1_V_d0 = add_ln703_573_fu_1165_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_1_V_d0 = 24'd0;
    end else begin
        v68_0_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd1) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_0_1_V_we0 = 1'b1;
    end else begin
        v68_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_2_V_address0 = v68_0_2_V_addr_1_reg_1566;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_0_2_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_2_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_0_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_0_2_V_ce0 = 1'b1;
    end else begin
        v68_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_2_V_d0 = add_ln703_574_fu_1171_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_2_V_d0 = 24'd0;
    end else begin
        v68_0_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd2) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_0_2_V_we0 = 1'b1;
    end else begin
        v68_0_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_3_V_address0 = v68_0_3_V_addr_1_reg_1571;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_0_3_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_3_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_0_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_0_3_V_ce0 = 1'b1;
    end else begin
        v68_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_0_3_V_d0 = add_ln703_575_fu_1177_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_0_3_V_d0 = 24'd0;
    end else begin
        v68_0_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd3) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_0_3_V_we0 = 1'b1;
    end else begin
        v68_0_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_0_V_address0 = v68_1_0_V_addr_1_reg_1576;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_1_0_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_0_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_1_0_V_ce0 = 1'b1;
    end else begin
        v68_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_0_V_d0 = add_ln703_576_fu_1183_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_0_V_d0 = 24'd0;
    end else begin
        v68_1_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd0) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_1_0_V_we0 = 1'b1;
    end else begin
        v68_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_1_V_address0 = v68_1_1_V_addr_1_reg_1581;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_1_1_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_1_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_1_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_1_1_V_ce0 = 1'b1;
    end else begin
        v68_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_1_V_d0 = add_ln703_577_fu_1189_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_1_V_d0 = 24'd0;
    end else begin
        v68_1_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd1) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_1_1_V_we0 = 1'b1;
    end else begin
        v68_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_2_V_address0 = v68_1_2_V_addr_1_reg_1586;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_1_2_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_2_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_1_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_1_2_V_ce0 = 1'b1;
    end else begin
        v68_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_2_V_d0 = add_ln703_578_fu_1195_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_2_V_d0 = 24'd0;
    end else begin
        v68_1_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd2) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_1_2_V_we0 = 1'b1;
    end else begin
        v68_1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_3_V_address0 = v68_1_3_V_addr_1_reg_1591;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_1_3_V_address0 = zext_ln182_fu_946_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_3_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_1_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_1_3_V_ce0 = 1'b1;
    end else begin
        v68_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_1_3_V_d0 = add_ln703_579_fu_1201_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_1_3_V_d0 = 24'd0;
    end else begin
        v68_1_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln169_reg_1426_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln203_1_fu_717_p1 == 2'd3) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_1_3_V_we0 = 1'b1;
    end else begin
        v68_1_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_0_V_address0 = v68_2_0_V_addr_1_reg_1596;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_0_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_0_V_ce0 = 1'b1;
    end else begin
        v68_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_2_0_V_d0 = add_ln703_580_fu_1349_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_0_V_d0 = 24'd0;
    end else begin
        v68_2_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd0) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_2_0_V_we0 = 1'b1;
    end else begin
        v68_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_1_V_address0 = v68_2_1_V_addr_1_reg_1601;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_1_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_2_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_1_V_ce0 = 1'b1;
    end else begin
        v68_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_2_1_V_d0 = add_ln703_581_fu_1355_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_1_V_d0 = 24'd0;
    end else begin
        v68_2_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd1) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_2_1_V_we0 = 1'b1;
    end else begin
        v68_2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_2_V_address0 = v68_2_2_V_addr_1_reg_1606;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_2_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_2_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_2_V_ce0 = 1'b1;
    end else begin
        v68_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_2_2_V_d0 = add_ln703_582_fu_1361_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_2_V_d0 = 24'd0;
    end else begin
        v68_2_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd2) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_2_2_V_we0 = 1'b1;
    end else begin
        v68_2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_3_V_address0 = v68_2_3_V_addr_1_reg_1611;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_3_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_2_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_2_3_V_ce0 = 1'b1;
    end else begin
        v68_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_2_3_V_d0 = add_ln703_583_fu_1367_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_2_3_V_d0 = 24'd0;
    end else begin
        v68_2_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd3) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_2_3_V_we0 = 1'b1;
    end else begin
        v68_2_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_0_V_address0 = v68_3_0_V_addr_1_reg_1616;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_0_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_3_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_0_V_ce0 = 1'b1;
    end else begin
        v68_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_3_0_V_d0 = add_ln703_584_fu_1373_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_0_V_d0 = 24'd0;
    end else begin
        v68_3_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd0) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_3_0_V_we0 = 1'b1;
    end else begin
        v68_3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_1_V_address0 = v68_3_1_V_addr_1_reg_1621;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_1_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_3_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_1_V_ce0 = 1'b1;
    end else begin
        v68_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_3_1_V_d0 = add_ln703_585_fu_1379_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_1_V_d0 = 24'd0;
    end else begin
        v68_3_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd1) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_3_1_V_we0 = 1'b1;
    end else begin
        v68_3_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_2_V_address0 = v68_3_2_V_addr_1_reg_1626;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_2_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_3_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_2_V_ce0 = 1'b1;
    end else begin
        v68_3_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_3_2_V_d0 = add_ln703_586_fu_1385_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_2_V_d0 = 24'd0;
    end else begin
        v68_3_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd2) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_3_2_V_we0 = 1'b1;
    end else begin
        v68_3_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_3_V_address0 = v68_3_3_V_addr_1_reg_1631;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_3_V_address0 = zext_ln203_9_fu_740_p1;
    end else begin
        v68_3_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v68_3_3_V_ce0 = 1'b1;
    end else begin
        v68_3_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_3_3_V_d0 = add_ln703_587_fu_1391_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v68_3_3_V_d0 = 24'd0;
    end else begin
        v68_3_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln169_reg_1426_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln203_1_fu_717_p1 == 2'd3) & (icmp_ln165_fu_705_p2 == 1'd0) & (trunc_ln203_reg_1406 == 2'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        v68_3_3_V_we0 = 1'b1;
    end else begin
        v68_3_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln164_fu_667_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln165_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln169_fu_760_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln169_fu_760_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln169_fu_766_p2 = (ap_phi_mux_indvar_flatten45_phi_fu_616_p4 + 10'd1);

assign add_ln170_fu_846_p2 = (ap_phi_mux_indvar_flatten_phi_fu_638_p4 + 9'd1);

assign add_ln177_fu_894_p2 = (sub_ln177_fu_882_p2 + zext_ln177_2_fu_891_p1);

assign add_ln178_fu_919_p2 = (zext_ln178_2_fu_915_p1 + zext_ln178_fu_888_p1);

assign add_ln182_fu_941_p2 = (zext_ln177_reg_1461 + zext_ln178_1_fu_938_p1);

assign add_ln203_fu_735_p2 = (zext_ln165_reg_1410 + zext_ln203_fu_731_p1);

assign add_ln703_573_fu_1165_p2 = (trunc_ln708_s_reg_1653 + v68_0_1_V_q0);

assign add_ln703_574_fu_1171_p2 = (trunc_ln708_569_reg_1664 + v68_0_2_V_q0);

assign add_ln703_575_fu_1177_p2 = (trunc_ln708_570_reg_1675 + v68_0_3_V_q0);

assign add_ln703_576_fu_1183_p2 = (trunc_ln708_571_reg_1680 + v68_1_0_V_q0);

assign add_ln703_577_fu_1189_p2 = (trunc_ln708_572_reg_1685 + v68_1_1_V_q0);

assign add_ln703_578_fu_1195_p2 = (trunc_ln708_573_reg_1690 + v68_1_2_V_q0);

assign add_ln703_579_fu_1201_p2 = (trunc_ln708_574_reg_1695 + v68_1_3_V_q0);

assign add_ln703_580_fu_1349_p2 = (trunc_ln708_575_reg_1700 + v68_2_0_V_q0);

assign add_ln703_581_fu_1355_p2 = (trunc_ln708_576_reg_1705 + v68_2_1_V_q0);

assign add_ln703_582_fu_1361_p2 = (trunc_ln708_577_reg_1710 + v68_2_2_V_q0);

assign add_ln703_583_fu_1367_p2 = (trunc_ln708_578_reg_1715 + v68_2_3_V_q0);

assign add_ln703_584_fu_1373_p2 = (trunc_ln708_579_reg_1720 + v68_3_0_V_q0);

assign add_ln703_585_fu_1379_p2 = (trunc_ln708_580_reg_1725 + v68_3_1_V_q0);

assign add_ln703_586_fu_1385_p2 = (trunc_ln708_581_reg_1730 + v68_3_2_V_q0);

assign add_ln703_587_fu_1391_p2 = (trunc_ln708_582_reg_1735 + v68_3_3_V_q0);

assign add_ln703_fu_1159_p2 = (trunc_ln_reg_1642 + v68_0_0_V_q0);

assign and_ln177_fu_812_p2 = (xor_ln177_fu_800_p2 & icmp_ln171_fu_806_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign i_outer1_fu_772_p2 = (ap_phi_mux_i_outer1_0_phi_fu_627_p4 + 2'd1);

assign icmp_ln164_fu_667_p2 = ((v70_0_reg_590 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_705_p2 = ((v71_0_reg_601 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_760_p2 = ((ap_phi_mux_indvar_flatten45_phi_fu_616_p4 == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_778_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_638_p4 == 9'd192) ? 1'b1 : 1'b0);

assign icmp_ln171_fu_806_p2 = ((ap_phi_mux_k2_0_phi_fu_660_p4 == 4'd12) ? 1'b1 : 1'b0);

assign j_outer2_fu_818_p2 = (select_ln177_fu_784_p3 + 5'd1);

assign k2_fu_933_p2 = (select_ln178_reg_1442 + 4'd1);

assign lshr_ln_fu_683_p4 = {{v70_0_reg_590[3:2]}};

assign mul_ln1118_573_fu_1014_p0 = sext_ln1118_94_fu_1010_p1;

assign mul_ln1118_573_fu_1014_p1 = sext_ln1118_fu_979_p1;

assign mul_ln1118_573_fu_1014_p2 = ($signed(mul_ln1118_573_fu_1014_p0) * $signed(mul_ln1118_573_fu_1014_p1));

assign mul_ln1118_574_fu_1041_p0 = sext_ln1118_95_fu_1037_p1;

assign mul_ln1118_574_fu_1041_p1 = sext_ln1118_fu_979_p1;

assign mul_ln1118_574_fu_1041_p2 = ($signed(mul_ln1118_574_fu_1041_p0) * $signed(mul_ln1118_574_fu_1041_p1));

assign mul_ln1118_575_fu_1068_p0 = sext_ln1118_96_fu_1064_p1;

assign mul_ln1118_575_fu_1068_p1 = sext_ln1118_fu_979_p1;

assign mul_ln1118_575_fu_1068_p2 = ($signed(mul_ln1118_575_fu_1068_p0) * $signed(mul_ln1118_575_fu_1068_p1));

assign mul_ln1118_576_fu_1095_p0 = sext_ln1118_93_fu_983_p1;

assign mul_ln1118_576_fu_1095_p1 = sext_ln1118_97_fu_1091_p1;

assign mul_ln1118_576_fu_1095_p2 = ($signed(mul_ln1118_576_fu_1095_p0) * $signed(mul_ln1118_576_fu_1095_p1));

assign mul_ln1118_577_fu_1111_p0 = sext_ln1118_94_fu_1010_p1;

assign mul_ln1118_577_fu_1111_p1 = sext_ln1118_97_fu_1091_p1;

assign mul_ln1118_577_fu_1111_p2 = ($signed(mul_ln1118_577_fu_1111_p0) * $signed(mul_ln1118_577_fu_1111_p1));

assign mul_ln1118_578_fu_1127_p0 = sext_ln1118_95_fu_1037_p1;

assign mul_ln1118_578_fu_1127_p1 = sext_ln1118_97_fu_1091_p1;

assign mul_ln1118_578_fu_1127_p2 = ($signed(mul_ln1118_578_fu_1127_p0) * $signed(mul_ln1118_578_fu_1127_p1));

assign mul_ln1118_579_fu_1143_p0 = sext_ln1118_96_fu_1064_p1;

assign mul_ln1118_579_fu_1143_p1 = sext_ln1118_97_fu_1091_p1;

assign mul_ln1118_579_fu_1143_p2 = ($signed(mul_ln1118_579_fu_1143_p0) * $signed(mul_ln1118_579_fu_1143_p1));

assign mul_ln1118_580_fu_1218_p0 = sext_ln1118_93_reg_1636;

assign mul_ln1118_580_fu_1218_p1 = sext_ln1118_98_fu_1214_p1;

assign mul_ln1118_580_fu_1218_p2 = ($signed(mul_ln1118_580_fu_1218_p0) * $signed(mul_ln1118_580_fu_1218_p1));

assign mul_ln1118_581_fu_1233_p0 = sext_ln1118_94_reg_1647;

assign mul_ln1118_581_fu_1233_p1 = sext_ln1118_98_fu_1214_p1;

assign mul_ln1118_581_fu_1233_p2 = ($signed(mul_ln1118_581_fu_1233_p0) * $signed(mul_ln1118_581_fu_1233_p1));

assign mul_ln1118_582_fu_1248_p0 = sext_ln1118_95_reg_1658;

assign mul_ln1118_582_fu_1248_p1 = sext_ln1118_98_fu_1214_p1;

assign mul_ln1118_582_fu_1248_p2 = ($signed(mul_ln1118_582_fu_1248_p0) * $signed(mul_ln1118_582_fu_1248_p1));

assign mul_ln1118_583_fu_1263_p0 = sext_ln1118_96_reg_1669;

assign mul_ln1118_583_fu_1263_p1 = sext_ln1118_98_fu_1214_p1;

assign mul_ln1118_583_fu_1263_p2 = ($signed(mul_ln1118_583_fu_1263_p0) * $signed(mul_ln1118_583_fu_1263_p1));

assign mul_ln1118_584_fu_1289_p0 = sext_ln1118_93_reg_1636;

assign mul_ln1118_584_fu_1289_p1 = sext_ln1118_99_fu_1285_p1;

assign mul_ln1118_584_fu_1289_p2 = ($signed(mul_ln1118_584_fu_1289_p0) * $signed(mul_ln1118_584_fu_1289_p1));

assign mul_ln1118_585_fu_1304_p0 = sext_ln1118_94_reg_1647;

assign mul_ln1118_585_fu_1304_p1 = sext_ln1118_99_fu_1285_p1;

assign mul_ln1118_585_fu_1304_p2 = ($signed(mul_ln1118_585_fu_1304_p0) * $signed(mul_ln1118_585_fu_1304_p1));

assign mul_ln1118_586_fu_1319_p0 = sext_ln1118_95_reg_1658;

assign mul_ln1118_586_fu_1319_p1 = sext_ln1118_99_fu_1285_p1;

assign mul_ln1118_586_fu_1319_p2 = ($signed(mul_ln1118_586_fu_1319_p0) * $signed(mul_ln1118_586_fu_1319_p1));

assign mul_ln1118_587_fu_1334_p0 = sext_ln1118_96_reg_1669;

assign mul_ln1118_587_fu_1334_p1 = sext_ln1118_99_fu_1285_p1;

assign mul_ln1118_587_fu_1334_p2 = ($signed(mul_ln1118_587_fu_1334_p0) * $signed(mul_ln1118_587_fu_1334_p1));

assign mul_ln1118_fu_987_p0 = sext_ln1118_93_fu_983_p1;

assign mul_ln1118_fu_987_p1 = sext_ln1118_fu_979_p1;

assign mul_ln1118_fu_987_p2 = ($signed(mul_ln1118_fu_987_p0) * $signed(mul_ln1118_fu_987_p1));

assign or_ln178_fu_824_p2 = (icmp_ln170_fu_778_p2 | and_ln177_fu_812_p2);

assign select_ln170_fu_852_p3 = ((icmp_ln170_fu_778_p2[0:0] === 1'b1) ? 9'd1 : add_ln170_fu_846_p2);

assign select_ln177_1_fu_792_p3 = ((icmp_ln170_fu_778_p2[0:0] === 1'b1) ? i_outer1_fu_772_p2 : ap_phi_mux_i_outer1_0_phi_fu_627_p4);

assign select_ln177_fu_784_p3 = ((icmp_ln170_fu_778_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_j_outer2_0_phi_fu_649_p4);

assign select_ln178_1_fu_838_p3 = ((and_ln177_fu_812_p2[0:0] === 1'b1) ? j_outer2_fu_818_p2 : select_ln177_fu_784_p3);

assign select_ln178_fu_830_p3 = ((or_ln178_fu_824_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_k2_0_phi_fu_660_p4);

assign sext_ln1118_93_fu_983_p1 = $signed(shl_ln728_s_fu_972_p3);

assign sext_ln1118_94_fu_1010_p1 = $signed(shl_ln728_89_fu_1003_p3);

assign sext_ln1118_95_fu_1037_p1 = $signed(shl_ln728_90_fu_1030_p3);

assign sext_ln1118_96_fu_1064_p1 = $signed(shl_ln728_91_fu_1057_p3);

assign sext_ln1118_97_fu_1091_p1 = $signed(shl_ln728_92_fu_1084_p3);

assign sext_ln1118_98_fu_1214_p1 = $signed(shl_ln728_93_fu_1207_p3);

assign sext_ln1118_99_fu_1285_p1 = $signed(shl_ln728_94_fu_1278_p3);

assign sext_ln1118_fu_979_p1 = $signed(shl_ln_fu_965_p3);

assign sext_ln177_fu_900_p1 = $signed(add_ln177_fu_894_p2);

assign shl_ln728_89_fu_1003_p3 = {{v67_1_V_load_reg_1526}, {16'd0}};

assign shl_ln728_90_fu_1030_p3 = {{v67_2_V_load_reg_1531}, {16'd0}};

assign shl_ln728_91_fu_1057_p3 = {{v67_3_V_load_reg_1536}, {16'd0}};

assign shl_ln728_92_fu_1084_p3 = {{v66_1_V_load_reg_1541}, {16'd0}};

assign shl_ln728_93_fu_1207_p3 = {{v66_2_V_load_reg_1546}, {16'd0}};

assign shl_ln728_94_fu_1278_p3 = {{v66_3_V_load_reg_1551}, {16'd0}};

assign shl_ln728_s_fu_972_p3 = {{v67_0_V_load_reg_1521}, {16'd0}};

assign shl_ln_fu_965_p3 = {{v66_0_V_load_reg_1516}, {16'd0}};

assign sub_ln177_fu_882_p2 = (zext_ln177_fu_867_p1 - zext_ln177_1_fu_878_p1);

assign tmp_23_fu_860_p3 = {{select_ln177_1_reg_1435}, {4'd0}};

assign tmp_24_fu_871_p3 = {{select_ln177_1_reg_1435}, {2'd0}};

assign tmp_25_fu_908_p3 = {{select_ln178_reg_1442}, {4'd0}};

assign tmp_59_fu_721_p4 = {{v71_0_reg_601[6:2]}};

assign tmp_fu_693_p3 = {{lshr_ln_fu_683_p4}, {4'd0}};

assign trunc_ln203_1_fu_717_p1 = v71_0_reg_601[1:0];

assign trunc_ln203_fu_679_p1 = v70_0_reg_590[1:0];

assign v66_0_V_address0 = sext_ln177_fu_900_p1;

assign v66_1_V_address0 = sext_ln177_fu_900_p1;

assign v66_2_V_address0 = sext_ln177_fu_900_p1;

assign v66_3_V_address0 = sext_ln177_fu_900_p1;

assign v67_0_V_address0 = zext_ln178_3_fu_925_p1;

assign v67_1_V_address0 = zext_ln178_3_fu_925_p1;

assign v67_2_V_address0 = zext_ln178_3_fu_925_p1;

assign v67_3_V_address0 = zext_ln178_3_fu_925_p1;

assign v70_fu_673_p2 = (v70_0_reg_590 + 4'd1);

assign v71_fu_711_p2 = (v71_0_reg_601 + 7'd1);

assign xor_ln177_fu_800_p2 = (icmp_ln170_fu_778_p2 ^ 1'd1);

assign zext_ln165_fu_701_p1 = tmp_fu_693_p3;

assign zext_ln177_1_fu_878_p1 = tmp_24_fu_871_p3;

assign zext_ln177_2_fu_891_p1 = select_ln178_reg_1442;

assign zext_ln177_fu_867_p1 = tmp_23_fu_860_p3;

assign zext_ln178_1_fu_938_p1 = select_ln178_1_reg_1449;

assign zext_ln178_2_fu_915_p1 = tmp_25_fu_908_p3;

assign zext_ln178_3_fu_925_p1 = add_ln178_fu_919_p2;

assign zext_ln178_fu_888_p1 = select_ln178_1_reg_1449;

assign zext_ln182_fu_946_p1 = add_ln182_reg_1511;

assign zext_ln203_9_fu_740_p1 = add_ln203_fu_735_p2;

assign zext_ln203_fu_731_p1 = tmp_59_fu_721_p4;

always @ (posedge ap_clk) begin
    zext_ln165_reg_1410[3:0] <= 4'b0000;
    zext_ln165_reg_1410[6] <= 1'b0;
    zext_ln177_reg_1461[3:0] <= 4'b0000;
    zext_ln177_reg_1461[6] <= 1'b0;
    sext_ln1118_93_reg_1636[15:0] <= 16'b0000000000000000;
    sext_ln1118_94_reg_1647[15:0] <= 16'b0000000000000000;
    sext_ln1118_95_reg_1658[15:0] <= 16'b0000000000000000;
    sext_ln1118_96_reg_1669[15:0] <= 16'b0000000000000000;
end

endmodule //Context_layer
