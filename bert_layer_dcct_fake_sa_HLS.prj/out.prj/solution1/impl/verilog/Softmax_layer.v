// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Softmax_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v49_0_0_address0,
        v49_0_0_ce0,
        v49_0_0_we0,
        v49_0_0_d0,
        v49_0_0_q0,
        v49_0_1_address0,
        v49_0_1_ce0,
        v49_0_1_we0,
        v49_0_1_d0,
        v49_0_1_q0,
        v49_0_2_address0,
        v49_0_2_ce0,
        v49_0_2_we0,
        v49_0_2_d0,
        v49_0_2_q0,
        v49_0_3_address0,
        v49_0_3_ce0,
        v49_0_3_we0,
        v49_0_3_d0,
        v49_0_3_q0,
        v49_1_0_address0,
        v49_1_0_ce0,
        v49_1_0_we0,
        v49_1_0_d0,
        v49_1_0_q0,
        v49_1_1_address0,
        v49_1_1_ce0,
        v49_1_1_we0,
        v49_1_1_d0,
        v49_1_1_q0,
        v49_1_2_address0,
        v49_1_2_ce0,
        v49_1_2_we0,
        v49_1_2_d0,
        v49_1_2_q0,
        v49_1_3_address0,
        v49_1_3_ce0,
        v49_1_3_we0,
        v49_1_3_d0,
        v49_1_3_q0,
        v49_2_0_address0,
        v49_2_0_ce0,
        v49_2_0_we0,
        v49_2_0_d0,
        v49_2_0_q0,
        v49_2_1_address0,
        v49_2_1_ce0,
        v49_2_1_we0,
        v49_2_1_d0,
        v49_2_1_q0,
        v49_2_2_address0,
        v49_2_2_ce0,
        v49_2_2_we0,
        v49_2_2_d0,
        v49_2_2_q0,
        v49_2_3_address0,
        v49_2_3_ce0,
        v49_2_3_we0,
        v49_2_3_d0,
        v49_2_3_q0,
        v49_3_0_address0,
        v49_3_0_ce0,
        v49_3_0_we0,
        v49_3_0_d0,
        v49_3_0_q0,
        v49_3_1_address0,
        v49_3_1_ce0,
        v49_3_1_we0,
        v49_3_1_d0,
        v49_3_1_q0,
        v49_3_2_address0,
        v49_3_2_ce0,
        v49_3_2_we0,
        v49_3_2_d0,
        v49_3_2_q0,
        v49_3_3_address0,
        v49_3_3_ce0,
        v49_3_3_we0,
        v49_3_3_d0,
        v49_3_3_q0,
        v50_0_V_address0,
        v50_0_V_ce0,
        v50_0_V_we0,
        v50_0_V_d0,
        v50_1_V_address0,
        v50_1_V_ce0,
        v50_1_V_we0,
        v50_1_V_d0,
        v50_2_V_address0,
        v50_2_V_ce0,
        v50_2_V_we0,
        v50_2_V_d0,
        v50_3_V_address0,
        v50_3_V_ce0,
        v50_3_V_we0,
        v50_3_V_d0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_pp0_stage0 = 14'd4;
parameter    ap_ST_fsm_pp0_stage1 = 14'd8;
parameter    ap_ST_fsm_pp0_stage2 = 14'd16;
parameter    ap_ST_fsm_pp0_stage3 = 14'd32;
parameter    ap_ST_fsm_pp0_stage4 = 14'd64;
parameter    ap_ST_fsm_pp0_stage5 = 14'd128;
parameter    ap_ST_fsm_pp0_stage6 = 14'd256;
parameter    ap_ST_fsm_pp0_stage7 = 14'd512;
parameter    ap_ST_fsm_pp0_stage8 = 14'd1024;
parameter    ap_ST_fsm_state17 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state40 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v49_0_0_address0;
output   v49_0_0_ce0;
output   v49_0_0_we0;
output  [31:0] v49_0_0_d0;
input  [31:0] v49_0_0_q0;
output  [3:0] v49_0_1_address0;
output   v49_0_1_ce0;
output   v49_0_1_we0;
output  [31:0] v49_0_1_d0;
input  [31:0] v49_0_1_q0;
output  [3:0] v49_0_2_address0;
output   v49_0_2_ce0;
output   v49_0_2_we0;
output  [31:0] v49_0_2_d0;
input  [31:0] v49_0_2_q0;
output  [3:0] v49_0_3_address0;
output   v49_0_3_ce0;
output   v49_0_3_we0;
output  [31:0] v49_0_3_d0;
input  [31:0] v49_0_3_q0;
output  [3:0] v49_1_0_address0;
output   v49_1_0_ce0;
output   v49_1_0_we0;
output  [31:0] v49_1_0_d0;
input  [31:0] v49_1_0_q0;
output  [3:0] v49_1_1_address0;
output   v49_1_1_ce0;
output   v49_1_1_we0;
output  [31:0] v49_1_1_d0;
input  [31:0] v49_1_1_q0;
output  [3:0] v49_1_2_address0;
output   v49_1_2_ce0;
output   v49_1_2_we0;
output  [31:0] v49_1_2_d0;
input  [31:0] v49_1_2_q0;
output  [3:0] v49_1_3_address0;
output   v49_1_3_ce0;
output   v49_1_3_we0;
output  [31:0] v49_1_3_d0;
input  [31:0] v49_1_3_q0;
output  [3:0] v49_2_0_address0;
output   v49_2_0_ce0;
output   v49_2_0_we0;
output  [31:0] v49_2_0_d0;
input  [31:0] v49_2_0_q0;
output  [3:0] v49_2_1_address0;
output   v49_2_1_ce0;
output   v49_2_1_we0;
output  [31:0] v49_2_1_d0;
input  [31:0] v49_2_1_q0;
output  [3:0] v49_2_2_address0;
output   v49_2_2_ce0;
output   v49_2_2_we0;
output  [31:0] v49_2_2_d0;
input  [31:0] v49_2_2_q0;
output  [3:0] v49_2_3_address0;
output   v49_2_3_ce0;
output   v49_2_3_we0;
output  [31:0] v49_2_3_d0;
input  [31:0] v49_2_3_q0;
output  [3:0] v49_3_0_address0;
output   v49_3_0_ce0;
output   v49_3_0_we0;
output  [31:0] v49_3_0_d0;
input  [31:0] v49_3_0_q0;
output  [3:0] v49_3_1_address0;
output   v49_3_1_ce0;
output   v49_3_1_we0;
output  [31:0] v49_3_1_d0;
input  [31:0] v49_3_1_q0;
output  [3:0] v49_3_2_address0;
output   v49_3_2_ce0;
output   v49_3_2_we0;
output  [31:0] v49_3_2_d0;
input  [31:0] v49_3_2_q0;
output  [3:0] v49_3_3_address0;
output   v49_3_3_ce0;
output   v49_3_3_we0;
output  [31:0] v49_3_3_d0;
input  [31:0] v49_3_3_q0;
output  [5:0] v50_0_V_address0;
output   v50_0_V_ce0;
output   v50_0_V_we0;
output  [23:0] v50_0_V_d0;
output  [5:0] v50_1_V_address0;
output   v50_1_V_ce0;
output   v50_1_V_we0;
output  [23:0] v50_1_V_d0;
output  [5:0] v50_2_V_address0;
output   v50_2_V_ce0;
output   v50_2_V_we0;
output  [23:0] v50_2_V_d0;
output  [5:0] v50_3_V_address0;
output   v50_3_V_ce0;
output   v50_3_V_we0;
output  [23:0] v50_3_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] v49_0_0_address0;
reg v49_0_0_ce0;
reg v49_0_0_we0;
reg[3:0] v49_0_1_address0;
reg v49_0_1_ce0;
reg v49_0_1_we0;
reg[3:0] v49_0_2_address0;
reg v49_0_2_ce0;
reg v49_0_2_we0;
reg[3:0] v49_0_3_address0;
reg v49_0_3_ce0;
reg v49_0_3_we0;
reg[3:0] v49_1_0_address0;
reg v49_1_0_ce0;
reg v49_1_0_we0;
reg[3:0] v49_1_1_address0;
reg v49_1_1_ce0;
reg v49_1_1_we0;
reg[3:0] v49_1_2_address0;
reg v49_1_2_ce0;
reg v49_1_2_we0;
reg[3:0] v49_1_3_address0;
reg v49_1_3_ce0;
reg v49_1_3_we0;
reg[3:0] v49_2_0_address0;
reg v49_2_0_ce0;
reg v49_2_0_we0;
reg[3:0] v49_2_1_address0;
reg v49_2_1_ce0;
reg v49_2_1_we0;
reg[3:0] v49_2_2_address0;
reg v49_2_2_ce0;
reg v49_2_2_we0;
reg[3:0] v49_2_3_address0;
reg v49_2_3_ce0;
reg v49_2_3_we0;
reg[3:0] v49_3_0_address0;
reg v49_3_0_ce0;
reg v49_3_0_we0;
reg[3:0] v49_3_1_address0;
reg v49_3_1_ce0;
reg v49_3_1_we0;
reg[3:0] v49_3_2_address0;
reg v49_3_2_ce0;
reg v49_3_2_we0;
reg[3:0] v49_3_3_address0;
reg v49_3_3_ce0;
reg v49_3_3_we0;
reg v50_0_V_ce0;
reg v50_0_V_we0;
reg v50_1_V_ce0;
reg v50_1_V_we0;
reg v50_2_V_ce0;
reg v50_2_V_we0;
reg v50_3_V_ce0;
reg v50_3_V_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] indvar_flatten_reg_572;
reg   [3:0] i3_0_reg_583;
reg   [3:0] j2_0_reg_594;
reg   [7:0] indvar_flatten14_reg_605;
reg   [3:0] i4_0_reg_616;
reg   [3:0] j3_0_reg_627;
wire   [31:0] inp_sumRow_q0;
reg   [31:0] reg_672;
wire    ap_CS_fsm_pp0_stage6;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln127_reg_1353;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
wire    ap_block_state22_pp1_stage0_iter4;
wire    ap_block_state23_pp1_stage0_iter5;
wire    ap_block_state24_pp1_stage0_iter6;
wire    ap_block_state25_pp1_stage0_iter7;
wire    ap_block_state26_pp1_stage0_iter8;
wire    ap_block_state27_pp1_stage0_iter9;
wire    ap_block_state28_pp1_stage0_iter10;
wire    ap_block_state29_pp1_stage0_iter11;
wire    ap_block_state30_pp1_stage0_iter12;
wire    ap_block_state31_pp1_stage0_iter13;
wire    ap_block_state32_pp1_stage0_iter14;
wire    ap_block_state33_pp1_stage0_iter15;
wire    ap_block_state34_pp1_stage0_iter16;
wire    ap_block_state35_pp1_stage0_iter17;
wire    ap_block_state36_pp1_stage0_iter18;
wire    ap_block_state37_pp1_stage0_iter19;
wire    ap_block_state38_pp1_stage0_iter20;
wire    ap_block_state39_pp1_stage0_iter21;
wire    ap_block_pp1_stage0_11001;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln139_reg_1483;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter1_reg;
wire   [0:0] icmp_ln124_fu_678_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] v52_fu_684_p2;
wire   [0:0] icmp_ln127_fu_695_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln127_reg_1353_pp0_iter1_reg;
wire   [7:0] add_ln127_fu_701_p2;
reg   [7:0] add_ln127_reg_1357;
wire   [3:0] select_ln130_fu_719_p3;
reg   [3:0] select_ln130_reg_1362;
wire   [3:0] select_ln130_1_fu_727_p3;
reg   [3:0] select_ln130_1_reg_1367;
wire   [1:0] trunc_ln130_fu_735_p1;
reg   [1:0] trunc_ln130_reg_1373;
wire   [1:0] trunc_ln130_1_fu_771_p1;
reg   [1:0] trunc_ln130_1_reg_1378;
reg   [3:0] v49_0_0_addr_reg_1383;
reg   [3:0] v49_0_1_addr_reg_1388;
reg   [3:0] v49_0_2_addr_reg_1393;
reg   [3:0] v49_0_3_addr_reg_1398;
reg   [3:0] v49_1_0_addr_reg_1403;
reg   [3:0] v49_1_1_addr_reg_1408;
reg   [3:0] v49_1_2_addr_reg_1413;
reg   [3:0] v49_1_3_addr_reg_1418;
reg   [3:0] v49_2_0_addr_reg_1423;
reg   [3:0] v49_2_1_addr_reg_1428;
reg   [3:0] v49_2_2_addr_reg_1433;
reg   [3:0] v49_2_3_addr_reg_1438;
reg   [3:0] v49_3_0_addr_reg_1443;
reg   [3:0] v49_3_1_addr_reg_1448;
reg   [3:0] v49_3_2_addr_reg_1453;
reg   [3:0] v49_3_3_addr_reg_1458;
wire   [31:0] v55_fu_825_p18;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [3:0] inp_sumRow_addr_2_reg_1468;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] grp_fu_651_p2;
reg   [31:0] v57_reg_1473;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [3:0] j2_fu_868_p2;
reg   [3:0] j2_reg_1478;
wire   [0:0] icmp_ln139_fu_873_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter2_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter3_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter4_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter5_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter6_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter7_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter8_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter9_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter10_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter11_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter12_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter13_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter14_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter15_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter16_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter17_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter18_reg;
reg   [0:0] icmp_ln139_reg_1483_pp1_iter19_reg;
wire   [7:0] add_ln139_fu_879_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln142_1_fu_905_p3;
reg   [3:0] select_ln142_1_reg_1492;
wire   [1:0] trunc_ln142_fu_913_p1;
reg   [1:0] trunc_ln142_reg_1498;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter1_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter2_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter3_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter4_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter5_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter6_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter7_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter8_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter9_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter10_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter11_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter12_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter13_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter14_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter15_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter16_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter17_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter18_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter19_reg;
reg   [1:0] trunc_ln142_reg_1498_pp1_iter20_reg;
wire   [6:0] add_ln203_fu_975_p2;
reg   [6:0] add_ln203_reg_1503;
reg   [6:0] add_ln203_reg_1503_pp1_iter1_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter2_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter3_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter4_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter5_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter6_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter7_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter8_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter9_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter10_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter11_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter12_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter13_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter14_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter15_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter16_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter17_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter18_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter19_reg;
reg   [6:0] add_ln203_reg_1503_pp1_iter20_reg;
wire   [1:0] trunc_ln142_1_fu_981_p1;
reg   [1:0] trunc_ln142_1_reg_1508;
wire   [3:0] j3_fu_1025_p2;
wire   [31:0] v62_fu_1045_p18;
reg   [31:0] v62_reg_1603;
wire   [31:0] grp_fu_643_p2;
reg   [31:0] v64_reg_1608;
reg   [31:0] v64_reg_1608_pp1_iter18_reg;
reg   [31:0] v64_reg_1608_pp1_iter19_reg;
wire   [53:0] man_V_2_fu_1135_p3;
reg   [53:0] man_V_2_reg_1614;
wire   [0:0] icmp_ln571_fu_1143_p2;
reg   [0:0] icmp_ln571_reg_1619;
wire   [0:0] icmp_ln581_fu_1155_p2;
reg   [0:0] icmp_ln581_reg_1625;
wire  signed [11:0] sh_amt_fu_1173_p3;
reg  signed [11:0] sh_amt_reg_1631;
wire   [0:0] icmp_ln582_fu_1181_p2;
reg   [0:0] icmp_ln582_reg_1638;
wire   [23:0] trunc_ln583_fu_1187_p1;
reg   [23:0] trunc_ln583_reg_1644;
reg   [23:0] trunc_ln583_reg_1644_pp1_iter20_reg;
wire  signed [31:0] sext_ln581_fu_1191_p1;
reg  signed [31:0] sext_ln581_reg_1650;
wire   [23:0] select_ln585_1_fu_1294_p3;
reg   [23:0] select_ln585_1_reg_1655;
wire   [0:0] and_ln603_fu_1313_p2;
reg   [0:0] and_ln603_reg_1660;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_CS_fsm_state17;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg   [3:0] inp_sumRow_address0;
reg    inp_sumRow_ce0;
reg    inp_sumRow_we0;
reg   [31:0] inp_sumRow_d0;
reg   [3:0] v52_0_reg_561;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_576_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i3_0_phi_fu_587_p4;
reg   [3:0] ap_phi_mux_j2_0_phi_fu_598_p4;
reg   [3:0] ap_phi_mux_i4_0_phi_fu_620_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln125_fu_690_p1;
wire  signed [63:0] sext_ln130_fu_795_p1;
wire   [63:0] zext_ln130_fu_864_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] sext_ln142_fu_1005_p1;
wire   [63:0] zext_ln142_fu_1031_p1;
wire  signed [63:0] sext_ln203_fu_1319_p1;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] grp_fu_638_p2;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage8;
wire   [23:0] v65_V_fu_1334_p3;
wire    ap_block_pp0_stage1;
wire   [0:0] icmp_ln128_fu_713_p2;
wire   [3:0] i3_fu_707_p2;
wire   [1:0] zext_ln130_1_mid2_v_fu_739_p4;
wire   [3:0] tmp_fu_753_p3;
wire   [4:0] zext_ln130_2_fu_761_p1;
wire   [4:0] zext_ln130_1_fu_749_p1;
wire   [1:0] tmp_27_fu_775_p4;
wire   [4:0] zext_ln130_4_fu_785_p1;
wire   [4:0] sub_ln130_fu_765_p2;
wire   [4:0] add_ln130_fu_789_p2;
wire   [3:0] tmp_2_fu_815_p3;
wire   [4:0] v55_fu_825_p17;
wire   [0:0] icmp_ln140_fu_891_p2;
wire   [3:0] i4_fu_885_p2;
wire   [1:0] zext_ln142_2_mid2_v_fu_917_p4;
wire   [3:0] tmp_s_fu_931_p3;
wire   [4:0] zext_ln142_3_fu_943_p1;
wire   [4:0] zext_ln142_1_fu_927_p1;
wire   [5:0] tmp_15_fu_953_p3;
wire   [6:0] zext_ln203_fu_961_p1;
wire   [6:0] zext_ln142_2_fu_939_p1;
wire   [3:0] select_ln142_fu_897_p3;
wire   [6:0] sub_ln203_fu_965_p2;
wire   [6:0] zext_ln203_1_fu_971_p1;
wire   [1:0] tmp_28_fu_985_p4;
wire   [4:0] sub_ln142_fu_947_p2;
wire   [4:0] zext_ln142_5_fu_995_p1;
wire   [4:0] add_ln142_fu_999_p2;
wire   [3:0] tmp_3_fu_1035_p3;
wire   [4:0] v62_fu_1045_p17;
wire   [63:0] grp_fu_648_p1;
wire   [63:0] ireg_V_fu_1083_p1;
wire   [10:0] exp_tmp_V_fu_1099_p4;
wire   [51:0] trunc_ln565_fu_1113_p1;
wire   [52:0] tmp_7_fu_1117_p3;
wire   [53:0] p_Result_67_fu_1125_p1;
wire   [0:0] p_Result_s_fu_1091_p3;
wire   [53:0] man_V_1_fu_1129_p2;
wire   [62:0] trunc_ln556_fu_1087_p1;
wire   [11:0] zext_ln461_fu_1109_p1;
wire   [11:0] F2_fu_1149_p2;
wire   [11:0] add_ln581_fu_1161_p2;
wire   [11:0] sub_ln581_fu_1167_p2;
wire   [53:0] zext_ln586_fu_1204_p1;
wire   [53:0] ashr_ln586_fu_1208_p2;
wire   [31:0] bitcast_ln696_fu_1217_p1;
wire   [0:0] tmp_30_fu_1220_p3;
wire   [0:0] xor_ln571_fu_1236_p2;
wire   [0:0] and_ln582_fu_1241_p2;
wire   [0:0] or_ln582_fu_1253_p2;
wire   [0:0] xor_ln582_fu_1257_p2;
wire   [0:0] icmp_ln585_fu_1194_p2;
wire   [0:0] and_ln581_fu_1263_p2;
wire   [0:0] xor_ln585_fu_1268_p2;
wire   [0:0] and_ln585_fu_1274_p2;
wire   [23:0] select_ln588_fu_1228_p3;
wire   [23:0] select_ln582_fu_1246_p3;
wire   [0:0] and_ln585_1_fu_1288_p2;
wire   [23:0] trunc_ln586_fu_1213_p1;
wire   [23:0] select_ln585_fu_1280_p3;
wire   [0:0] or_ln581_fu_1302_p2;
wire   [0:0] icmp_ln603_fu_1199_p2;
wire   [0:0] xor_ln581_fu_1307_p2;
wire   [23:0] sext_ln581cast_fu_1326_p1;
wire   [23:0] shl_ln604_fu_1329_p2;
wire    ap_CS_fsm_state40;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
end

Softmax_layer_inpfYi #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
inp_sumRow_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_sumRow_address0),
    .ce0(inp_sumRow_ce0),
    .we0(inp_sumRow_we0),
    .d0(inp_sumRow_d0),
    .q0(inp_sumRow_q0)
);

Bert_layer_fadd_3g8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fadd_3g8j_U201(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_672),
    .din1(v57_reg_1473),
    .ce(1'b1),
    .dout(grp_fu_638_p2)
);

Bert_layer_fdiv_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fdiv_3hbi_U202(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v62_reg_1603),
    .din1(inp_sumRow_q0),
    .ce(1'b1),
    .dout(grp_fu_643_p2)
);

Bert_layer_fpext_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Bert_layer_fpext_ibs_U203(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v64_reg_1608),
    .ce(1'b1),
    .dout(grp_fu_648_p1)
);

Bert_layer_fexp_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fexp_3jbC_U204(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(v55_fu_825_p18),
    .ce(1'b1),
    .dout(grp_fu_651_p2)
);

Bert_layer_mux_16kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Bert_layer_mux_16kbM_U205(
    .din0(v49_0_0_q0),
    .din1(v49_0_1_q0),
    .din2(v49_0_2_q0),
    .din3(v49_0_3_q0),
    .din4(v49_1_0_q0),
    .din5(v49_1_1_q0),
    .din6(v49_1_2_q0),
    .din7(v49_1_3_q0),
    .din8(v49_2_0_q0),
    .din9(v49_2_1_q0),
    .din10(v49_2_2_q0),
    .din11(v49_2_3_q0),
    .din12(v49_3_0_q0),
    .din13(v49_3_1_q0),
    .din14(v49_3_2_q0),
    .din15(v49_3_3_q0),
    .din16(v55_fu_825_p17),
    .dout(v55_fu_825_p18)
);

Bert_layer_mux_16kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Bert_layer_mux_16kbM_U206(
    .din0(v49_0_0_q0),
    .din1(v49_0_1_q0),
    .din2(v49_0_2_q0),
    .din3(v49_0_3_q0),
    .din4(v49_1_0_q0),
    .din5(v49_1_1_q0),
    .din6(v49_1_2_q0),
    .din7(v49_1_3_q0),
    .din8(v49_2_0_q0),
    .din9(v49_2_1_q0),
    .din10(v49_2_2_q0),
    .din11(v49_2_3_q0),
    .din12(v49_3_0_q0),
    .din13(v49_3_1_q0),
    .din14(v49_3_2_q0),
    .din15(v49_3_3_q0),
    .din16(v62_fu_1045_p17),
    .dout(v62_fu_1045_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln124_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln124_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter21 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i3_0_reg_583 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln127_reg_1353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_0_reg_583 <= select_ln130_1_reg_1367;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i4_0_reg_616 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_reg_1483 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i4_0_reg_616 <= select_ln142_1_reg_1492;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten14_reg_605 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_fu_873_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten14_reg_605 <= add_ln139_fu_879_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_572 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln127_reg_1353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_572 <= add_ln127_reg_1357;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j2_0_reg_594 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln127_reg_1353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j2_0_reg_594 <= j2_reg_1478;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j3_0_reg_627 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_fu_873_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j3_0_reg_627 <= j3_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v52_0_reg_561 <= v52_fu_684_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v52_0_reg_561 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln127_reg_1357 <= add_ln127_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_fu_873_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln203_reg_1503 <= add_ln203_fu_975_p2;
        trunc_ln142_1_reg_1508 <= trunc_ln142_1_fu_981_p1;
        trunc_ln142_reg_1498 <= trunc_ln142_fu_913_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln203_reg_1503_pp1_iter10_reg <= add_ln203_reg_1503_pp1_iter9_reg;
        add_ln203_reg_1503_pp1_iter11_reg <= add_ln203_reg_1503_pp1_iter10_reg;
        add_ln203_reg_1503_pp1_iter12_reg <= add_ln203_reg_1503_pp1_iter11_reg;
        add_ln203_reg_1503_pp1_iter13_reg <= add_ln203_reg_1503_pp1_iter12_reg;
        add_ln203_reg_1503_pp1_iter14_reg <= add_ln203_reg_1503_pp1_iter13_reg;
        add_ln203_reg_1503_pp1_iter15_reg <= add_ln203_reg_1503_pp1_iter14_reg;
        add_ln203_reg_1503_pp1_iter16_reg <= add_ln203_reg_1503_pp1_iter15_reg;
        add_ln203_reg_1503_pp1_iter17_reg <= add_ln203_reg_1503_pp1_iter16_reg;
        add_ln203_reg_1503_pp1_iter18_reg <= add_ln203_reg_1503_pp1_iter17_reg;
        add_ln203_reg_1503_pp1_iter19_reg <= add_ln203_reg_1503_pp1_iter18_reg;
        add_ln203_reg_1503_pp1_iter20_reg <= add_ln203_reg_1503_pp1_iter19_reg;
        add_ln203_reg_1503_pp1_iter2_reg <= add_ln203_reg_1503_pp1_iter1_reg;
        add_ln203_reg_1503_pp1_iter3_reg <= add_ln203_reg_1503_pp1_iter2_reg;
        add_ln203_reg_1503_pp1_iter4_reg <= add_ln203_reg_1503_pp1_iter3_reg;
        add_ln203_reg_1503_pp1_iter5_reg <= add_ln203_reg_1503_pp1_iter4_reg;
        add_ln203_reg_1503_pp1_iter6_reg <= add_ln203_reg_1503_pp1_iter5_reg;
        add_ln203_reg_1503_pp1_iter7_reg <= add_ln203_reg_1503_pp1_iter6_reg;
        add_ln203_reg_1503_pp1_iter8_reg <= add_ln203_reg_1503_pp1_iter7_reg;
        add_ln203_reg_1503_pp1_iter9_reg <= add_ln203_reg_1503_pp1_iter8_reg;
        icmp_ln139_reg_1483_pp1_iter10_reg <= icmp_ln139_reg_1483_pp1_iter9_reg;
        icmp_ln139_reg_1483_pp1_iter11_reg <= icmp_ln139_reg_1483_pp1_iter10_reg;
        icmp_ln139_reg_1483_pp1_iter12_reg <= icmp_ln139_reg_1483_pp1_iter11_reg;
        icmp_ln139_reg_1483_pp1_iter13_reg <= icmp_ln139_reg_1483_pp1_iter12_reg;
        icmp_ln139_reg_1483_pp1_iter14_reg <= icmp_ln139_reg_1483_pp1_iter13_reg;
        icmp_ln139_reg_1483_pp1_iter15_reg <= icmp_ln139_reg_1483_pp1_iter14_reg;
        icmp_ln139_reg_1483_pp1_iter16_reg <= icmp_ln139_reg_1483_pp1_iter15_reg;
        icmp_ln139_reg_1483_pp1_iter17_reg <= icmp_ln139_reg_1483_pp1_iter16_reg;
        icmp_ln139_reg_1483_pp1_iter18_reg <= icmp_ln139_reg_1483_pp1_iter17_reg;
        icmp_ln139_reg_1483_pp1_iter19_reg <= icmp_ln139_reg_1483_pp1_iter18_reg;
        icmp_ln139_reg_1483_pp1_iter2_reg <= icmp_ln139_reg_1483_pp1_iter1_reg;
        icmp_ln139_reg_1483_pp1_iter3_reg <= icmp_ln139_reg_1483_pp1_iter2_reg;
        icmp_ln139_reg_1483_pp1_iter4_reg <= icmp_ln139_reg_1483_pp1_iter3_reg;
        icmp_ln139_reg_1483_pp1_iter5_reg <= icmp_ln139_reg_1483_pp1_iter4_reg;
        icmp_ln139_reg_1483_pp1_iter6_reg <= icmp_ln139_reg_1483_pp1_iter5_reg;
        icmp_ln139_reg_1483_pp1_iter7_reg <= icmp_ln139_reg_1483_pp1_iter6_reg;
        icmp_ln139_reg_1483_pp1_iter8_reg <= icmp_ln139_reg_1483_pp1_iter7_reg;
        icmp_ln139_reg_1483_pp1_iter9_reg <= icmp_ln139_reg_1483_pp1_iter8_reg;
        trunc_ln142_reg_1498_pp1_iter10_reg <= trunc_ln142_reg_1498_pp1_iter9_reg;
        trunc_ln142_reg_1498_pp1_iter11_reg <= trunc_ln142_reg_1498_pp1_iter10_reg;
        trunc_ln142_reg_1498_pp1_iter12_reg <= trunc_ln142_reg_1498_pp1_iter11_reg;
        trunc_ln142_reg_1498_pp1_iter13_reg <= trunc_ln142_reg_1498_pp1_iter12_reg;
        trunc_ln142_reg_1498_pp1_iter14_reg <= trunc_ln142_reg_1498_pp1_iter13_reg;
        trunc_ln142_reg_1498_pp1_iter15_reg <= trunc_ln142_reg_1498_pp1_iter14_reg;
        trunc_ln142_reg_1498_pp1_iter16_reg <= trunc_ln142_reg_1498_pp1_iter15_reg;
        trunc_ln142_reg_1498_pp1_iter17_reg <= trunc_ln142_reg_1498_pp1_iter16_reg;
        trunc_ln142_reg_1498_pp1_iter18_reg <= trunc_ln142_reg_1498_pp1_iter17_reg;
        trunc_ln142_reg_1498_pp1_iter19_reg <= trunc_ln142_reg_1498_pp1_iter18_reg;
        trunc_ln142_reg_1498_pp1_iter20_reg <= trunc_ln142_reg_1498_pp1_iter19_reg;
        trunc_ln142_reg_1498_pp1_iter2_reg <= trunc_ln142_reg_1498_pp1_iter1_reg;
        trunc_ln142_reg_1498_pp1_iter3_reg <= trunc_ln142_reg_1498_pp1_iter2_reg;
        trunc_ln142_reg_1498_pp1_iter4_reg <= trunc_ln142_reg_1498_pp1_iter3_reg;
        trunc_ln142_reg_1498_pp1_iter5_reg <= trunc_ln142_reg_1498_pp1_iter4_reg;
        trunc_ln142_reg_1498_pp1_iter6_reg <= trunc_ln142_reg_1498_pp1_iter5_reg;
        trunc_ln142_reg_1498_pp1_iter7_reg <= trunc_ln142_reg_1498_pp1_iter6_reg;
        trunc_ln142_reg_1498_pp1_iter8_reg <= trunc_ln142_reg_1498_pp1_iter7_reg;
        trunc_ln142_reg_1498_pp1_iter9_reg <= trunc_ln142_reg_1498_pp1_iter8_reg;
        trunc_ln583_reg_1644_pp1_iter20_reg <= trunc_ln583_reg_1644;
        v64_reg_1608_pp1_iter18_reg <= v64_reg_1608;
        v64_reg_1608_pp1_iter19_reg <= v64_reg_1608_pp1_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln203_reg_1503_pp1_iter1_reg <= add_ln203_reg_1503;
        icmp_ln139_reg_1483 <= icmp_ln139_fu_873_p2;
        icmp_ln139_reg_1483_pp1_iter1_reg <= icmp_ln139_reg_1483;
        trunc_ln142_reg_1498_pp1_iter1_reg <= trunc_ln142_reg_1498;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_reg_1483_pp1_iter19_reg == 1'd0))) begin
        and_ln603_reg_1660 <= and_ln603_fu_1313_p2;
        select_ln585_1_reg_1655 <= select_ln585_1_fu_1294_p3;
        sext_ln581_reg_1650 <= sext_ln581_fu_1191_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln127_reg_1353 <= icmp_ln127_fu_695_p2;
        icmp_ln127_reg_1353_pp0_iter1_reg <= icmp_ln127_reg_1353;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_reg_1483_pp1_iter18_reg == 1'd0))) begin
        icmp_ln571_reg_1619 <= icmp_ln571_fu_1143_p2;
        icmp_ln581_reg_1625 <= icmp_ln581_fu_1155_p2;
        icmp_ln582_reg_1638 <= icmp_ln582_fu_1181_p2;
        man_V_2_reg_1614 <= man_V_2_fu_1135_p3;
        sh_amt_reg_1631 <= sh_amt_fu_1173_p3;
        trunc_ln583_reg_1644 <= trunc_ln583_fu_1187_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        inp_sumRow_addr_2_reg_1468 <= zext_ln130_fu_864_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j2_reg_1478 <= j2_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_reg_1483_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln127_reg_1353 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_672 <= inp_sumRow_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln127_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln130_1_reg_1367 <= select_ln130_1_fu_727_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln127_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln130_reg_1362 <= select_ln130_fu_719_p3;
        trunc_ln130_1_reg_1378 <= trunc_ln130_1_fu_771_p1;
        trunc_ln130_reg_1373 <= trunc_ln130_fu_735_p1;
        v49_0_0_addr_reg_1383 <= sext_ln130_fu_795_p1;
        v49_0_1_addr_reg_1388 <= sext_ln130_fu_795_p1;
        v49_0_2_addr_reg_1393 <= sext_ln130_fu_795_p1;
        v49_0_3_addr_reg_1398 <= sext_ln130_fu_795_p1;
        v49_1_0_addr_reg_1403 <= sext_ln130_fu_795_p1;
        v49_1_1_addr_reg_1408 <= sext_ln130_fu_795_p1;
        v49_1_2_addr_reg_1413 <= sext_ln130_fu_795_p1;
        v49_1_3_addr_reg_1418 <= sext_ln130_fu_795_p1;
        v49_2_0_addr_reg_1423 <= sext_ln130_fu_795_p1;
        v49_2_1_addr_reg_1428 <= sext_ln130_fu_795_p1;
        v49_2_2_addr_reg_1433 <= sext_ln130_fu_795_p1;
        v49_2_3_addr_reg_1438 <= sext_ln130_fu_795_p1;
        v49_3_0_addr_reg_1443 <= sext_ln130_fu_795_p1;
        v49_3_1_addr_reg_1448 <= sext_ln130_fu_795_p1;
        v49_3_2_addr_reg_1453 <= sext_ln130_fu_795_p1;
        v49_3_3_addr_reg_1458 <= sext_ln130_fu_795_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_fu_873_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln142_1_reg_1492 <= select_ln142_1_fu_905_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v57_reg_1473 <= grp_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_reg_1483 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v62_reg_1603 <= v62_fu_1045_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln139_reg_1483_pp1_iter16_reg == 1'd0))) begin
        v64_reg_1608 <= grp_fu_643_p2;
    end
end

always @ (*) begin
    if ((icmp_ln127_fu_695_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln139_fu_873_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln127_reg_1353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i3_0_phi_fu_587_p4 = select_ln130_1_reg_1367;
    end else begin
        ap_phi_mux_i3_0_phi_fu_587_p4 = i3_0_reg_583;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln139_reg_1483 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i4_0_phi_fu_620_p4 = select_ln142_1_reg_1492;
    end else begin
        ap_phi_mux_i4_0_phi_fu_620_p4 = i4_0_reg_616;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln127_reg_1353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_576_p4 = add_ln127_reg_1357;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_576_p4 = indvar_flatten_reg_572;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln127_reg_1353 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j2_0_phi_fu_598_p4 = j2_reg_1478;
    end else begin
        ap_phi_mux_j2_0_phi_fu_598_p4 = j2_0_reg_594;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inp_sumRow_address0 = zext_ln142_fu_1031_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inp_sumRow_address0 = inp_sumRow_addr_2_reg_1468;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        inp_sumRow_address0 = zext_ln130_fu_864_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inp_sumRow_address0 = zext_ln125_fu_690_p1;
    end else begin
        inp_sumRow_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inp_sumRow_d0 = grp_fu_638_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inp_sumRow_d0 = 32'd0;
    end else begin
        inp_sumRow_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln127_reg_1353_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln124_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        inp_sumRow_we0 = 1'b1;
    end else begin
        inp_sumRow_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_0_0_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_0_address0 = v49_0_0_addr_reg_1383;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_0_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_0_0_ce0 = 1'b1;
    end else begin
        v49_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd0) & (trunc_ln130_reg_1373 == 2'd0) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_0_we0 = 1'b1;
    end else begin
        v49_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_0_1_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_1_address0 = v49_0_1_addr_reg_1388;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_1_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_0_1_ce0 = 1'b1;
    end else begin
        v49_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd1) & (trunc_ln130_reg_1373 == 2'd0) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_1_we0 = 1'b1;
    end else begin
        v49_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_0_2_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_2_address0 = v49_0_2_addr_reg_1393;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_2_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_0_2_ce0 = 1'b1;
    end else begin
        v49_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd2) & (trunc_ln130_reg_1373 == 2'd0) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_2_we0 = 1'b1;
    end else begin
        v49_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_0_3_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_3_address0 = v49_0_3_addr_reg_1398;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_3_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_0_3_ce0 = 1'b1;
    end else begin
        v49_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd3) & (trunc_ln130_reg_1373 == 2'd0) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_0_3_we0 = 1'b1;
    end else begin
        v49_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_1_0_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_0_address0 = v49_1_0_addr_reg_1403;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_0_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_1_0_ce0 = 1'b1;
    end else begin
        v49_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd0) & (trunc_ln130_reg_1373 == 2'd1) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_0_we0 = 1'b1;
    end else begin
        v49_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_1_1_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_1_address0 = v49_1_1_addr_reg_1408;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_1_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_1_1_ce0 = 1'b1;
    end else begin
        v49_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd1) & (trunc_ln130_reg_1373 == 2'd1) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_1_we0 = 1'b1;
    end else begin
        v49_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_1_2_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_2_address0 = v49_1_2_addr_reg_1413;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_2_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_1_2_ce0 = 1'b1;
    end else begin
        v49_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd2) & (trunc_ln130_reg_1373 == 2'd1) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_2_we0 = 1'b1;
    end else begin
        v49_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_1_3_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_3_address0 = v49_1_3_addr_reg_1418;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_3_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_1_3_ce0 = 1'b1;
    end else begin
        v49_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd3) & (trunc_ln130_reg_1373 == 2'd1) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_1_3_we0 = 1'b1;
    end else begin
        v49_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_2_0_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_0_address0 = v49_2_0_addr_reg_1423;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_0_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_2_0_ce0 = 1'b1;
    end else begin
        v49_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd0) & (trunc_ln130_reg_1373 == 2'd2) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_0_we0 = 1'b1;
    end else begin
        v49_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_2_1_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_1_address0 = v49_2_1_addr_reg_1428;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_1_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_2_1_ce0 = 1'b1;
    end else begin
        v49_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd1) & (trunc_ln130_reg_1373 == 2'd2) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_1_we0 = 1'b1;
    end else begin
        v49_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_2_2_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_2_address0 = v49_2_2_addr_reg_1433;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_2_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_2_2_ce0 = 1'b1;
    end else begin
        v49_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd2) & (trunc_ln130_reg_1373 == 2'd2) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_2_we0 = 1'b1;
    end else begin
        v49_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_2_3_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_3_address0 = v49_2_3_addr_reg_1438;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_3_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_2_3_ce0 = 1'b1;
    end else begin
        v49_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd3) & (trunc_ln130_reg_1373 == 2'd2) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_2_3_we0 = 1'b1;
    end else begin
        v49_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_3_0_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_0_address0 = v49_3_0_addr_reg_1443;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_0_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_3_0_ce0 = 1'b1;
    end else begin
        v49_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd0) & (trunc_ln130_reg_1373 == 2'd3) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_0_we0 = 1'b1;
    end else begin
        v49_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_3_1_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_1_address0 = v49_3_1_addr_reg_1448;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_1_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_3_1_ce0 = 1'b1;
    end else begin
        v49_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd1) & (trunc_ln130_reg_1373 == 2'd3) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_1_we0 = 1'b1;
    end else begin
        v49_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_3_2_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_2_address0 = v49_3_2_addr_reg_1453;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_2_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_3_2_ce0 = 1'b1;
    end else begin
        v49_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd2) & (trunc_ln130_reg_1373 == 2'd3) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_2_we0 = 1'b1;
    end else begin
        v49_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v49_3_3_address0 = sext_ln142_fu_1005_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_3_address0 = v49_3_3_addr_reg_1458;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_3_address0 = sext_ln130_fu_795_p1;
    end else begin
        v49_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v49_3_3_ce0 = 1'b1;
    end else begin
        v49_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln130_1_reg_1378 == 2'd3) & (trunc_ln130_reg_1373 == 2'd3) & (icmp_ln127_reg_1353 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v49_3_3_we0 = 1'b1;
    end else begin
        v49_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_0_V_ce0 = 1'b1;
    end else begin
        v50_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln142_reg_1498_pp1_iter20_reg == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_0_V_we0 = 1'b1;
    end else begin
        v50_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_1_V_ce0 = 1'b1;
    end else begin
        v50_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln142_reg_1498_pp1_iter20_reg == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_1_V_we0 = 1'b1;
    end else begin
        v50_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_2_V_ce0 = 1'b1;
    end else begin
        v50_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln142_reg_1498_pp1_iter20_reg == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_2_V_we0 = 1'b1;
    end else begin
        v50_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_3_V_ce0 = 1'b1;
    end else begin
        v50_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln142_reg_1498_pp1_iter20_reg == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter21 == 1'b1))) begin
        v50_3_V_we0 = 1'b1;
    end else begin
        v50_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln124_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln127_fu_695_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln127_fu_695_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln139_fu_873_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter20 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter21 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter20 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter21 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln139_fu_873_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1149_p2 = (12'd1075 - zext_ln461_fu_1109_p1);

assign add_ln127_fu_701_p2 = (ap_phi_mux_indvar_flatten_phi_fu_576_p4 + 8'd1);

assign add_ln130_fu_789_p2 = (zext_ln130_4_fu_785_p1 + sub_ln130_fu_765_p2);

assign add_ln139_fu_879_p2 = (indvar_flatten14_reg_605 + 8'd1);

assign add_ln142_fu_999_p2 = (sub_ln142_fu_947_p2 + zext_ln142_5_fu_995_p1);

assign add_ln203_fu_975_p2 = (sub_ln203_fu_965_p2 + zext_ln203_1_fu_971_p1);

assign add_ln581_fu_1161_p2 = ($signed(12'd4080) + $signed(F2_fu_1149_p2));

assign and_ln581_fu_1263_p2 = (xor_ln582_fu_1257_p2 & icmp_ln581_reg_1625);

assign and_ln582_fu_1241_p2 = (xor_ln571_fu_1236_p2 & icmp_ln582_reg_1638);

assign and_ln585_1_fu_1288_p2 = (icmp_ln585_fu_1194_p2 & and_ln581_fu_1263_p2);

assign and_ln585_fu_1274_p2 = (xor_ln585_fu_1268_p2 & and_ln581_fu_1263_p2);

assign and_ln603_fu_1313_p2 = (xor_ln581_fu_1307_p2 & icmp_ln603_fu_1199_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ashr_ln586_fu_1208_p2 = $signed(man_V_2_reg_1614) >>> zext_ln586_fu_1204_p1;

assign bitcast_ln696_fu_1217_p1 = v64_reg_1608_pp1_iter19_reg;

assign exp_tmp_V_fu_1099_p4 = {{ireg_V_fu_1083_p1[62:52]}};

assign i3_fu_707_p2 = (4'd1 + ap_phi_mux_i3_0_phi_fu_587_p4);

assign i4_fu_885_p2 = (4'd1 + ap_phi_mux_i4_0_phi_fu_620_p4);

assign icmp_ln124_fu_678_p2 = ((v52_0_reg_561 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_695_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_576_p4 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln128_fu_713_p2 = ((ap_phi_mux_j2_0_phi_fu_598_p4 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_873_p2 = ((indvar_flatten14_reg_605 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_891_p2 = ((j3_0_reg_627 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1143_p2 = ((trunc_ln556_fu_1087_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1155_p2 = (($signed(F2_fu_1149_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1181_p2 = ((F2_fu_1149_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1194_p2 = ((sh_amt_reg_1631 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1199_p2 = ((sh_amt_reg_1631 < 12'd24) ? 1'b1 : 1'b0);

assign ireg_V_fu_1083_p1 = grp_fu_648_p1;

assign j2_fu_868_p2 = (select_ln130_reg_1362 + 4'd1);

assign j3_fu_1025_p2 = (select_ln142_fu_897_p3 + 4'd1);

assign man_V_1_fu_1129_p2 = (54'd0 - p_Result_67_fu_1125_p1);

assign man_V_2_fu_1135_p3 = ((p_Result_s_fu_1091_p3[0:0] === 1'b1) ? man_V_1_fu_1129_p2 : p_Result_67_fu_1125_p1);

assign or_ln581_fu_1302_p2 = (or_ln582_fu_1253_p2 | icmp_ln581_reg_1625);

assign or_ln582_fu_1253_p2 = (icmp_ln582_reg_1638 | icmp_ln571_reg_1619);

assign p_Result_67_fu_1125_p1 = tmp_7_fu_1117_p3;

assign p_Result_s_fu_1091_p3 = ireg_V_fu_1083_p1[32'd63];

assign select_ln130_1_fu_727_p3 = ((icmp_ln128_fu_713_p2[0:0] === 1'b1) ? i3_fu_707_p2 : ap_phi_mux_i3_0_phi_fu_587_p4);

assign select_ln130_fu_719_p3 = ((icmp_ln128_fu_713_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_j2_0_phi_fu_598_p4);

assign select_ln142_1_fu_905_p3 = ((icmp_ln140_fu_891_p2[0:0] === 1'b1) ? i4_fu_885_p2 : ap_phi_mux_i4_0_phi_fu_620_p4);

assign select_ln142_fu_897_p3 = ((icmp_ln140_fu_891_p2[0:0] === 1'b1) ? 4'd0 : j3_0_reg_627);

assign select_ln582_fu_1246_p3 = ((and_ln582_fu_1241_p2[0:0] === 1'b1) ? trunc_ln583_reg_1644 : 24'd0);

assign select_ln585_1_fu_1294_p3 = ((and_ln585_1_fu_1288_p2[0:0] === 1'b1) ? trunc_ln586_fu_1213_p1 : select_ln585_fu_1280_p3);

assign select_ln585_fu_1280_p3 = ((and_ln585_fu_1274_p2[0:0] === 1'b1) ? select_ln588_fu_1228_p3 : select_ln582_fu_1246_p3);

assign select_ln588_fu_1228_p3 = ((tmp_30_fu_1220_p3[0:0] === 1'b1) ? 24'd16777215 : 24'd0);

assign sext_ln130_fu_795_p1 = $signed(add_ln130_fu_789_p2);

assign sext_ln142_fu_1005_p1 = $signed(add_ln142_fu_999_p2);

assign sext_ln203_fu_1319_p1 = $signed(add_ln203_reg_1503_pp1_iter20_reg);

assign sext_ln581_fu_1191_p1 = sh_amt_reg_1631;

assign sext_ln581cast_fu_1326_p1 = sext_ln581_reg_1650[23:0];

assign sh_amt_fu_1173_p3 = ((icmp_ln581_fu_1155_p2[0:0] === 1'b1) ? add_ln581_fu_1161_p2 : sub_ln581_fu_1167_p2);

assign shl_ln604_fu_1329_p2 = trunc_ln583_reg_1644_pp1_iter20_reg << sext_ln581cast_fu_1326_p1;

assign sub_ln130_fu_765_p2 = (zext_ln130_2_fu_761_p1 - zext_ln130_1_fu_749_p1);

assign sub_ln142_fu_947_p2 = (zext_ln142_3_fu_943_p1 - zext_ln142_1_fu_927_p1);

assign sub_ln203_fu_965_p2 = (zext_ln203_fu_961_p1 - zext_ln142_2_fu_939_p1);

assign sub_ln581_fu_1167_p2 = (12'd16 - F2_fu_1149_p2);

assign tmp_15_fu_953_p3 = {{zext_ln142_2_mid2_v_fu_917_p4}, {4'd0}};

assign tmp_27_fu_775_p4 = {{select_ln130_fu_719_p3[3:2]}};

assign tmp_28_fu_985_p4 = {{select_ln142_fu_897_p3[3:2]}};

assign tmp_2_fu_815_p3 = {{trunc_ln130_reg_1373}, {trunc_ln130_1_reg_1378}};

assign tmp_30_fu_1220_p3 = bitcast_ln696_fu_1217_p1[32'd31];

assign tmp_3_fu_1035_p3 = {{trunc_ln142_reg_1498}, {trunc_ln142_1_reg_1508}};

assign tmp_7_fu_1117_p3 = {{1'd1}, {trunc_ln565_fu_1113_p1}};

assign tmp_fu_753_p3 = {{zext_ln130_1_mid2_v_fu_739_p4}, {2'd0}};

assign tmp_s_fu_931_p3 = {{zext_ln142_2_mid2_v_fu_917_p4}, {2'd0}};

assign trunc_ln130_1_fu_771_p1 = select_ln130_fu_719_p3[1:0];

assign trunc_ln130_fu_735_p1 = select_ln130_1_fu_727_p3[1:0];

assign trunc_ln142_1_fu_981_p1 = select_ln142_fu_897_p3[1:0];

assign trunc_ln142_fu_913_p1 = select_ln142_1_fu_905_p3[1:0];

assign trunc_ln556_fu_1087_p1 = ireg_V_fu_1083_p1[62:0];

assign trunc_ln565_fu_1113_p1 = ireg_V_fu_1083_p1[51:0];

assign trunc_ln583_fu_1187_p1 = man_V_2_fu_1135_p3[23:0];

assign trunc_ln586_fu_1213_p1 = ashr_ln586_fu_1208_p2[23:0];

assign v49_0_0_d0 = grp_fu_651_p2;

assign v49_0_1_d0 = grp_fu_651_p2;

assign v49_0_2_d0 = grp_fu_651_p2;

assign v49_0_3_d0 = grp_fu_651_p2;

assign v49_1_0_d0 = grp_fu_651_p2;

assign v49_1_1_d0 = grp_fu_651_p2;

assign v49_1_2_d0 = grp_fu_651_p2;

assign v49_1_3_d0 = grp_fu_651_p2;

assign v49_2_0_d0 = grp_fu_651_p2;

assign v49_2_1_d0 = grp_fu_651_p2;

assign v49_2_2_d0 = grp_fu_651_p2;

assign v49_2_3_d0 = grp_fu_651_p2;

assign v49_3_0_d0 = grp_fu_651_p2;

assign v49_3_1_d0 = grp_fu_651_p2;

assign v49_3_2_d0 = grp_fu_651_p2;

assign v49_3_3_d0 = grp_fu_651_p2;

assign v50_0_V_address0 = sext_ln203_fu_1319_p1;

assign v50_0_V_d0 = v65_V_fu_1334_p3;

assign v50_1_V_address0 = sext_ln203_fu_1319_p1;

assign v50_1_V_d0 = v65_V_fu_1334_p3;

assign v50_2_V_address0 = sext_ln203_fu_1319_p1;

assign v50_2_V_d0 = v65_V_fu_1334_p3;

assign v50_3_V_address0 = sext_ln203_fu_1319_p1;

assign v50_3_V_d0 = v65_V_fu_1334_p3;

assign v52_fu_684_p2 = (v52_0_reg_561 + 4'd1);

assign v55_fu_825_p17 = tmp_2_fu_815_p3;

assign v62_fu_1045_p17 = tmp_3_fu_1035_p3;

assign v65_V_fu_1334_p3 = ((and_ln603_reg_1660[0:0] === 1'b1) ? shl_ln604_fu_1329_p2 : select_ln585_1_reg_1655);

assign xor_ln571_fu_1236_p2 = (icmp_ln571_reg_1619 ^ 1'd1);

assign xor_ln581_fu_1307_p2 = (or_ln581_fu_1302_p2 ^ 1'd1);

assign xor_ln582_fu_1257_p2 = (or_ln582_fu_1253_p2 ^ 1'd1);

assign xor_ln585_fu_1268_p2 = (icmp_ln585_fu_1194_p2 ^ 1'd1);

assign zext_ln125_fu_690_p1 = v52_0_reg_561;

assign zext_ln130_1_fu_749_p1 = zext_ln130_1_mid2_v_fu_739_p4;

assign zext_ln130_1_mid2_v_fu_739_p4 = {{select_ln130_1_fu_727_p3[3:2]}};

assign zext_ln130_2_fu_761_p1 = tmp_fu_753_p3;

assign zext_ln130_4_fu_785_p1 = tmp_27_fu_775_p4;

assign zext_ln130_fu_864_p1 = select_ln130_1_reg_1367;

assign zext_ln142_1_fu_927_p1 = zext_ln142_2_mid2_v_fu_917_p4;

assign zext_ln142_2_fu_939_p1 = tmp_s_fu_931_p3;

assign zext_ln142_2_mid2_v_fu_917_p4 = {{select_ln142_1_fu_905_p3[3:2]}};

assign zext_ln142_3_fu_943_p1 = tmp_s_fu_931_p3;

assign zext_ln142_5_fu_995_p1 = tmp_28_fu_985_p4;

assign zext_ln142_fu_1031_p1 = select_ln142_1_reg_1492;

assign zext_ln203_1_fu_971_p1 = select_ln142_fu_897_p3;

assign zext_ln203_fu_961_p1 = tmp_15_fu_953_p3;

assign zext_ln461_fu_1109_p1 = exp_tmp_V_fu_1099_p4;

assign zext_ln586_fu_1204_p1 = $unsigned(sext_ln581_fu_1191_p1);

endmodule //Softmax_layer
