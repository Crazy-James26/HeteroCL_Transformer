// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Context_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Context_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Context_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> Context_layer::ap_ST_fsm_state1 = "1";
const sc_lv<17> Context_layer::ap_ST_fsm_state2 = "10";
const sc_lv<17> Context_layer::ap_ST_fsm_state3 = "100";
const sc_lv<17> Context_layer::ap_ST_fsm_state4 = "1000";
const sc_lv<17> Context_layer::ap_ST_fsm_state5 = "10000";
const sc_lv<17> Context_layer::ap_ST_fsm_state6 = "100000";
const sc_lv<17> Context_layer::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> Context_layer::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> Context_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Context_layer::ap_const_lv32_1 = "1";
const sc_lv<1> Context_layer::ap_const_lv1_0 = "0";
const sc_lv<32> Context_layer::ap_const_lv32_2 = "10";
const sc_lv<32> Context_layer::ap_const_lv32_3 = "11";
const sc_lv<32> Context_layer::ap_const_lv32_4 = "100";
const sc_lv<32> Context_layer::ap_const_lv32_5 = "101";
const sc_lv<32> Context_layer::ap_const_lv32_6 = "110";
const sc_lv<32> Context_layer::ap_const_lv32_A = "1010";
const sc_lv<32> Context_layer::ap_const_lv32_F = "1111";
const sc_lv<4> Context_layer::ap_const_lv4_0 = "0000";
const sc_lv<1> Context_layer::ap_const_lv1_1 = "1";
const sc_lv<7> Context_layer::ap_const_lv7_0 = "0000000";
const sc_lv<32> Context_layer::ap_const_lv32_10 = "10000";
const sc_lv<32> Context_layer::ap_const_lv32_9 = "1001";
const sc_lv<32> Context_layer::ap_const_lv32_B = "1011";
const sc_lv<32> Context_layer::ap_const_lv32_7 = "111";
const sc_lv<4> Context_layer::ap_const_lv4_C = "1100";
const sc_lv<4> Context_layer::ap_const_lv4_1 = "1";
const sc_lv<6> Context_layer::ap_const_lv6_0 = "000000";
const sc_lv<7> Context_layer::ap_const_lv7_40 = "1000000";
const sc_lv<7> Context_layer::ap_const_lv7_1 = "1";
const sc_lv<2> Context_layer::ap_const_lv2_0 = "00";
const bool Context_layer::ap_const_boolean_1 = true;

Context_layer::Context_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Bert_layer_fadd_3bkb_U22 = new Bert_layer_fadd_3bkb<1,5,32,32,32>("Bert_layer_fadd_3bkb_U22");
    Bert_layer_fadd_3bkb_U22->clk(ap_clk);
    Bert_layer_fadd_3bkb_U22->reset(ap_rst);
    Bert_layer_fadd_3bkb_U22->din0(v63_reg_428);
    Bert_layer_fadd_3bkb_U22->din1(v62_reg_423);
    Bert_layer_fadd_3bkb_U22->ce(ap_var_for_const0);
    Bert_layer_fadd_3bkb_U22->dout(grp_fu_152_p2);
    Bert_layer_fmul_3cud_U23 = new Bert_layer_fmul_3cud<1,4,32,32,32>("Bert_layer_fmul_3cud_U23");
    Bert_layer_fmul_3cud_U23->clk(ap_clk);
    Bert_layer_fmul_3cud_U23->reset(ap_rst);
    Bert_layer_fmul_3cud_U23->din0(v60_reg_413);
    Bert_layer_fmul_3cud_U23->din1(v61_reg_418);
    Bert_layer_fmul_3cud_U23->ce(ap_var_for_const0);
    Bert_layer_fmul_3cud_U23->dout(grp_fu_156_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln116_fu_200_p2);
    sensitive << ( zext_ln115_reg_346 );
    sensitive << ( zext_ln116_fu_196_p1 );

    SC_METHOD(thread_add_ln122_fu_306_p2);
    sensitive << ( sub_ln122_reg_367 );
    sensitive << ( zext_ln122_2_fu_302_p1 );

    SC_METHOD(thread_add_ln123_fu_328_p2);
    sensitive << ( zext_ln125_reg_385 );
    sensitive << ( zext_ln123_fu_324_p1 );

    SC_METHOD(thread_add_ln125_fu_280_p2);
    sensitive << ( zext_ln120_reg_372 );
    sensitive << ( zext_ln125_fu_276_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln119_fu_210_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln119_fu_210_p2 );

    SC_METHOD(thread_i6_fu_216_p2);
    sensitive << ( i6_0_reg_119 );

    SC_METHOD(thread_icmp_ln114_fu_160_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( v55_0_reg_97 );

    SC_METHOD(thread_icmp_ln115_fu_184_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( v56_0_reg_108 );

    SC_METHOD(thread_icmp_ln119_fu_210_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i6_0_reg_119 );

    SC_METHOD(thread_icmp_ln120_fu_264_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j6_0_reg_130 );

    SC_METHOD(thread_icmp_ln121_fu_290_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k2_0_reg_141 );

    SC_METHOD(thread_j6_fu_270_p2);
    sensitive << ( j6_0_reg_130 );

    SC_METHOD(thread_k2_fu_296_p2);
    sensitive << ( k2_0_reg_141 );

    SC_METHOD(thread_sext_ln122_fu_311_p1);
    sensitive << ( add_ln122_fu_306_p2 );

    SC_METHOD(thread_sub_ln122_fu_246_p2);
    sensitive << ( zext_ln122_fu_230_p1 );
    sensitive << ( zext_ln122_1_fu_242_p1 );

    SC_METHOD(thread_tmp_56_fu_172_p3);
    sensitive << ( v55_0_reg_97 );

    SC_METHOD(thread_tmp_57_fu_222_p3);
    sensitive << ( i6_0_reg_119 );

    SC_METHOD(thread_tmp_58_fu_234_p3);
    sensitive << ( i6_0_reg_119 );

    SC_METHOD(thread_tmp_59_fu_252_p3);
    sensitive << ( i6_0_reg_119 );

    SC_METHOD(thread_tmp_60_fu_316_p3);
    sensitive << ( k2_0_reg_141 );

    SC_METHOD(thread_v52_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln122_fu_311_p1 );

    SC_METHOD(thread_v52_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v53_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln123_1_fu_333_p1 );

    SC_METHOD(thread_v53_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_v54_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( v54_addr_1_reg_390 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln116_1_fu_205_p1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_v54_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_v54_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( v64_reg_433 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_v54_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln115_fu_184_p2 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_v55_fu_166_p2);
    sensitive << ( v55_0_reg_97 );

    SC_METHOD(thread_v56_fu_190_p2);
    sensitive << ( v56_0_reg_108 );

    SC_METHOD(thread_zext_ln115_fu_180_p1);
    sensitive << ( tmp_56_fu_172_p3 );

    SC_METHOD(thread_zext_ln116_1_fu_205_p1);
    sensitive << ( add_ln116_fu_200_p2 );

    SC_METHOD(thread_zext_ln116_fu_196_p1);
    sensitive << ( v56_0_reg_108 );

    SC_METHOD(thread_zext_ln120_fu_260_p1);
    sensitive << ( tmp_59_fu_252_p3 );

    SC_METHOD(thread_zext_ln122_1_fu_242_p1);
    sensitive << ( tmp_58_fu_234_p3 );

    SC_METHOD(thread_zext_ln122_2_fu_302_p1);
    sensitive << ( k2_0_reg_141 );

    SC_METHOD(thread_zext_ln122_fu_230_p1);
    sensitive << ( tmp_57_fu_222_p3 );

    SC_METHOD(thread_zext_ln123_1_fu_333_p1);
    sensitive << ( add_ln123_fu_328_p2 );

    SC_METHOD(thread_zext_ln123_fu_324_p1);
    sensitive << ( tmp_60_fu_316_p3 );

    SC_METHOD(thread_zext_ln125_1_fu_285_p1);
    sensitive << ( add_ln125_fu_280_p2 );

    SC_METHOD(thread_zext_ln125_fu_276_p1);
    sensitive << ( j6_0_reg_130 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln114_fu_160_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln119_fu_210_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln120_fu_264_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln121_fu_290_p2 );
    sensitive << ( icmp_ln115_fu_184_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Context_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v52_address0, "(port)v52_address0");
    sc_trace(mVcdFile, v52_ce0, "(port)v52_ce0");
    sc_trace(mVcdFile, v52_q0, "(port)v52_q0");
    sc_trace(mVcdFile, v53_address0, "(port)v53_address0");
    sc_trace(mVcdFile, v53_ce0, "(port)v53_ce0");
    sc_trace(mVcdFile, v53_q0, "(port)v53_q0");
    sc_trace(mVcdFile, v54_address0, "(port)v54_address0");
    sc_trace(mVcdFile, v54_ce0, "(port)v54_ce0");
    sc_trace(mVcdFile, v54_we0, "(port)v54_we0");
    sc_trace(mVcdFile, v54_d0, "(port)v54_d0");
    sc_trace(mVcdFile, v54_q0, "(port)v54_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, v55_fu_166_p2, "v55_fu_166_p2");
    sc_trace(mVcdFile, v55_reg_341, "v55_reg_341");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln115_fu_180_p1, "zext_ln115_fu_180_p1");
    sc_trace(mVcdFile, zext_ln115_reg_346, "zext_ln115_reg_346");
    sc_trace(mVcdFile, icmp_ln114_fu_160_p2, "icmp_ln114_fu_160_p2");
    sc_trace(mVcdFile, v56_fu_190_p2, "v56_fu_190_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i6_fu_216_p2, "i6_fu_216_p2");
    sc_trace(mVcdFile, i6_reg_362, "i6_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sub_ln122_fu_246_p2, "sub_ln122_fu_246_p2");
    sc_trace(mVcdFile, sub_ln122_reg_367, "sub_ln122_reg_367");
    sc_trace(mVcdFile, icmp_ln119_fu_210_p2, "icmp_ln119_fu_210_p2");
    sc_trace(mVcdFile, zext_ln120_fu_260_p1, "zext_ln120_fu_260_p1");
    sc_trace(mVcdFile, zext_ln120_reg_372, "zext_ln120_reg_372");
    sc_trace(mVcdFile, j6_fu_270_p2, "j6_fu_270_p2");
    sc_trace(mVcdFile, j6_reg_380, "j6_reg_380");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln125_fu_276_p1, "zext_ln125_fu_276_p1");
    sc_trace(mVcdFile, zext_ln125_reg_385, "zext_ln125_reg_385");
    sc_trace(mVcdFile, icmp_ln120_fu_264_p2, "icmp_ln120_fu_264_p2");
    sc_trace(mVcdFile, v54_addr_1_reg_390, "v54_addr_1_reg_390");
    sc_trace(mVcdFile, k2_fu_296_p2, "k2_fu_296_p2");
    sc_trace(mVcdFile, k2_reg_398, "k2_reg_398");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln121_fu_290_p2, "icmp_ln121_fu_290_p2");
    sc_trace(mVcdFile, v60_reg_413, "v60_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, v61_reg_418, "v61_reg_418");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, v62_reg_423, "v62_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, v63_reg_428, "v63_reg_428");
    sc_trace(mVcdFile, grp_fu_152_p2, "grp_fu_152_p2");
    sc_trace(mVcdFile, v64_reg_433, "v64_reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, v55_0_reg_97, "v55_0_reg_97");
    sc_trace(mVcdFile, icmp_ln115_fu_184_p2, "icmp_ln115_fu_184_p2");
    sc_trace(mVcdFile, v56_0_reg_108, "v56_0_reg_108");
    sc_trace(mVcdFile, i6_0_reg_119, "i6_0_reg_119");
    sc_trace(mVcdFile, j6_0_reg_130, "j6_0_reg_130");
    sc_trace(mVcdFile, k2_0_reg_141, "k2_0_reg_141");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, zext_ln116_1_fu_205_p1, "zext_ln116_1_fu_205_p1");
    sc_trace(mVcdFile, zext_ln125_1_fu_285_p1, "zext_ln125_1_fu_285_p1");
    sc_trace(mVcdFile, sext_ln122_fu_311_p1, "sext_ln122_fu_311_p1");
    sc_trace(mVcdFile, zext_ln123_1_fu_333_p1, "zext_ln123_1_fu_333_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_56_fu_172_p3, "tmp_56_fu_172_p3");
    sc_trace(mVcdFile, zext_ln116_fu_196_p1, "zext_ln116_fu_196_p1");
    sc_trace(mVcdFile, add_ln116_fu_200_p2, "add_ln116_fu_200_p2");
    sc_trace(mVcdFile, tmp_57_fu_222_p3, "tmp_57_fu_222_p3");
    sc_trace(mVcdFile, tmp_58_fu_234_p3, "tmp_58_fu_234_p3");
    sc_trace(mVcdFile, zext_ln122_fu_230_p1, "zext_ln122_fu_230_p1");
    sc_trace(mVcdFile, zext_ln122_1_fu_242_p1, "zext_ln122_1_fu_242_p1");
    sc_trace(mVcdFile, tmp_59_fu_252_p3, "tmp_59_fu_252_p3");
    sc_trace(mVcdFile, add_ln125_fu_280_p2, "add_ln125_fu_280_p2");
    sc_trace(mVcdFile, zext_ln122_2_fu_302_p1, "zext_ln122_2_fu_302_p1");
    sc_trace(mVcdFile, add_ln122_fu_306_p2, "add_ln122_fu_306_p2");
    sc_trace(mVcdFile, tmp_60_fu_316_p3, "tmp_60_fu_316_p3");
    sc_trace(mVcdFile, zext_ln123_fu_324_p1, "zext_ln123_fu_324_p1");
    sc_trace(mVcdFile, add_ln123_fu_328_p2, "add_ln123_fu_328_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Context_layer::~Context_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete Bert_layer_fadd_3bkb_U22;
    delete Bert_layer_fmul_3cud_U23;
}

void Context_layer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Context_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln114_fu_160_p2.read(), ap_const_lv1_1))) {
        i6_0_reg_119 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln120_fu_264_p2.read(), ap_const_lv1_1))) {
        i6_0_reg_119 = i6_reg_362.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln121_fu_290_p2.read(), ap_const_lv1_1))) {
        j6_0_reg_130 = j6_reg_380.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln119_fu_210_p2.read()))) {
        j6_0_reg_130 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        k2_0_reg_141 = k2_reg_398.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln120_fu_264_p2.read()))) {
        k2_0_reg_141 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln115_fu_184_p2.read(), ap_const_lv1_1))) {
        v55_0_reg_97 = v55_reg_341.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        v55_0_reg_97 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln114_fu_160_p2.read(), ap_const_lv1_0))) {
        v56_0_reg_108 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_184_p2.read()))) {
        v56_0_reg_108 = v56_fu_190_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i6_reg_362 = i6_fu_216_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j6_reg_380 = j6_fu_270_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k2_reg_398 = k2_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln119_fu_210_p2.read()))) {
        sub_ln122_reg_367 = sub_ln122_fu_246_p2.read();
        zext_ln120_reg_372 = zext_ln120_fu_260_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln120_fu_264_p2.read()))) {
        v54_addr_1_reg_390 =  (sc_lv<10>) (zext_ln125_1_fu_285_p1.read());
        zext_ln125_reg_385 = zext_ln125_fu_276_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        v55_reg_341 = v55_fu_166_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        v60_reg_413 = v52_q0.read();
        v61_reg_418 = v53_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        v62_reg_423 = grp_fu_156_p2.read();
        v63_reg_428 = v54_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        v64_reg_433 = grp_fu_152_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln114_fu_160_p2.read(), ap_const_lv1_0))) {
        zext_ln115_reg_346 = zext_ln115_fu_180_p1.read();
    }
}

void Context_layer::thread_add_ln116_fu_200_p2() {
    add_ln116_fu_200_p2 = (!zext_ln115_reg_346.read().is_01() || !zext_ln116_fu_196_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln115_reg_346.read()) + sc_biguint<11>(zext_ln116_fu_196_p1.read()));
}

void Context_layer::thread_add_ln122_fu_306_p2() {
    add_ln122_fu_306_p2 = (!zext_ln122_2_fu_302_p1.read().is_01() || !sub_ln122_reg_367.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln122_2_fu_302_p1.read()) + sc_biguint<9>(sub_ln122_reg_367.read()));
}

void Context_layer::thread_add_ln123_fu_328_p2() {
    add_ln123_fu_328_p2 = (!zext_ln125_reg_385.read().is_01() || !zext_ln123_fu_324_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln125_reg_385.read()) + sc_biguint<11>(zext_ln123_fu_324_p1.read()));
}

void Context_layer::thread_add_ln125_fu_280_p2() {
    add_ln125_fu_280_p2 = (!zext_ln120_reg_372.read().is_01() || !zext_ln125_fu_276_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln120_reg_372.read()) + sc_biguint<11>(zext_ln125_fu_276_p1.read()));
}

void Context_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Context_layer::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Context_layer::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Context_layer::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Context_layer::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Context_layer::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Context_layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Context_layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Context_layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Context_layer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Context_layer::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Context_layer::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Context_layer::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Context_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(icmp_ln119_fu_210_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Context_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Context_layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln119_fu_210_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Context_layer::thread_i6_fu_216_p2() {
    i6_fu_216_p2 = (!i6_0_reg_119.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i6_0_reg_119.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Context_layer::thread_icmp_ln114_fu_160_p2() {
    icmp_ln114_fu_160_p2 = (!v55_0_reg_97.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(v55_0_reg_97.read() == ap_const_lv4_C);
}

void Context_layer::thread_icmp_ln115_fu_184_p2() {
    icmp_ln115_fu_184_p2 = (!v56_0_reg_108.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(v56_0_reg_108.read() == ap_const_lv7_40);
}

void Context_layer::thread_icmp_ln119_fu_210_p2() {
    icmp_ln119_fu_210_p2 = (!i6_0_reg_119.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i6_0_reg_119.read() == ap_const_lv4_C);
}

void Context_layer::thread_icmp_ln120_fu_264_p2() {
    icmp_ln120_fu_264_p2 = (!j6_0_reg_130.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j6_0_reg_130.read() == ap_const_lv7_40);
}

void Context_layer::thread_icmp_ln121_fu_290_p2() {
    icmp_ln121_fu_290_p2 = (!k2_0_reg_141.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(k2_0_reg_141.read() == ap_const_lv4_C);
}

void Context_layer::thread_j6_fu_270_p2() {
    j6_fu_270_p2 = (!j6_0_reg_130.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j6_0_reg_130.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Context_layer::thread_k2_fu_296_p2() {
    k2_fu_296_p2 = (!k2_0_reg_141.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k2_0_reg_141.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Context_layer::thread_sext_ln122_fu_311_p1() {
    sext_ln122_fu_311_p1 = esl_sext<64,9>(add_ln122_fu_306_p2.read());
}

void Context_layer::thread_sub_ln122_fu_246_p2() {
    sub_ln122_fu_246_p2 = (!zext_ln122_fu_230_p1.read().is_01() || !zext_ln122_1_fu_242_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln122_fu_230_p1.read()) - sc_biguint<9>(zext_ln122_1_fu_242_p1.read()));
}

void Context_layer::thread_tmp_56_fu_172_p3() {
    tmp_56_fu_172_p3 = esl_concat<4,6>(v55_0_reg_97.read(), ap_const_lv6_0);
}

void Context_layer::thread_tmp_57_fu_222_p3() {
    tmp_57_fu_222_p3 = esl_concat<4,4>(i6_0_reg_119.read(), ap_const_lv4_0);
}

void Context_layer::thread_tmp_58_fu_234_p3() {
    tmp_58_fu_234_p3 = esl_concat<4,2>(i6_0_reg_119.read(), ap_const_lv2_0);
}

void Context_layer::thread_tmp_59_fu_252_p3() {
    tmp_59_fu_252_p3 = esl_concat<4,6>(i6_0_reg_119.read(), ap_const_lv6_0);
}

void Context_layer::thread_tmp_60_fu_316_p3() {
    tmp_60_fu_316_p3 = esl_concat<4,6>(k2_0_reg_141.read(), ap_const_lv6_0);
}

void Context_layer::thread_v52_address0() {
    v52_address0 =  (sc_lv<8>) (sext_ln122_fu_311_p1.read());
}

void Context_layer::thread_v52_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v52_ce0 = ap_const_logic_1;
    } else {
        v52_ce0 = ap_const_logic_0;
    }
}

void Context_layer::thread_v53_address0() {
    v53_address0 =  (sc_lv<10>) (zext_ln123_1_fu_333_p1.read());
}

void Context_layer::thread_v53_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        v53_ce0 = ap_const_logic_1;
    } else {
        v53_ce0 = ap_const_logic_0;
    }
}

void Context_layer::thread_v54_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        v54_address0 = v54_addr_1_reg_390.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v54_address0 =  (sc_lv<10>) (zext_ln116_1_fu_205_p1.read());
    } else {
        v54_address0 = "XXXXXXXXXX";
    }
}

void Context_layer::thread_v54_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        v54_ce0 = ap_const_logic_1;
    } else {
        v54_ce0 = ap_const_logic_0;
    }
}

void Context_layer::thread_v54_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        v54_d0 = v64_reg_433.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v54_d0 = ap_const_lv32_0;
    } else {
        v54_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Context_layer::thread_v54_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln115_fu_184_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        v54_we0 = ap_const_logic_1;
    } else {
        v54_we0 = ap_const_logic_0;
    }
}

void Context_layer::thread_v55_fu_166_p2() {
    v55_fu_166_p2 = (!v55_0_reg_97.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(v55_0_reg_97.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Context_layer::thread_v56_fu_190_p2() {
    v56_fu_190_p2 = (!v56_0_reg_108.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(v56_0_reg_108.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void Context_layer::thread_zext_ln115_fu_180_p1() {
    zext_ln115_fu_180_p1 = esl_zext<11,10>(tmp_56_fu_172_p3.read());
}

void Context_layer::thread_zext_ln116_1_fu_205_p1() {
    zext_ln116_1_fu_205_p1 = esl_zext<64,11>(add_ln116_fu_200_p2.read());
}

void Context_layer::thread_zext_ln116_fu_196_p1() {
    zext_ln116_fu_196_p1 = esl_zext<11,7>(v56_0_reg_108.read());
}

void Context_layer::thread_zext_ln120_fu_260_p1() {
    zext_ln120_fu_260_p1 = esl_zext<11,10>(tmp_59_fu_252_p3.read());
}

void Context_layer::thread_zext_ln122_1_fu_242_p1() {
    zext_ln122_1_fu_242_p1 = esl_zext<9,6>(tmp_58_fu_234_p3.read());
}

void Context_layer::thread_zext_ln122_2_fu_302_p1() {
    zext_ln122_2_fu_302_p1 = esl_zext<9,4>(k2_0_reg_141.read());
}

void Context_layer::thread_zext_ln122_fu_230_p1() {
    zext_ln122_fu_230_p1 = esl_zext<9,8>(tmp_57_fu_222_p3.read());
}

void Context_layer::thread_zext_ln123_1_fu_333_p1() {
    zext_ln123_1_fu_333_p1 = esl_zext<64,11>(add_ln123_fu_328_p2.read());
}

void Context_layer::thread_zext_ln123_fu_324_p1() {
    zext_ln123_fu_324_p1 = esl_zext<11,10>(tmp_60_fu_316_p3.read());
}

void Context_layer::thread_zext_ln125_1_fu_285_p1() {
    zext_ln125_1_fu_285_p1 = esl_zext<64,11>(add_ln125_fu_280_p2.read());
}

void Context_layer::thread_zext_ln125_fu_276_p1() {
    zext_ln125_fu_276_p1 = esl_zext<11,7>(j6_0_reg_130.read());
}

void Context_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln114_fu_160_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln115_fu_184_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln119_fu_210_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln120_fu_264_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln121_fu_290_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

