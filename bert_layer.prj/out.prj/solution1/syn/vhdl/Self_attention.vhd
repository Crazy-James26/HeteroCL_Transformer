-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Self_attention is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v65_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v65_ce0 : OUT STD_LOGIC;
    v65_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v66_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v66_ce0 : OUT STD_LOGIC;
    v66_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v67_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v67_ce0 : OUT STD_LOGIC;
    v67_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v68_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v68_ce0 : OUT STD_LOGIC;
    v68_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v69_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v69_ce0 : OUT STD_LOGIC;
    v69_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v70_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v70_ce0 : OUT STD_LOGIC;
    v70_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v71_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v71_ce0 : OUT STD_LOGIC;
    v71_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v72_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v72_ce0 : OUT STD_LOGIC;
    v72_we0 : OUT STD_LOGIC;
    v72_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Self_attention is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal h_fu_308_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal h_reg_533 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal shl_ln_fu_314_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_reg_538 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln149_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i7_fu_328_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i7_reg_547 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal sub_ln155_fu_358_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln155_reg_552 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln153_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln154_1_fu_372_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln154_1_reg_557 : STD_LOGIC_VECTOR (10 downto 0);
    signal j7_fu_386_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal j7_reg_565 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln154_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln156_fu_417_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln156_reg_585 : STD_LOGIC_VECTOR (10 downto 0);
    signal i8_fu_434_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i8_reg_593 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sub_ln172_fu_464_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln172_reg_598 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln169_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln170_1_fu_478_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln170_1_reg_603 : STD_LOGIC_VECTOR (10 downto 0);
    signal j8_fu_492_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal j8_reg_611 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln170_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln172_1_fu_521_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln172_1_reg_621 : STD_LOGIC_VECTOR (14 downto 0);
    signal v73_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal v73_ce0 : STD_LOGIC;
    signal v73_we0 : STD_LOGIC;
    signal v73_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v74_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal v74_ce0 : STD_LOGIC;
    signal v74_we0 : STD_LOGIC;
    signal v74_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v75_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal v75_ce0 : STD_LOGIC;
    signal v75_we0 : STD_LOGIC;
    signal v75_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Q_h_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal Q_h_ce0 : STD_LOGIC;
    signal Q_h_we0 : STD_LOGIC;
    signal Q_h_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal K_h_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal K_h_ce0 : STD_LOGIC;
    signal K_h_we0 : STD_LOGIC;
    signal K_h_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal V_h_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal V_h_ce0 : STD_LOGIC;
    signal V_h_we0 : STD_LOGIC;
    signal V_h_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v85_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal v85_ce0 : STD_LOGIC;
    signal v85_we0 : STD_LOGIC;
    signal v85_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v85_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v86_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal v86_ce0 : STD_LOGIC;
    signal v86_we0 : STD_LOGIC;
    signal v86_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v87_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal v87_ce0 : STD_LOGIC;
    signal v87_we0 : STD_LOGIC;
    signal v87_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Softmax_layer_fu_266_ap_start : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_ap_done : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_ap_idle : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_ap_ready : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_v36_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Softmax_layer_fu_266_v36_ce0 : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_v36_we0 : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_v36_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Softmax_layer_fu_266_v37_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Softmax_layer_fu_266_v37_ce0 : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_v37_we0 : STD_LOGIC;
    signal grp_Softmax_layer_fu_266_v37_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_ap_start : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_ap_done : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_ap_idle : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_ap_ready : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_v0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v0_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_v1_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v1_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_v1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v2_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_v2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v3_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_v3_we0 : STD_LOGIC;
    signal grp_Linear_layer_qkvc5_fu_272_v3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Linear_layer_qkvc5_fu_272_v3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Attention_layer_fu_288_ap_start : STD_LOGIC;
    signal grp_Attention_layer_fu_288_ap_done : STD_LOGIC;
    signal grp_Attention_layer_fu_288_ap_idle : STD_LOGIC;
    signal grp_Attention_layer_fu_288_ap_ready : STD_LOGIC;
    signal grp_Attention_layer_fu_288_v19_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Attention_layer_fu_288_v19_ce0 : STD_LOGIC;
    signal grp_Attention_layer_fu_288_v20_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Attention_layer_fu_288_v20_ce0 : STD_LOGIC;
    signal grp_Attention_layer_fu_288_v21_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Attention_layer_fu_288_v21_ce0 : STD_LOGIC;
    signal grp_Attention_layer_fu_288_v21_we0 : STD_LOGIC;
    signal grp_Attention_layer_fu_288_v21_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Context_layer_fu_295_ap_start : STD_LOGIC;
    signal grp_Context_layer_fu_295_ap_done : STD_LOGIC;
    signal grp_Context_layer_fu_295_ap_idle : STD_LOGIC;
    signal grp_Context_layer_fu_295_ap_ready : STD_LOGIC;
    signal grp_Context_layer_fu_295_v52_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Context_layer_fu_295_v52_ce0 : STD_LOGIC;
    signal grp_Context_layer_fu_295_v53_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Context_layer_fu_295_v53_ce0 : STD_LOGIC;
    signal grp_Context_layer_fu_295_v54_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Context_layer_fu_295_v54_ce0 : STD_LOGIC;
    signal grp_Context_layer_fu_295_v54_we0 : STD_LOGIC;
    signal grp_Context_layer_fu_295_v54_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_0_reg_211 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i7_0_reg_222 : STD_LOGIC_VECTOR (3 downto 0);
    signal j7_0_reg_233 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i8_0_reg_244 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal j8_0_reg_255 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_Softmax_layer_fu_266_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_Linear_layer_qkvc5_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_Attention_layer_fu_288_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_Context_layer_fu_295_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal sext_ln155_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln156_1_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln171_1_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln172_fu_526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_334_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_20_fu_346_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln155_fu_342_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln155_1_fu_354_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_21_fu_364_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln154_fu_376_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln155_fu_392_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln155_2_fu_397_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln155_1_fu_401_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln156_fu_413_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_440_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_23_fu_452_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln172_fu_448_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln172_1_fu_460_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_24_fu_470_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln171_fu_498_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln171_fu_502_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln170_fu_482_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln172_fu_512_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln172_2_fu_517_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component Softmax_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v36_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v36_ce0 : OUT STD_LOGIC;
        v36_we0 : OUT STD_LOGIC;
        v36_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v37_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v37_ce0 : OUT STD_LOGIC;
        v37_we0 : OUT STD_LOGIC;
        v37_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Linear_layer_qkvc5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v0_ce0 : OUT STD_LOGIC;
        v0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v1_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        v1_ce0 : OUT STD_LOGIC;
        v1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v2_ce0 : OUT STD_LOGIC;
        v2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v3_ce0 : OUT STD_LOGIC;
        v3_we0 : OUT STD_LOGIC;
        v3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v3_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Attention_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v19_ce0 : OUT STD_LOGIC;
        v19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v20_ce0 : OUT STD_LOGIC;
        v20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v21_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v21_ce0 : OUT STD_LOGIC;
        v21_we0 : OUT STD_LOGIC;
        v21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v21_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Context_layer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v52_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v52_ce0 : OUT STD_LOGIC;
        v52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v53_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v53_ce0 : OUT STD_LOGIC;
        v53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v54_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v54_ce0 : OUT STD_LOGIC;
        v54_we0 : OUT STD_LOGIC;
        v54_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v54_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Self_attention_v73 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Self_attention_Q_h IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Self_attention_v85 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    v73_U : component Self_attention_v73
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v73_address0,
        ce0 => v73_ce0,
        we0 => v73_we0,
        d0 => grp_Linear_layer_qkvc5_fu_272_v3_d0,
        q0 => v73_q0);

    v74_U : component Self_attention_v73
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v74_address0,
        ce0 => v74_ce0,
        we0 => v74_we0,
        d0 => grp_Linear_layer_qkvc5_fu_272_v3_d0,
        q0 => v74_q0);

    v75_U : component Self_attention_v73
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v75_address0,
        ce0 => v75_ce0,
        we0 => v75_we0,
        d0 => grp_Linear_layer_qkvc5_fu_272_v3_d0,
        q0 => v75_q0);

    Q_h_U : component Self_attention_Q_h
    generic map (
        DataWidth => 32,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Q_h_address0,
        ce0 => Q_h_ce0,
        we0 => Q_h_we0,
        d0 => v73_q0,
        q0 => Q_h_q0);

    K_h_U : component Self_attention_Q_h
    generic map (
        DataWidth => 32,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => K_h_address0,
        ce0 => K_h_ce0,
        we0 => K_h_we0,
        d0 => v74_q0,
        q0 => K_h_q0);

    V_h_U : component Self_attention_Q_h
    generic map (
        DataWidth => 32,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => V_h_address0,
        ce0 => V_h_ce0,
        we0 => V_h_we0,
        d0 => v75_q0,
        q0 => V_h_q0);

    v85_U : component Self_attention_v85
    generic map (
        DataWidth => 32,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v85_address0,
        ce0 => v85_ce0,
        we0 => v85_we0,
        d0 => v85_d0,
        q0 => v85_q0);

    v86_U : component Self_attention_v85
    generic map (
        DataWidth => 32,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v86_address0,
        ce0 => v86_ce0,
        we0 => v86_we0,
        d0 => grp_Softmax_layer_fu_266_v37_d0,
        q0 => v86_q0);

    v87_U : component Self_attention_Q_h
    generic map (
        DataWidth => 32,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v87_address0,
        ce0 => v87_ce0,
        we0 => v87_we0,
        d0 => grp_Context_layer_fu_295_v54_d0,
        q0 => v87_q0);

    grp_Softmax_layer_fu_266 : component Softmax_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Softmax_layer_fu_266_ap_start,
        ap_done => grp_Softmax_layer_fu_266_ap_done,
        ap_idle => grp_Softmax_layer_fu_266_ap_idle,
        ap_ready => grp_Softmax_layer_fu_266_ap_ready,
        v36_address0 => grp_Softmax_layer_fu_266_v36_address0,
        v36_ce0 => grp_Softmax_layer_fu_266_v36_ce0,
        v36_we0 => grp_Softmax_layer_fu_266_v36_we0,
        v36_d0 => grp_Softmax_layer_fu_266_v36_d0,
        v36_q0 => v85_q0,
        v37_address0 => grp_Softmax_layer_fu_266_v37_address0,
        v37_ce0 => grp_Softmax_layer_fu_266_v37_ce0,
        v37_we0 => grp_Softmax_layer_fu_266_v37_we0,
        v37_d0 => grp_Softmax_layer_fu_266_v37_d0);

    grp_Linear_layer_qkvc5_fu_272 : component Linear_layer_qkvc5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Linear_layer_qkvc5_fu_272_ap_start,
        ap_done => grp_Linear_layer_qkvc5_fu_272_ap_done,
        ap_idle => grp_Linear_layer_qkvc5_fu_272_ap_idle,
        ap_ready => grp_Linear_layer_qkvc5_fu_272_ap_ready,
        v0_address0 => grp_Linear_layer_qkvc5_fu_272_v0_address0,
        v0_ce0 => grp_Linear_layer_qkvc5_fu_272_v0_ce0,
        v0_q0 => v65_q0,
        v1_address0 => grp_Linear_layer_qkvc5_fu_272_v1_address0,
        v1_ce0 => grp_Linear_layer_qkvc5_fu_272_v1_ce0,
        v1_q0 => grp_Linear_layer_qkvc5_fu_272_v1_q0,
        v2_address0 => grp_Linear_layer_qkvc5_fu_272_v2_address0,
        v2_ce0 => grp_Linear_layer_qkvc5_fu_272_v2_ce0,
        v2_q0 => grp_Linear_layer_qkvc5_fu_272_v2_q0,
        v3_address0 => grp_Linear_layer_qkvc5_fu_272_v3_address0,
        v3_ce0 => grp_Linear_layer_qkvc5_fu_272_v3_ce0,
        v3_we0 => grp_Linear_layer_qkvc5_fu_272_v3_we0,
        v3_d0 => grp_Linear_layer_qkvc5_fu_272_v3_d0,
        v3_q0 => grp_Linear_layer_qkvc5_fu_272_v3_q0);

    grp_Attention_layer_fu_288 : component Attention_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Attention_layer_fu_288_ap_start,
        ap_done => grp_Attention_layer_fu_288_ap_done,
        ap_idle => grp_Attention_layer_fu_288_ap_idle,
        ap_ready => grp_Attention_layer_fu_288_ap_ready,
        v19_address0 => grp_Attention_layer_fu_288_v19_address0,
        v19_ce0 => grp_Attention_layer_fu_288_v19_ce0,
        v19_q0 => Q_h_q0,
        v20_address0 => grp_Attention_layer_fu_288_v20_address0,
        v20_ce0 => grp_Attention_layer_fu_288_v20_ce0,
        v20_q0 => K_h_q0,
        v21_address0 => grp_Attention_layer_fu_288_v21_address0,
        v21_ce0 => grp_Attention_layer_fu_288_v21_ce0,
        v21_we0 => grp_Attention_layer_fu_288_v21_we0,
        v21_d0 => grp_Attention_layer_fu_288_v21_d0,
        v21_q0 => v85_q0);

    grp_Context_layer_fu_295 : component Context_layer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Context_layer_fu_295_ap_start,
        ap_done => grp_Context_layer_fu_295_ap_done,
        ap_idle => grp_Context_layer_fu_295_ap_idle,
        ap_ready => grp_Context_layer_fu_295_ap_ready,
        v52_address0 => grp_Context_layer_fu_295_v52_address0,
        v52_ce0 => grp_Context_layer_fu_295_v52_ce0,
        v52_q0 => v86_q0,
        v53_address0 => grp_Context_layer_fu_295_v53_address0,
        v53_ce0 => grp_Context_layer_fu_295_v53_ce0,
        v53_q0 => V_h_q0,
        v54_address0 => grp_Context_layer_fu_295_v54_address0,
        v54_ce0 => grp_Context_layer_fu_295_v54_ce0,
        v54_we0 => grp_Context_layer_fu_295_v54_we0,
        v54_d0 => grp_Context_layer_fu_295_v54_d0,
        v54_q0 => v87_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Attention_layer_fu_288_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Attention_layer_fu_288_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln153_fu_322_p2 = ap_const_lv1_1))) then 
                    grp_Attention_layer_fu_288_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Attention_layer_fu_288_ap_ready = ap_const_logic_1)) then 
                    grp_Attention_layer_fu_288_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Context_layer_fu_295_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Context_layer_fu_295_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_Context_layer_fu_295_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Context_layer_fu_295_ap_ready = ap_const_logic_1)) then 
                    grp_Context_layer_fu_295_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Linear_layer_qkvc5_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Linear_layer_qkvc5_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_Linear_layer_qkvc5_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Linear_layer_qkvc5_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_Linear_layer_qkvc5_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Softmax_layer_fu_266_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Softmax_layer_fu_266_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_Softmax_layer_fu_266_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Softmax_layer_fu_266_ap_ready = ap_const_logic_1)) then 
                    grp_Softmax_layer_fu_266_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    h_0_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln169_fu_428_p2 = ap_const_lv1_1))) then 
                h_0_reg_211 <= h_reg_533;
            elsif (((grp_Linear_layer_qkvc5_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                h_0_reg_211 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i7_0_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln154_fu_380_p2 = ap_const_lv1_1))) then 
                i7_0_reg_222 <= i7_reg_547;
            elsif (((icmp_ln149_fu_302_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i7_0_reg_222 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i8_0_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln170_fu_486_p2 = ap_const_lv1_1))) then 
                i8_0_reg_244 <= i8_reg_593;
            elsif (((grp_Context_layer_fu_295_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i8_0_reg_244 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j7_0_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                j7_0_reg_233 <= j7_reg_565;
            elsif (((icmp_ln153_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                j7_0_reg_233 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    j8_0_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                j8_0_reg_255 <= j8_reg_611;
            elsif (((icmp_ln169_fu_428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                j8_0_reg_255 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln154_fu_380_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                add_ln156_reg_585 <= add_ln156_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln170_fu_486_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                add_ln172_1_reg_621 <= add_ln172_1_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                h_reg_533 <= h_fu_308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i7_reg_547 <= i7_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                i8_reg_593 <= i8_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                j7_reg_565 <= j7_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                j8_reg_611 <= j8_fu_492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln149_fu_302_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    shl_ln_reg_538(9 downto 6) <= shl_ln_fu_314_p3(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln153_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    sub_ln155_reg_552(14 downto 8) <= sub_ln155_fu_358_p2(14 downto 8);
                    zext_ln154_1_reg_557(9 downto 6) <= zext_ln154_1_fu_372_p1(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln169_fu_428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    sub_ln172_reg_598(14 downto 8) <= sub_ln172_fu_464_p2(14 downto 8);
                    zext_ln170_1_reg_603(9 downto 6) <= zext_ln170_1_fu_478_p1(9 downto 6);
            end if;
        end if;
    end process;
    shl_ln_reg_538(5 downto 0) <= "000000";
    sub_ln155_reg_552(7 downto 0) <= "00000000";
    zext_ln154_1_reg_557(5 downto 0) <= "000000";
    zext_ln154_1_reg_557(10) <= '0';
    sub_ln172_reg_598(7 downto 0) <= "00000000";
    zext_ln170_1_reg_603(5 downto 0) <= "000000";
    zext_ln170_1_reg_603(10) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln149_fu_302_p2, ap_CS_fsm_state8, icmp_ln153_fu_322_p2, ap_CS_fsm_state9, icmp_ln154_fu_380_p2, ap_CS_fsm_state16, icmp_ln169_fu_428_p2, ap_CS_fsm_state17, icmp_ln170_fu_486_p2, grp_Softmax_layer_fu_266_ap_done, grp_Linear_layer_qkvc5_fu_272_ap_done, grp_Attention_layer_fu_288_ap_done, grp_Context_layer_fu_295_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state15, ap_CS_fsm_state13, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_Linear_layer_qkvc5_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_Linear_layer_qkvc5_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_Linear_layer_qkvc5_fu_272_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln149_fu_302_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln153_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln154_fu_380_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                if (((grp_Attention_layer_fu_288_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_Softmax_layer_fu_266_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_Context_layer_fu_295_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln169_fu_428_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln170_fu_486_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    K_h_address0_assign_proc : process(grp_Attention_layer_fu_288_v20_address0, ap_CS_fsm_state10, ap_CS_fsm_state11, zext_ln156_1_fu_422_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            K_h_address0 <= zext_ln156_1_fu_422_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            K_h_address0 <= grp_Attention_layer_fu_288_v20_address0;
        else 
            K_h_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    K_h_ce0_assign_proc : process(grp_Attention_layer_fu_288_v20_ce0, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            K_h_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            K_h_ce0 <= grp_Attention_layer_fu_288_v20_ce0;
        else 
            K_h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    K_h_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            K_h_we0 <= ap_const_logic_1;
        else 
            K_h_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Q_h_address0_assign_proc : process(grp_Attention_layer_fu_288_v19_address0, ap_CS_fsm_state10, ap_CS_fsm_state11, zext_ln156_1_fu_422_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            Q_h_address0 <= zext_ln156_1_fu_422_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            Q_h_address0 <= grp_Attention_layer_fu_288_v19_address0;
        else 
            Q_h_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    Q_h_ce0_assign_proc : process(grp_Attention_layer_fu_288_v19_ce0, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            Q_h_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            Q_h_ce0 <= grp_Attention_layer_fu_288_v19_ce0;
        else 
            Q_h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Q_h_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            Q_h_we0 <= ap_const_logic_1;
        else 
            Q_h_we0 <= ap_const_logic_0;
        end if; 
    end process;


    V_h_address0_assign_proc : process(grp_Context_layer_fu_295_v53_address0, ap_CS_fsm_state10, ap_CS_fsm_state15, zext_ln156_1_fu_422_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            V_h_address0 <= zext_ln156_1_fu_422_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            V_h_address0 <= grp_Context_layer_fu_295_v53_address0;
        else 
            V_h_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    V_h_ce0_assign_proc : process(grp_Context_layer_fu_295_v53_ce0, ap_CS_fsm_state10, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            V_h_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            V_h_ce0 <= grp_Context_layer_fu_295_v53_ce0;
        else 
            V_h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    V_h_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            V_h_we0 <= ap_const_logic_1;
        else 
            V_h_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln155_1_fu_401_p2 <= std_logic_vector(unsigned(sub_ln155_reg_552) + unsigned(zext_ln155_2_fu_397_p1));
    add_ln155_fu_392_p2 <= std_logic_vector(unsigned(zext_ln154_fu_376_p1) + unsigned(shl_ln_reg_538));
    add_ln156_fu_417_p2 <= std_logic_vector(unsigned(zext_ln154_1_reg_557) + unsigned(zext_ln156_fu_413_p1));
    add_ln171_fu_502_p2 <= std_logic_vector(unsigned(zext_ln170_1_reg_603) + unsigned(zext_ln171_fu_498_p1));
    add_ln172_1_fu_521_p2 <= std_logic_vector(unsigned(sub_ln172_reg_598) + unsigned(zext_ln172_2_fu_517_p1));
    add_ln172_fu_512_p2 <= std_logic_vector(unsigned(zext_ln170_fu_482_p1) + unsigned(shl_ln_reg_538));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln149_fu_302_p2)
    begin
        if ((((icmp_ln149_fu_302_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, icmp_ln149_fu_302_p2)
    begin
        if (((icmp_ln149_fu_302_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_Attention_layer_fu_288_ap_start <= grp_Attention_layer_fu_288_ap_start_reg;
    grp_Context_layer_fu_295_ap_start <= grp_Context_layer_fu_295_ap_start_reg;
    grp_Linear_layer_qkvc5_fu_272_ap_start <= grp_Linear_layer_qkvc5_fu_272_ap_start_reg;

    grp_Linear_layer_qkvc5_fu_272_v1_q0_assign_proc : process(v66_q0, v68_q0, v70_q0, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Linear_layer_qkvc5_fu_272_v1_q0 <= v70_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Linear_layer_qkvc5_fu_272_v1_q0 <= v68_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_Linear_layer_qkvc5_fu_272_v1_q0 <= v66_q0;
        else 
            grp_Linear_layer_qkvc5_fu_272_v1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Linear_layer_qkvc5_fu_272_v2_q0_assign_proc : process(v67_q0, v69_q0, v71_q0, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Linear_layer_qkvc5_fu_272_v2_q0 <= v71_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Linear_layer_qkvc5_fu_272_v2_q0 <= v69_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_Linear_layer_qkvc5_fu_272_v2_q0 <= v67_q0;
        else 
            grp_Linear_layer_qkvc5_fu_272_v2_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Linear_layer_qkvc5_fu_272_v3_q0_assign_proc : process(v73_q0, v74_q0, v75_q0, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_Linear_layer_qkvc5_fu_272_v3_q0 <= v75_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_Linear_layer_qkvc5_fu_272_v3_q0 <= v74_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_Linear_layer_qkvc5_fu_272_v3_q0 <= v73_q0;
        else 
            grp_Linear_layer_qkvc5_fu_272_v3_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_Softmax_layer_fu_266_ap_start <= grp_Softmax_layer_fu_266_ap_start_reg;
    h_fu_308_p2 <= std_logic_vector(unsigned(h_0_reg_211) + unsigned(ap_const_lv4_1));
    i7_fu_328_p2 <= std_logic_vector(unsigned(i7_0_reg_222) + unsigned(ap_const_lv4_1));
    i8_fu_434_p2 <= std_logic_vector(unsigned(i8_0_reg_244) + unsigned(ap_const_lv4_1));
    icmp_ln149_fu_302_p2 <= "1" when (h_0_reg_211 = ap_const_lv4_C) else "0";
    icmp_ln153_fu_322_p2 <= "1" when (i7_0_reg_222 = ap_const_lv4_C) else "0";
    icmp_ln154_fu_380_p2 <= "1" when (j7_0_reg_233 = ap_const_lv7_40) else "0";
    icmp_ln169_fu_428_p2 <= "1" when (i8_0_reg_244 = ap_const_lv4_C) else "0";
    icmp_ln170_fu_486_p2 <= "1" when (j8_0_reg_255 = ap_const_lv7_40) else "0";
    j7_fu_386_p2 <= std_logic_vector(unsigned(j7_0_reg_233) + unsigned(ap_const_lv7_1));
    j8_fu_492_p2 <= std_logic_vector(unsigned(j8_0_reg_255) + unsigned(ap_const_lv7_1));
        sext_ln155_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln155_1_fu_401_p2),64));

        sext_ln172_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln172_1_reg_621),64));

    shl_ln_fu_314_p3 <= (h_0_reg_211 & ap_const_lv6_0);
    sub_ln155_fu_358_p2 <= std_logic_vector(unsigned(zext_ln155_fu_342_p1) - unsigned(zext_ln155_1_fu_354_p1));
    sub_ln172_fu_464_p2 <= std_logic_vector(unsigned(zext_ln172_fu_448_p1) - unsigned(zext_ln172_1_fu_460_p1));
    tmp_19_fu_334_p3 <= (i7_0_reg_222 & ap_const_lv10_0);
    tmp_20_fu_346_p3 <= (i7_0_reg_222 & ap_const_lv8_0);
    tmp_21_fu_364_p3 <= (i7_0_reg_222 & ap_const_lv6_0);
    tmp_22_fu_440_p3 <= (i8_0_reg_244 & ap_const_lv10_0);
    tmp_23_fu_452_p3 <= (i8_0_reg_244 & ap_const_lv8_0);
    tmp_24_fu_470_p3 <= (i8_0_reg_244 & ap_const_lv6_0);
    v65_address0 <= grp_Linear_layer_qkvc5_fu_272_v0_address0;

    v65_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v0_ce0, ap_CS_fsm_state6, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            v65_ce0 <= grp_Linear_layer_qkvc5_fu_272_v0_ce0;
        else 
            v65_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v66_address0 <= grp_Linear_layer_qkvc5_fu_272_v1_address0;

    v66_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v1_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v66_ce0 <= grp_Linear_layer_qkvc5_fu_272_v1_ce0;
        else 
            v66_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v67_address0 <= grp_Linear_layer_qkvc5_fu_272_v2_address0;

    v67_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v2_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v67_ce0 <= grp_Linear_layer_qkvc5_fu_272_v2_ce0;
        else 
            v67_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v68_address0 <= grp_Linear_layer_qkvc5_fu_272_v1_address0;

    v68_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v1_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v68_ce0 <= grp_Linear_layer_qkvc5_fu_272_v1_ce0;
        else 
            v68_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v69_address0 <= grp_Linear_layer_qkvc5_fu_272_v2_address0;

    v69_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v2_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v69_ce0 <= grp_Linear_layer_qkvc5_fu_272_v2_ce0;
        else 
            v69_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v70_address0 <= grp_Linear_layer_qkvc5_fu_272_v1_address0;

    v70_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v1_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v70_ce0 <= grp_Linear_layer_qkvc5_fu_272_v1_ce0;
        else 
            v70_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v71_address0 <= grp_Linear_layer_qkvc5_fu_272_v2_address0;

    v71_ce0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v2_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v71_ce0 <= grp_Linear_layer_qkvc5_fu_272_v2_ce0;
        else 
            v71_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v72_address0 <= sext_ln172_fu_526_p1(14 - 1 downto 0);

    v72_ce0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            v72_ce0 <= ap_const_logic_1;
        else 
            v72_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v72_d0 <= v87_q0;

    v72_we0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            v72_we0 <= ap_const_logic_1;
        else 
            v72_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v73_address0_assign_proc : process(ap_CS_fsm_state9, grp_Linear_layer_qkvc5_fu_272_v3_address0, ap_CS_fsm_state2, sext_ln155_fu_406_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v73_address0 <= sext_ln155_fu_406_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v73_address0 <= grp_Linear_layer_qkvc5_fu_272_v3_address0;
        else 
            v73_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    v73_ce0_assign_proc : process(ap_CS_fsm_state9, grp_Linear_layer_qkvc5_fu_272_v3_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v73_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v73_ce0 <= grp_Linear_layer_qkvc5_fu_272_v3_ce0;
        else 
            v73_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v73_we0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v3_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v73_we0 <= grp_Linear_layer_qkvc5_fu_272_v3_we0;
        else 
            v73_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v74_address0_assign_proc : process(ap_CS_fsm_state9, grp_Linear_layer_qkvc5_fu_272_v3_address0, ap_CS_fsm_state4, sext_ln155_fu_406_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v74_address0 <= sext_ln155_fu_406_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v74_address0 <= grp_Linear_layer_qkvc5_fu_272_v3_address0;
        else 
            v74_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    v74_ce0_assign_proc : process(ap_CS_fsm_state9, grp_Linear_layer_qkvc5_fu_272_v3_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v74_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v74_ce0 <= grp_Linear_layer_qkvc5_fu_272_v3_ce0;
        else 
            v74_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v74_we0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v3_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v74_we0 <= grp_Linear_layer_qkvc5_fu_272_v3_we0;
        else 
            v74_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v75_address0_assign_proc : process(ap_CS_fsm_state9, grp_Linear_layer_qkvc5_fu_272_v3_address0, ap_CS_fsm_state6, sext_ln155_fu_406_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v75_address0 <= sext_ln155_fu_406_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v75_address0 <= grp_Linear_layer_qkvc5_fu_272_v3_address0;
        else 
            v75_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    v75_ce0_assign_proc : process(ap_CS_fsm_state9, grp_Linear_layer_qkvc5_fu_272_v3_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v75_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v75_ce0 <= grp_Linear_layer_qkvc5_fu_272_v3_ce0;
        else 
            v75_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v75_we0_assign_proc : process(grp_Linear_layer_qkvc5_fu_272_v3_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            v75_we0 <= grp_Linear_layer_qkvc5_fu_272_v3_we0;
        else 
            v75_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v85_address0_assign_proc : process(grp_Softmax_layer_fu_266_v36_address0, grp_Attention_layer_fu_288_v21_address0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v85_address0 <= grp_Attention_layer_fu_288_v21_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v85_address0 <= grp_Softmax_layer_fu_266_v36_address0;
        else 
            v85_address0 <= "XXXXXXXX";
        end if; 
    end process;


    v85_ce0_assign_proc : process(grp_Softmax_layer_fu_266_v36_ce0, grp_Attention_layer_fu_288_v21_ce0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v85_ce0 <= grp_Attention_layer_fu_288_v21_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v85_ce0 <= grp_Softmax_layer_fu_266_v36_ce0;
        else 
            v85_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v85_d0_assign_proc : process(grp_Softmax_layer_fu_266_v36_d0, grp_Attention_layer_fu_288_v21_d0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v85_d0 <= grp_Attention_layer_fu_288_v21_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v85_d0 <= grp_Softmax_layer_fu_266_v36_d0;
        else 
            v85_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v85_we0_assign_proc : process(grp_Softmax_layer_fu_266_v36_we0, grp_Attention_layer_fu_288_v21_we0, ap_CS_fsm_state13, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v85_we0 <= grp_Attention_layer_fu_288_v21_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v85_we0 <= grp_Softmax_layer_fu_266_v36_we0;
        else 
            v85_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v86_address0_assign_proc : process(grp_Softmax_layer_fu_266_v37_address0, grp_Context_layer_fu_295_v52_address0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v86_address0 <= grp_Context_layer_fu_295_v52_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v86_address0 <= grp_Softmax_layer_fu_266_v37_address0;
        else 
            v86_address0 <= "XXXXXXXX";
        end if; 
    end process;


    v86_ce0_assign_proc : process(grp_Softmax_layer_fu_266_v37_ce0, grp_Context_layer_fu_295_v52_ce0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v86_ce0 <= grp_Context_layer_fu_295_v52_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v86_ce0 <= grp_Softmax_layer_fu_266_v37_ce0;
        else 
            v86_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v86_we0_assign_proc : process(grp_Softmax_layer_fu_266_v37_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v86_we0 <= grp_Softmax_layer_fu_266_v37_we0;
        else 
            v86_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v87_address0_assign_proc : process(ap_CS_fsm_state17, grp_Context_layer_fu_295_v54_address0, ap_CS_fsm_state15, zext_ln171_1_fu_507_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v87_address0 <= zext_ln171_1_fu_507_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v87_address0 <= grp_Context_layer_fu_295_v54_address0;
        else 
            v87_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    v87_ce0_assign_proc : process(ap_CS_fsm_state17, grp_Context_layer_fu_295_v54_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v87_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v87_ce0 <= grp_Context_layer_fu_295_v54_ce0;
        else 
            v87_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v87_we0_assign_proc : process(grp_Context_layer_fu_295_v54_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v87_we0 <= grp_Context_layer_fu_295_v54_we0;
        else 
            v87_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln154_1_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_364_p3),11));
    zext_ln154_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j7_0_reg_233),10));
    zext_ln155_1_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_346_p3),15));
    zext_ln155_2_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln155_fu_392_p2),15));
    zext_ln155_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_334_p3),15));
    zext_ln156_1_fu_422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln156_reg_585),64));
    zext_ln156_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j7_0_reg_233),11));
    zext_ln170_1_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_470_p3),11));
    zext_ln170_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_0_reg_255),10));
    zext_ln171_1_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln171_fu_502_p2),64));
    zext_ln171_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_0_reg_255),11));
    zext_ln172_1_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_452_p3),15));
    zext_ln172_2_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln172_fu_512_p2),15));
    zext_ln172_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_440_p3),15));
end behav;
