// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Context_layer_HH_
#define _Context_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_fadd_3bkb.h"
#include "Bert_layer_fmul_3cud.h"
#include "Context_layer_v64.h"

namespace ap_rtl {

struct Context_layer : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > v58_address0;
    sc_out< sc_logic > v58_ce0;
    sc_in< sc_lv<32> > v58_q0;
    sc_out< sc_lv<10> > v59_address0;
    sc_out< sc_logic > v59_ce0;
    sc_in< sc_lv<32> > v59_q0;
    sc_out< sc_lv<10> > v60_address0;
    sc_out< sc_logic > v60_ce0;
    sc_out< sc_logic > v60_we0;
    sc_out< sc_lv<32> > v60_d0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    Context_layer(sc_module_name name);
    SC_HAS_PROCESS(Context_layer);

    ~Context_layer();

    sc_trace_file* mVcdFile;

    Context_layer_v64* v64_U;
    Bert_layer_fadd_3bkb<1,5,32,32,32>* Bert_layer_fadd_3bkb_U24;
    Bert_layer_fmul_3cud<1,4,32,32,32>* Bert_layer_fmul_3cud_U25;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvar_flatten_reg_200;
    sc_signal< sc_lv<4> > k2_0_reg_211;
    sc_signal< sc_lv<7> > j6_0_reg_222;
    sc_signal< sc_lv<7> > j_back2_0_reg_233;
    sc_signal< sc_lv<4> > v61_fu_258_p2;
    sc_signal< sc_lv<4> > v61_reg_498;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > zext_ln137_fu_272_p1;
    sc_signal< sc_lv<11> > zext_ln137_reg_503;
    sc_signal< sc_lv<1> > icmp_ln136_fu_252_p2;
    sc_signal< sc_lv<7> > v62_fu_282_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln141_fu_302_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > i4_fu_308_p2;
    sc_signal< sc_lv<4> > i4_reg_520;
    sc_signal< sc_lv<7> > j_init2_fu_320_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > sub_ln150_fu_355_p2;
    sc_signal< sc_lv<9> > sub_ln150_reg_533;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > zext_ln147_fu_369_p1;
    sc_signal< sc_lv<11> > zext_ln147_reg_538;
    sc_signal< sc_lv<1> > icmp_ln147_fu_373_p2;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter4;
    sc_signal< bool > ap_block_state12_pp1_stage0_iter5;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter6;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter7;
    sc_signal< bool > ap_block_state15_pp1_stage0_iter8;
    sc_signal< bool > ap_block_state16_pp1_stage0_iter9;
    sc_signal< bool > ap_block_state17_pp1_stage0_iter10;
    sc_signal< bool > ap_block_state18_pp1_stage0_iter11;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln147_reg_543_pp1_iter10_reg;
    sc_signal< sc_lv<10> > add_ln147_fu_379_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<4> > select_ln150_1_fu_405_p3;
    sc_signal< sc_lv<4> > select_ln150_1_reg_552;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter1_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter2_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter3_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter4_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter5_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter6_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter7_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter8_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter9_reg;
    sc_signal< sc_lv<6> > v64_addr_2_reg_567_pp1_iter10_reg;
    sc_signal< sc_lv<7> > j6_fu_459_p2;
    sc_signal< sc_lv<32> > v58_load_reg_578;
    sc_signal< sc_lv<32> > v69_reg_583;
    sc_signal< sc_lv<32> > grp_fu_248_p2;
    sc_signal< sc_lv<32> > v70_reg_588;
    sc_signal< sc_lv<32> > v64_q0;
    sc_signal< sc_lv<32> > v71_reg_593;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter5;
    sc_signal< sc_lv<32> > grp_fu_244_p2;
    sc_signal< sc_lv<32> > v72_reg_598;
    sc_signal< sc_lv<1> > icmp_ln158_fu_465_p2;
    sc_signal< sc_lv<1> > icmp_ln158_reg_603;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state20_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state21_pp2_stage0_iter1;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<7> > j_back2_fu_471_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<11> > add_ln161_fu_486_p2;
    sc_signal< sc_lv<11> > add_ln161_reg_612;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter11;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state20;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<6> > v64_address0;
    sc_signal< sc_logic > v64_ce0;
    sc_signal< sc_logic > v64_we0;
    sc_signal< sc_lv<6> > v64_address1;
    sc_signal< sc_logic > v64_ce1;
    sc_signal< sc_logic > v64_we1;
    sc_signal< sc_lv<32> > v64_q1;
    sc_signal< sc_lv<4> > v61_0_reg_155;
    sc_signal< sc_lv<1> > icmp_ln137_fu_276_p2;
    sc_signal< sc_lv<7> > v62_0_reg_166;
    sc_signal< sc_lv<4> > i4_0_reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<7> > j_init2_0_reg_189;
    sc_signal< sc_lv<1> > icmp_ln143_fu_314_p2;
    sc_signal< sc_lv<4> > ap_phi_mux_k2_0_phi_fu_215_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > zext_ln138_1_fu_297_p1;
    sc_signal< sc_lv<64> > zext_ln145_fu_326_p1;
    sc_signal< sc_lv<64> > sext_ln150_fu_434_p1;
    sc_signal< sc_lv<64> > zext_ln151_2_fu_454_p1;
    sc_signal< sc_lv<64> > zext_ln151_fu_439_p1;
    sc_signal< sc_lv<64> > zext_ln160_fu_477_p1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<64> > zext_ln161_1_fu_491_p1;
    sc_signal< sc_lv<10> > tmp_48_fu_264_p3;
    sc_signal< sc_lv<11> > zext_ln138_fu_288_p1;
    sc_signal< sc_lv<11> > add_ln138_fu_292_p2;
    sc_signal< sc_lv<8> > tmp_49_fu_331_p3;
    sc_signal< sc_lv<6> > tmp_50_fu_343_p3;
    sc_signal< sc_lv<9> > zext_ln150_fu_339_p1;
    sc_signal< sc_lv<9> > zext_ln150_1_fu_351_p1;
    sc_signal< sc_lv<10> > tmp_51_fu_361_p3;
    sc_signal< sc_lv<1> > icmp_ln148_fu_391_p2;
    sc_signal< sc_lv<4> > k2_fu_385_p2;
    sc_signal< sc_lv<10> > tmp_31_fu_413_p3;
    sc_signal< sc_lv<9> > zext_ln150_3_fu_425_p1;
    sc_signal< sc_lv<9> > add_ln150_fu_429_p2;
    sc_signal< sc_lv<7> > select_ln150_fu_397_p3;
    sc_signal< sc_lv<11> > zext_ln150_2_fu_421_p1;
    sc_signal< sc_lv<11> > zext_ln151_1_fu_444_p1;
    sc_signal< sc_lv<11> > add_ln151_fu_448_p2;
    sc_signal< sc_lv<11> > zext_ln161_fu_482_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_pp1_stage0;
    static const sc_lv<10> ap_ST_fsm_state19;
    static const sc_lv<10> ap_ST_fsm_pp2_stage0;
    static const sc_lv<10> ap_ST_fsm_state22;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln138_fu_292_p2();
    void thread_add_ln147_fu_379_p2();
    void thread_add_ln150_fu_429_p2();
    void thread_add_ln151_fu_448_p2();
    void thread_add_ln161_fu_486_p2();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state10_pp1_stage0_iter3();
    void thread_ap_block_state11_pp1_stage0_iter4();
    void thread_ap_block_state12_pp1_stage0_iter5();
    void thread_ap_block_state13_pp1_stage0_iter6();
    void thread_ap_block_state14_pp1_stage0_iter7();
    void thread_ap_block_state15_pp1_stage0_iter8();
    void thread_ap_block_state16_pp1_stage0_iter9();
    void thread_ap_block_state17_pp1_stage0_iter10();
    void thread_ap_block_state18_pp1_stage0_iter11();
    void thread_ap_block_state20_pp2_stage0_iter0();
    void thread_ap_block_state21_pp2_stage0_iter1();
    void thread_ap_block_state7_pp1_stage0_iter0();
    void thread_ap_block_state8_pp1_stage0_iter1();
    void thread_ap_block_state9_pp1_stage0_iter2();
    void thread_ap_condition_pp1_exit_iter0_state7();
    void thread_ap_condition_pp2_exit_iter0_state20();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_k2_0_phi_fu_215_p4();
    void thread_ap_ready();
    void thread_i4_fu_308_p2();
    void thread_icmp_ln136_fu_252_p2();
    void thread_icmp_ln137_fu_276_p2();
    void thread_icmp_ln141_fu_302_p2();
    void thread_icmp_ln143_fu_314_p2();
    void thread_icmp_ln147_fu_373_p2();
    void thread_icmp_ln148_fu_391_p2();
    void thread_icmp_ln158_fu_465_p2();
    void thread_j6_fu_459_p2();
    void thread_j_back2_fu_471_p2();
    void thread_j_init2_fu_320_p2();
    void thread_k2_fu_385_p2();
    void thread_select_ln150_1_fu_405_p3();
    void thread_select_ln150_fu_397_p3();
    void thread_sext_ln150_fu_434_p1();
    void thread_sub_ln150_fu_355_p2();
    void thread_tmp_31_fu_413_p3();
    void thread_tmp_48_fu_264_p3();
    void thread_tmp_49_fu_331_p3();
    void thread_tmp_50_fu_343_p3();
    void thread_tmp_51_fu_361_p3();
    void thread_v58_address0();
    void thread_v58_ce0();
    void thread_v59_address0();
    void thread_v59_ce0();
    void thread_v60_address0();
    void thread_v60_ce0();
    void thread_v60_d0();
    void thread_v60_we0();
    void thread_v61_fu_258_p2();
    void thread_v62_fu_282_p2();
    void thread_v64_address0();
    void thread_v64_address1();
    void thread_v64_ce0();
    void thread_v64_ce1();
    void thread_v64_we0();
    void thread_v64_we1();
    void thread_zext_ln137_fu_272_p1();
    void thread_zext_ln138_1_fu_297_p1();
    void thread_zext_ln138_fu_288_p1();
    void thread_zext_ln145_fu_326_p1();
    void thread_zext_ln147_fu_369_p1();
    void thread_zext_ln150_1_fu_351_p1();
    void thread_zext_ln150_2_fu_421_p1();
    void thread_zext_ln150_3_fu_425_p1();
    void thread_zext_ln150_fu_339_p1();
    void thread_zext_ln151_1_fu_444_p1();
    void thread_zext_ln151_2_fu_454_p1();
    void thread_zext_ln151_fu_439_p1();
    void thread_zext_ln160_fu_477_p1();
    void thread_zext_ln161_1_fu_491_p1();
    void thread_zext_ln161_fu_482_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
