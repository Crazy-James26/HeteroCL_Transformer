// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Res_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Res_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Res_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Res_layer::ap_ST_fsm_state1 = "1";
const sc_lv<3> Res_layer::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Res_layer::ap_ST_fsm_state11 = "100";
const bool Res_layer::ap_const_boolean_1 = true;
const sc_lv<32> Res_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Res_layer::ap_const_lv32_1 = "1";
const bool Res_layer::ap_const_boolean_0 = false;
const sc_lv<1> Res_layer::ap_const_lv1_0 = "0";
const sc_lv<1> Res_layer::ap_const_lv1_1 = "1";
const sc_lv<14> Res_layer::ap_const_lv14_0 = "00000000000000";
const sc_lv<4> Res_layer::ap_const_lv4_0 = "0000";
const sc_lv<10> Res_layer::ap_const_lv10_0 = "0000000000";
const sc_lv<14> Res_layer::ap_const_lv14_2400 = "10010000000000";
const sc_lv<14> Res_layer::ap_const_lv14_1 = "1";
const sc_lv<4> Res_layer::ap_const_lv4_1 = "1";
const sc_lv<10> Res_layer::ap_const_lv10_300 = "1100000000";
const sc_lv<10> Res_layer::ap_const_lv10_1 = "1";
const sc_lv<8> Res_layer::ap_const_lv8_0 = "00000000";
const sc_lv<32> Res_layer::ap_const_lv32_2 = "10";

Res_layer::Res_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Bert_layer_fadd_3bkb_U43 = new Bert_layer_fadd_3bkb<1,5,32,32,32>("Bert_layer_fadd_3bkb_U43");
    Bert_layer_fadd_3bkb_U43->clk(ap_clk);
    Bert_layer_fadd_3bkb_U43->reset(ap_rst);
    Bert_layer_fadd_3bkb_U43->din0(v121_reg_258);
    Bert_layer_fadd_3bkb_U43->din1(v122_reg_263);
    Bert_layer_fadd_3bkb_U43->ce(ap_var_for_const0);
    Bert_layer_fadd_3bkb_U43->dout(grp_fu_124_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln251_fu_134_p2);
    sensitive << ( indvar_flatten_reg_91 );

    SC_METHOD(thread_add_ln254_fu_205_p2);
    sensitive << ( sub_ln254_fu_196_p2 );
    sensitive << ( zext_ln254_2_fu_202_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln251_fu_128_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_phi_mux_i6_0_phi_fu_106_p4);
    sensitive << ( i6_0_reg_102 );
    sensitive << ( icmp_ln251_reg_217 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln254_1_reg_231 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_i6_fu_140_p2);
    sensitive << ( ap_phi_mux_i6_0_phi_fu_106_p4 );

    SC_METHOD(thread_icmp_ln251_fu_128_p2);
    sensitive << ( indvar_flatten_reg_91 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln252_fu_146_p2);
    sensitive << ( j9_0_reg_113 );
    sensitive << ( icmp_ln251_fu_128_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j9_fu_168_p2);
    sensitive << ( select_ln254_fu_152_p3 );

    SC_METHOD(thread_select_ln254_1_fu_160_p3);
    sensitive << ( ap_phi_mux_i6_0_phi_fu_106_p4 );
    sensitive << ( icmp_ln252_fu_146_p2 );
    sensitive << ( i6_fu_140_p2 );

    SC_METHOD(thread_select_ln254_fu_152_p3);
    sensitive << ( j9_0_reg_113 );
    sensitive << ( icmp_ln252_fu_146_p2 );

    SC_METHOD(thread_sext_ln254_fu_211_p1);
    sensitive << ( add_ln254_fu_205_p2 );

    SC_METHOD(thread_sub_ln254_fu_196_p2);
    sensitive << ( zext_ln254_fu_181_p1 );
    sensitive << ( zext_ln254_1_fu_192_p1 );

    SC_METHOD(thread_tmp_20_fu_185_p3);
    sensitive << ( select_ln254_1_reg_231 );

    SC_METHOD(thread_tmp_fu_174_p3);
    sensitive << ( select_ln254_1_reg_231 );

    SC_METHOD(thread_v116_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( sext_ln254_fu_211_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_v116_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_v117_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( sext_ln254_fu_211_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_v117_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_v118_address0);
    sensitive << ( sext_ln254_reg_243_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_v118_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_v118_d0);
    sensitive << ( v123_reg_268 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_v118_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln251_reg_217_pp0_iter7_reg );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_zext_ln254_1_fu_192_p1);
    sensitive << ( tmp_20_fu_185_p3 );

    SC_METHOD(thread_zext_ln254_2_fu_202_p1);
    sensitive << ( select_ln254_reg_226 );

    SC_METHOD(thread_zext_ln254_fu_181_p1);
    sensitive << ( tmp_fu_174_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln251_fu_128_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Res_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v116_address0, "(port)v116_address0");
    sc_trace(mVcdFile, v116_ce0, "(port)v116_ce0");
    sc_trace(mVcdFile, v116_q0, "(port)v116_q0");
    sc_trace(mVcdFile, v117_address0, "(port)v117_address0");
    sc_trace(mVcdFile, v117_ce0, "(port)v117_ce0");
    sc_trace(mVcdFile, v117_q0, "(port)v117_q0");
    sc_trace(mVcdFile, v118_address0, "(port)v118_address0");
    sc_trace(mVcdFile, v118_ce0, "(port)v118_ce0");
    sc_trace(mVcdFile, v118_we0, "(port)v118_we0");
    sc_trace(mVcdFile, v118_d0, "(port)v118_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_91, "indvar_flatten_reg_91");
    sc_trace(mVcdFile, i6_0_reg_102, "i6_0_reg_102");
    sc_trace(mVcdFile, j9_0_reg_113, "j9_0_reg_113");
    sc_trace(mVcdFile, icmp_ln251_fu_128_p2, "icmp_ln251_fu_128_p2");
    sc_trace(mVcdFile, icmp_ln251_reg_217, "icmp_ln251_reg_217");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter1_reg, "icmp_ln251_reg_217_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter2_reg, "icmp_ln251_reg_217_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter3_reg, "icmp_ln251_reg_217_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter4_reg, "icmp_ln251_reg_217_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter5_reg, "icmp_ln251_reg_217_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter6_reg, "icmp_ln251_reg_217_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln251_reg_217_pp0_iter7_reg, "icmp_ln251_reg_217_pp0_iter7_reg");
    sc_trace(mVcdFile, add_ln251_fu_134_p2, "add_ln251_fu_134_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln254_fu_152_p3, "select_ln254_fu_152_p3");
    sc_trace(mVcdFile, select_ln254_reg_226, "select_ln254_reg_226");
    sc_trace(mVcdFile, select_ln254_1_fu_160_p3, "select_ln254_1_fu_160_p3");
    sc_trace(mVcdFile, select_ln254_1_reg_231, "select_ln254_1_reg_231");
    sc_trace(mVcdFile, j9_fu_168_p2, "j9_fu_168_p2");
    sc_trace(mVcdFile, sext_ln254_fu_211_p1, "sext_ln254_fu_211_p1");
    sc_trace(mVcdFile, sext_ln254_reg_243, "sext_ln254_reg_243");
    sc_trace(mVcdFile, sext_ln254_reg_243_pp0_iter2_reg, "sext_ln254_reg_243_pp0_iter2_reg");
    sc_trace(mVcdFile, sext_ln254_reg_243_pp0_iter3_reg, "sext_ln254_reg_243_pp0_iter3_reg");
    sc_trace(mVcdFile, sext_ln254_reg_243_pp0_iter4_reg, "sext_ln254_reg_243_pp0_iter4_reg");
    sc_trace(mVcdFile, sext_ln254_reg_243_pp0_iter5_reg, "sext_ln254_reg_243_pp0_iter5_reg");
    sc_trace(mVcdFile, sext_ln254_reg_243_pp0_iter6_reg, "sext_ln254_reg_243_pp0_iter6_reg");
    sc_trace(mVcdFile, sext_ln254_reg_243_pp0_iter7_reg, "sext_ln254_reg_243_pp0_iter7_reg");
    sc_trace(mVcdFile, v121_reg_258, "v121_reg_258");
    sc_trace(mVcdFile, v122_reg_263, "v122_reg_263");
    sc_trace(mVcdFile, grp_fu_124_p2, "grp_fu_124_p2");
    sc_trace(mVcdFile, v123_reg_268, "v123_reg_268");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_phi_mux_i6_0_phi_fu_106_p4, "ap_phi_mux_i6_0_phi_fu_106_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln252_fu_146_p2, "icmp_ln252_fu_146_p2");
    sc_trace(mVcdFile, i6_fu_140_p2, "i6_fu_140_p2");
    sc_trace(mVcdFile, tmp_fu_174_p3, "tmp_fu_174_p3");
    sc_trace(mVcdFile, tmp_20_fu_185_p3, "tmp_20_fu_185_p3");
    sc_trace(mVcdFile, zext_ln254_fu_181_p1, "zext_ln254_fu_181_p1");
    sc_trace(mVcdFile, zext_ln254_1_fu_192_p1, "zext_ln254_1_fu_192_p1");
    sc_trace(mVcdFile, sub_ln254_fu_196_p2, "sub_ln254_fu_196_p2");
    sc_trace(mVcdFile, zext_ln254_2_fu_202_p1, "zext_ln254_2_fu_202_p1");
    sc_trace(mVcdFile, add_ln254_fu_205_p2, "add_ln254_fu_205_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Res_layer::~Res_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete Bert_layer_fadd_3bkb_U43;
}

void Res_layer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Res_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln251_reg_217.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i6_0_reg_102 = select_ln254_1_reg_231.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i6_0_reg_102 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_91 = add_ln251_fu_134_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_91 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_0))) {
        j9_0_reg_113 = j9_fu_168_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j9_0_reg_113 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln251_reg_217 = icmp_ln251_fu_128_p2.read();
        icmp_ln251_reg_217_pp0_iter1_reg = icmp_ln251_reg_217.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln251_reg_217_pp0_iter2_reg = icmp_ln251_reg_217_pp0_iter1_reg.read();
        icmp_ln251_reg_217_pp0_iter3_reg = icmp_ln251_reg_217_pp0_iter2_reg.read();
        icmp_ln251_reg_217_pp0_iter4_reg = icmp_ln251_reg_217_pp0_iter3_reg.read();
        icmp_ln251_reg_217_pp0_iter5_reg = icmp_ln251_reg_217_pp0_iter4_reg.read();
        icmp_ln251_reg_217_pp0_iter6_reg = icmp_ln251_reg_217_pp0_iter5_reg.read();
        icmp_ln251_reg_217_pp0_iter7_reg = icmp_ln251_reg_217_pp0_iter6_reg.read();
        sext_ln254_reg_243_pp0_iter2_reg = sext_ln254_reg_243.read();
        sext_ln254_reg_243_pp0_iter3_reg = sext_ln254_reg_243_pp0_iter2_reg.read();
        sext_ln254_reg_243_pp0_iter4_reg = sext_ln254_reg_243_pp0_iter3_reg.read();
        sext_ln254_reg_243_pp0_iter5_reg = sext_ln254_reg_243_pp0_iter4_reg.read();
        sext_ln254_reg_243_pp0_iter6_reg = sext_ln254_reg_243_pp0_iter5_reg.read();
        sext_ln254_reg_243_pp0_iter7_reg = sext_ln254_reg_243_pp0_iter6_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_0))) {
        select_ln254_1_reg_231 = select_ln254_1_fu_160_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_0))) {
        select_ln254_reg_226 = select_ln254_fu_152_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln251_reg_217.read(), ap_const_lv1_0))) {
        sext_ln254_reg_243 = sext_ln254_fu_211_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln251_reg_217_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        v121_reg_258 = v116_q0.read();
        v122_reg_263 = v117_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln251_reg_217_pp0_iter6_reg.read(), ap_const_lv1_0))) {
        v123_reg_268 = grp_fu_124_p2.read();
    }
}

void Res_layer::thread_add_ln251_fu_134_p2() {
    add_ln251_fu_134_p2 = (!indvar_flatten_reg_91.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(indvar_flatten_reg_91.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void Res_layer::thread_add_ln254_fu_205_p2() {
    add_ln254_fu_205_p2 = (!sub_ln254_fu_196_p2.read().is_01() || !zext_ln254_2_fu_202_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(sub_ln254_fu_196_p2.read()) + sc_biguint<15>(zext_ln254_2_fu_202_p1.read()));
}

void Res_layer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Res_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Res_layer::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[2];
}

void Res_layer::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Res_layer::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Res_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Res_layer::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Res_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Res_layer::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Res_layer::thread_ap_phi_mux_i6_0_phi_fu_106_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln251_reg_217.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i6_0_phi_fu_106_p4 = select_ln254_1_reg_231.read();
    } else {
        ap_phi_mux_i6_0_phi_fu_106_p4 = i6_0_reg_102.read();
    }
}

void Res_layer::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Res_layer::thread_i6_fu_140_p2() {
    i6_fu_140_p2 = (!ap_phi_mux_i6_0_phi_fu_106_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i6_0_phi_fu_106_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Res_layer::thread_icmp_ln251_fu_128_p2() {
    icmp_ln251_fu_128_p2 = (!indvar_flatten_reg_91.read().is_01() || !ap_const_lv14_2400.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_91.read() == ap_const_lv14_2400);
}

void Res_layer::thread_icmp_ln252_fu_146_p2() {
    icmp_ln252_fu_146_p2 = (!j9_0_reg_113.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(j9_0_reg_113.read() == ap_const_lv10_300);
}

void Res_layer::thread_j9_fu_168_p2() {
    j9_fu_168_p2 = (!select_ln254_fu_152_p3.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(select_ln254_fu_152_p3.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void Res_layer::thread_select_ln254_1_fu_160_p3() {
    select_ln254_1_fu_160_p3 = (!icmp_ln252_fu_146_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln252_fu_146_p2.read()[0].to_bool())? i6_fu_140_p2.read(): ap_phi_mux_i6_0_phi_fu_106_p4.read());
}

void Res_layer::thread_select_ln254_fu_152_p3() {
    select_ln254_fu_152_p3 = (!icmp_ln252_fu_146_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln252_fu_146_p2.read()[0].to_bool())? ap_const_lv10_0: j9_0_reg_113.read());
}

void Res_layer::thread_sext_ln254_fu_211_p1() {
    sext_ln254_fu_211_p1 = esl_sext<64,15>(add_ln254_fu_205_p2.read());
}

void Res_layer::thread_sub_ln254_fu_196_p2() {
    sub_ln254_fu_196_p2 = (!zext_ln254_fu_181_p1.read().is_01() || !zext_ln254_1_fu_192_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln254_fu_181_p1.read()) - sc_biguint<15>(zext_ln254_1_fu_192_p1.read()));
}

void Res_layer::thread_tmp_20_fu_185_p3() {
    tmp_20_fu_185_p3 = esl_concat<4,8>(select_ln254_1_reg_231.read(), ap_const_lv8_0);
}

void Res_layer::thread_tmp_fu_174_p3() {
    tmp_fu_174_p3 = esl_concat<4,10>(select_ln254_1_reg_231.read(), ap_const_lv10_0);
}

void Res_layer::thread_v116_address0() {
    v116_address0 =  (sc_lv<14>) (sext_ln254_fu_211_p1.read());
}

void Res_layer::thread_v116_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        v116_ce0 = ap_const_logic_1;
    } else {
        v116_ce0 = ap_const_logic_0;
    }
}

void Res_layer::thread_v117_address0() {
    v117_address0 =  (sc_lv<14>) (sext_ln254_fu_211_p1.read());
}

void Res_layer::thread_v117_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        v117_ce0 = ap_const_logic_1;
    } else {
        v117_ce0 = ap_const_logic_0;
    }
}

void Res_layer::thread_v118_address0() {
    v118_address0 =  (sc_lv<14>) (sext_ln254_reg_243_pp0_iter7_reg.read());
}

void Res_layer::thread_v118_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()))) {
        v118_ce0 = ap_const_logic_1;
    } else {
        v118_ce0 = ap_const_logic_0;
    }
}

void Res_layer::thread_v118_d0() {
    v118_d0 = v123_reg_268.read();
}

void Res_layer::thread_v118_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(icmp_ln251_reg_217_pp0_iter7_reg.read(), ap_const_lv1_0))) {
        v118_we0 = ap_const_logic_1;
    } else {
        v118_we0 = ap_const_logic_0;
    }
}

void Res_layer::thread_zext_ln254_1_fu_192_p1() {
    zext_ln254_1_fu_192_p1 = esl_zext<15,12>(tmp_20_fu_185_p3.read());
}

void Res_layer::thread_zext_ln254_2_fu_202_p1() {
    zext_ln254_2_fu_202_p1 = esl_zext<15,10>(select_ln254_reg_226.read());
}

void Res_layer::thread_zext_ln254_fu_181_p1() {
    zext_ln254_fu_181_p1 = esl_zext<15,14>(tmp_fu_174_p3.read());
}

void Res_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln251_fu_128_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

