

================================================================
== Vitis HLS Report for 'Self_attention_Pipeline_l_j_back1'
================================================================
* Date:           Sat Sep  2 22:24:15 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.576 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       14|       14|  0.140 us|  0.140 us|   14|   14|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_j_back1  |       12|       12|         2|          1|          1|    12|       yes|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.32>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%j_back1 = alloca i32 1"   --->   Operation 5 'alloca' 'j_back1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%sub_ln89_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %sub_ln89"   --->   Operation 6 'read' 'sub_ln89_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j_back1"   --->   Operation 7 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc59.i"   --->   Operation 8 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%j_back1_1 = load i4 %j_back1" [kernel.cpp:86]   --->   Operation 9 'load' 'j_back1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.30ns)   --->   "%icmp_ln86 = icmp_eq  i4 %j_back1_1, i4 12" [kernel.cpp:86]   --->   Operation 10 'icmp' 'icmp_ln86' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 12, i64 12, i64 12"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.73ns)   --->   "%add_ln86 = add i4 %j_back1_1, i4 1" [kernel.cpp:86]   --->   Operation 12 'add' 'add_ln86' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln86 = br i1 %icmp_ln86, void %for.inc59.i.split, void %for.inc75.i.preheader.exitStub" [kernel.cpp:86]   --->   Operation 13 'br' 'br_ln86' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i4 %j_back1_1" [kernel.cpp:86]   --->   Operation 14 'zext' 'zext_ln86' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%v28_addr = getelementptr i32 %v28, i64 0, i64 %zext_ln86" [kernel.cpp:88]   --->   Operation 15 'getelementptr' 'v28_addr' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (2.32ns)   --->   "%v38 = load i4 %v28_addr" [kernel.cpp:88]   --->   Operation 16 'load' 'v38' <Predicate = (!icmp_ln86)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln86 = store i4 %add_ln86, i4 %j_back1" [kernel.cpp:86]   --->   Operation 17 'store' 'store_ln86' <Predicate = (!icmp_ln86)> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 27 'ret' 'ret_ln0' <Predicate = (icmp_ln86)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.57>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i4 %j_back1_1" [kernel.cpp:89]   --->   Operation 18 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.91ns)   --->   "%add_ln89 = add i8 %sub_ln89_read, i8 %zext_ln89" [kernel.cpp:89]   --->   Operation 19 'add' 'add_ln89' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i8 %add_ln89" [kernel.cpp:89]   --->   Operation 20 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%v88_addr = getelementptr i32 %v88, i64 0, i64 %zext_ln89_1" [kernel.cpp:89]   --->   Operation 21 'getelementptr' 'v88_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln87 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_35" [kernel.cpp:87]   --->   Operation 22 'specpipeline' 'specpipeline_ln87' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specloopname_ln86 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [kernel.cpp:86]   --->   Operation 23 'specloopname' 'specloopname_ln86' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/2] (2.32ns)   --->   "%v38 = load i4 %v28_addr" [kernel.cpp:88]   --->   Operation 24 'load' 'v38' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_2 : Operation 25 [1/1] (3.25ns)   --->   "%store_ln89 = store i32 %v38, i8 %v88_addr" [kernel.cpp:89]   --->   Operation 25 'store' 'store_ln89' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln86 = br void %for.inc59.i" [kernel.cpp:86]   --->   Operation 26 'br' 'br_ln86' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.32ns
The critical path consists of the following:
	'alloca' operation ('j_back1') [4]  (0 ns)
	'load' operation ('j_back1', kernel.cpp:86) on local variable 'j_back1' [9]  (0 ns)
	'add' operation ('add_ln86', kernel.cpp:86) [12]  (1.74 ns)
	'store' operation ('store_ln86', kernel.cpp:86) of variable 'add_ln86', kernel.cpp:86 on local variable 'j_back1' [25]  (1.59 ns)

 <State 2>: 5.58ns
The critical path consists of the following:
	'load' operation ('v38', kernel.cpp:88) on array 'v28' [23]  (2.32 ns)
	'store' operation ('store_ln89', kernel.cpp:89) of variable 'v38', kernel.cpp:88 on array 'v88' [24]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
