

================================================================
== Vitis HLS Report for 'Self_attention_Pipeline_l_mh_merge_i_m_l_j_m'
================================================================
* Date:           Sat Sep  2 22:24:17 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.098 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      771|      771|  7.710 us|  7.710 us|  771|  771|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_mh_merge_i_m_l_j_m  |      769|      769|         3|          1|          1|   768|       yes|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.93>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%j_m = alloca i32 1"   --->   Operation 6 'alloca' 'j_m' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_m = alloca i32 1"   --->   Operation 7 'alloca' 'i_m' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten44 = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %tmp"   --->   Operation 9 'read' 'tmp_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.58ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten44"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i_m"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 0, i7 %j_m"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc63"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten44_load = load i10 %indvar_flatten44" [kernel.cpp:193]   --->   Operation 14 'load' 'indvar_flatten44_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.77ns)   --->   "%icmp_ln193 = icmp_eq  i10 %indvar_flatten44_load, i10 768" [kernel.cpp:193]   --->   Operation 15 'icmp' 'icmp_ln193' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.73ns)   --->   "%add_ln193_1 = add i10 %indvar_flatten44_load, i10 1" [kernel.cpp:193]   --->   Operation 16 'add' 'add_ln193_1' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln193 = br i1 %icmp_ln193, void %for.inc66, void %for.inc69.exitStub" [kernel.cpp:193]   --->   Operation 17 'br' 'br_ln193' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j_m_load = load i7 %j_m" [kernel.cpp:194]   --->   Operation 18 'load' 'j_m_load' <Predicate = (!icmp_ln193)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i_m_load = load i4 %i_m" [kernel.cpp:193]   --->   Operation 19 'load' 'i_m_load' <Predicate = (!icmp_ln193)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.73ns)   --->   "%add_ln193 = add i4 %i_m_load, i4 1" [kernel.cpp:193]   --->   Operation 20 'add' 'add_ln193' <Predicate = (!icmp_ln193)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (1.48ns)   --->   "%icmp_ln194 = icmp_eq  i7 %j_m_load, i7 64" [kernel.cpp:194]   --->   Operation 21 'icmp' 'icmp_ln194' <Predicate = (!icmp_ln193)> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.99ns)   --->   "%select_ln193 = select i1 %icmp_ln194, i7 0, i7 %j_m_load" [kernel.cpp:193]   --->   Operation 22 'select' 'select_ln193' <Predicate = (!icmp_ln193)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (1.02ns)   --->   "%select_ln193_1 = select i1 %icmp_ln194, i4 %add_ln193, i4 %i_m_load" [kernel.cpp:193]   --->   Operation 23 'select' 'select_ln193_1' <Predicate = (!icmp_ln193)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.87ns)   --->   "%add_ln194 = add i7 %select_ln193, i7 1" [kernel.cpp:194]   --->   Operation 24 'add' 'add_ln194' <Predicate = (!icmp_ln193)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln194 = store i10 %add_ln193_1, i10 %indvar_flatten44" [kernel.cpp:194]   --->   Operation 25 'store' 'store_ln194' <Predicate = (!icmp_ln193)> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln194 = store i4 %select_ln193_1, i4 %i_m" [kernel.cpp:194]   --->   Operation 26 'store' 'store_ln194' <Predicate = (!icmp_ln193)> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln194 = store i7 %add_ln194, i7 %j_m" [kernel.cpp:194]   --->   Operation 27 'store' 'store_ln194' <Predicate = (!icmp_ln193)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 4.98>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_22 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %select_ln193_1, i6 0" [kernel.cpp:196]   --->   Operation 28 'bitconcatenate' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln196 = zext i7 %select_ln193" [kernel.cpp:196]   --->   Operation 29 'zext' 'zext_ln196' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.73ns)   --->   "%add_ln196 = add i10 %tmp_22, i10 %zext_ln196" [kernel.cpp:196]   --->   Operation 30 'add' 'add_ln196' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln196_1 = zext i10 %add_ln196" [kernel.cpp:196]   --->   Operation 31 'zext' 'zext_ln196_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%v90_addr = getelementptr i32 %v90, i64 0, i64 %zext_ln196_1" [kernel.cpp:196]   --->   Operation 32 'getelementptr' 'v90_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (3.25ns)   --->   "%v93 = load i10 %v90_addr" [kernel.cpp:196]   --->   Operation 33 'load' 'v93' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 768> <RAM>
ST_2 : Operation 34 [1/1] (1.73ns)   --->   "%add_ln197 = add i10 %zext_ln196, i10 %tmp_read" [kernel.cpp:197]   --->   Operation 34 'add' 'add_ln197' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 50 'ret' 'ret_ln0' <Predicate = (icmp_ln193)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.09>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @l_mh_merge_i_m_l_j_m_str"   --->   Operation 35 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 768, i64 768, i64 768"   --->   Operation 36 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i14 @_ssdm_op_BitConcatenate.i14.i4.i10, i4 %select_ln193_1, i10 0" [kernel.cpp:197]   --->   Operation 37 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_21 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i4.i8, i4 %select_ln193_1, i8 0" [kernel.cpp:197]   --->   Operation 38 'bitconcatenate' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln197 = zext i12 %tmp_21" [kernel.cpp:197]   --->   Operation 39 'zext' 'zext_ln197' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln197 = sub i14 %tmp_s, i14 %zext_ln197" [kernel.cpp:197]   --->   Operation 40 'sub' 'sub_ln197' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.92> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln195 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_35" [kernel.cpp:195]   --->   Operation 41 'specpipeline' 'specpipeline_ln195' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln194 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [kernel.cpp:194]   --->   Operation 42 'specloopname' 'specloopname_ln194' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/2] (3.25ns)   --->   "%v93 = load i10 %v90_addr" [kernel.cpp:196]   --->   Operation 43 'load' 'v93' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 768> <RAM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln197_1 = zext i10 %add_ln197" [kernel.cpp:197]   --->   Operation 44 'zext' 'zext_ln197_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (3.84ns) (root node of TernaryAdder)   --->   "%add_ln197_1 = add i14 %sub_ln197, i14 %zext_ln197_1" [kernel.cpp:197]   --->   Operation 45 'add' 'add_ln197_1' <Predicate = true> <Delay = 3.84> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.92> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln197_2 = zext i14 %add_ln197_1" [kernel.cpp:197]   --->   Operation 46 'zext' 'zext_ln197_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%v78_addr = getelementptr i32 %v78, i64 0, i64 %zext_ln197_2" [kernel.cpp:197]   --->   Operation 47 'getelementptr' 'v78_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (3.25ns)   --->   "%store_ln197 = store i32 %v93, i14 %v78_addr" [kernel.cpp:197]   --->   Operation 48 'store' 'store_ln197' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9216> <RAM>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln194 = br void %for.inc63" [kernel.cpp:194]   --->   Operation 49 'br' 'br_ln194' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.94ns
The critical path consists of the following:
	'alloca' operation ('j_m') [4]  (0 ns)
	'load' operation ('j_m_load', kernel.cpp:194) on local variable 'j_m' [18]  (0 ns)
	'icmp' operation ('icmp_ln194', kernel.cpp:194) [23]  (1.49 ns)
	'select' operation ('select_ln193', kernel.cpp:193) [24]  (0.993 ns)
	'add' operation ('add_ln194', kernel.cpp:194) [44]  (1.87 ns)
	'store' operation ('store_ln194', kernel.cpp:194) of variable 'add_ln194', kernel.cpp:194 on local variable 'j_m' [47]  (1.59 ns)

 <State 2>: 4.98ns
The critical path consists of the following:
	'add' operation ('add_ln196', kernel.cpp:196) [32]  (1.73 ns)
	'getelementptr' operation ('v90_addr', kernel.cpp:196) [34]  (0 ns)
	'load' operation ('v93', kernel.cpp:196) on array 'v90' [37]  (3.25 ns)

 <State 3>: 7.1ns
The critical path consists of the following:
	'sub' operation ('sub_ln197', kernel.cpp:197) [29]  (0 ns)
	'add' operation ('add_ln197_1', kernel.cpp:197) [40]  (3.84 ns)
	'getelementptr' operation ('v78_addr', kernel.cpp:197) [42]  (0 ns)
	'store' operation ('store_ln197', kernel.cpp:197) of variable 'v93', kernel.cpp:196 on array 'v78' [43]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
