

================================================================
== Vitis HLS Report for 'Self_attention_Pipeline_l_update_i3_l_j5'
================================================================
* Date:           Sat Sep  2 22:24:15 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.923 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      164|      164|  1.640 us|  1.640 us|  164|  164|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_update_i3_l_j5  |      162|      162|        20|          1|          1|   144|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 20


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 1, D = 20, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.64>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j5 = alloca i32 1"   --->   Operation 23 'alloca' 'j5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i3 = alloca i32 1"   --->   Operation 24 'alloca' 'i3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten22 = alloca i32 1"   --->   Operation 25 'alloca' 'indvar_flatten22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten22"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i3"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j5"   --->   Operation 28 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc49.i"   --->   Operation 29 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten22_load = load i8 %indvar_flatten22" [kernel.cpp:120]   --->   Operation 30 'load' 'indvar_flatten22_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.55ns)   --->   "%icmp_ln120 = icmp_eq  i8 %indvar_flatten22_load, i8 144" [kernel.cpp:120]   --->   Operation 31 'icmp' 'icmp_ln120' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.91ns)   --->   "%add_ln120_1 = add i8 %indvar_flatten22_load, i8 1" [kernel.cpp:120]   --->   Operation 32 'add' 'add_ln120_1' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln120 = br i1 %icmp_ln120, void %for.inc52.i, void %for.inc.i25.preheader.exitStub" [kernel.cpp:120]   --->   Operation 33 'br' 'br_ln120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%j5_load = load i4 %j5" [kernel.cpp:121]   --->   Operation 34 'load' 'j5_load' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%i3_load = load i4 %i3" [kernel.cpp:120]   --->   Operation 35 'load' 'i3_load' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.73ns)   --->   "%add_ln120 = add i4 %i3_load, i4 1" [kernel.cpp:120]   --->   Operation 36 'add' 'add_ln120' <Predicate = (!icmp_ln120)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.30ns)   --->   "%icmp_ln121 = icmp_eq  i4 %j5_load, i4 12" [kernel.cpp:121]   --->   Operation 37 'icmp' 'icmp_ln121' <Predicate = (!icmp_ln120)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.02ns)   --->   "%select_ln120 = select i1 %icmp_ln121, i4 0, i4 %j5_load" [kernel.cpp:120]   --->   Operation 38 'select' 'select_ln120' <Predicate = (!icmp_ln120)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (1.02ns)   --->   "%select_ln120_2 = select i1 %icmp_ln121, i4 %add_ln120, i4 %i3_load" [kernel.cpp:120]   --->   Operation 39 'select' 'select_ln120_2' <Predicate = (!icmp_ln120)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.73ns)   --->   "%add_ln121 = add i4 %select_ln120, i4 1" [kernel.cpp:121]   --->   Operation 40 'add' 'add_ln121' <Predicate = (!icmp_ln120)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln121 = store i8 %add_ln120_1, i8 %indvar_flatten22" [kernel.cpp:121]   --->   Operation 41 'store' 'store_ln121' <Predicate = (!icmp_ln120)> <Delay = 1.58>
ST_1 : Operation 42 [1/1] (1.58ns)   --->   "%store_ln121 = store i4 %select_ln120_2, i4 %i3" [kernel.cpp:121]   --->   Operation 42 'store' 'store_ln121' <Predicate = (!icmp_ln120)> <Delay = 1.58>
ST_1 : Operation 43 [1/1] (1.58ns)   --->   "%store_ln121 = store i4 %add_ln121, i4 %j5" [kernel.cpp:121]   --->   Operation 43 'store' 'store_ln121' <Predicate = (!icmp_ln120)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.92>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln120 = zext i4 %select_ln120_2" [kernel.cpp:120]   --->   Operation 44 'zext' 'zext_ln120' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%p_shl9 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i4.i4, i4 %select_ln120_2, i4 0" [kernel.cpp:123]   --->   Operation 45 'bitconcatenate' 'p_shl9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %select_ln120_2, i2 0" [kernel.cpp:123]   --->   Operation 46 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i6 %tmp" [kernel.cpp:123]   --->   Operation 47 'zext' 'zext_ln123' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln123 = sub i8 %p_shl9, i8 %zext_ln123" [kernel.cpp:123]   --->   Operation 48 'sub' 'sub_ln123' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%inp_sumRow_addr = getelementptr i32 %inp_sumRow, i64 0, i64 %zext_ln120" [kernel.cpp:120]   --->   Operation 49 'getelementptr' 'inp_sumRow_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [2/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:120]   --->   Operation 50 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln123_1 = zext i4 %select_ln120" [kernel.cpp:123]   --->   Operation 51 'zext' 'zext_ln123_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln123 = add i8 %sub_ln123, i8 %zext_ln123_1" [kernel.cpp:123]   --->   Operation 52 'add' 'add_ln123' <Predicate = true> <Delay = 3.66> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln123_2 = zext i8 %add_ln123" [kernel.cpp:123]   --->   Operation 53 'zext' 'zext_ln123_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%v88_addr = getelementptr i32 %v88, i64 0, i64 %zext_ln123_2" [kernel.cpp:123]   --->   Operation 54 'getelementptr' 'v88_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [2/2] (3.25ns)   --->   "%v55 = load i8 %v88_addr" [kernel.cpp:123]   --->   Operation 55 'load' 'v55' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 56 [1/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:120]   --->   Operation 56 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_3 : Operation 57 [1/2] (3.25ns)   --->   "%v55 = load i8 %v88_addr" [kernel.cpp:123]   --->   Operation 57 'load' 'v55' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>

State 4 <SV = 3> <Delay = 6.07>
ST_4 : Operation 58 [16/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 58 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.07>
ST_5 : Operation 59 [15/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 59 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.07>
ST_6 : Operation 60 [14/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 60 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.07>
ST_7 : Operation 61 [13/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 61 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.07>
ST_8 : Operation 62 [12/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 62 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.07>
ST_9 : Operation 63 [11/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 63 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.07>
ST_10 : Operation 64 [10/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 64 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.07>
ST_11 : Operation 65 [9/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 65 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.07>
ST_12 : Operation 66 [8/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 66 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.07>
ST_13 : Operation 67 [7/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 67 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.07>
ST_14 : Operation 68 [6/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 68 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.07>
ST_15 : Operation 69 [5/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 69 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 6.07>
ST_16 : Operation 70 [4/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 70 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.07>
ST_17 : Operation 71 [3/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 71 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.07>
ST_18 : Operation 72 [2/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 72 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.07>
ST_19 : Operation 73 [1/16] (6.07ns)   --->   "%v57 = fdiv i32 %v55, i32 %inp_sumRow_load" [kernel.cpp:125]   --->   Operation 73 'fdiv' 'v57' <Predicate = true> <Delay = 6.07> <CoreInst = "FDiv">   --->   Core 20 'FDiv' <Latency = 15> <II = 1> <Delay = 6.07> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 81 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 81 'ret' 'ret_ln0' <Predicate = (icmp_ln120)> <Delay = 0.00>

State 20 <SV = 19> <Delay = 3.25>
ST_20 : Operation 74 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @l_update_i3_l_j5_str"   --->   Operation 74 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 75 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 144, i64 144, i64 144"   --->   Operation 75 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 76 [1/1] (0.00ns)   --->   "%v89_addr = getelementptr i32 %v89, i64 0, i64 %zext_ln123_2" [kernel.cpp:126]   --->   Operation 76 'getelementptr' 'v89_addr' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 77 [1/1] (0.00ns)   --->   "%specpipeline_ln122 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_35" [kernel.cpp:122]   --->   Operation 77 'specpipeline' 'specpipeline_ln122' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 78 [1/1] (0.00ns)   --->   "%specloopname_ln121 = specloopname void @_ssdm_op_SpecLoopName, void @empty_24" [kernel.cpp:121]   --->   Operation 78 'specloopname' 'specloopname_ln121' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 79 [1/1] (3.25ns)   --->   "%store_ln126 = store i32 %v57, i8 %v89_addr" [kernel.cpp:126]   --->   Operation 79 'store' 'store_ln126' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_20 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln121 = br void %for.inc49.i" [kernel.cpp:121]   --->   Operation 80 'br' 'br_ln121' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.65ns
The critical path consists of the following:
	'alloca' operation ('j5') [4]  (0 ns)
	'load' operation ('j5_load', kernel.cpp:121) on local variable 'j5' [17]  (0 ns)
	'icmp' operation ('icmp_ln121', kernel.cpp:121) [22]  (1.3 ns)
	'select' operation ('select_ln120', kernel.cpp:120) [23]  (1.02 ns)
	'add' operation ('add_ln121', kernel.cpp:121) [42]  (1.74 ns)
	'store' operation ('store_ln121', kernel.cpp:121) of variable 'add_ln121', kernel.cpp:121 on local variable 'j5' [45]  (1.59 ns)

 <State 2>: 6.92ns
The critical path consists of the following:
	'sub' operation ('sub_ln123', kernel.cpp:123) [29]  (0 ns)
	'add' operation ('add_ln123', kernel.cpp:123) [33]  (3.67 ns)
	'getelementptr' operation ('v88_addr', kernel.cpp:123) [35]  (0 ns)
	'load' operation ('v55', kernel.cpp:123) on array 'v88' [39]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('v55', kernel.cpp:123) on array 'v88' [39]  (3.25 ns)

 <State 4>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 6>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 7>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 8>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 9>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 10>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 11>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 12>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 13>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 14>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 15>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 16>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 17>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 18>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 19>: 6.08ns
The critical path consists of the following:
	'fdiv' operation ('v57', kernel.cpp:125) [40]  (6.08 ns)

 <State 20>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('v89_addr', kernel.cpp:126) [36]  (0 ns)
	'store' operation ('store_ln126', kernel.cpp:126) of variable 'v57', kernel.cpp:125 on array 'v89' [41]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
