-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Layer_norm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v124_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v124_ce0 : OUT STD_LOGIC;
    v124_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v125_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v125_ce0 : OUT STD_LOGIC;
    v125_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v126_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v126_ce0 : OUT STD_LOGIC;
    v126_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v127_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v127_ce0 : OUT STD_LOGIC;
    v127_we0 : OUT STD_LOGIC;
    v127_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Layer_norm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_44400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000100010000000000000000000000";
    constant ap_const_lv64_3EE4F8B588E368F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111011100100111110001011010110001000111000110110100011110001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv14_2400 : STD_LOGIC_VECTOR (13 downto 0) := "10010000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_232 : STD_LOGIC_VECTOR (13 downto 0);
    signal i7_0_reg_243 : STD_LOGIC_VECTOR (3 downto 0);
    signal j10_0_reg_254 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten21_reg_265 : STD_LOGIC_VECTOR (13 downto 0);
    signal i8_0_reg_276 : STD_LOGIC_VECTOR (3 downto 0);
    signal j11_0_reg_287 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state36_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln277_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state38_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state39_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state40_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state41_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state42_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state43_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state44_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state45_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state46_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state47_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state48_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state49_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state50_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state51_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state52_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state53_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state54_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state55_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state56_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state57_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state58_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state59_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_state60_pp1_stage0_iter22 : BOOLEAN;
    signal ap_block_state61_pp1_stage0_iter23 : BOOLEAN;
    signal ap_block_state62_pp1_stage0_iter24 : BOOLEAN;
    signal ap_block_state63_pp1_stage0_iter25 : BOOLEAN;
    signal ap_block_state64_pp1_stage0_iter26 : BOOLEAN;
    signal ap_block_state65_pp1_stage0_iter27 : BOOLEAN;
    signal ap_block_state66_pp1_stage0_iter28 : BOOLEAN;
    signal ap_block_state67_pp1_stage0_iter29 : BOOLEAN;
    signal ap_block_state68_pp1_stage0_iter30 : BOOLEAN;
    signal ap_block_state69_pp1_stage0_iter31 : BOOLEAN;
    signal ap_block_state70_pp1_stage0_iter32 : BOOLEAN;
    signal ap_block_state71_pp1_stage0_iter33 : BOOLEAN;
    signal ap_block_state72_pp1_stage0_iter34 : BOOLEAN;
    signal ap_block_state73_pp1_stage0_iter35 : BOOLEAN;
    signal ap_block_state74_pp1_stage0_iter36 : BOOLEAN;
    signal ap_block_state75_pp1_stage0_iter37 : BOOLEAN;
    signal ap_block_state76_pp1_stage0_iter38 : BOOLEAN;
    signal ap_block_state77_pp1_stage0_iter39 : BOOLEAN;
    signal ap_block_state78_pp1_stage0_iter40 : BOOLEAN;
    signal ap_block_state79_pp1_stage0_iter41 : BOOLEAN;
    signal ap_block_state80_pp1_stage0_iter42 : BOOLEAN;
    signal ap_block_state81_pp1_stage0_iter43 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal icmp_ln302_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal mean_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state31_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state9_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal icmp_ln302_reg_692_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_361 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln277_reg_618_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal icmp_ln302_reg_692_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln278_1_reg_673 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_1_reg_673_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter37 : STD_LOGIC := '0';
    signal icmp_ln302_reg_692_pp1_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v129_fu_380_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln273_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal v131_fu_397_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln277_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln277_fu_414_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln277_reg_622 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln280_fu_432_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln280_reg_627 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln280_1_fu_440_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln280_1_reg_633 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln280_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_reg_646 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_reg_646_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_reg_646_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_reg_646_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_reg_646_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal mean_addr_1_reg_652 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_addr_1_reg_652_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_addr_1_reg_652_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_addr_1_reg_652_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_657 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_657_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_657_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_addr_1_reg_657_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal j10_fu_494_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j10_reg_662 : STD_LOGIC_VECTOR (9 downto 0);
    signal mean2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln278_1_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_1_reg_673_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_1_reg_673_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_1_reg_673_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v144_reg_677 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state8_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state32_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal v145_reg_682 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal v148_reg_687 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln302_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal icmp_ln302_reg_692_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_reg_692_pp1_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln302_fu_510_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln306_fu_528_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_reg_701_pp1_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln306_2_fu_536_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln306_2_reg_707_pp1_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln306_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_reg_714_pp1_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal j11_fu_549_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal var_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal grp_fu_327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal v158_mid2_v_v_reg_734 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal v158_mid2_v_reg_739 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v158_mid2_reg_744 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln306_4_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter36_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter37_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter38_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter39_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter40_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter41_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_4_reg_754_pp1_iter42_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln305_reg_764_pp1_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal v152_reg_774 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v159_reg_779 : STD_LOGIC_VECTOR (31 downto 0);
    signal v161_reg_789 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v162_reg_794 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state38 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter43 : STD_LOGIC := '0';
    signal mean_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean_ce0 : STD_LOGIC;
    signal mean_we0 : STD_LOGIC;
    signal mean_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mean2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mean2_ce0 : STD_LOGIC;
    signal mean2_we0 : STD_LOGIC;
    signal mean2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal var_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal var_ce0 : STD_LOGIC;
    signal var_we0 : STD_LOGIC;
    signal v129_0_reg_210 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln269_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v131_0_reg_221 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_236_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i7_0_phi_fu_247_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j10_0_phi_fu_258_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_i8_0_phi_fu_280_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln270_fu_386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln274_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln280_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal grp_fu_298_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_311_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_317_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln278_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i7_fu_420_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_448_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_fu_459_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln280_1_fu_455_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln280_2_fu_466_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln280_fu_470_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln280_3_fu_476_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln280_fu_479_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln303_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i8_fu_516_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_fu_555_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_30_fu_566_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln306_1_fu_562_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln306_2_fu_573_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln306_3_fu_583_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln306_fu_577_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln306_fu_586_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_298_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp1_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component Bert_layer_faddfshbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fadd_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fmul_3cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fdiv_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fptrunibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_fpext_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Bert_layer_fsqrt_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Bert_layer_dadd_6lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Softmax_layer_inpdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mean_U : component Softmax_layer_inpdEe
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean_address0,
        ce0 => mean_ce0,
        we0 => mean_we0,
        d0 => mean_d0,
        q0 => mean_q0);

    mean2_U : component Softmax_layer_inpdEe
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mean2_address0,
        ce0 => mean2_ce0,
        we0 => mean2_we0,
        d0 => mean2_d0,
        q0 => mean2_q0);

    var_U : component Softmax_layer_inpdEe
    generic map (
        DataWidth => 32,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => var_address0,
        ce0 => var_ce0,
        we0 => var_we0,
        d0 => grp_fu_298_p2,
        q0 => var_q0);

    Bert_layer_faddfshbi_U47 : component Bert_layer_faddfshbi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_298_p0,
        din1 => grp_fu_298_p1,
        opcode => grp_fu_298_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_298_p2);

    Bert_layer_fadd_3bkb_U48 : component Bert_layer_fadd_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_367,
        din1 => v161_reg_789,
        ce => ap_const_logic_1,
        dout => grp_fu_307_p2);

    Bert_layer_fmul_3cud_U49 : component Bert_layer_fmul_3cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_311_p0,
        din1 => grp_fu_311_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_311_p2);

    Bert_layer_fdiv_3eOg_U50 : component Bert_layer_fdiv_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_317_p0,
        din1 => grp_fu_317_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_317_p2);

    Bert_layer_fptrunibs_U51 : component Bert_layer_fptrunibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v158_mid2_v_reg_739,
        ce => ap_const_logic_1,
        dout => grp_fu_324_p1);

    Bert_layer_fpext_jbC_U52 : component Bert_layer_fpext_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => var_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_327_p1);

    Bert_layer_fsqrt_kbM_U53 : component Bert_layer_fsqrt_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => v158_mid2_reg_744,
        ce => ap_const_logic_1,
        dout => grp_fu_331_p2);

    Bert_layer_dadd_6lbW_U54 : component Bert_layer_dadd_6lbW
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v158_mid2_v_v_reg_734,
        din1 => ap_const_lv64_3EE4F8B588E368F1,
        ce => ap_const_logic_1,
        dout => grp_fu_336_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln273_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((icmp_ln273_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state38) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state38)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state38);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    ap_enable_reg_pp1_iter43 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    i7_0_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln273_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i7_0_reg_243 <= ap_const_lv4_0;
            elsif (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i7_0_reg_243 <= select_ln280_1_reg_633;
            end if; 
        end if;
    end process;

    i8_0_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                i8_0_reg_276 <= ap_const_lv4_0;
            elsif (((icmp_ln302_reg_692 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                i8_0_reg_276 <= select_ln306_2_reg_707;
            end if; 
        end if;
    end process;

    indvar_flatten21_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                indvar_flatten21_reg_265 <= ap_const_lv14_0;
            elsif (((icmp_ln302_fu_504_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten21_reg_265 <= add_ln302_fu_510_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln273_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten_reg_232 <= ap_const_lv14_0;
            elsif (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_232 <= add_ln277_reg_622;
            end if; 
        end if;
    end process;

    j10_0_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln273_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j10_0_reg_254 <= ap_const_lv10_0;
            elsif (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                j10_0_reg_254 <= j10_reg_662;
            end if; 
        end if;
    end process;

    j11_0_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                j11_0_reg_287 <= ap_const_lv10_0;
            elsif (((icmp_ln302_fu_504_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j11_0_reg_287 <= j11_fu_549_p2;
            end if; 
        end if;
    end process;

    v129_0_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln269_fu_374_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v129_0_reg_210 <= v129_fu_380_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                v129_0_reg_210 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    v131_0_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln269_fu_374_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v131_0_reg_221 <= ap_const_lv4_0;
            elsif (((icmp_ln273_fu_391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                v131_0_reg_221 <= v131_fu_397_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln277_reg_622 <= add_ln277_fu_414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln277_reg_618 <= icmp_ln277_fu_408_p2;
                icmp_ln277_reg_618_pp0_iter1_reg <= icmp_ln277_reg_618;
                icmp_ln278_1_reg_673_pp0_iter2_reg <= icmp_ln278_1_reg_673;
                icmp_ln278_1_reg_673_pp0_iter3_reg <= icmp_ln278_1_reg_673_pp0_iter2_reg;
                icmp_ln278_1_reg_673_pp0_iter4_reg <= icmp_ln278_1_reg_673_pp0_iter3_reg;
                icmp_ln278_1_reg_673_pp0_iter5_reg <= icmp_ln278_1_reg_673_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln278_1_reg_673 <= icmp_ln278_1_fu_499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln302_reg_692 <= icmp_ln302_fu_504_p2;
                icmp_ln302_reg_692_pp1_iter1_reg <= icmp_ln302_reg_692;
                select_ln306_2_reg_707_pp1_iter1_reg <= select_ln306_2_reg_707;
                select_ln306_reg_701_pp1_iter1_reg <= select_ln306_reg_701;
                    zext_ln306_reg_714_pp1_iter1_reg(3 downto 0) <= zext_ln306_reg_714(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln302_reg_692_pp1_iter10_reg <= icmp_ln302_reg_692_pp1_iter9_reg;
                icmp_ln302_reg_692_pp1_iter11_reg <= icmp_ln302_reg_692_pp1_iter10_reg;
                icmp_ln302_reg_692_pp1_iter12_reg <= icmp_ln302_reg_692_pp1_iter11_reg;
                icmp_ln302_reg_692_pp1_iter13_reg <= icmp_ln302_reg_692_pp1_iter12_reg;
                icmp_ln302_reg_692_pp1_iter14_reg <= icmp_ln302_reg_692_pp1_iter13_reg;
                icmp_ln302_reg_692_pp1_iter15_reg <= icmp_ln302_reg_692_pp1_iter14_reg;
                icmp_ln302_reg_692_pp1_iter16_reg <= icmp_ln302_reg_692_pp1_iter15_reg;
                icmp_ln302_reg_692_pp1_iter17_reg <= icmp_ln302_reg_692_pp1_iter16_reg;
                icmp_ln302_reg_692_pp1_iter18_reg <= icmp_ln302_reg_692_pp1_iter17_reg;
                icmp_ln302_reg_692_pp1_iter19_reg <= icmp_ln302_reg_692_pp1_iter18_reg;
                icmp_ln302_reg_692_pp1_iter20_reg <= icmp_ln302_reg_692_pp1_iter19_reg;
                icmp_ln302_reg_692_pp1_iter21_reg <= icmp_ln302_reg_692_pp1_iter20_reg;
                icmp_ln302_reg_692_pp1_iter22_reg <= icmp_ln302_reg_692_pp1_iter21_reg;
                icmp_ln302_reg_692_pp1_iter23_reg <= icmp_ln302_reg_692_pp1_iter22_reg;
                icmp_ln302_reg_692_pp1_iter24_reg <= icmp_ln302_reg_692_pp1_iter23_reg;
                icmp_ln302_reg_692_pp1_iter25_reg <= icmp_ln302_reg_692_pp1_iter24_reg;
                icmp_ln302_reg_692_pp1_iter26_reg <= icmp_ln302_reg_692_pp1_iter25_reg;
                icmp_ln302_reg_692_pp1_iter27_reg <= icmp_ln302_reg_692_pp1_iter26_reg;
                icmp_ln302_reg_692_pp1_iter28_reg <= icmp_ln302_reg_692_pp1_iter27_reg;
                icmp_ln302_reg_692_pp1_iter29_reg <= icmp_ln302_reg_692_pp1_iter28_reg;
                icmp_ln302_reg_692_pp1_iter2_reg <= icmp_ln302_reg_692_pp1_iter1_reg;
                icmp_ln302_reg_692_pp1_iter30_reg <= icmp_ln302_reg_692_pp1_iter29_reg;
                icmp_ln302_reg_692_pp1_iter31_reg <= icmp_ln302_reg_692_pp1_iter30_reg;
                icmp_ln302_reg_692_pp1_iter32_reg <= icmp_ln302_reg_692_pp1_iter31_reg;
                icmp_ln302_reg_692_pp1_iter33_reg <= icmp_ln302_reg_692_pp1_iter32_reg;
                icmp_ln302_reg_692_pp1_iter34_reg <= icmp_ln302_reg_692_pp1_iter33_reg;
                icmp_ln302_reg_692_pp1_iter35_reg <= icmp_ln302_reg_692_pp1_iter34_reg;
                icmp_ln302_reg_692_pp1_iter36_reg <= icmp_ln302_reg_692_pp1_iter35_reg;
                icmp_ln302_reg_692_pp1_iter37_reg <= icmp_ln302_reg_692_pp1_iter36_reg;
                icmp_ln302_reg_692_pp1_iter38_reg <= icmp_ln302_reg_692_pp1_iter37_reg;
                icmp_ln302_reg_692_pp1_iter39_reg <= icmp_ln302_reg_692_pp1_iter38_reg;
                icmp_ln302_reg_692_pp1_iter3_reg <= icmp_ln302_reg_692_pp1_iter2_reg;
                icmp_ln302_reg_692_pp1_iter40_reg <= icmp_ln302_reg_692_pp1_iter39_reg;
                icmp_ln302_reg_692_pp1_iter41_reg <= icmp_ln302_reg_692_pp1_iter40_reg;
                icmp_ln302_reg_692_pp1_iter42_reg <= icmp_ln302_reg_692_pp1_iter41_reg;
                icmp_ln302_reg_692_pp1_iter4_reg <= icmp_ln302_reg_692_pp1_iter3_reg;
                icmp_ln302_reg_692_pp1_iter5_reg <= icmp_ln302_reg_692_pp1_iter4_reg;
                icmp_ln302_reg_692_pp1_iter6_reg <= icmp_ln302_reg_692_pp1_iter5_reg;
                icmp_ln302_reg_692_pp1_iter7_reg <= icmp_ln302_reg_692_pp1_iter6_reg;
                icmp_ln302_reg_692_pp1_iter8_reg <= icmp_ln302_reg_692_pp1_iter7_reg;
                icmp_ln302_reg_692_pp1_iter9_reg <= icmp_ln302_reg_692_pp1_iter8_reg;
                select_ln306_2_reg_707_pp1_iter10_reg <= select_ln306_2_reg_707_pp1_iter9_reg;
                select_ln306_2_reg_707_pp1_iter2_reg <= select_ln306_2_reg_707_pp1_iter1_reg;
                select_ln306_2_reg_707_pp1_iter3_reg <= select_ln306_2_reg_707_pp1_iter2_reg;
                select_ln306_2_reg_707_pp1_iter4_reg <= select_ln306_2_reg_707_pp1_iter3_reg;
                select_ln306_2_reg_707_pp1_iter5_reg <= select_ln306_2_reg_707_pp1_iter4_reg;
                select_ln306_2_reg_707_pp1_iter6_reg <= select_ln306_2_reg_707_pp1_iter5_reg;
                select_ln306_2_reg_707_pp1_iter7_reg <= select_ln306_2_reg_707_pp1_iter6_reg;
                select_ln306_2_reg_707_pp1_iter8_reg <= select_ln306_2_reg_707_pp1_iter7_reg;
                select_ln306_2_reg_707_pp1_iter9_reg <= select_ln306_2_reg_707_pp1_iter8_reg;
                select_ln306_reg_701_pp1_iter10_reg <= select_ln306_reg_701_pp1_iter9_reg;
                select_ln306_reg_701_pp1_iter11_reg <= select_ln306_reg_701_pp1_iter10_reg;
                select_ln306_reg_701_pp1_iter12_reg <= select_ln306_reg_701_pp1_iter11_reg;
                select_ln306_reg_701_pp1_iter13_reg <= select_ln306_reg_701_pp1_iter12_reg;
                select_ln306_reg_701_pp1_iter14_reg <= select_ln306_reg_701_pp1_iter13_reg;
                select_ln306_reg_701_pp1_iter15_reg <= select_ln306_reg_701_pp1_iter14_reg;
                select_ln306_reg_701_pp1_iter2_reg <= select_ln306_reg_701_pp1_iter1_reg;
                select_ln306_reg_701_pp1_iter3_reg <= select_ln306_reg_701_pp1_iter2_reg;
                select_ln306_reg_701_pp1_iter4_reg <= select_ln306_reg_701_pp1_iter3_reg;
                select_ln306_reg_701_pp1_iter5_reg <= select_ln306_reg_701_pp1_iter4_reg;
                select_ln306_reg_701_pp1_iter6_reg <= select_ln306_reg_701_pp1_iter5_reg;
                select_ln306_reg_701_pp1_iter7_reg <= select_ln306_reg_701_pp1_iter6_reg;
                select_ln306_reg_701_pp1_iter8_reg <= select_ln306_reg_701_pp1_iter7_reg;
                select_ln306_reg_701_pp1_iter9_reg <= select_ln306_reg_701_pp1_iter8_reg;
                    zext_ln305_reg_764_pp1_iter17_reg(9 downto 0) <= zext_ln305_reg_764(9 downto 0);
                    zext_ln305_reg_764_pp1_iter18_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter17_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter19_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter18_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter20_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter19_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter21_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter20_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter22_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter21_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter23_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter22_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter24_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter23_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter25_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter24_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter26_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter25_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter27_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter26_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter28_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter27_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter29_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter28_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter30_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter29_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter31_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter30_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter32_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter31_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter33_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter32_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter34_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter33_reg(9 downto 0);
                    zext_ln305_reg_764_pp1_iter35_reg(9 downto 0) <= zext_ln305_reg_764_pp1_iter34_reg(9 downto 0);
                    zext_ln306_4_reg_754_pp1_iter12_reg(14 downto 0) <= zext_ln306_4_reg_754(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter13_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter12_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter14_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter13_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter15_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter14_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter16_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter15_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter17_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter16_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter18_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter17_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter19_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter18_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter20_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter19_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter21_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter20_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter22_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter21_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter23_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter22_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter24_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter23_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter25_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter24_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter26_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter25_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter27_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter26_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter28_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter27_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter29_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter28_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter30_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter29_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter31_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter30_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter32_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter31_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter33_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter32_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter34_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter33_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter35_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter34_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter36_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter35_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter37_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter36_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter38_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter37_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter39_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter38_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter40_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter39_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter41_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter40_reg(14 downto 0);
                    zext_ln306_4_reg_754_pp1_iter42_reg(14 downto 0) <= zext_ln306_4_reg_754_pp1_iter41_reg(14 downto 0);
                    zext_ln306_reg_714_pp1_iter10_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter9_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter2_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter1_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter3_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter2_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter4_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter3_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter5_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter4_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter6_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter5_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter7_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter6_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter8_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter7_reg(3 downto 0);
                    zext_ln306_reg_714_pp1_iter9_reg(3 downto 0) <= zext_ln306_reg_714_pp1_iter8_reg(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                j10_reg_662 <= j10_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mean2_addr_1_reg_657 <= zext_ln280_reg_646(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                mean2_addr_1_reg_657_pp0_iter1_reg <= mean2_addr_1_reg_657;
                mean2_addr_1_reg_657_pp0_iter2_reg <= mean2_addr_1_reg_657_pp0_iter1_reg;
                mean2_addr_1_reg_657_pp0_iter3_reg <= mean2_addr_1_reg_657_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mean_addr_1_reg_652 <= zext_ln280_fu_490_p1(4 - 1 downto 0);
                    zext_ln280_reg_646(3 downto 0) <= zext_ln280_fu_490_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mean_addr_1_reg_652_pp0_iter1_reg <= mean_addr_1_reg_652;
                mean_addr_1_reg_652_pp0_iter2_reg <= mean_addr_1_reg_652_pp0_iter1_reg;
                mean_addr_1_reg_652_pp0_iter3_reg <= mean_addr_1_reg_652_pp0_iter2_reg;
                    zext_ln280_reg_646_pp0_iter1_reg(3 downto 0) <= zext_ln280_reg_646(3 downto 0);
                    zext_ln280_reg_646_pp0_iter2_reg(3 downto 0) <= zext_ln280_reg_646_pp0_iter1_reg(3 downto 0);
                    zext_ln280_reg_646_pp0_iter3_reg(3 downto 0) <= zext_ln280_reg_646_pp0_iter2_reg(3 downto 0);
                    zext_ln280_reg_646_pp0_iter4_reg(3 downto 0) <= zext_ln280_reg_646_pp0_iter3_reg(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((icmp_ln302_reg_692_pp1_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_341 <= v124_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((icmp_ln302_reg_692_pp1_iter11_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_349 <= mean_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((icmp_ln302_reg_692_pp1_iter20_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_355 <= grp_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln277_reg_618_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln302_reg_692_pp1_iter16_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_361 <= grp_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln278_1_reg_673_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((icmp_ln302_reg_692_pp1_iter36_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter37 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then
                reg_367 <= grp_fu_317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln280_1_reg_633 <= select_ln280_1_fu_440_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_fu_408_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln280_reg_627 <= select_ln280_fu_432_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_fu_504_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln306_2_reg_707 <= select_ln306_2_fu_536_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_fu_504_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln306_reg_701 <= select_ln306_fu_528_p3;
                    zext_ln306_reg_714(3 downto 0) <= zext_ln306_fu_544_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln277_reg_618_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                v144_reg_677 <= grp_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln278_1_reg_673_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                v145_reg_682 <= grp_fu_317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln278_1_reg_673_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                v148_reg_687 <= grp_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v152_reg_774 <= v125_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v158_mid2_reg_744 <= grp_fu_324_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v158_mid2_v_reg_739 <= grp_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v158_mid2_v_v_reg_734 <= grp_fu_327_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter20_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v159_reg_779 <= grp_fu_331_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter36_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v161_reg_789 <= v126_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter41_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                v162_reg_794 <= grp_fu_307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    zext_ln305_reg_764(9 downto 0) <= zext_ln305_fu_597_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln302_reg_692_pp1_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    zext_ln306_4_reg_754(14 downto 0) <= zext_ln306_4_fu_592_p1(14 downto 0);
            end if;
        end if;
    end process;
    zext_ln280_reg_646(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln280_reg_646_pp0_iter1_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln280_reg_646_pp0_iter2_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln280_reg_646_pp0_iter3_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln280_reg_646_pp0_iter4_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter1_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter2_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter3_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter4_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter5_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter6_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter7_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter8_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter9_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_reg_714_pp1_iter10_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter12_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter13_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter14_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter15_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter16_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter17_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter18_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter19_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter20_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter21_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter22_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter23_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter24_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter25_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter26_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter27_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter28_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter29_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter30_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter31_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter32_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter33_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter34_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter35_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter36_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter37_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter38_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter39_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter40_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter41_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln306_4_reg_754_pp1_iter42_reg(63 downto 15) <= "0000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter17_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter18_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter19_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter20_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter21_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter22_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter23_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter24_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter25_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter26_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter27_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter28_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter29_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter30_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter31_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter32_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter33_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter34_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    zext_ln305_reg_764_pp1_iter35_reg(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state2, icmp_ln273_fu_391_p2, ap_CS_fsm_state3, icmp_ln277_fu_408_p2, ap_enable_reg_pp0_iter4, icmp_ln302_fu_504_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter5, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter42, ap_enable_reg_pp1_iter43, icmp_ln269_fu_374_p2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln269_fu_374_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln273_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln277_fu_408_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln277_fu_408_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln302_fu_504_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter42 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter43 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter42 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter43 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln302_fu_504_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln277_fu_414_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_236_p4) + unsigned(ap_const_lv14_1));
    add_ln280_fu_479_p2 <= std_logic_vector(unsigned(sub_ln280_fu_470_p2) + unsigned(zext_ln280_3_fu_476_p1));
    add_ln302_fu_510_p2 <= std_logic_vector(unsigned(indvar_flatten21_reg_265) + unsigned(ap_const_lv14_1));
    add_ln306_fu_586_p2 <= std_logic_vector(unsigned(zext_ln306_3_fu_583_p1) + unsigned(sub_ln306_fu_577_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state37 <= ap_CS_fsm(9);
    ap_CS_fsm_state82 <= ap_CS_fsm(11);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp1_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp1_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp1_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp1_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp1_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp1_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp1_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp1_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp1_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp1_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp1_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp1_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp1_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp1_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp1_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp1_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp1_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp1_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp1_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln277_fu_408_p2)
    begin
        if ((icmp_ln277_fu_408_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state38_assign_proc : process(icmp_ln302_fu_504_p2)
    begin
        if ((icmp_ln302_fu_504_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state38 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state82)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state82) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter37, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20, ap_enable_reg_pp1_iter22, ap_enable_reg_pp1_iter23, ap_enable_reg_pp1_iter24, ap_enable_reg_pp1_iter25, ap_enable_reg_pp1_iter26, ap_enable_reg_pp1_iter27, ap_enable_reg_pp1_iter28, ap_enable_reg_pp1_iter29, ap_enable_reg_pp1_iter30, ap_enable_reg_pp1_iter31, ap_enable_reg_pp1_iter32, ap_enable_reg_pp1_iter33, ap_enable_reg_pp1_iter34, ap_enable_reg_pp1_iter35, ap_enable_reg_pp1_iter36, ap_enable_reg_pp1_iter38, ap_enable_reg_pp1_iter39, ap_enable_reg_pp1_iter40, ap_enable_reg_pp1_iter41, ap_enable_reg_pp1_iter42, ap_enable_reg_pp1_iter43)
    begin
        if (((ap_enable_reg_pp1_iter43 = ap_const_logic_0) and (ap_enable_reg_pp1_iter42 = ap_const_logic_0) and (ap_enable_reg_pp1_iter41 = ap_const_logic_0) and (ap_enable_reg_pp1_iter40 = ap_const_logic_0) and (ap_enable_reg_pp1_iter39 = ap_const_logic_0) and (ap_enable_reg_pp1_iter38 = ap_const_logic_0) and (ap_enable_reg_pp1_iter36 = ap_const_logic_0) and (ap_enable_reg_pp1_iter35 = ap_const_logic_0) and (ap_enable_reg_pp1_iter34 = ap_const_logic_0) and (ap_enable_reg_pp1_iter33 = ap_const_logic_0) and (ap_enable_reg_pp1_iter32 = ap_const_logic_0) and (ap_enable_reg_pp1_iter31 = ap_const_logic_0) and (ap_enable_reg_pp1_iter30 = ap_const_logic_0) and (ap_enable_reg_pp1_iter29 = ap_const_logic_0) and (ap_enable_reg_pp1_iter28 = ap_const_logic_0) and (ap_enable_reg_pp1_iter27 = ap_const_logic_0) and (ap_enable_reg_pp1_iter26 = ap_const_logic_0) and (ap_enable_reg_pp1_iter25 = ap_const_logic_0) and (ap_enable_reg_pp1_iter24 = ap_const_logic_0) and (ap_enable_reg_pp1_iter23 = ap_const_logic_0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter37 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i7_0_phi_fu_247_p4_assign_proc : process(i7_0_reg_243, icmp_ln277_reg_618, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, select_ln280_1_reg_633, ap_block_pp0_stage0)
    begin
        if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i7_0_phi_fu_247_p4 <= select_ln280_1_reg_633;
        else 
            ap_phi_mux_i7_0_phi_fu_247_p4 <= i7_0_reg_243;
        end if; 
    end process;


    ap_phi_mux_i8_0_phi_fu_280_p4_assign_proc : process(i8_0_reg_276, icmp_ln302_reg_692, ap_CS_fsm_pp1_stage0, select_ln306_2_reg_707, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln302_reg_692 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_i8_0_phi_fu_280_p4 <= select_ln306_2_reg_707;
        else 
            ap_phi_mux_i8_0_phi_fu_280_p4 <= i8_0_reg_276;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_236_p4_assign_proc : process(indvar_flatten_reg_232, icmp_ln277_reg_618, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, add_ln277_reg_622, ap_block_pp0_stage0)
    begin
        if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_236_p4 <= add_ln277_reg_622;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_236_p4 <= indvar_flatten_reg_232;
        end if; 
    end process;


    ap_phi_mux_j10_0_phi_fu_258_p4_assign_proc : process(j10_0_reg_254, icmp_ln277_reg_618, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, j10_reg_662, ap_block_pp0_stage0)
    begin
        if (((icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_j10_0_phi_fu_258_p4 <= j10_reg_662;
        else 
            ap_phi_mux_j10_0_phi_fu_258_p4 <= j10_0_reg_254;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_298_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln277_reg_618, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, icmp_ln278_1_reg_673_pp0_iter4_reg, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, icmp_ln302_reg_692_pp1_iter12_reg, ap_enable_reg_pp1_iter13, ap_block_pp0_stage3_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage4_00001, ap_block_pp1_stage0_00001)
    begin
        if ((((icmp_ln302_reg_692_pp1_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_00001)) or ((icmp_ln278_1_reg_673_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001)))) then 
            grp_fu_298_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (icmp_ln277_reg_618 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_298_opcode <= ap_const_lv2_0;
        else 
            grp_fu_298_opcode <= "XX";
        end if; 
    end process;


    grp_fu_298_p0_assign_proc : process(reg_341, ap_enable_reg_pp0_iter0, mean_q0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, mean2_q0, ap_CS_fsm_pp0_stage4, v145_reg_682, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter13, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1))) then 
            grp_fu_298_p0 <= reg_341;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_298_p0 <= v145_reg_682;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_298_p0 <= mean2_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_298_p0 <= mean_q0;
        else 
            grp_fu_298_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_298_p1_assign_proc : process(reg_341, ap_enable_reg_pp0_iter0, reg_349, ap_CS_fsm_pp0_stage3, reg_355, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, v148_reg_687, ap_enable_reg_pp1_iter13, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1))) then 
            grp_fu_298_p1 <= reg_349;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_298_p1 <= v148_reg_687;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_298_p1 <= reg_355;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_298_p1 <= reg_341;
        else 
            grp_fu_298_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_311_p0_assign_proc : process(v124_q0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, reg_367, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, v152_reg_774, ap_enable_reg_pp1_iter18, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            grp_fu_311_p0 <= v152_reg_774;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_311_p0 <= reg_367;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_311_p0 <= v124_q0;
        else 
            grp_fu_311_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_311_p1_assign_proc : process(v124_q0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, reg_361, reg_367, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp1_iter18, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            grp_fu_311_p1 <= reg_361;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_311_p1 <= reg_367;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_311_p1 <= v124_q0;
        else 
            grp_fu_311_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_317_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, reg_355, ap_CS_fsm_pp0_stage5, reg_361, ap_enable_reg_pp0_iter1, v144_reg_677, ap_enable_reg_pp1_iter22, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_1))) then 
            grp_fu_317_p0 <= reg_355;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_317_p0 <= v144_reg_677;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_317_p0 <= reg_361;
        else 
            grp_fu_317_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_317_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, v159_reg_779, ap_enable_reg_pp1_iter22, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter22 = ap_const_logic_1))) then 
            grp_fu_317_p1 <= v159_reg_779;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_317_p1 <= ap_const_lv32_44400000;
        else 
            grp_fu_317_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i7_fu_420_p2 <= std_logic_vector(unsigned(ap_phi_mux_i7_0_phi_fu_247_p4) + unsigned(ap_const_lv4_1));
    i8_fu_516_p2 <= std_logic_vector(unsigned(ap_phi_mux_i8_0_phi_fu_280_p4) + unsigned(ap_const_lv4_1));
    icmp_ln269_fu_374_p2 <= "1" when (v129_0_reg_210 = ap_const_lv4_C) else "0";
    icmp_ln273_fu_391_p2 <= "1" when (v131_0_reg_221 = ap_const_lv4_C) else "0";
    icmp_ln277_fu_408_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_236_p4 = ap_const_lv14_2400) else "0";
    icmp_ln278_1_fu_499_p2 <= "1" when (j10_reg_662 = ap_const_lv10_300) else "0";
    icmp_ln278_fu_426_p2 <= "1" when (ap_phi_mux_j10_0_phi_fu_258_p4 = ap_const_lv10_300) else "0";
    icmp_ln302_fu_504_p2 <= "1" when (indvar_flatten21_reg_265 = ap_const_lv14_2400) else "0";
    icmp_ln303_fu_522_p2 <= "1" when (j11_0_reg_287 = ap_const_lv10_300) else "0";
    j10_fu_494_p2 <= std_logic_vector(unsigned(select_ln280_reg_627) + unsigned(ap_const_lv10_1));
    j11_fu_549_p2 <= std_logic_vector(unsigned(select_ln306_fu_528_p3) + unsigned(ap_const_lv10_1));

    mean2_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, zext_ln280_reg_646, mean2_addr_1_reg_657, mean2_addr_1_reg_657_pp0_iter3_reg, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, zext_ln274_fu_403_p1, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            mean2_address0 <= mean2_addr_1_reg_657_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            mean2_address0 <= mean2_addr_1_reg_657;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            mean2_address0 <= zext_ln280_reg_646(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean2_address0 <= zext_ln274_fu_403_p1(4 - 1 downto 0);
        else 
            mean2_address0 <= "XXXX";
        end if; 
    end process;


    mean2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_enable_reg_pp0_iter1, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            mean2_ce0 <= ap_const_logic_1;
        else 
            mean2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean2_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, grp_fu_298_p2, ap_enable_reg_pp0_iter1, grp_fu_317_p2, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter4, ap_block_pp0_stage2, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            mean2_d0 <= grp_fu_317_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            mean2_d0 <= grp_fu_298_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mean2_d0 <= ap_const_lv32_0;
        else 
            mean2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean2_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter1, icmp_ln277_reg_618_pp0_iter1_reg, icmp_ln273_fu_391_p2, ap_CS_fsm_state3, icmp_ln278_1_reg_673_pp0_iter4_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln278_1_reg_673_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln273_fu_391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((icmp_ln277_reg_618_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            mean2_we0 <= ap_const_logic_1;
        else 
            mean2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, zext_ln280_fu_490_p1, mean_addr_1_reg_652, mean_addr_1_reg_652_pp0_iter3_reg, zext_ln306_reg_714_pp1_iter10_reg, ap_enable_reg_pp1_iter11, ap_block_pp1_stage0, zext_ln270_fu_386_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1))) then 
            mean_address0 <= zext_ln306_reg_714_pp1_iter10_reg(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            mean_address0 <= mean_addr_1_reg_652_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            mean_address0 <= mean_addr_1_reg_652;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            mean_address0 <= zext_ln280_fu_490_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_address0 <= zext_ln270_fu_386_p1(4 - 1 downto 0);
        else 
            mean_address0 <= "XXXX";
        end if; 
    end process;


    mean_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, ap_enable_reg_pp1_iter11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            mean_ce0 <= ap_const_logic_1;
        else 
            mean_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mean_d0_assign_proc : process(ap_CS_fsm_pp0_stage5, grp_fu_298_p2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, grp_fu_317_p2, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, ap_block_pp0_stage1, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            mean_d0 <= grp_fu_317_p2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            mean_d0 <= grp_fu_298_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mean_d0 <= ap_const_lv32_0;
        else 
            mean_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mean_we0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, icmp_ln277_reg_618_pp0_iter1_reg, ap_enable_reg_pp0_iter3, icmp_ln278_1_reg_673_pp0_iter3_reg, ap_CS_fsm_state2, icmp_ln269_fu_374_p2)
    begin
        if ((((icmp_ln269_fu_374_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln277_reg_618_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln278_1_reg_673_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then 
            mean_we0 <= ap_const_logic_1;
        else 
            mean_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln280_1_fu_440_p3 <= 
        i7_fu_420_p2 when (icmp_ln278_fu_426_p2(0) = '1') else 
        ap_phi_mux_i7_0_phi_fu_247_p4;
    select_ln280_fu_432_p3 <= 
        ap_const_lv10_0 when (icmp_ln278_fu_426_p2(0) = '1') else 
        ap_phi_mux_j10_0_phi_fu_258_p4;
    select_ln306_2_fu_536_p3 <= 
        i8_fu_516_p2 when (icmp_ln303_fu_522_p2(0) = '1') else 
        ap_phi_mux_i8_0_phi_fu_280_p4;
    select_ln306_fu_528_p3 <= 
        ap_const_lv10_0 when (icmp_ln303_fu_522_p2(0) = '1') else 
        j11_0_reg_287;
        sext_ln280_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln280_fu_479_p2),64));

    sub_ln280_fu_470_p2 <= std_logic_vector(unsigned(zext_ln280_1_fu_455_p1) - unsigned(zext_ln280_2_fu_466_p1));
    sub_ln306_fu_577_p2 <= std_logic_vector(unsigned(zext_ln306_1_fu_562_p1) - unsigned(zext_ln306_2_fu_573_p1));
    tmp_29_fu_555_p3 <= (select_ln306_2_reg_707_pp1_iter10_reg & ap_const_lv10_0);
    tmp_30_fu_566_p3 <= (select_ln306_2_reg_707_pp1_iter10_reg & ap_const_lv8_0);
    tmp_47_fu_459_p3 <= (select_ln280_1_reg_633 & ap_const_lv8_0);
    tmp_fu_448_p3 <= (select_ln280_1_reg_633 & ap_const_lv10_0);

    v124_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, zext_ln306_4_fu_592_p1, ap_enable_reg_pp1_iter11, ap_block_pp1_stage0, sext_ln280_fu_485_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_1))) then 
            v124_address0 <= zext_ln306_4_fu_592_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            v124_address0 <= sext_ln280_fu_485_p1(14 - 1 downto 0);
        else 
            v124_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    v124_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp1_iter11)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            v124_ce0 <= ap_const_logic_1;
        else 
            v124_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v125_address0 <= zext_ln305_fu_597_p1(10 - 1 downto 0);

    v125_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter16)
    begin
        if (((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            v125_ce0 <= ap_const_logic_1;
        else 
            v125_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v126_address0 <= zext_ln305_reg_764_pp1_iter35_reg(10 - 1 downto 0);

    v126_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter36)
    begin
        if (((ap_enable_reg_pp1_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            v126_ce0 <= ap_const_logic_1;
        else 
            v126_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v127_address0 <= zext_ln306_4_reg_754_pp1_iter42_reg(14 - 1 downto 0);

    v127_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter43)
    begin
        if (((ap_enable_reg_pp1_iter43 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            v127_ce0 <= ap_const_logic_1;
        else 
            v127_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v127_d0 <= v162_reg_794;

    v127_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln302_reg_692_pp1_iter42_reg, ap_enable_reg_pp1_iter43)
    begin
        if (((icmp_ln302_reg_692_pp1_iter42_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter43 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            v127_we0 <= ap_const_logic_1;
        else 
            v127_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v129_fu_380_p2 <= std_logic_vector(unsigned(v129_0_reg_210) + unsigned(ap_const_lv4_1));
    v131_fu_397_p2 <= std_logic_vector(unsigned(v131_0_reg_221) + unsigned(ap_const_lv4_1));

    var_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, zext_ln280_reg_646_pp0_iter4_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln306_fu_544_p1, ap_enable_reg_pp0_iter5, ap_block_pp1_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            var_address0 <= zext_ln306_fu_544_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            var_address0 <= zext_ln280_reg_646_pp0_iter4_reg(4 - 1 downto 0);
        else 
            var_address0 <= "XXXX";
        end if; 
    end process;


    var_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            var_ce0 <= ap_const_logic_1;
        else 
            var_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    var_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln278_1_reg_673_pp0_iter5_reg, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln278_1_reg_673_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            var_we0 <= ap_const_logic_1;
        else 
            var_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln270_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v129_0_reg_210),64));
    zext_ln274_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v131_0_reg_221),64));
    zext_ln280_1_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_448_p3),15));
    zext_ln280_2_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_459_p3),15));
    zext_ln280_3_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln280_reg_627),15));
    zext_ln280_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln280_1_reg_633),64));
    zext_ln305_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln306_reg_701_pp1_iter15_reg),64));
    zext_ln306_1_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_555_p3),15));
    zext_ln306_2_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_566_p3),15));
    zext_ln306_3_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln306_reg_701_pp1_iter10_reg),15));
    zext_ln306_4_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln306_fu_586_p2),64));
    zext_ln306_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln306_2_fu_536_p3),64));
end behav;
