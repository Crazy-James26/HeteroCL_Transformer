// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Layer_norm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v124_address0,
        v124_ce0,
        v124_q0,
        v125_address0,
        v125_ce0,
        v125_q0,
        v126_address0,
        v126_ce0,
        v126_q0,
        v127_address0,
        v127_ce0,
        v127_we0,
        v127_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_pp0_stage0 = 12'd8;
parameter    ap_ST_fsm_pp0_stage1 = 12'd16;
parameter    ap_ST_fsm_pp0_stage2 = 12'd32;
parameter    ap_ST_fsm_pp0_stage3 = 12'd64;
parameter    ap_ST_fsm_pp0_stage4 = 12'd128;
parameter    ap_ST_fsm_pp0_stage5 = 12'd256;
parameter    ap_ST_fsm_state37 = 12'd512;
parameter    ap_ST_fsm_pp1_stage0 = 12'd1024;
parameter    ap_ST_fsm_state82 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v124_address0;
output   v124_ce0;
input  [31:0] v124_q0;
output  [9:0] v125_address0;
output   v125_ce0;
input  [31:0] v125_q0;
output  [9:0] v126_address0;
output   v126_ce0;
input  [31:0] v126_q0;
output  [13:0] v127_address0;
output   v127_ce0;
output   v127_we0;
output  [31:0] v127_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] v124_address0;
reg v124_ce0;
reg v125_ce0;
reg v126_ce0;
reg v127_ce0;
reg v127_we0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [13:0] indvar_flatten_reg_232;
reg   [3:0] i7_0_reg_243;
reg   [9:0] j10_0_reg_254;
reg   [13:0] indvar_flatten21_reg_265;
reg   [3:0] i8_0_reg_276;
reg   [9:0] j11_0_reg_287;
reg   [31:0] reg_341;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state18_pp0_stage2_iter2;
wire    ap_block_state24_pp0_stage2_iter3;
wire    ap_block_state30_pp0_stage2_iter4;
wire    ap_block_state36_pp0_stage2_iter5;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln277_reg_618;
wire    ap_block_state38_pp1_stage0_iter0;
wire    ap_block_state39_pp1_stage0_iter1;
wire    ap_block_state40_pp1_stage0_iter2;
wire    ap_block_state41_pp1_stage0_iter3;
wire    ap_block_state42_pp1_stage0_iter4;
wire    ap_block_state43_pp1_stage0_iter5;
wire    ap_block_state44_pp1_stage0_iter6;
wire    ap_block_state45_pp1_stage0_iter7;
wire    ap_block_state46_pp1_stage0_iter8;
wire    ap_block_state47_pp1_stage0_iter9;
wire    ap_block_state48_pp1_stage0_iter10;
wire    ap_block_state49_pp1_stage0_iter11;
wire    ap_block_state50_pp1_stage0_iter12;
wire    ap_block_state51_pp1_stage0_iter13;
wire    ap_block_state52_pp1_stage0_iter14;
wire    ap_block_state53_pp1_stage0_iter15;
wire    ap_block_state54_pp1_stage0_iter16;
wire    ap_block_state55_pp1_stage0_iter17;
wire    ap_block_state56_pp1_stage0_iter18;
wire    ap_block_state57_pp1_stage0_iter19;
wire    ap_block_state58_pp1_stage0_iter20;
wire    ap_block_state59_pp1_stage0_iter21;
wire    ap_block_state60_pp1_stage0_iter22;
wire    ap_block_state61_pp1_stage0_iter23;
wire    ap_block_state62_pp1_stage0_iter24;
wire    ap_block_state63_pp1_stage0_iter25;
wire    ap_block_state64_pp1_stage0_iter26;
wire    ap_block_state65_pp1_stage0_iter27;
wire    ap_block_state66_pp1_stage0_iter28;
wire    ap_block_state67_pp1_stage0_iter29;
wire    ap_block_state68_pp1_stage0_iter30;
wire    ap_block_state69_pp1_stage0_iter31;
wire    ap_block_state70_pp1_stage0_iter32;
wire    ap_block_state71_pp1_stage0_iter33;
wire    ap_block_state72_pp1_stage0_iter34;
wire    ap_block_state73_pp1_stage0_iter35;
wire    ap_block_state74_pp1_stage0_iter36;
wire    ap_block_state75_pp1_stage0_iter37;
wire    ap_block_state76_pp1_stage0_iter38;
wire    ap_block_state77_pp1_stage0_iter39;
wire    ap_block_state78_pp1_stage0_iter40;
wire    ap_block_state79_pp1_stage0_iter41;
wire    ap_block_state80_pp1_stage0_iter42;
wire    ap_block_state81_pp1_stage0_iter43;
wire    ap_block_pp1_stage0_11001;
reg    ap_enable_reg_pp1_iter12;
reg   [0:0] icmp_ln302_reg_692;
reg   [0:0] icmp_ln302_reg_692_pp1_iter11_reg;
wire   [31:0] mean_q0;
reg   [31:0] reg_349;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state19_pp0_stage3_iter2;
wire    ap_block_state25_pp0_stage3_iter3;
wire    ap_block_state31_pp0_stage3_iter4;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] reg_355;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state21_pp0_stage5_iter2;
wire    ap_block_state27_pp0_stage5_iter3;
wire    ap_block_state33_pp0_stage5_iter4;
wire    ap_block_pp0_stage5_11001;
reg    ap_enable_reg_pp1_iter21;
reg   [0:0] icmp_ln302_reg_692_pp1_iter20_reg;
wire   [31:0] grp_fu_298_p2;
reg   [31:0] reg_361;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state17_pp0_stage1_iter2;
wire    ap_block_state23_pp0_stage1_iter3;
wire    ap_block_state29_pp0_stage1_iter4;
wire    ap_block_state35_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln277_reg_618_pp0_iter1_reg;
reg    ap_enable_reg_pp1_iter17;
reg   [0:0] icmp_ln302_reg_692_pp1_iter16_reg;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] reg_367;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln278_1_reg_673;
reg   [0:0] icmp_ln278_1_reg_673_pp0_iter3_reg;
reg    ap_enable_reg_pp1_iter37;
reg   [0:0] icmp_ln302_reg_692_pp1_iter36_reg;
wire   [3:0] v129_fu_380_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln273_fu_391_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] v131_fu_397_p2;
wire   [0:0] icmp_ln277_fu_408_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state16_pp0_stage0_iter2;
wire    ap_block_state22_pp0_stage0_iter3;
wire    ap_block_state28_pp0_stage0_iter4;
wire    ap_block_state34_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [13:0] add_ln277_fu_414_p2;
reg   [13:0] add_ln277_reg_622;
wire   [9:0] select_ln280_fu_432_p3;
reg   [9:0] select_ln280_reg_627;
wire   [3:0] select_ln280_1_fu_440_p3;
reg   [3:0] select_ln280_1_reg_633;
wire   [63:0] zext_ln280_fu_490_p1;
reg   [63:0] zext_ln280_reg_646;
reg   [63:0] zext_ln280_reg_646_pp0_iter1_reg;
reg   [63:0] zext_ln280_reg_646_pp0_iter2_reg;
reg   [63:0] zext_ln280_reg_646_pp0_iter3_reg;
reg   [63:0] zext_ln280_reg_646_pp0_iter4_reg;
reg   [3:0] mean_addr_1_reg_652;
reg   [3:0] mean_addr_1_reg_652_pp0_iter1_reg;
reg   [3:0] mean_addr_1_reg_652_pp0_iter2_reg;
reg   [3:0] mean_addr_1_reg_652_pp0_iter3_reg;
reg   [3:0] mean2_addr_1_reg_657;
reg   [3:0] mean2_addr_1_reg_657_pp0_iter1_reg;
reg   [3:0] mean2_addr_1_reg_657_pp0_iter2_reg;
reg   [3:0] mean2_addr_1_reg_657_pp0_iter3_reg;
wire   [9:0] j10_fu_494_p2;
reg   [9:0] j10_reg_662;
wire   [31:0] mean2_q0;
wire   [0:0] icmp_ln278_1_fu_499_p2;
reg   [0:0] icmp_ln278_1_reg_673_pp0_iter2_reg;
reg   [0:0] icmp_ln278_1_reg_673_pp0_iter4_reg;
reg   [0:0] icmp_ln278_1_reg_673_pp0_iter5_reg;
reg   [31:0] v144_reg_677;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state20_pp0_stage4_iter2;
wire    ap_block_state26_pp0_stage4_iter3;
wire    ap_block_state32_pp0_stage4_iter4;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] v145_reg_682;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] v148_reg_687;
wire   [0:0] icmp_ln302_fu_504_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln302_reg_692_pp1_iter1_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter2_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter3_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter4_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter5_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter6_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter7_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter8_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter9_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter10_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter12_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter13_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter14_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter15_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter17_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter18_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter19_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter21_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter22_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter23_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter24_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter25_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter26_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter27_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter28_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter29_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter30_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter31_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter32_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter33_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter34_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter35_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter37_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter38_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter39_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter40_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter41_reg;
reg   [0:0] icmp_ln302_reg_692_pp1_iter42_reg;
wire   [13:0] add_ln302_fu_510_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [9:0] select_ln306_fu_528_p3;
reg   [9:0] select_ln306_reg_701;
reg   [9:0] select_ln306_reg_701_pp1_iter1_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter2_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter3_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter4_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter5_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter6_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter7_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter8_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter9_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter10_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter11_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter12_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter13_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter14_reg;
reg   [9:0] select_ln306_reg_701_pp1_iter15_reg;
wire   [3:0] select_ln306_2_fu_536_p3;
reg   [3:0] select_ln306_2_reg_707;
reg   [3:0] select_ln306_2_reg_707_pp1_iter1_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter2_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter3_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter4_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter5_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter6_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter7_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter8_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter9_reg;
reg   [3:0] select_ln306_2_reg_707_pp1_iter10_reg;
wire   [63:0] zext_ln306_fu_544_p1;
reg   [63:0] zext_ln306_reg_714;
reg   [63:0] zext_ln306_reg_714_pp1_iter1_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter2_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter3_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter4_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter5_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter6_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter7_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter8_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter9_reg;
reg   [63:0] zext_ln306_reg_714_pp1_iter10_reg;
wire   [9:0] j11_fu_549_p2;
wire   [31:0] var_q0;
reg    ap_enable_reg_pp1_iter1;
wire   [63:0] grp_fu_327_p1;
reg   [63:0] v158_mid2_v_v_reg_734;
wire   [63:0] grp_fu_336_p2;
reg   [63:0] v158_mid2_v_reg_739;
wire   [31:0] grp_fu_324_p1;
reg   [31:0] v158_mid2_reg_744;
wire   [63:0] zext_ln306_4_fu_592_p1;
reg   [63:0] zext_ln306_4_reg_754;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter12_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter13_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter14_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter15_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter16_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter17_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter18_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter19_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter20_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter21_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter22_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter23_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter24_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter25_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter26_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter27_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter28_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter29_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter30_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter31_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter32_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter33_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter34_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter35_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter36_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter37_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter38_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter39_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter40_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter41_reg;
reg   [63:0] zext_ln306_4_reg_754_pp1_iter42_reg;
wire   [63:0] zext_ln305_fu_597_p1;
reg   [63:0] zext_ln305_reg_764;
reg   [63:0] zext_ln305_reg_764_pp1_iter17_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter18_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter19_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter20_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter21_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter22_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter23_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter24_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter25_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter26_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter27_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter28_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter29_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter30_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter31_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter32_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter33_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter34_reg;
reg   [63:0] zext_ln305_reg_764_pp1_iter35_reg;
reg   [31:0] v152_reg_774;
wire   [31:0] grp_fu_331_p2;
reg   [31:0] v159_reg_779;
reg   [31:0] v161_reg_789;
wire   [31:0] grp_fu_307_p2;
reg   [31:0] v162_reg_794;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter5;
wire    ap_CS_fsm_state37;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state38;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
reg    ap_enable_reg_pp1_iter26;
reg    ap_enable_reg_pp1_iter27;
reg    ap_enable_reg_pp1_iter28;
reg    ap_enable_reg_pp1_iter29;
reg    ap_enable_reg_pp1_iter30;
reg    ap_enable_reg_pp1_iter31;
reg    ap_enable_reg_pp1_iter32;
reg    ap_enable_reg_pp1_iter33;
reg    ap_enable_reg_pp1_iter34;
reg    ap_enable_reg_pp1_iter35;
reg    ap_enable_reg_pp1_iter36;
reg    ap_enable_reg_pp1_iter38;
reg    ap_enable_reg_pp1_iter39;
reg    ap_enable_reg_pp1_iter40;
reg    ap_enable_reg_pp1_iter41;
reg    ap_enable_reg_pp1_iter42;
reg    ap_enable_reg_pp1_iter43;
reg   [3:0] mean_address0;
reg    mean_ce0;
reg    mean_we0;
reg   [31:0] mean_d0;
reg   [3:0] mean2_address0;
reg    mean2_ce0;
reg    mean2_we0;
reg   [31:0] mean2_d0;
reg   [3:0] var_address0;
reg    var_ce0;
reg    var_we0;
reg   [3:0] v129_0_reg_210;
wire   [0:0] icmp_ln269_fu_374_p2;
reg   [3:0] v131_0_reg_221;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_236_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i7_0_phi_fu_247_p4;
reg   [9:0] ap_phi_mux_j10_0_phi_fu_258_p4;
reg   [3:0] ap_phi_mux_i8_0_phi_fu_280_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln270_fu_386_p1;
wire   [63:0] zext_ln274_fu_403_p1;
wire  signed [63:0] sext_ln280_fu_485_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage4;
reg   [31:0] grp_fu_298_p0;
reg   [31:0] grp_fu_298_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] grp_fu_311_p0;
reg   [31:0] grp_fu_311_p1;
reg   [31:0] grp_fu_317_p0;
reg   [31:0] grp_fu_317_p1;
wire   [0:0] icmp_ln278_fu_426_p2;
wire   [3:0] i7_fu_420_p2;
wire   [13:0] tmp_fu_448_p3;
wire   [11:0] tmp_47_fu_459_p3;
wire   [14:0] zext_ln280_1_fu_455_p1;
wire   [14:0] zext_ln280_2_fu_466_p1;
wire   [14:0] sub_ln280_fu_470_p2;
wire   [14:0] zext_ln280_3_fu_476_p1;
wire   [14:0] add_ln280_fu_479_p2;
wire   [0:0] icmp_ln303_fu_522_p2;
wire   [3:0] i8_fu_516_p2;
wire   [13:0] tmp_29_fu_555_p3;
wire   [11:0] tmp_30_fu_566_p3;
wire   [14:0] zext_ln306_1_fu_562_p1;
wire   [14:0] zext_ln306_2_fu_573_p1;
wire   [14:0] zext_ln306_3_fu_583_p1;
wire   [14:0] sub_ln306_fu_577_p2;
wire   [14:0] add_ln306_fu_586_p2;
reg   [1:0] grp_fu_298_opcode;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp1_stage0_00001;
wire    ap_CS_fsm_state82;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp1_iter28 = 1'b0;
#0 ap_enable_reg_pp1_iter29 = 1'b0;
#0 ap_enable_reg_pp1_iter30 = 1'b0;
#0 ap_enable_reg_pp1_iter31 = 1'b0;
#0 ap_enable_reg_pp1_iter32 = 1'b0;
#0 ap_enable_reg_pp1_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter34 = 1'b0;
#0 ap_enable_reg_pp1_iter35 = 1'b0;
#0 ap_enable_reg_pp1_iter36 = 1'b0;
#0 ap_enable_reg_pp1_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter39 = 1'b0;
#0 ap_enable_reg_pp1_iter40 = 1'b0;
#0 ap_enable_reg_pp1_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter42 = 1'b0;
#0 ap_enable_reg_pp1_iter43 = 1'b0;
end

Softmax_layer_inpdEe #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
mean_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean_address0),
    .ce0(mean_ce0),
    .we0(mean_we0),
    .d0(mean_d0),
    .q0(mean_q0)
);

Softmax_layer_inpdEe #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
mean2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mean2_address0),
    .ce0(mean2_ce0),
    .we0(mean2_we0),
    .d0(mean2_d0),
    .q0(mean2_q0)
);

Softmax_layer_inpdEe #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
var_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(var_address0),
    .ce0(var_ce0),
    .we0(var_we0),
    .d0(grp_fu_298_p2),
    .q0(var_q0)
);

Bert_layer_faddfshbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_faddfshbi_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_298_p0),
    .din1(grp_fu_298_p1),
    .opcode(grp_fu_298_opcode),
    .ce(1'b1),
    .dout(grp_fu_298_p2)
);

Bert_layer_fadd_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fadd_3bkb_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_367),
    .din1(v161_reg_789),
    .ce(1'b1),
    .dout(grp_fu_307_p2)
);

Bert_layer_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fmul_3cud_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_311_p0),
    .din1(grp_fu_311_p1),
    .ce(1'b1),
    .dout(grp_fu_311_p2)
);

Bert_layer_fdiv_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fdiv_3eOg_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_317_p0),
    .din1(grp_fu_317_p1),
    .ce(1'b1),
    .dout(grp_fu_317_p2)
);

Bert_layer_fptrunibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Bert_layer_fptrunibs_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v158_mid2_v_reg_739),
    .ce(1'b1),
    .dout(grp_fu_324_p1)
);

Bert_layer_fpext_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Bert_layer_fpext_jbC_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(var_q0),
    .ce(1'b1),
    .dout(grp_fu_327_p1)
);

Bert_layer_fsqrt_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fsqrt_kbM_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(v158_mid2_reg_744),
    .ce(1'b1),
    .dout(grp_fu_331_p2)
);

Bert_layer_dadd_6lbW #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Bert_layer_dadd_6lbW_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v158_mid2_v_v_reg_734),
    .din1(64'd4532020583610935537),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln273_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((icmp_ln273_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state38)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state38);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
        end else if ((1'b1 == ap_CS_fsm_state37)) begin
            ap_enable_reg_pp1_iter43 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln273_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i7_0_reg_243 <= 4'd0;
    end else if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i7_0_reg_243 <= select_ln280_1_reg_633;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i8_0_reg_276 <= 4'd0;
    end else if (((icmp_ln302_reg_692 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i8_0_reg_276 <= select_ln306_2_reg_707;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        indvar_flatten21_reg_265 <= 14'd0;
    end else if (((icmp_ln302_fu_504_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten21_reg_265 <= add_ln302_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln273_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvar_flatten_reg_232 <= 14'd0;
    end else if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_232 <= add_ln277_reg_622;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln273_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j10_0_reg_254 <= 10'd0;
    end else if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j10_0_reg_254 <= j10_reg_662;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        j11_0_reg_287 <= 10'd0;
    end else if (((icmp_ln302_fu_504_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j11_0_reg_287 <= j11_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln269_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v129_0_reg_210 <= v129_fu_380_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v129_0_reg_210 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln269_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        v131_0_reg_221 <= 4'd0;
    end else if (((icmp_ln273_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v131_0_reg_221 <= v131_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln277_reg_622 <= add_ln277_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln277_reg_618 <= icmp_ln277_fu_408_p2;
        icmp_ln277_reg_618_pp0_iter1_reg <= icmp_ln277_reg_618;
        icmp_ln278_1_reg_673_pp0_iter2_reg <= icmp_ln278_1_reg_673;
        icmp_ln278_1_reg_673_pp0_iter3_reg <= icmp_ln278_1_reg_673_pp0_iter2_reg;
        icmp_ln278_1_reg_673_pp0_iter4_reg <= icmp_ln278_1_reg_673_pp0_iter3_reg;
        icmp_ln278_1_reg_673_pp0_iter5_reg <= icmp_ln278_1_reg_673_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln278_1_reg_673 <= icmp_ln278_1_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln302_reg_692 <= icmp_ln302_fu_504_p2;
        icmp_ln302_reg_692_pp1_iter1_reg <= icmp_ln302_reg_692;
        select_ln306_2_reg_707_pp1_iter1_reg <= select_ln306_2_reg_707;
        select_ln306_reg_701_pp1_iter1_reg <= select_ln306_reg_701;
        zext_ln306_reg_714_pp1_iter1_reg[3 : 0] <= zext_ln306_reg_714[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln302_reg_692_pp1_iter10_reg <= icmp_ln302_reg_692_pp1_iter9_reg;
        icmp_ln302_reg_692_pp1_iter11_reg <= icmp_ln302_reg_692_pp1_iter10_reg;
        icmp_ln302_reg_692_pp1_iter12_reg <= icmp_ln302_reg_692_pp1_iter11_reg;
        icmp_ln302_reg_692_pp1_iter13_reg <= icmp_ln302_reg_692_pp1_iter12_reg;
        icmp_ln302_reg_692_pp1_iter14_reg <= icmp_ln302_reg_692_pp1_iter13_reg;
        icmp_ln302_reg_692_pp1_iter15_reg <= icmp_ln302_reg_692_pp1_iter14_reg;
        icmp_ln302_reg_692_pp1_iter16_reg <= icmp_ln302_reg_692_pp1_iter15_reg;
        icmp_ln302_reg_692_pp1_iter17_reg <= icmp_ln302_reg_692_pp1_iter16_reg;
        icmp_ln302_reg_692_pp1_iter18_reg <= icmp_ln302_reg_692_pp1_iter17_reg;
        icmp_ln302_reg_692_pp1_iter19_reg <= icmp_ln302_reg_692_pp1_iter18_reg;
        icmp_ln302_reg_692_pp1_iter20_reg <= icmp_ln302_reg_692_pp1_iter19_reg;
        icmp_ln302_reg_692_pp1_iter21_reg <= icmp_ln302_reg_692_pp1_iter20_reg;
        icmp_ln302_reg_692_pp1_iter22_reg <= icmp_ln302_reg_692_pp1_iter21_reg;
        icmp_ln302_reg_692_pp1_iter23_reg <= icmp_ln302_reg_692_pp1_iter22_reg;
        icmp_ln302_reg_692_pp1_iter24_reg <= icmp_ln302_reg_692_pp1_iter23_reg;
        icmp_ln302_reg_692_pp1_iter25_reg <= icmp_ln302_reg_692_pp1_iter24_reg;
        icmp_ln302_reg_692_pp1_iter26_reg <= icmp_ln302_reg_692_pp1_iter25_reg;
        icmp_ln302_reg_692_pp1_iter27_reg <= icmp_ln302_reg_692_pp1_iter26_reg;
        icmp_ln302_reg_692_pp1_iter28_reg <= icmp_ln302_reg_692_pp1_iter27_reg;
        icmp_ln302_reg_692_pp1_iter29_reg <= icmp_ln302_reg_692_pp1_iter28_reg;
        icmp_ln302_reg_692_pp1_iter2_reg <= icmp_ln302_reg_692_pp1_iter1_reg;
        icmp_ln302_reg_692_pp1_iter30_reg <= icmp_ln302_reg_692_pp1_iter29_reg;
        icmp_ln302_reg_692_pp1_iter31_reg <= icmp_ln302_reg_692_pp1_iter30_reg;
        icmp_ln302_reg_692_pp1_iter32_reg <= icmp_ln302_reg_692_pp1_iter31_reg;
        icmp_ln302_reg_692_pp1_iter33_reg <= icmp_ln302_reg_692_pp1_iter32_reg;
        icmp_ln302_reg_692_pp1_iter34_reg <= icmp_ln302_reg_692_pp1_iter33_reg;
        icmp_ln302_reg_692_pp1_iter35_reg <= icmp_ln302_reg_692_pp1_iter34_reg;
        icmp_ln302_reg_692_pp1_iter36_reg <= icmp_ln302_reg_692_pp1_iter35_reg;
        icmp_ln302_reg_692_pp1_iter37_reg <= icmp_ln302_reg_692_pp1_iter36_reg;
        icmp_ln302_reg_692_pp1_iter38_reg <= icmp_ln302_reg_692_pp1_iter37_reg;
        icmp_ln302_reg_692_pp1_iter39_reg <= icmp_ln302_reg_692_pp1_iter38_reg;
        icmp_ln302_reg_692_pp1_iter3_reg <= icmp_ln302_reg_692_pp1_iter2_reg;
        icmp_ln302_reg_692_pp1_iter40_reg <= icmp_ln302_reg_692_pp1_iter39_reg;
        icmp_ln302_reg_692_pp1_iter41_reg <= icmp_ln302_reg_692_pp1_iter40_reg;
        icmp_ln302_reg_692_pp1_iter42_reg <= icmp_ln302_reg_692_pp1_iter41_reg;
        icmp_ln302_reg_692_pp1_iter4_reg <= icmp_ln302_reg_692_pp1_iter3_reg;
        icmp_ln302_reg_692_pp1_iter5_reg <= icmp_ln302_reg_692_pp1_iter4_reg;
        icmp_ln302_reg_692_pp1_iter6_reg <= icmp_ln302_reg_692_pp1_iter5_reg;
        icmp_ln302_reg_692_pp1_iter7_reg <= icmp_ln302_reg_692_pp1_iter6_reg;
        icmp_ln302_reg_692_pp1_iter8_reg <= icmp_ln302_reg_692_pp1_iter7_reg;
        icmp_ln302_reg_692_pp1_iter9_reg <= icmp_ln302_reg_692_pp1_iter8_reg;
        select_ln306_2_reg_707_pp1_iter10_reg <= select_ln306_2_reg_707_pp1_iter9_reg;
        select_ln306_2_reg_707_pp1_iter2_reg <= select_ln306_2_reg_707_pp1_iter1_reg;
        select_ln306_2_reg_707_pp1_iter3_reg <= select_ln306_2_reg_707_pp1_iter2_reg;
        select_ln306_2_reg_707_pp1_iter4_reg <= select_ln306_2_reg_707_pp1_iter3_reg;
        select_ln306_2_reg_707_pp1_iter5_reg <= select_ln306_2_reg_707_pp1_iter4_reg;
        select_ln306_2_reg_707_pp1_iter6_reg <= select_ln306_2_reg_707_pp1_iter5_reg;
        select_ln306_2_reg_707_pp1_iter7_reg <= select_ln306_2_reg_707_pp1_iter6_reg;
        select_ln306_2_reg_707_pp1_iter8_reg <= select_ln306_2_reg_707_pp1_iter7_reg;
        select_ln306_2_reg_707_pp1_iter9_reg <= select_ln306_2_reg_707_pp1_iter8_reg;
        select_ln306_reg_701_pp1_iter10_reg <= select_ln306_reg_701_pp1_iter9_reg;
        select_ln306_reg_701_pp1_iter11_reg <= select_ln306_reg_701_pp1_iter10_reg;
        select_ln306_reg_701_pp1_iter12_reg <= select_ln306_reg_701_pp1_iter11_reg;
        select_ln306_reg_701_pp1_iter13_reg <= select_ln306_reg_701_pp1_iter12_reg;
        select_ln306_reg_701_pp1_iter14_reg <= select_ln306_reg_701_pp1_iter13_reg;
        select_ln306_reg_701_pp1_iter15_reg <= select_ln306_reg_701_pp1_iter14_reg;
        select_ln306_reg_701_pp1_iter2_reg <= select_ln306_reg_701_pp1_iter1_reg;
        select_ln306_reg_701_pp1_iter3_reg <= select_ln306_reg_701_pp1_iter2_reg;
        select_ln306_reg_701_pp1_iter4_reg <= select_ln306_reg_701_pp1_iter3_reg;
        select_ln306_reg_701_pp1_iter5_reg <= select_ln306_reg_701_pp1_iter4_reg;
        select_ln306_reg_701_pp1_iter6_reg <= select_ln306_reg_701_pp1_iter5_reg;
        select_ln306_reg_701_pp1_iter7_reg <= select_ln306_reg_701_pp1_iter6_reg;
        select_ln306_reg_701_pp1_iter8_reg <= select_ln306_reg_701_pp1_iter7_reg;
        select_ln306_reg_701_pp1_iter9_reg <= select_ln306_reg_701_pp1_iter8_reg;
        zext_ln305_reg_764_pp1_iter17_reg[9 : 0] <= zext_ln305_reg_764[9 : 0];
        zext_ln305_reg_764_pp1_iter18_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter17_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter19_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter18_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter20_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter19_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter21_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter20_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter22_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter21_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter23_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter22_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter24_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter23_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter25_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter24_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter26_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter25_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter27_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter26_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter28_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter27_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter29_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter28_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter30_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter29_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter31_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter30_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter32_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter31_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter33_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter32_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter34_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter33_reg[9 : 0];
        zext_ln305_reg_764_pp1_iter35_reg[9 : 0] <= zext_ln305_reg_764_pp1_iter34_reg[9 : 0];
        zext_ln306_4_reg_754_pp1_iter12_reg[14 : 0] <= zext_ln306_4_reg_754[14 : 0];
        zext_ln306_4_reg_754_pp1_iter13_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter12_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter14_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter13_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter15_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter14_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter16_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter15_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter17_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter16_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter18_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter17_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter19_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter18_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter20_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter19_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter21_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter20_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter22_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter21_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter23_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter22_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter24_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter23_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter25_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter24_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter26_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter25_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter27_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter26_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter28_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter27_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter29_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter28_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter30_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter29_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter31_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter30_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter32_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter31_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter33_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter32_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter34_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter33_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter35_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter34_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter36_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter35_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter37_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter36_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter38_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter37_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter39_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter38_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter40_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter39_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter41_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter40_reg[14 : 0];
        zext_ln306_4_reg_754_pp1_iter42_reg[14 : 0] <= zext_ln306_4_reg_754_pp1_iter41_reg[14 : 0];
        zext_ln306_reg_714_pp1_iter10_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter9_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter2_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter1_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter3_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter2_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter4_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter3_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter5_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter4_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter6_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter5_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter7_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter6_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter8_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter7_reg[3 : 0];
        zext_ln306_reg_714_pp1_iter9_reg[3 : 0] <= zext_ln306_reg_714_pp1_iter8_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        j10_reg_662 <= j10_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mean2_addr_1_reg_657 <= zext_ln280_reg_646;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        mean2_addr_1_reg_657_pp0_iter1_reg <= mean2_addr_1_reg_657;
        mean2_addr_1_reg_657_pp0_iter2_reg <= mean2_addr_1_reg_657_pp0_iter1_reg;
        mean2_addr_1_reg_657_pp0_iter3_reg <= mean2_addr_1_reg_657_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mean_addr_1_reg_652 <= zext_ln280_fu_490_p1;
        zext_ln280_reg_646[3 : 0] <= zext_ln280_fu_490_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mean_addr_1_reg_652_pp0_iter1_reg <= mean_addr_1_reg_652;
        mean_addr_1_reg_652_pp0_iter2_reg <= mean_addr_1_reg_652_pp0_iter1_reg;
        mean_addr_1_reg_652_pp0_iter3_reg <= mean_addr_1_reg_652_pp0_iter2_reg;
        zext_ln280_reg_646_pp0_iter1_reg[3 : 0] <= zext_ln280_reg_646[3 : 0];
        zext_ln280_reg_646_pp0_iter2_reg[3 : 0] <= zext_ln280_reg_646_pp0_iter1_reg[3 : 0];
        zext_ln280_reg_646_pp0_iter3_reg[3 : 0] <= zext_ln280_reg_646_pp0_iter2_reg[3 : 0];
        zext_ln280_reg_646_pp0_iter4_reg[3 : 0] <= zext_ln280_reg_646_pp0_iter3_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln302_reg_692_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_341 <= v124_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln277_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln302_reg_692_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_349 <= mean_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln277_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln302_reg_692_pp1_iter20_reg == 1'd0) & (ap_enable_reg_pp1_iter21 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_355 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln277_reg_618_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln302_reg_692_pp1_iter16_reg == 1'd0) & (ap_enable_reg_pp1_iter17 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_361 <= grp_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln278_1_reg_673_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln302_reg_692_pp1_iter36_reg == 1'd0) & (ap_enable_reg_pp1_iter37 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        reg_367 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_fu_408_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln280_1_reg_633 <= select_ln280_1_fu_440_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_fu_408_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln280_reg_627 <= select_ln280_fu_432_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_fu_504_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln306_2_reg_707 <= select_ln306_2_fu_536_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_fu_504_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln306_reg_701 <= select_ln306_fu_528_p3;
        zext_ln306_reg_714[3 : 0] <= zext_ln306_fu_544_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_reg_618_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v144_reg_677 <= grp_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln278_1_reg_673_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        v145_reg_682 <= grp_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln278_1_reg_673_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        v148_reg_687 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter16_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v152_reg_774 <= v125_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter8_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v158_mid2_reg_744 <= grp_fu_324_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v158_mid2_v_reg_739 <= grp_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v158_mid2_v_v_reg_734 <= grp_fu_327_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter20_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v159_reg_779 <= grp_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter36_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v161_reg_789 <= v126_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter41_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v162_reg_794 <= grp_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter15_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        zext_ln305_reg_764[9 : 0] <= zext_ln305_fu_597_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln302_reg_692_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        zext_ln306_4_reg_754[14 : 0] <= zext_ln306_4_fu_592_p1[14 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln277_fu_408_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln302_fu_504_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter43 == 1'b0) & (ap_enable_reg_pp1_iter42 == 1'b0) & (ap_enable_reg_pp1_iter41 == 1'b0) & (ap_enable_reg_pp1_iter40 == 1'b0) & (ap_enable_reg_pp1_iter39 == 1'b0) & (ap_enable_reg_pp1_iter38 == 1'b0) & (ap_enable_reg_pp1_iter36 == 1'b0) & (ap_enable_reg_pp1_iter35 == 1'b0) & (ap_enable_reg_pp1_iter34 == 1'b0) & (ap_enable_reg_pp1_iter33 == 1'b0) & (ap_enable_reg_pp1_iter32 == 1'b0) & (ap_enable_reg_pp1_iter31 == 1'b0) & (ap_enable_reg_pp1_iter30 == 1'b0) & (ap_enable_reg_pp1_iter29 == 1'b0) & (ap_enable_reg_pp1_iter28 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter37 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i7_0_phi_fu_247_p4 = select_ln280_1_reg_633;
    end else begin
        ap_phi_mux_i7_0_phi_fu_247_p4 = i7_0_reg_243;
    end
end

always @ (*) begin
    if (((icmp_ln302_reg_692 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i8_0_phi_fu_280_p4 = select_ln306_2_reg_707;
    end else begin
        ap_phi_mux_i8_0_phi_fu_280_p4 = i8_0_reg_276;
    end
end

always @ (*) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_236_p4 = add_ln277_reg_622;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_236_p4 = indvar_flatten_reg_232;
    end
end

always @ (*) begin
    if (((icmp_ln277_reg_618 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j10_0_phi_fu_258_p4 = j10_reg_662;
    end else begin
        ap_phi_mux_j10_0_phi_fu_258_p4 = j10_0_reg_254;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln302_reg_692_pp1_iter12_reg == 1'd0) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b0 == ap_block_pp1_stage0_00001)) | ((icmp_ln278_1_reg_673_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_00001)))) begin
        grp_fu_298_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln277_reg_618 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_00001) & (icmp_ln277_reg_618 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_298_opcode = 2'd0;
    end else begin
        grp_fu_298_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter13 == 1'b1))) begin
        grp_fu_298_p0 = reg_341;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_298_p0 = v145_reg_682;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_298_p0 = mean2_q0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_298_p0 = mean_q0;
    end else begin
        grp_fu_298_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter13 == 1'b1))) begin
        grp_fu_298_p1 = reg_349;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_298_p1 = v148_reg_687;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_298_p1 = reg_355;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_298_p1 = reg_341;
    end else begin
        grp_fu_298_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        grp_fu_311_p0 = v152_reg_774;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_311_p0 = reg_367;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_311_p0 = v124_q0;
    end else begin
        grp_fu_311_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        grp_fu_311_p1 = reg_361;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_311_p1 = reg_367;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_311_p1 = v124_q0;
    end else begin
        grp_fu_311_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter22 == 1'b1))) begin
        grp_fu_317_p0 = reg_355;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_317_p0 = v144_reg_677;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_317_p0 = reg_361;
    end else begin
        grp_fu_317_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter22 == 1'b1))) begin
        grp_fu_317_p1 = v159_reg_779;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_317_p1 = 32'd1145044992;
    end else begin
        grp_fu_317_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        mean2_address0 = mean2_addr_1_reg_657_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mean2_address0 = mean2_addr_1_reg_657;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mean2_address0 = zext_ln280_reg_646;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mean2_address0 = zext_ln274_fu_403_p1;
    end else begin
        mean2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        mean2_ce0 = 1'b1;
    end else begin
        mean2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        mean2_d0 = grp_fu_317_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        mean2_d0 = grp_fu_298_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        mean2_d0 = 32'd0;
    end else begin
        mean2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln278_1_reg_673_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln273_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln277_reg_618_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        mean2_we0 = 1'b1;
    end else begin
        mean2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        mean_address0 = zext_ln306_reg_714_pp1_iter10_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mean_address0 = mean_addr_1_reg_652_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mean_address0 = mean_addr_1_reg_652;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mean_address0 = zext_ln280_fu_490_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mean_address0 = zext_ln270_fu_386_p1;
    end else begin
        mean_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp1_iter11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        mean_ce0 = 1'b1;
    end else begin
        mean_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mean_d0 = grp_fu_317_p2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mean_d0 = grp_fu_298_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        mean_d0 = 32'd0;
    end else begin
        mean_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln269_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln277_reg_618_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln278_1_reg_673_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        mean_we0 = 1'b1;
    end else begin
        mean_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter11 == 1'b1))) begin
        v124_address0 = zext_ln306_4_fu_592_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v124_address0 = sext_ln280_fu_485_p1;
    end else begin
        v124_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp1_iter11 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        v124_ce0 = 1'b1;
    end else begin
        v124_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter16 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v125_ce0 = 1'b1;
    end else begin
        v125_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter36 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v126_ce0 = 1'b1;
    end else begin
        v126_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter43 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v127_ce0 = 1'b1;
    end else begin
        v127_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln302_reg_692_pp1_iter42_reg == 1'd0) & (ap_enable_reg_pp1_iter43 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v127_we0 = 1'b1;
    end else begin
        v127_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        var_address0 = zext_ln306_fu_544_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        var_address0 = zext_ln280_reg_646_pp0_iter4_reg;
    end else begin
        var_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        var_ce0 = 1'b1;
    end else begin
        var_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln278_1_reg_673_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        var_we0 = 1'b1;
    end else begin
        var_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln269_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln273_fu_391_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln277_fu_408_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln277_fu_408_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln302_fu_504_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter42 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter43 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter42 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter43 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln302_fu_504_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln277_fu_414_p2 = (ap_phi_mux_indvar_flatten_phi_fu_236_p4 + 14'd1);

assign add_ln280_fu_479_p2 = (sub_ln280_fu_470_p2 + zext_ln280_3_fu_476_p1);

assign add_ln302_fu_510_p2 = (indvar_flatten21_reg_265 + 14'd1);

assign add_ln306_fu_586_p2 = (zext_ln306_3_fu_583_p1 + sub_ln306_fu_577_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp1_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp1_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp1_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp1_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp1_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp1_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp1_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp1_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp1_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp1_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp1_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp1_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp1_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign i7_fu_420_p2 = (ap_phi_mux_i7_0_phi_fu_247_p4 + 4'd1);

assign i8_fu_516_p2 = (ap_phi_mux_i8_0_phi_fu_280_p4 + 4'd1);

assign icmp_ln269_fu_374_p2 = ((v129_0_reg_210 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln273_fu_391_p2 = ((v131_0_reg_221 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln277_fu_408_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_236_p4 == 14'd9216) ? 1'b1 : 1'b0);

assign icmp_ln278_1_fu_499_p2 = ((j10_reg_662 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_426_p2 = ((ap_phi_mux_j10_0_phi_fu_258_p4 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_504_p2 = ((indvar_flatten21_reg_265 == 14'd9216) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_522_p2 = ((j11_0_reg_287 == 10'd768) ? 1'b1 : 1'b0);

assign j10_fu_494_p2 = (select_ln280_reg_627 + 10'd1);

assign j11_fu_549_p2 = (select_ln306_fu_528_p3 + 10'd1);

assign select_ln280_1_fu_440_p3 = ((icmp_ln278_fu_426_p2[0:0] === 1'b1) ? i7_fu_420_p2 : ap_phi_mux_i7_0_phi_fu_247_p4);

assign select_ln280_fu_432_p3 = ((icmp_ln278_fu_426_p2[0:0] === 1'b1) ? 10'd0 : ap_phi_mux_j10_0_phi_fu_258_p4);

assign select_ln306_2_fu_536_p3 = ((icmp_ln303_fu_522_p2[0:0] === 1'b1) ? i8_fu_516_p2 : ap_phi_mux_i8_0_phi_fu_280_p4);

assign select_ln306_fu_528_p3 = ((icmp_ln303_fu_522_p2[0:0] === 1'b1) ? 10'd0 : j11_0_reg_287);

assign sext_ln280_fu_485_p1 = $signed(add_ln280_fu_479_p2);

assign sub_ln280_fu_470_p2 = (zext_ln280_1_fu_455_p1 - zext_ln280_2_fu_466_p1);

assign sub_ln306_fu_577_p2 = (zext_ln306_1_fu_562_p1 - zext_ln306_2_fu_573_p1);

assign tmp_29_fu_555_p3 = {{select_ln306_2_reg_707_pp1_iter10_reg}, {10'd0}};

assign tmp_30_fu_566_p3 = {{select_ln306_2_reg_707_pp1_iter10_reg}, {8'd0}};

assign tmp_47_fu_459_p3 = {{select_ln280_1_reg_633}, {8'd0}};

assign tmp_fu_448_p3 = {{select_ln280_1_reg_633}, {10'd0}};

assign v125_address0 = zext_ln305_fu_597_p1;

assign v126_address0 = zext_ln305_reg_764_pp1_iter35_reg;

assign v127_address0 = zext_ln306_4_reg_754_pp1_iter42_reg;

assign v127_d0 = v162_reg_794;

assign v129_fu_380_p2 = (v129_0_reg_210 + 4'd1);

assign v131_fu_397_p2 = (v131_0_reg_221 + 4'd1);

assign zext_ln270_fu_386_p1 = v129_0_reg_210;

assign zext_ln274_fu_403_p1 = v131_0_reg_221;

assign zext_ln280_1_fu_455_p1 = tmp_fu_448_p3;

assign zext_ln280_2_fu_466_p1 = tmp_47_fu_459_p3;

assign zext_ln280_3_fu_476_p1 = select_ln280_reg_627;

assign zext_ln280_fu_490_p1 = select_ln280_1_reg_633;

assign zext_ln305_fu_597_p1 = select_ln306_reg_701_pp1_iter15_reg;

assign zext_ln306_1_fu_562_p1 = tmp_29_fu_555_p3;

assign zext_ln306_2_fu_573_p1 = tmp_30_fu_566_p3;

assign zext_ln306_3_fu_583_p1 = select_ln306_reg_701_pp1_iter10_reg;

assign zext_ln306_4_fu_592_p1 = add_ln306_fu_586_p2;

assign zext_ln306_fu_544_p1 = select_ln306_2_fu_536_p3;

always @ (posedge ap_clk) begin
    zext_ln280_reg_646[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln280_reg_646_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln280_reg_646_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln280_reg_646_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln280_reg_646_pp0_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter7_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter8_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter9_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_reg_714_pp1_iter10_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter12_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter13_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter14_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter15_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter16_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter17_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter18_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter19_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter20_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter21_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter22_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter23_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter24_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter25_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter26_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter27_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter28_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter29_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter30_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter31_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter32_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter33_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter34_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter35_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter36_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter37_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter38_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter39_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter40_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter41_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln306_4_reg_754_pp1_iter42_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter32_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter33_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter34_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln305_reg_764_pp1_iter35_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Layer_norm
