// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Self_attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v75_address0,
        v75_ce0,
        v75_q0,
        v76_address0,
        v76_ce0,
        v76_q0,
        v77_address0,
        v77_ce0,
        v77_q0,
        v78_address0,
        v78_ce0,
        v78_we0,
        v78_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_pp0_stage0 = 11'd4;
parameter    ap_ST_fsm_state6 = 11'd8;
parameter    ap_ST_fsm_state7 = 11'd16;
parameter    ap_ST_fsm_state8 = 11'd32;
parameter    ap_ST_fsm_state9 = 11'd64;
parameter    ap_ST_fsm_state10 = 11'd128;
parameter    ap_ST_fsm_state11 = 11'd256;
parameter    ap_ST_fsm_pp1_stage0 = 11'd512;
parameter    ap_ST_fsm_state14 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v75_address0;
output   v75_ce0;
input  [31:0] v75_q0;
output  [13:0] v76_address0;
output   v76_ce0;
input  [31:0] v76_q0;
output  [13:0] v77_address0;
output   v77_ce0;
input  [31:0] v77_q0;
output  [13:0] v78_address0;
output   v78_ce0;
output   v78_we0;
output  [31:0] v78_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v75_ce0;
reg v76_ce0;
reg v77_ce0;
reg v78_ce0;
reg v78_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_215;
reg   [3:0] i_s_0_reg_226;
reg   [6:0] j_s_0_reg_237;
reg   [9:0] indvar_flatten11_reg_248;
reg   [3:0] i_m_0_reg_259;
reg   [6:0] j_m_0_reg_270;
wire   [0:0] icmp_ln172_fu_301_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] h_fu_307_p2;
reg   [3:0] h_reg_575;
wire   [9:0] shl_ln_fu_313_p3;
reg   [9:0] shl_ln_reg_580;
wire   [0:0] icmp_ln176_fu_321_p2;
reg   [0:0] icmp_ln176_reg_586;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln176_reg_586_pp0_iter1_reg;
wire   [9:0] add_ln176_fu_327_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] select_ln179_fu_345_p3;
reg   [6:0] select_ln179_reg_595;
reg   [6:0] select_ln179_reg_595_pp0_iter1_reg;
wire   [3:0] select_ln179_1_fu_353_p3;
reg   [3:0] select_ln179_1_reg_600;
reg   [3:0] select_ln179_1_reg_600_pp0_iter1_reg;
wire   [9:0] add_ln179_fu_365_p2;
reg   [9:0] add_ln179_reg_608;
wire   [6:0] j_s_fu_370_p2;
wire   [0:0] icmp_ln193_fu_447_p2;
reg   [0:0] icmp_ln193_reg_633;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state12_pp1_stage0_iter0;
wire    ap_block_state13_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [9:0] add_ln193_fu_453_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln196_1_fu_479_p3;
reg   [3:0] select_ln196_1_reg_642;
wire   [9:0] add_ln197_fu_518_p2;
reg   [9:0] add_ln197_reg_654;
wire   [6:0] j_m_fu_523_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state11;
wire    grp_Context_layer_fu_294_ap_ready;
wire    grp_Context_layer_fu_294_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state12;
reg    ap_enable_reg_pp1_iter1;
reg   [9:0] Q_h_address0;
reg    Q_h_ce0;
reg    Q_h_we0;
wire   [31:0] Q_h_q0;
reg   [9:0] K_h_address0;
reg    K_h_ce0;
reg    K_h_we0;
wire   [31:0] K_h_q0;
reg   [9:0] V_h_address0;
reg    V_h_ce0;
reg    V_h_we0;
wire   [31:0] V_h_q0;
reg   [7:0] v88_address0;
reg    v88_ce0;
reg    v88_we0;
reg   [31:0] v88_d0;
wire   [31:0] v88_q0;
reg    v88_ce1;
reg    v88_we1;
reg   [7:0] v89_address0;
reg    v89_ce0;
reg    v89_we0;
wire   [31:0] v89_q0;
reg   [9:0] v90_address0;
reg    v90_ce0;
reg    v90_we0;
wire   [31:0] v90_q0;
wire    grp_Softmax_layer_fu_281_ap_start;
wire    grp_Softmax_layer_fu_281_ap_done;
wire    grp_Softmax_layer_fu_281_ap_idle;
wire    grp_Softmax_layer_fu_281_ap_ready;
wire   [7:0] grp_Softmax_layer_fu_281_v42_address0;
wire    grp_Softmax_layer_fu_281_v42_ce0;
wire    grp_Softmax_layer_fu_281_v42_we0;
wire   [31:0] grp_Softmax_layer_fu_281_v42_d0;
wire   [7:0] grp_Softmax_layer_fu_281_v43_address0;
wire    grp_Softmax_layer_fu_281_v43_ce0;
wire    grp_Softmax_layer_fu_281_v43_we0;
wire   [31:0] grp_Softmax_layer_fu_281_v43_d0;
wire    grp_Attention_layer_fu_287_ap_start;
wire    grp_Attention_layer_fu_287_ap_done;
wire    grp_Attention_layer_fu_287_ap_idle;
wire    grp_Attention_layer_fu_287_ap_ready;
wire   [9:0] grp_Attention_layer_fu_287_v22_address0;
wire    grp_Attention_layer_fu_287_v22_ce0;
wire   [9:0] grp_Attention_layer_fu_287_v23_address0;
wire    grp_Attention_layer_fu_287_v23_ce0;
wire   [7:0] grp_Attention_layer_fu_287_v24_address0;
wire    grp_Attention_layer_fu_287_v24_ce0;
wire    grp_Attention_layer_fu_287_v24_we0;
wire   [31:0] grp_Attention_layer_fu_287_v24_d0;
wire   [7:0] grp_Attention_layer_fu_287_v24_address1;
wire    grp_Attention_layer_fu_287_v24_ce1;
wire    grp_Attention_layer_fu_287_v24_we1;
wire   [31:0] grp_Attention_layer_fu_287_v24_d1;
wire    grp_Context_layer_fu_294_ap_start;
wire    grp_Context_layer_fu_294_ap_idle;
wire   [7:0] grp_Context_layer_fu_294_v58_address0;
wire    grp_Context_layer_fu_294_v58_ce0;
wire   [9:0] grp_Context_layer_fu_294_v59_address0;
wire    grp_Context_layer_fu_294_v59_ce0;
wire   [9:0] grp_Context_layer_fu_294_v60_address0;
wire    grp_Context_layer_fu_294_v60_ce0;
wire    grp_Context_layer_fu_294_v60_we0;
wire   [31:0] grp_Context_layer_fu_294_v60_d0;
reg   [3:0] h_0_reg_204;
wire    ap_CS_fsm_state14;
reg   [3:0] ap_phi_mux_i_s_0_phi_fu_230_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i_m_0_phi_fu_263_p4;
wire    ap_block_pp1_stage0;
reg    grp_Softmax_layer_fu_281_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_Attention_layer_fu_287_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_Context_layer_fu_294_ap_start_reg;
wire    ap_CS_fsm_state10;
wire  signed [63:0] sext_ln179_fu_413_p1;
wire   [63:0] zext_ln180_1_fu_440_p1;
wire   [63:0] zext_ln196_1_fu_513_p1;
wire  signed [63:0] sext_ln197_fu_566_p1;
wire   [0:0] icmp_ln177_fu_339_p2;
wire   [3:0] i_s_fu_333_p2;
wire   [9:0] zext_ln177_fu_361_p1;
wire   [13:0] tmp_s_fu_376_p3;
wire   [11:0] tmp_15_fu_387_p3;
wire   [14:0] zext_ln179_fu_383_p1;
wire   [14:0] zext_ln179_1_fu_394_p1;
wire   [14:0] sub_ln179_fu_398_p2;
wire   [14:0] zext_ln179_2_fu_404_p1;
wire   [14:0] add_ln179_1_fu_407_p2;
wire   [9:0] tmp_16_fu_420_p3;
wire   [10:0] zext_ln177_1_fu_427_p1;
wire   [10:0] zext_ln180_fu_431_p1;
wire   [10:0] add_ln180_fu_434_p2;
wire   [0:0] icmp_ln194_fu_465_p2;
wire   [3:0] i_m_fu_459_p2;
wire   [9:0] tmp_19_fu_487_p3;
wire   [6:0] select_ln196_fu_471_p3;
wire   [10:0] zext_ln194_1_fu_495_p1;
wire   [10:0] zext_ln196_fu_503_p1;
wire   [10:0] add_ln196_fu_507_p2;
wire   [9:0] zext_ln194_fu_499_p1;
wire   [13:0] tmp_17_fu_529_p3;
wire   [11:0] tmp_18_fu_540_p3;
wire   [14:0] zext_ln197_fu_536_p1;
wire   [14:0] zext_ln197_1_fu_547_p1;
wire   [14:0] sub_ln197_fu_551_p2;
wire   [14:0] zext_ln197_2_fu_557_p1;
wire   [14:0] add_ln197_1_fu_560_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_Softmax_layer_fu_281_ap_start_reg = 1'b0;
#0 grp_Attention_layer_fu_287_ap_start_reg = 1'b0;
#0 grp_Context_layer_fu_294_ap_start_reg = 1'b0;
end

Self_attention_Q_h #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
Q_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_h_address0),
    .ce0(Q_h_ce0),
    .we0(Q_h_we0),
    .d0(v75_q0),
    .q0(Q_h_q0)
);

Self_attention_Q_h #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
K_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(K_h_address0),
    .ce0(K_h_ce0),
    .we0(K_h_we0),
    .d0(v76_q0),
    .q0(K_h_q0)
);

Self_attention_Q_h #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
V_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(V_h_address0),
    .ce0(V_h_ce0),
    .we0(V_h_we0),
    .d0(v77_q0),
    .q0(V_h_q0)
);

Self_attention_v88 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
v88_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v88_address0),
    .ce0(v88_ce0),
    .we0(v88_we0),
    .d0(v88_d0),
    .q0(v88_q0),
    .address1(grp_Attention_layer_fu_287_v24_address1),
    .ce1(v88_ce1),
    .we1(v88_we1),
    .d1(grp_Attention_layer_fu_287_v24_d1)
);

Self_attention_v89 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
v89_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v89_address0),
    .ce0(v89_ce0),
    .we0(v89_we0),
    .d0(grp_Softmax_layer_fu_281_v43_d0),
    .q0(v89_q0)
);

Self_attention_Q_h #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
v90_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v90_address0),
    .ce0(v90_ce0),
    .we0(v90_we0),
    .d0(grp_Context_layer_fu_294_v60_d0),
    .q0(v90_q0)
);

Softmax_layer grp_Softmax_layer_fu_281(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Softmax_layer_fu_281_ap_start),
    .ap_done(grp_Softmax_layer_fu_281_ap_done),
    .ap_idle(grp_Softmax_layer_fu_281_ap_idle),
    .ap_ready(grp_Softmax_layer_fu_281_ap_ready),
    .v42_address0(grp_Softmax_layer_fu_281_v42_address0),
    .v42_ce0(grp_Softmax_layer_fu_281_v42_ce0),
    .v42_we0(grp_Softmax_layer_fu_281_v42_we0),
    .v42_d0(grp_Softmax_layer_fu_281_v42_d0),
    .v42_q0(v88_q0),
    .v43_address0(grp_Softmax_layer_fu_281_v43_address0),
    .v43_ce0(grp_Softmax_layer_fu_281_v43_ce0),
    .v43_we0(grp_Softmax_layer_fu_281_v43_we0),
    .v43_d0(grp_Softmax_layer_fu_281_v43_d0)
);

Attention_layer grp_Attention_layer_fu_287(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Attention_layer_fu_287_ap_start),
    .ap_done(grp_Attention_layer_fu_287_ap_done),
    .ap_idle(grp_Attention_layer_fu_287_ap_idle),
    .ap_ready(grp_Attention_layer_fu_287_ap_ready),
    .v22_address0(grp_Attention_layer_fu_287_v22_address0),
    .v22_ce0(grp_Attention_layer_fu_287_v22_ce0),
    .v22_q0(Q_h_q0),
    .v23_address0(grp_Attention_layer_fu_287_v23_address0),
    .v23_ce0(grp_Attention_layer_fu_287_v23_ce0),
    .v23_q0(K_h_q0),
    .v24_address0(grp_Attention_layer_fu_287_v24_address0),
    .v24_ce0(grp_Attention_layer_fu_287_v24_ce0),
    .v24_we0(grp_Attention_layer_fu_287_v24_we0),
    .v24_d0(grp_Attention_layer_fu_287_v24_d0),
    .v24_q0(v88_q0),
    .v24_address1(grp_Attention_layer_fu_287_v24_address1),
    .v24_ce1(grp_Attention_layer_fu_287_v24_ce1),
    .v24_we1(grp_Attention_layer_fu_287_v24_we1),
    .v24_d1(grp_Attention_layer_fu_287_v24_d1)
);

Context_layer grp_Context_layer_fu_294(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Context_layer_fu_294_ap_start),
    .ap_done(grp_Context_layer_fu_294_ap_done),
    .ap_idle(grp_Context_layer_fu_294_ap_idle),
    .ap_ready(grp_Context_layer_fu_294_ap_ready),
    .v58_address0(grp_Context_layer_fu_294_v58_address0),
    .v58_ce0(grp_Context_layer_fu_294_v58_ce0),
    .v58_q0(v89_q0),
    .v59_address0(grp_Context_layer_fu_294_v59_address0),
    .v59_ce0(grp_Context_layer_fu_294_v59_ce0),
    .v59_q0(V_h_q0),
    .v60_address0(grp_Context_layer_fu_294_v60_address0),
    .v60_ce0(grp_Context_layer_fu_294_v60_ce0),
    .v60_we0(grp_Context_layer_fu_294_v60_we0),
    .v60_d0(grp_Context_layer_fu_294_v60_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln172_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln172_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (grp_Context_layer_fu_294_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state12) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (grp_Context_layer_fu_294_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Attention_layer_fu_287_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_Attention_layer_fu_287_ap_start_reg <= 1'b1;
        end else if ((grp_Attention_layer_fu_287_ap_ready == 1'b1)) begin
            grp_Attention_layer_fu_287_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Context_layer_fu_294_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_Context_layer_fu_294_ap_start_reg <= 1'b1;
        end else if ((grp_Context_layer_fu_294_ap_ready == 1'b1)) begin
            grp_Context_layer_fu_294_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Softmax_layer_fu_281_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_Softmax_layer_fu_281_ap_start_reg <= 1'b1;
        end else if ((grp_Softmax_layer_fu_281_ap_ready == 1'b1)) begin
            grp_Softmax_layer_fu_281_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h_0_reg_204 <= h_reg_575;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_0_reg_204 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_reg_633 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_m_0_reg_259 <= select_ln196_1_reg_642;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_Context_layer_fu_294_ap_done == 1'b1))) begin
        i_m_0_reg_259 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_reg_586 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_s_0_reg_226 <= select_ln179_1_reg_600;
    end else if (((icmp_ln172_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_s_0_reg_226 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_fu_447_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten11_reg_248 <= add_ln193_fu_453_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_Context_layer_fu_294_ap_done == 1'b1))) begin
        indvar_flatten11_reg_248 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_reg_215 <= add_ln176_fu_327_p2;
    end else if (((icmp_ln172_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_215 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_fu_447_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_m_0_reg_270 <= j_m_fu_523_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_Context_layer_fu_294_ap_done == 1'b1))) begin
        j_m_0_reg_270 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_s_0_reg_237 <= j_s_fu_370_p2;
    end else if (((icmp_ln172_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_s_0_reg_237 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln179_reg_608 <= add_ln179_fu_365_p2;
        select_ln179_reg_595 <= select_ln179_fu_345_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_fu_447_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln197_reg_654 <= add_ln197_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        h_reg_575 <= h_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln176_reg_586 <= icmp_ln176_fu_321_p2;
        icmp_ln176_reg_586_pp0_iter1_reg <= icmp_ln176_reg_586;
        select_ln179_1_reg_600_pp0_iter1_reg <= select_ln179_1_reg_600;
        select_ln179_reg_595_pp0_iter1_reg <= select_ln179_reg_595;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln193_reg_633 <= icmp_ln193_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln179_1_reg_600 <= select_ln179_1_fu_353_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_fu_447_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln196_1_reg_642 <= select_ln196_1_fu_479_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln172_fu_301_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        shl_ln_reg_580[9 : 6] <= shl_ln_fu_313_p3[9 : 6];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_h_address0 = zext_ln180_1_fu_440_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        K_h_address0 = grp_Attention_layer_fu_287_v23_address0;
    end else begin
        K_h_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        K_h_ce0 = grp_Attention_layer_fu_287_v23_ce0;
    end else begin
        K_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_reg_586_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        K_h_we0 = 1'b1;
    end else begin
        K_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Q_h_address0 = zext_ln180_1_fu_440_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Q_h_address0 = grp_Attention_layer_fu_287_v22_address0;
    end else begin
        Q_h_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Q_h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Q_h_ce0 = grp_Attention_layer_fu_287_v22_ce0;
    end else begin
        Q_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_reg_586_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Q_h_we0 = 1'b1;
    end else begin
        Q_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_h_address0 = zext_ln180_1_fu_440_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        V_h_address0 = grp_Context_layer_fu_294_v59_address0;
    end else begin
        V_h_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        V_h_ce0 = grp_Context_layer_fu_294_v59_ce0;
    end else begin
        V_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln176_reg_586_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_h_we0 = 1'b1;
    end else begin
        V_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln176_fu_321_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln193_fu_447_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln172_fu_301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln193_reg_633 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_m_0_phi_fu_263_p4 = select_ln196_1_reg_642;
    end else begin
        ap_phi_mux_i_m_0_phi_fu_263_p4 = i_m_0_reg_259;
    end
end

always @ (*) begin
    if (((icmp_ln176_reg_586 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_s_0_phi_fu_230_p4 = select_ln179_1_reg_600;
    end else begin
        ap_phi_mux_i_s_0_phi_fu_230_p4 = i_s_0_reg_226;
    end
end

always @ (*) begin
    if (((icmp_ln172_fu_301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v75_ce0 = 1'b1;
    end else begin
        v75_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v76_ce0 = 1'b1;
    end else begin
        v76_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        v77_ce0 = 1'b1;
    end else begin
        v77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v78_ce0 = 1'b1;
    end else begin
        v78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln193_reg_633 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v78_we0 = 1'b1;
    end else begin
        v78_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v88_address0 = grp_Attention_layer_fu_287_v24_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v88_address0 = grp_Softmax_layer_fu_281_v42_address0;
    end else begin
        v88_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v88_ce0 = grp_Attention_layer_fu_287_v24_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v88_ce0 = grp_Softmax_layer_fu_281_v42_ce0;
    end else begin
        v88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v88_ce1 = grp_Attention_layer_fu_287_v24_ce1;
    end else begin
        v88_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v88_d0 = grp_Attention_layer_fu_287_v24_d0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v88_d0 = grp_Softmax_layer_fu_281_v42_d0;
    end else begin
        v88_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v88_we0 = grp_Attention_layer_fu_287_v24_we0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v88_we0 = grp_Softmax_layer_fu_281_v42_we0;
    end else begin
        v88_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v88_we1 = grp_Attention_layer_fu_287_v24_we1;
    end else begin
        v88_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v89_address0 = grp_Context_layer_fu_294_v58_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v89_address0 = grp_Softmax_layer_fu_281_v43_address0;
    end else begin
        v89_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v89_ce0 = grp_Context_layer_fu_294_v58_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        v89_ce0 = grp_Softmax_layer_fu_281_v43_ce0;
    end else begin
        v89_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v89_we0 = grp_Softmax_layer_fu_281_v43_we0;
    end else begin
        v89_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v90_address0 = zext_ln196_1_fu_513_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        v90_address0 = grp_Context_layer_fu_294_v60_address0;
    end else begin
        v90_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        v90_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        v90_ce0 = grp_Context_layer_fu_294_v60_ce0;
    end else begin
        v90_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v90_we0 = grp_Context_layer_fu_294_v60_we0;
    end else begin
        v90_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln172_fu_301_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln176_fu_321_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln176_fu_321_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_Attention_layer_fu_287_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_Softmax_layer_fu_281_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_Context_layer_fu_294_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln193_fu_447_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln193_fu_447_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln176_fu_327_p2 = (indvar_flatten_reg_215 + 10'd1);

assign add_ln179_1_fu_407_p2 = (sub_ln179_fu_398_p2 + zext_ln179_2_fu_404_p1);

assign add_ln179_fu_365_p2 = (zext_ln177_fu_361_p1 + shl_ln_reg_580);

assign add_ln180_fu_434_p2 = (zext_ln177_1_fu_427_p1 + zext_ln180_fu_431_p1);

assign add_ln193_fu_453_p2 = (indvar_flatten11_reg_248 + 10'd1);

assign add_ln196_fu_507_p2 = (zext_ln194_1_fu_495_p1 + zext_ln196_fu_503_p1);

assign add_ln197_1_fu_560_p2 = (sub_ln197_fu_551_p2 + zext_ln197_2_fu_557_p1);

assign add_ln197_fu_518_p2 = (zext_ln194_fu_499_p1 + shl_ln_reg_580);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign grp_Attention_layer_fu_287_ap_start = grp_Attention_layer_fu_287_ap_start_reg;

assign grp_Context_layer_fu_294_ap_start = grp_Context_layer_fu_294_ap_start_reg;

assign grp_Softmax_layer_fu_281_ap_start = grp_Softmax_layer_fu_281_ap_start_reg;

assign h_fu_307_p2 = (h_0_reg_204 + 4'd1);

assign i_m_fu_459_p2 = (ap_phi_mux_i_m_0_phi_fu_263_p4 + 4'd1);

assign i_s_fu_333_p2 = (ap_phi_mux_i_s_0_phi_fu_230_p4 + 4'd1);

assign icmp_ln172_fu_301_p2 = ((h_0_reg_204 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_321_p2 = ((indvar_flatten_reg_215 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_339_p2 = ((j_s_0_reg_237 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_447_p2 = ((indvar_flatten11_reg_248 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_465_p2 = ((j_m_0_reg_270 == 7'd64) ? 1'b1 : 1'b0);

assign j_m_fu_523_p2 = (select_ln196_fu_471_p3 + 7'd1);

assign j_s_fu_370_p2 = (select_ln179_fu_345_p3 + 7'd1);

assign select_ln179_1_fu_353_p3 = ((icmp_ln177_fu_339_p2[0:0] === 1'b1) ? i_s_fu_333_p2 : ap_phi_mux_i_s_0_phi_fu_230_p4);

assign select_ln179_fu_345_p3 = ((icmp_ln177_fu_339_p2[0:0] === 1'b1) ? 7'd0 : j_s_0_reg_237);

assign select_ln196_1_fu_479_p3 = ((icmp_ln194_fu_465_p2[0:0] === 1'b1) ? i_m_fu_459_p2 : ap_phi_mux_i_m_0_phi_fu_263_p4);

assign select_ln196_fu_471_p3 = ((icmp_ln194_fu_465_p2[0:0] === 1'b1) ? 7'd0 : j_m_0_reg_270);

assign sext_ln179_fu_413_p1 = $signed(add_ln179_1_fu_407_p2);

assign sext_ln197_fu_566_p1 = $signed(add_ln197_1_fu_560_p2);

assign shl_ln_fu_313_p3 = {{h_0_reg_204}, {6'd0}};

assign sub_ln179_fu_398_p2 = (zext_ln179_fu_383_p1 - zext_ln179_1_fu_394_p1);

assign sub_ln197_fu_551_p2 = (zext_ln197_fu_536_p1 - zext_ln197_1_fu_547_p1);

assign tmp_15_fu_387_p3 = {{select_ln179_1_reg_600}, {8'd0}};

assign tmp_16_fu_420_p3 = {{select_ln179_1_reg_600_pp0_iter1_reg}, {6'd0}};

assign tmp_17_fu_529_p3 = {{select_ln196_1_reg_642}, {10'd0}};

assign tmp_18_fu_540_p3 = {{select_ln196_1_reg_642}, {8'd0}};

assign tmp_19_fu_487_p3 = {{select_ln196_1_fu_479_p3}, {6'd0}};

assign tmp_s_fu_376_p3 = {{select_ln179_1_reg_600}, {10'd0}};

assign v75_address0 = sext_ln179_fu_413_p1;

assign v76_address0 = sext_ln179_fu_413_p1;

assign v77_address0 = sext_ln179_fu_413_p1;

assign v78_address0 = sext_ln197_fu_566_p1;

assign v78_d0 = v90_q0;

assign zext_ln177_1_fu_427_p1 = tmp_16_fu_420_p3;

assign zext_ln177_fu_361_p1 = select_ln179_fu_345_p3;

assign zext_ln179_1_fu_394_p1 = tmp_15_fu_387_p3;

assign zext_ln179_2_fu_404_p1 = add_ln179_reg_608;

assign zext_ln179_fu_383_p1 = tmp_s_fu_376_p3;

assign zext_ln180_1_fu_440_p1 = add_ln180_fu_434_p2;

assign zext_ln180_fu_431_p1 = select_ln179_reg_595_pp0_iter1_reg;

assign zext_ln194_1_fu_495_p1 = tmp_19_fu_487_p3;

assign zext_ln194_fu_499_p1 = select_ln196_fu_471_p3;

assign zext_ln196_1_fu_513_p1 = add_ln196_fu_507_p2;

assign zext_ln196_fu_503_p1 = select_ln196_fu_471_p3;

assign zext_ln197_1_fu_547_p1 = tmp_18_fu_540_p3;

assign zext_ln197_2_fu_557_p1 = add_ln197_reg_654;

assign zext_ln197_fu_536_p1 = tmp_17_fu_529_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_580[5:0] <= 6'b000000;
end

endmodule //Self_attention
