// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "init_block_A_proc637.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic init_block_A_proc637::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic init_block_A_proc637::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> init_block_A_proc637::ap_ST_fsm_state1 = "1";
const sc_lv<3> init_block_A_proc637::ap_ST_fsm_state2 = "10";
const sc_lv<3> init_block_A_proc637::ap_ST_fsm_state3 = "100";
const sc_lv<32> init_block_A_proc637::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> init_block_A_proc637::ap_const_lv32_2 = "10";
const sc_lv<32> init_block_A_proc637::ap_const_lv32_1 = "1";
const sc_lv<10> init_block_A_proc637::ap_const_lv10_0 = "0000000000";
const sc_lv<10> init_block_A_proc637::ap_const_lv10_300 = "1100000000";
const sc_lv<10> init_block_A_proc637::ap_const_lv10_1 = "1";
const sc_lv<1> init_block_A_proc637::ap_const_lv1_1 = "1";
const bool init_block_A_proc637::ap_const_boolean_1 = true;

init_block_A_proc637::init_block_A_proc637(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_10_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_10_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_11_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_11_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_1_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_2_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_2_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_3_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_3_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_4_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_4_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_5_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_5_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_6_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_6_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_7_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_7_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_8_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_8_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_A_9_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln217_fu_495_p1 );

    SC_METHOD(thread_A_9_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_add_ln214_fu_489_p2);
    sensitive << ( k_0_i_0_reg_472 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln214_fu_483_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln214_fu_483_p2 );

    SC_METHOD(thread_block_A_loader_0_V_blk_n);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_0_V_din);
    sensitive << ( A_0_q0 );
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_0_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_10_V_blk_n);
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_10_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( A_10_q0 );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_10_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_11_V_blk_n);
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_11_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( A_11_q0 );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_11_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_1_V_blk_n);
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_1_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( A_1_q0 );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_1_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_2_V_blk_n);
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_2_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( A_2_q0 );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_2_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_3_V_blk_n);
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_3_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( A_3_q0 );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_3_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_4_V_blk_n);
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_4_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( A_4_q0 );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_4_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_5_V_blk_n);
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_5_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( A_5_q0 );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_5_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_6_V_blk_n);
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_6_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( A_6_q0 );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_6_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_7_V_blk_n);
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_7_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( A_7_q0 );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_7_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_8_V_blk_n);
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_8_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( A_8_q0 );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_8_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_9_V_blk_n);
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_9_V_din);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( A_9_q0 );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_block_A_loader_9_V_write);
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_icmp_ln214_fu_483_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_0_i_0_reg_472 );

    SC_METHOD(thread_zext_ln217_fu_495_p1);
    sensitive << ( k_0_i_0_reg_472 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( block_A_loader_0_V_full_n );
    sensitive << ( block_A_loader_1_V_full_n );
    sensitive << ( block_A_loader_2_V_full_n );
    sensitive << ( block_A_loader_3_V_full_n );
    sensitive << ( block_A_loader_4_V_full_n );
    sensitive << ( block_A_loader_5_V_full_n );
    sensitive << ( block_A_loader_6_V_full_n );
    sensitive << ( block_A_loader_7_V_full_n );
    sensitive << ( block_A_loader_8_V_full_n );
    sensitive << ( block_A_loader_9_V_full_n );
    sensitive << ( block_A_loader_10_V_full_n );
    sensitive << ( block_A_loader_11_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln214_fu_483_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "init_block_A_proc637_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_0_address0, "(port)A_0_address0");
    sc_trace(mVcdFile, A_0_ce0, "(port)A_0_ce0");
    sc_trace(mVcdFile, A_0_q0, "(port)A_0_q0");
    sc_trace(mVcdFile, block_A_loader_0_V_din, "(port)block_A_loader_0_V_din");
    sc_trace(mVcdFile, block_A_loader_0_V_full_n, "(port)block_A_loader_0_V_full_n");
    sc_trace(mVcdFile, block_A_loader_0_V_write, "(port)block_A_loader_0_V_write");
    sc_trace(mVcdFile, A_1_address0, "(port)A_1_address0");
    sc_trace(mVcdFile, A_1_ce0, "(port)A_1_ce0");
    sc_trace(mVcdFile, A_1_q0, "(port)A_1_q0");
    sc_trace(mVcdFile, block_A_loader_1_V_din, "(port)block_A_loader_1_V_din");
    sc_trace(mVcdFile, block_A_loader_1_V_full_n, "(port)block_A_loader_1_V_full_n");
    sc_trace(mVcdFile, block_A_loader_1_V_write, "(port)block_A_loader_1_V_write");
    sc_trace(mVcdFile, A_2_address0, "(port)A_2_address0");
    sc_trace(mVcdFile, A_2_ce0, "(port)A_2_ce0");
    sc_trace(mVcdFile, A_2_q0, "(port)A_2_q0");
    sc_trace(mVcdFile, block_A_loader_2_V_din, "(port)block_A_loader_2_V_din");
    sc_trace(mVcdFile, block_A_loader_2_V_full_n, "(port)block_A_loader_2_V_full_n");
    sc_trace(mVcdFile, block_A_loader_2_V_write, "(port)block_A_loader_2_V_write");
    sc_trace(mVcdFile, A_3_address0, "(port)A_3_address0");
    sc_trace(mVcdFile, A_3_ce0, "(port)A_3_ce0");
    sc_trace(mVcdFile, A_3_q0, "(port)A_3_q0");
    sc_trace(mVcdFile, block_A_loader_3_V_din, "(port)block_A_loader_3_V_din");
    sc_trace(mVcdFile, block_A_loader_3_V_full_n, "(port)block_A_loader_3_V_full_n");
    sc_trace(mVcdFile, block_A_loader_3_V_write, "(port)block_A_loader_3_V_write");
    sc_trace(mVcdFile, A_4_address0, "(port)A_4_address0");
    sc_trace(mVcdFile, A_4_ce0, "(port)A_4_ce0");
    sc_trace(mVcdFile, A_4_q0, "(port)A_4_q0");
    sc_trace(mVcdFile, block_A_loader_4_V_din, "(port)block_A_loader_4_V_din");
    sc_trace(mVcdFile, block_A_loader_4_V_full_n, "(port)block_A_loader_4_V_full_n");
    sc_trace(mVcdFile, block_A_loader_4_V_write, "(port)block_A_loader_4_V_write");
    sc_trace(mVcdFile, A_5_address0, "(port)A_5_address0");
    sc_trace(mVcdFile, A_5_ce0, "(port)A_5_ce0");
    sc_trace(mVcdFile, A_5_q0, "(port)A_5_q0");
    sc_trace(mVcdFile, block_A_loader_5_V_din, "(port)block_A_loader_5_V_din");
    sc_trace(mVcdFile, block_A_loader_5_V_full_n, "(port)block_A_loader_5_V_full_n");
    sc_trace(mVcdFile, block_A_loader_5_V_write, "(port)block_A_loader_5_V_write");
    sc_trace(mVcdFile, A_6_address0, "(port)A_6_address0");
    sc_trace(mVcdFile, A_6_ce0, "(port)A_6_ce0");
    sc_trace(mVcdFile, A_6_q0, "(port)A_6_q0");
    sc_trace(mVcdFile, block_A_loader_6_V_din, "(port)block_A_loader_6_V_din");
    sc_trace(mVcdFile, block_A_loader_6_V_full_n, "(port)block_A_loader_6_V_full_n");
    sc_trace(mVcdFile, block_A_loader_6_V_write, "(port)block_A_loader_6_V_write");
    sc_trace(mVcdFile, A_7_address0, "(port)A_7_address0");
    sc_trace(mVcdFile, A_7_ce0, "(port)A_7_ce0");
    sc_trace(mVcdFile, A_7_q0, "(port)A_7_q0");
    sc_trace(mVcdFile, block_A_loader_7_V_din, "(port)block_A_loader_7_V_din");
    sc_trace(mVcdFile, block_A_loader_7_V_full_n, "(port)block_A_loader_7_V_full_n");
    sc_trace(mVcdFile, block_A_loader_7_V_write, "(port)block_A_loader_7_V_write");
    sc_trace(mVcdFile, A_8_address0, "(port)A_8_address0");
    sc_trace(mVcdFile, A_8_ce0, "(port)A_8_ce0");
    sc_trace(mVcdFile, A_8_q0, "(port)A_8_q0");
    sc_trace(mVcdFile, block_A_loader_8_V_din, "(port)block_A_loader_8_V_din");
    sc_trace(mVcdFile, block_A_loader_8_V_full_n, "(port)block_A_loader_8_V_full_n");
    sc_trace(mVcdFile, block_A_loader_8_V_write, "(port)block_A_loader_8_V_write");
    sc_trace(mVcdFile, A_9_address0, "(port)A_9_address0");
    sc_trace(mVcdFile, A_9_ce0, "(port)A_9_ce0");
    sc_trace(mVcdFile, A_9_q0, "(port)A_9_q0");
    sc_trace(mVcdFile, block_A_loader_9_V_din, "(port)block_A_loader_9_V_din");
    sc_trace(mVcdFile, block_A_loader_9_V_full_n, "(port)block_A_loader_9_V_full_n");
    sc_trace(mVcdFile, block_A_loader_9_V_write, "(port)block_A_loader_9_V_write");
    sc_trace(mVcdFile, A_10_address0, "(port)A_10_address0");
    sc_trace(mVcdFile, A_10_ce0, "(port)A_10_ce0");
    sc_trace(mVcdFile, A_10_q0, "(port)A_10_q0");
    sc_trace(mVcdFile, block_A_loader_10_V_din, "(port)block_A_loader_10_V_din");
    sc_trace(mVcdFile, block_A_loader_10_V_full_n, "(port)block_A_loader_10_V_full_n");
    sc_trace(mVcdFile, block_A_loader_10_V_write, "(port)block_A_loader_10_V_write");
    sc_trace(mVcdFile, A_11_address0, "(port)A_11_address0");
    sc_trace(mVcdFile, A_11_ce0, "(port)A_11_ce0");
    sc_trace(mVcdFile, A_11_q0, "(port)A_11_q0");
    sc_trace(mVcdFile, block_A_loader_11_V_din, "(port)block_A_loader_11_V_din");
    sc_trace(mVcdFile, block_A_loader_11_V_full_n, "(port)block_A_loader_11_V_full_n");
    sc_trace(mVcdFile, block_A_loader_11_V_write, "(port)block_A_loader_11_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, block_A_loader_0_V_blk_n, "block_A_loader_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, block_A_loader_1_V_blk_n, "block_A_loader_1_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_2_V_blk_n, "block_A_loader_2_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_3_V_blk_n, "block_A_loader_3_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_4_V_blk_n, "block_A_loader_4_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_5_V_blk_n, "block_A_loader_5_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_6_V_blk_n, "block_A_loader_6_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_7_V_blk_n, "block_A_loader_7_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_8_V_blk_n, "block_A_loader_8_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_9_V_blk_n, "block_A_loader_9_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_10_V_blk_n, "block_A_loader_10_V_blk_n");
    sc_trace(mVcdFile, block_A_loader_11_V_blk_n, "block_A_loader_11_V_blk_n");
    sc_trace(mVcdFile, add_ln214_fu_489_p2, "add_ln214_fu_489_p2");
    sc_trace(mVcdFile, add_ln214_reg_514, "add_ln214_reg_514");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln214_fu_483_p2, "icmp_ln214_fu_483_p2");
    sc_trace(mVcdFile, k_0_i_0_reg_472, "k_0_i_0_reg_472");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, zext_ln217_fu_495_p1, "zext_ln217_fu_495_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

init_block_A_proc637::~init_block_A_proc637() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void init_block_A_proc637::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln214_fu_483_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        k_0_i_0_reg_472 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        k_0_i_0_reg_472 = add_ln214_reg_514.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln214_reg_514 = add_ln214_fu_489_p2.read();
    }
}

void init_block_A_proc637::thread_A_0_address0() {
    A_0_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_0_ce0 = ap_const_logic_1;
    } else {
        A_0_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_10_address0() {
    A_10_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_10_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_10_ce0 = ap_const_logic_1;
    } else {
        A_10_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_11_address0() {
    A_11_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_11_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_11_ce0 = ap_const_logic_1;
    } else {
        A_11_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_1_address0() {
    A_1_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_1_ce0 = ap_const_logic_1;
    } else {
        A_1_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_2_address0() {
    A_2_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_2_ce0 = ap_const_logic_1;
    } else {
        A_2_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_3_address0() {
    A_3_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_3_ce0 = ap_const_logic_1;
    } else {
        A_3_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_4_address0() {
    A_4_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_4_ce0 = ap_const_logic_1;
    } else {
        A_4_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_5_address0() {
    A_5_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_5_ce0 = ap_const_logic_1;
    } else {
        A_5_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_6_address0() {
    A_6_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_6_ce0 = ap_const_logic_1;
    } else {
        A_6_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_7_address0() {
    A_7_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_7_ce0 = ap_const_logic_1;
    } else {
        A_7_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_8_address0() {
    A_8_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_8_ce0 = ap_const_logic_1;
    } else {
        A_8_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_A_9_address0() {
    A_9_address0 =  (sc_lv<10>) (zext_ln217_fu_495_p1.read());
}

void init_block_A_proc637::thread_A_9_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        A_9_ce0 = ap_const_logic_1;
    } else {
        A_9_ce0 = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_add_ln214_fu_489_p2() {
    add_ln214_fu_489_p2 = (!k_0_i_0_reg_472.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(k_0_i_0_reg_472.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void init_block_A_proc637::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void init_block_A_proc637::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void init_block_A_proc637::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void init_block_A_proc637::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void init_block_A_proc637::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read()));
}

void init_block_A_proc637::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln214_fu_483_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void init_block_A_proc637::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln214_fu_483_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_0_V_blk_n = block_A_loader_0_V_full_n.read();
    } else {
        block_A_loader_0_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_0_V_din() {
    block_A_loader_0_V_din = A_0_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_0_V_write = ap_const_logic_1;
    } else {
        block_A_loader_0_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_10_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_10_V_blk_n = block_A_loader_10_V_full_n.read();
    } else {
        block_A_loader_10_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_10_V_din() {
    block_A_loader_10_V_din = A_10_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_10_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_10_V_write = ap_const_logic_1;
    } else {
        block_A_loader_10_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_11_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_11_V_blk_n = block_A_loader_11_V_full_n.read();
    } else {
        block_A_loader_11_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_11_V_din() {
    block_A_loader_11_V_din = A_11_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_11_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_11_V_write = ap_const_logic_1;
    } else {
        block_A_loader_11_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_1_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_1_V_blk_n = block_A_loader_1_V_full_n.read();
    } else {
        block_A_loader_1_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_1_V_din() {
    block_A_loader_1_V_din = A_1_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_1_V_write = ap_const_logic_1;
    } else {
        block_A_loader_1_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_2_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_2_V_blk_n = block_A_loader_2_V_full_n.read();
    } else {
        block_A_loader_2_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_2_V_din() {
    block_A_loader_2_V_din = A_2_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_2_V_write = ap_const_logic_1;
    } else {
        block_A_loader_2_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_3_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_3_V_blk_n = block_A_loader_3_V_full_n.read();
    } else {
        block_A_loader_3_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_3_V_din() {
    block_A_loader_3_V_din = A_3_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_3_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_3_V_write = ap_const_logic_1;
    } else {
        block_A_loader_3_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_4_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_4_V_blk_n = block_A_loader_4_V_full_n.read();
    } else {
        block_A_loader_4_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_4_V_din() {
    block_A_loader_4_V_din = A_4_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_4_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_4_V_write = ap_const_logic_1;
    } else {
        block_A_loader_4_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_5_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_5_V_blk_n = block_A_loader_5_V_full_n.read();
    } else {
        block_A_loader_5_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_5_V_din() {
    block_A_loader_5_V_din = A_5_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_5_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_5_V_write = ap_const_logic_1;
    } else {
        block_A_loader_5_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_6_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_6_V_blk_n = block_A_loader_6_V_full_n.read();
    } else {
        block_A_loader_6_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_6_V_din() {
    block_A_loader_6_V_din = A_6_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_6_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_6_V_write = ap_const_logic_1;
    } else {
        block_A_loader_6_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_7_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_7_V_blk_n = block_A_loader_7_V_full_n.read();
    } else {
        block_A_loader_7_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_7_V_din() {
    block_A_loader_7_V_din = A_7_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_7_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_7_V_write = ap_const_logic_1;
    } else {
        block_A_loader_7_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_8_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_8_V_blk_n = block_A_loader_8_V_full_n.read();
    } else {
        block_A_loader_8_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_8_V_din() {
    block_A_loader_8_V_din = A_8_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_8_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_8_V_write = ap_const_logic_1;
    } else {
        block_A_loader_8_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_block_A_loader_9_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        block_A_loader_9_V_blk_n = block_A_loader_9_V_full_n.read();
    } else {
        block_A_loader_9_V_blk_n = ap_const_logic_1;
    }
}

void init_block_A_proc637::thread_block_A_loader_9_V_din() {
    block_A_loader_9_V_din = A_9_q0.read();
}

void init_block_A_proc637::thread_block_A_loader_9_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
        block_A_loader_9_V_write = ap_const_logic_1;
    } else {
        block_A_loader_9_V_write = ap_const_logic_0;
    }
}

void init_block_A_proc637::thread_icmp_ln214_fu_483_p2() {
    icmp_ln214_fu_483_p2 = (!k_0_i_0_reg_472.read().is_01() || !ap_const_lv10_300.is_01())? sc_lv<1>(): sc_lv<1>(k_0_i_0_reg_472.read() == ap_const_lv10_300);
}

void init_block_A_proc637::thread_zext_ln217_fu_495_p1() {
    zext_ln217_fu_495_p1 = esl_zext<64,10>(k_0_i_0_reg_472.read());
}

void init_block_A_proc637::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln214_fu_483_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_0_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_1_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_2_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_3_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_4_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_5_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_6_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_7_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_8_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_9_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_10_V_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, block_A_loader_11_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

