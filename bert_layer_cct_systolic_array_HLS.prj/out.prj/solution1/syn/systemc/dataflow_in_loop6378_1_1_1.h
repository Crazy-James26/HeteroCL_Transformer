// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dataflow_in_loop6378_1_1_1_HH_
#define _dataflow_in_loop6378_1_1_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dataflow_in_loop6378_1_1_1 : public sc_module {
    // Port declarations 115
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<2> > ii_0_i_dout;
    sc_in< sc_logic > ii_0_i_empty_n;
    sc_out< sc_logic > ii_0_i_read;
    sc_in< sc_lv<5> > jj_0_i_dout;
    sc_in< sc_logic > jj_0_i_empty_n;
    sc_out< sc_logic > jj_0_i_read;
    sc_out< sc_lv<2> > ii_0_i_c_din;
    sc_in< sc_logic > ii_0_i_c_full_n;
    sc_out< sc_logic > ii_0_i_c_write;
    sc_out< sc_lv<2> > ii_0_i_c1_din;
    sc_in< sc_logic > ii_0_i_c1_full_n;
    sc_out< sc_logic > ii_0_i_c1_write;
    sc_out< sc_lv<2> > ii_0_i_c2_din;
    sc_in< sc_logic > ii_0_i_c2_full_n;
    sc_out< sc_logic > ii_0_i_c2_write;
    sc_out< sc_lv<2> > ii_0_i_c3_din;
    sc_in< sc_logic > ii_0_i_c3_full_n;
    sc_out< sc_logic > ii_0_i_c3_write;
    sc_out< sc_lv<2> > ii_0_i_c4_din;
    sc_in< sc_logic > ii_0_i_c4_full_n;
    sc_out< sc_logic > ii_0_i_c4_write;
    sc_out< sc_lv<2> > ii_0_i_c5_din;
    sc_in< sc_logic > ii_0_i_c5_full_n;
    sc_out< sc_logic > ii_0_i_c5_write;
    sc_out< sc_lv<2> > ii_0_i_c6_din;
    sc_in< sc_logic > ii_0_i_c6_full_n;
    sc_out< sc_logic > ii_0_i_c6_write;
    sc_out< sc_lv<2> > ii_0_i_c7_din;
    sc_in< sc_logic > ii_0_i_c7_full_n;
    sc_out< sc_logic > ii_0_i_c7_write;
    sc_out< sc_lv<2> > ii_0_i_c8_din;
    sc_in< sc_logic > ii_0_i_c8_full_n;
    sc_out< sc_logic > ii_0_i_c8_write;
    sc_out< sc_lv<2> > ii_0_i_c9_din;
    sc_in< sc_logic > ii_0_i_c9_full_n;
    sc_out< sc_logic > ii_0_i_c9_write;
    sc_out< sc_lv<2> > ii_0_i_c10_din;
    sc_in< sc_logic > ii_0_i_c10_full_n;
    sc_out< sc_logic > ii_0_i_c10_write;
    sc_out< sc_lv<2> > ii_0_i_c11_din;
    sc_in< sc_logic > ii_0_i_c11_full_n;
    sc_out< sc_logic > ii_0_i_c11_write;
    sc_out< sc_lv<2> > ii_0_i_c12_din;
    sc_in< sc_logic > ii_0_i_c12_full_n;
    sc_out< sc_logic > ii_0_i_c12_write;
    sc_out< sc_lv<2> > ii_0_i_c13_din;
    sc_in< sc_logic > ii_0_i_c13_full_n;
    sc_out< sc_logic > ii_0_i_c13_write;
    sc_out< sc_lv<2> > ii_0_i_c14_din;
    sc_in< sc_logic > ii_0_i_c14_full_n;
    sc_out< sc_logic > ii_0_i_c14_write;
    sc_out< sc_lv<2> > ii_0_i_c15_din;
    sc_in< sc_logic > ii_0_i_c15_full_n;
    sc_out< sc_logic > ii_0_i_c15_write;
    sc_out< sc_lv<2> > ii_0_i_c16_din;
    sc_in< sc_logic > ii_0_i_c16_full_n;
    sc_out< sc_logic > ii_0_i_c16_write;
    sc_out< sc_lv<4> > jj_0_i_c_din;
    sc_in< sc_logic > jj_0_i_c_full_n;
    sc_out< sc_logic > jj_0_i_c_write;
    sc_out< sc_lv<4> > jj_0_i_c17_din;
    sc_in< sc_logic > jj_0_i_c17_full_n;
    sc_out< sc_logic > jj_0_i_c17_write;
    sc_out< sc_lv<4> > jj_0_i_c18_din;
    sc_in< sc_logic > jj_0_i_c18_full_n;
    sc_out< sc_logic > jj_0_i_c18_write;
    sc_out< sc_lv<4> > jj_0_i_c19_din;
    sc_in< sc_logic > jj_0_i_c19_full_n;
    sc_out< sc_logic > jj_0_i_c19_write;
    sc_out< sc_lv<4> > jj_0_i_c20_din;
    sc_in< sc_logic > jj_0_i_c20_full_n;
    sc_out< sc_logic > jj_0_i_c20_write;
    sc_out< sc_lv<4> > jj_0_i_c21_din;
    sc_in< sc_logic > jj_0_i_c21_full_n;
    sc_out< sc_logic > jj_0_i_c21_write;
    sc_out< sc_lv<4> > jj_0_i_c22_din;
    sc_in< sc_logic > jj_0_i_c22_full_n;
    sc_out< sc_logic > jj_0_i_c22_write;
    sc_out< sc_lv<4> > jj_0_i_c23_din;
    sc_in< sc_logic > jj_0_i_c23_full_n;
    sc_out< sc_logic > jj_0_i_c23_write;
    sc_out< sc_lv<4> > jj_0_i_c24_din;
    sc_in< sc_logic > jj_0_i_c24_full_n;
    sc_out< sc_logic > jj_0_i_c24_write;
    sc_out< sc_lv<4> > jj_0_i_c25_din;
    sc_in< sc_logic > jj_0_i_c25_full_n;
    sc_out< sc_logic > jj_0_i_c25_write;
    sc_out< sc_lv<4> > jj_0_i_c26_din;
    sc_in< sc_logic > jj_0_i_c26_full_n;
    sc_out< sc_logic > jj_0_i_c26_write;
    sc_out< sc_lv<4> > jj_0_i_c27_din;
    sc_in< sc_logic > jj_0_i_c27_full_n;
    sc_out< sc_logic > jj_0_i_c27_write;
    sc_out< sc_lv<4> > jj_0_i_c28_din;
    sc_in< sc_logic > jj_0_i_c28_full_n;
    sc_out< sc_logic > jj_0_i_c28_write;
    sc_out< sc_lv<4> > jj_0_i_c29_din;
    sc_in< sc_logic > jj_0_i_c29_full_n;
    sc_out< sc_logic > jj_0_i_c29_write;
    sc_out< sc_lv<4> > jj_0_i_c30_din;
    sc_in< sc_logic > jj_0_i_c30_full_n;
    sc_out< sc_logic > jj_0_i_c30_write;
    sc_out< sc_lv<4> > jj_0_i_c31_din;
    sc_in< sc_logic > jj_0_i_c31_full_n;
    sc_out< sc_logic > jj_0_i_c31_write;
    sc_out< sc_lv<4> > jj_0_i_c32_din;
    sc_in< sc_logic > jj_0_i_c32_full_n;
    sc_out< sc_logic > jj_0_i_c32_write;


    // Module declarations
    dataflow_in_loop6378_1_1_1(sc_module_name name);
    SC_HAS_PROCESS(dataflow_in_loop6378_1_1_1);

    ~dataflow_in_loop6378_1_1_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ii_0_i_blk_n;
    sc_signal< sc_logic > jj_0_i_blk_n;
    sc_signal< sc_logic > ii_0_i_c_blk_n;
    sc_signal< sc_logic > ii_0_i_c1_blk_n;
    sc_signal< sc_logic > ii_0_i_c2_blk_n;
    sc_signal< sc_logic > ii_0_i_c3_blk_n;
    sc_signal< sc_logic > ii_0_i_c4_blk_n;
    sc_signal< sc_logic > ii_0_i_c5_blk_n;
    sc_signal< sc_logic > ii_0_i_c6_blk_n;
    sc_signal< sc_logic > ii_0_i_c7_blk_n;
    sc_signal< sc_logic > ii_0_i_c8_blk_n;
    sc_signal< sc_logic > ii_0_i_c9_blk_n;
    sc_signal< sc_logic > ii_0_i_c10_blk_n;
    sc_signal< sc_logic > ii_0_i_c11_blk_n;
    sc_signal< sc_logic > ii_0_i_c12_blk_n;
    sc_signal< sc_logic > ii_0_i_c13_blk_n;
    sc_signal< sc_logic > ii_0_i_c14_blk_n;
    sc_signal< sc_logic > ii_0_i_c15_blk_n;
    sc_signal< sc_logic > ii_0_i_c16_blk_n;
    sc_signal< sc_logic > jj_0_i_c_blk_n;
    sc_signal< sc_logic > jj_0_i_c17_blk_n;
    sc_signal< sc_logic > jj_0_i_c18_blk_n;
    sc_signal< sc_logic > jj_0_i_c19_blk_n;
    sc_signal< sc_logic > jj_0_i_c20_blk_n;
    sc_signal< sc_logic > jj_0_i_c21_blk_n;
    sc_signal< sc_logic > jj_0_i_c22_blk_n;
    sc_signal< sc_logic > jj_0_i_c23_blk_n;
    sc_signal< sc_logic > jj_0_i_c24_blk_n;
    sc_signal< sc_logic > jj_0_i_c25_blk_n;
    sc_signal< sc_logic > jj_0_i_c26_blk_n;
    sc_signal< sc_logic > jj_0_i_c27_blk_n;
    sc_signal< sc_logic > jj_0_i_c28_blk_n;
    sc_signal< sc_logic > jj_0_i_c29_blk_n;
    sc_signal< sc_logic > jj_0_i_c30_blk_n;
    sc_signal< sc_logic > jj_0_i_c31_blk_n;
    sc_signal< sc_logic > jj_0_i_c32_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<4> > trunc_ln143_fu_719_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ii_0_i_blk_n();
    void thread_ii_0_i_c10_blk_n();
    void thread_ii_0_i_c10_din();
    void thread_ii_0_i_c10_write();
    void thread_ii_0_i_c11_blk_n();
    void thread_ii_0_i_c11_din();
    void thread_ii_0_i_c11_write();
    void thread_ii_0_i_c12_blk_n();
    void thread_ii_0_i_c12_din();
    void thread_ii_0_i_c12_write();
    void thread_ii_0_i_c13_blk_n();
    void thread_ii_0_i_c13_din();
    void thread_ii_0_i_c13_write();
    void thread_ii_0_i_c14_blk_n();
    void thread_ii_0_i_c14_din();
    void thread_ii_0_i_c14_write();
    void thread_ii_0_i_c15_blk_n();
    void thread_ii_0_i_c15_din();
    void thread_ii_0_i_c15_write();
    void thread_ii_0_i_c16_blk_n();
    void thread_ii_0_i_c16_din();
    void thread_ii_0_i_c16_write();
    void thread_ii_0_i_c1_blk_n();
    void thread_ii_0_i_c1_din();
    void thread_ii_0_i_c1_write();
    void thread_ii_0_i_c2_blk_n();
    void thread_ii_0_i_c2_din();
    void thread_ii_0_i_c2_write();
    void thread_ii_0_i_c3_blk_n();
    void thread_ii_0_i_c3_din();
    void thread_ii_0_i_c3_write();
    void thread_ii_0_i_c4_blk_n();
    void thread_ii_0_i_c4_din();
    void thread_ii_0_i_c4_write();
    void thread_ii_0_i_c5_blk_n();
    void thread_ii_0_i_c5_din();
    void thread_ii_0_i_c5_write();
    void thread_ii_0_i_c6_blk_n();
    void thread_ii_0_i_c6_din();
    void thread_ii_0_i_c6_write();
    void thread_ii_0_i_c7_blk_n();
    void thread_ii_0_i_c7_din();
    void thread_ii_0_i_c7_write();
    void thread_ii_0_i_c8_blk_n();
    void thread_ii_0_i_c8_din();
    void thread_ii_0_i_c8_write();
    void thread_ii_0_i_c9_blk_n();
    void thread_ii_0_i_c9_din();
    void thread_ii_0_i_c9_write();
    void thread_ii_0_i_c_blk_n();
    void thread_ii_0_i_c_din();
    void thread_ii_0_i_c_write();
    void thread_ii_0_i_read();
    void thread_jj_0_i_blk_n();
    void thread_jj_0_i_c17_blk_n();
    void thread_jj_0_i_c17_din();
    void thread_jj_0_i_c17_write();
    void thread_jj_0_i_c18_blk_n();
    void thread_jj_0_i_c18_din();
    void thread_jj_0_i_c18_write();
    void thread_jj_0_i_c19_blk_n();
    void thread_jj_0_i_c19_din();
    void thread_jj_0_i_c19_write();
    void thread_jj_0_i_c20_blk_n();
    void thread_jj_0_i_c20_din();
    void thread_jj_0_i_c20_write();
    void thread_jj_0_i_c21_blk_n();
    void thread_jj_0_i_c21_din();
    void thread_jj_0_i_c21_write();
    void thread_jj_0_i_c22_blk_n();
    void thread_jj_0_i_c22_din();
    void thread_jj_0_i_c22_write();
    void thread_jj_0_i_c23_blk_n();
    void thread_jj_0_i_c23_din();
    void thread_jj_0_i_c23_write();
    void thread_jj_0_i_c24_blk_n();
    void thread_jj_0_i_c24_din();
    void thread_jj_0_i_c24_write();
    void thread_jj_0_i_c25_blk_n();
    void thread_jj_0_i_c25_din();
    void thread_jj_0_i_c25_write();
    void thread_jj_0_i_c26_blk_n();
    void thread_jj_0_i_c26_din();
    void thread_jj_0_i_c26_write();
    void thread_jj_0_i_c27_blk_n();
    void thread_jj_0_i_c27_din();
    void thread_jj_0_i_c27_write();
    void thread_jj_0_i_c28_blk_n();
    void thread_jj_0_i_c28_din();
    void thread_jj_0_i_c28_write();
    void thread_jj_0_i_c29_blk_n();
    void thread_jj_0_i_c29_din();
    void thread_jj_0_i_c29_write();
    void thread_jj_0_i_c30_blk_n();
    void thread_jj_0_i_c30_din();
    void thread_jj_0_i_c30_write();
    void thread_jj_0_i_c31_blk_n();
    void thread_jj_0_i_c31_din();
    void thread_jj_0_i_c31_write();
    void thread_jj_0_i_c32_blk_n();
    void thread_jj_0_i_c32_din();
    void thread_jj_0_i_c32_write();
    void thread_jj_0_i_c_blk_n();
    void thread_jj_0_i_c_din();
    void thread_jj_0_i_c_write();
    void thread_jj_0_i_read();
    void thread_trunc_ln143_fu_719_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
