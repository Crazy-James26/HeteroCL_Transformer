// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dataflow_in_loop6375_1_1_1_HH_
#define _dataflow_in_loop6375_1_1_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dataflow_in_loop6375_1_1_1 : public sc_module {
    // Port declarations 115
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<2> > ii_0_i_dout;
    sc_in< sc_logic > ii_0_i_empty_n;
    sc_out< sc_logic > ii_0_i_read;
    sc_in< sc_lv<2> > jj_0_i_dout;
    sc_in< sc_logic > jj_0_i_empty_n;
    sc_out< sc_logic > jj_0_i_read;
    sc_out< sc_lv<2> > ii_0_i_out_din;
    sc_in< sc_logic > ii_0_i_out_full_n;
    sc_out< sc_logic > ii_0_i_out_write;
    sc_out< sc_lv<2> > ii_0_i_out1_din;
    sc_in< sc_logic > ii_0_i_out1_full_n;
    sc_out< sc_logic > ii_0_i_out1_write;
    sc_out< sc_lv<2> > ii_0_i_out2_din;
    sc_in< sc_logic > ii_0_i_out2_full_n;
    sc_out< sc_logic > ii_0_i_out2_write;
    sc_out< sc_lv<2> > ii_0_i_out3_din;
    sc_in< sc_logic > ii_0_i_out3_full_n;
    sc_out< sc_logic > ii_0_i_out3_write;
    sc_out< sc_lv<2> > ii_0_i_out4_din;
    sc_in< sc_logic > ii_0_i_out4_full_n;
    sc_out< sc_logic > ii_0_i_out4_write;
    sc_out< sc_lv<2> > ii_0_i_out5_din;
    sc_in< sc_logic > ii_0_i_out5_full_n;
    sc_out< sc_logic > ii_0_i_out5_write;
    sc_out< sc_lv<2> > ii_0_i_out6_din;
    sc_in< sc_logic > ii_0_i_out6_full_n;
    sc_out< sc_logic > ii_0_i_out6_write;
    sc_out< sc_lv<2> > ii_0_i_out7_din;
    sc_in< sc_logic > ii_0_i_out7_full_n;
    sc_out< sc_logic > ii_0_i_out7_write;
    sc_out< sc_lv<2> > ii_0_i_out8_din;
    sc_in< sc_logic > ii_0_i_out8_full_n;
    sc_out< sc_logic > ii_0_i_out8_write;
    sc_out< sc_lv<2> > ii_0_i_out9_din;
    sc_in< sc_logic > ii_0_i_out9_full_n;
    sc_out< sc_logic > ii_0_i_out9_write;
    sc_out< sc_lv<2> > ii_0_i_out10_din;
    sc_in< sc_logic > ii_0_i_out10_full_n;
    sc_out< sc_logic > ii_0_i_out10_write;
    sc_out< sc_lv<2> > ii_0_i_out11_din;
    sc_in< sc_logic > ii_0_i_out11_full_n;
    sc_out< sc_logic > ii_0_i_out11_write;
    sc_out< sc_lv<2> > ii_0_i_out12_din;
    sc_in< sc_logic > ii_0_i_out12_full_n;
    sc_out< sc_logic > ii_0_i_out12_write;
    sc_out< sc_lv<2> > ii_0_i_out13_din;
    sc_in< sc_logic > ii_0_i_out13_full_n;
    sc_out< sc_logic > ii_0_i_out13_write;
    sc_out< sc_lv<2> > ii_0_i_out14_din;
    sc_in< sc_logic > ii_0_i_out14_full_n;
    sc_out< sc_logic > ii_0_i_out14_write;
    sc_out< sc_lv<2> > ii_0_i_out15_din;
    sc_in< sc_logic > ii_0_i_out15_full_n;
    sc_out< sc_logic > ii_0_i_out15_write;
    sc_out< sc_lv<2> > ii_0_i_out16_din;
    sc_in< sc_logic > ii_0_i_out16_full_n;
    sc_out< sc_logic > ii_0_i_out16_write;
    sc_out< sc_lv<2> > jj_0_i_out_din;
    sc_in< sc_logic > jj_0_i_out_full_n;
    sc_out< sc_logic > jj_0_i_out_write;
    sc_out< sc_lv<2> > jj_0_i_out17_din;
    sc_in< sc_logic > jj_0_i_out17_full_n;
    sc_out< sc_logic > jj_0_i_out17_write;
    sc_out< sc_lv<2> > jj_0_i_out18_din;
    sc_in< sc_logic > jj_0_i_out18_full_n;
    sc_out< sc_logic > jj_0_i_out18_write;
    sc_out< sc_lv<2> > jj_0_i_out19_din;
    sc_in< sc_logic > jj_0_i_out19_full_n;
    sc_out< sc_logic > jj_0_i_out19_write;
    sc_out< sc_lv<2> > jj_0_i_out20_din;
    sc_in< sc_logic > jj_0_i_out20_full_n;
    sc_out< sc_logic > jj_0_i_out20_write;
    sc_out< sc_lv<2> > jj_0_i_out21_din;
    sc_in< sc_logic > jj_0_i_out21_full_n;
    sc_out< sc_logic > jj_0_i_out21_write;
    sc_out< sc_lv<2> > jj_0_i_out22_din;
    sc_in< sc_logic > jj_0_i_out22_full_n;
    sc_out< sc_logic > jj_0_i_out22_write;
    sc_out< sc_lv<2> > jj_0_i_out23_din;
    sc_in< sc_logic > jj_0_i_out23_full_n;
    sc_out< sc_logic > jj_0_i_out23_write;
    sc_out< sc_lv<2> > jj_0_i_out24_din;
    sc_in< sc_logic > jj_0_i_out24_full_n;
    sc_out< sc_logic > jj_0_i_out24_write;
    sc_out< sc_lv<2> > jj_0_i_out25_din;
    sc_in< sc_logic > jj_0_i_out25_full_n;
    sc_out< sc_logic > jj_0_i_out25_write;
    sc_out< sc_lv<2> > jj_0_i_out26_din;
    sc_in< sc_logic > jj_0_i_out26_full_n;
    sc_out< sc_logic > jj_0_i_out26_write;
    sc_out< sc_lv<2> > jj_0_i_out27_din;
    sc_in< sc_logic > jj_0_i_out27_full_n;
    sc_out< sc_logic > jj_0_i_out27_write;
    sc_out< sc_lv<2> > jj_0_i_out28_din;
    sc_in< sc_logic > jj_0_i_out28_full_n;
    sc_out< sc_logic > jj_0_i_out28_write;
    sc_out< sc_lv<2> > jj_0_i_out29_din;
    sc_in< sc_logic > jj_0_i_out29_full_n;
    sc_out< sc_logic > jj_0_i_out29_write;
    sc_out< sc_lv<2> > jj_0_i_out30_din;
    sc_in< sc_logic > jj_0_i_out30_full_n;
    sc_out< sc_logic > jj_0_i_out30_write;
    sc_out< sc_lv<2> > jj_0_i_out31_din;
    sc_in< sc_logic > jj_0_i_out31_full_n;
    sc_out< sc_logic > jj_0_i_out31_write;
    sc_out< sc_lv<2> > jj_0_i_out32_din;
    sc_in< sc_logic > jj_0_i_out32_full_n;
    sc_out< sc_logic > jj_0_i_out32_write;


    // Module declarations
    dataflow_in_loop6375_1_1_1(sc_module_name name);
    SC_HAS_PROCESS(dataflow_in_loop6375_1_1_1);

    ~dataflow_in_loop6375_1_1_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ii_0_i_blk_n;
    sc_signal< sc_logic > jj_0_i_blk_n;
    sc_signal< sc_logic > ii_0_i_out_blk_n;
    sc_signal< sc_logic > ii_0_i_out1_blk_n;
    sc_signal< sc_logic > ii_0_i_out2_blk_n;
    sc_signal< sc_logic > ii_0_i_out3_blk_n;
    sc_signal< sc_logic > ii_0_i_out4_blk_n;
    sc_signal< sc_logic > ii_0_i_out5_blk_n;
    sc_signal< sc_logic > ii_0_i_out6_blk_n;
    sc_signal< sc_logic > ii_0_i_out7_blk_n;
    sc_signal< sc_logic > ii_0_i_out8_blk_n;
    sc_signal< sc_logic > ii_0_i_out9_blk_n;
    sc_signal< sc_logic > ii_0_i_out10_blk_n;
    sc_signal< sc_logic > ii_0_i_out11_blk_n;
    sc_signal< sc_logic > ii_0_i_out12_blk_n;
    sc_signal< sc_logic > ii_0_i_out13_blk_n;
    sc_signal< sc_logic > ii_0_i_out14_blk_n;
    sc_signal< sc_logic > ii_0_i_out15_blk_n;
    sc_signal< sc_logic > ii_0_i_out16_blk_n;
    sc_signal< sc_logic > jj_0_i_out_blk_n;
    sc_signal< sc_logic > jj_0_i_out17_blk_n;
    sc_signal< sc_logic > jj_0_i_out18_blk_n;
    sc_signal< sc_logic > jj_0_i_out19_blk_n;
    sc_signal< sc_logic > jj_0_i_out20_blk_n;
    sc_signal< sc_logic > jj_0_i_out21_blk_n;
    sc_signal< sc_logic > jj_0_i_out22_blk_n;
    sc_signal< sc_logic > jj_0_i_out23_blk_n;
    sc_signal< sc_logic > jj_0_i_out24_blk_n;
    sc_signal< sc_logic > jj_0_i_out25_blk_n;
    sc_signal< sc_logic > jj_0_i_out26_blk_n;
    sc_signal< sc_logic > jj_0_i_out27_blk_n;
    sc_signal< sc_logic > jj_0_i_out28_blk_n;
    sc_signal< sc_logic > jj_0_i_out29_blk_n;
    sc_signal< sc_logic > jj_0_i_out30_blk_n;
    sc_signal< sc_logic > jj_0_i_out31_blk_n;
    sc_signal< sc_logic > jj_0_i_out32_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ii_0_i_blk_n();
    void thread_ii_0_i_out10_blk_n();
    void thread_ii_0_i_out10_din();
    void thread_ii_0_i_out10_write();
    void thread_ii_0_i_out11_blk_n();
    void thread_ii_0_i_out11_din();
    void thread_ii_0_i_out11_write();
    void thread_ii_0_i_out12_blk_n();
    void thread_ii_0_i_out12_din();
    void thread_ii_0_i_out12_write();
    void thread_ii_0_i_out13_blk_n();
    void thread_ii_0_i_out13_din();
    void thread_ii_0_i_out13_write();
    void thread_ii_0_i_out14_blk_n();
    void thread_ii_0_i_out14_din();
    void thread_ii_0_i_out14_write();
    void thread_ii_0_i_out15_blk_n();
    void thread_ii_0_i_out15_din();
    void thread_ii_0_i_out15_write();
    void thread_ii_0_i_out16_blk_n();
    void thread_ii_0_i_out16_din();
    void thread_ii_0_i_out16_write();
    void thread_ii_0_i_out1_blk_n();
    void thread_ii_0_i_out1_din();
    void thread_ii_0_i_out1_write();
    void thread_ii_0_i_out2_blk_n();
    void thread_ii_0_i_out2_din();
    void thread_ii_0_i_out2_write();
    void thread_ii_0_i_out3_blk_n();
    void thread_ii_0_i_out3_din();
    void thread_ii_0_i_out3_write();
    void thread_ii_0_i_out4_blk_n();
    void thread_ii_0_i_out4_din();
    void thread_ii_0_i_out4_write();
    void thread_ii_0_i_out5_blk_n();
    void thread_ii_0_i_out5_din();
    void thread_ii_0_i_out5_write();
    void thread_ii_0_i_out6_blk_n();
    void thread_ii_0_i_out6_din();
    void thread_ii_0_i_out6_write();
    void thread_ii_0_i_out7_blk_n();
    void thread_ii_0_i_out7_din();
    void thread_ii_0_i_out7_write();
    void thread_ii_0_i_out8_blk_n();
    void thread_ii_0_i_out8_din();
    void thread_ii_0_i_out8_write();
    void thread_ii_0_i_out9_blk_n();
    void thread_ii_0_i_out9_din();
    void thread_ii_0_i_out9_write();
    void thread_ii_0_i_out_blk_n();
    void thread_ii_0_i_out_din();
    void thread_ii_0_i_out_write();
    void thread_ii_0_i_read();
    void thread_jj_0_i_blk_n();
    void thread_jj_0_i_out17_blk_n();
    void thread_jj_0_i_out17_din();
    void thread_jj_0_i_out17_write();
    void thread_jj_0_i_out18_blk_n();
    void thread_jj_0_i_out18_din();
    void thread_jj_0_i_out18_write();
    void thread_jj_0_i_out19_blk_n();
    void thread_jj_0_i_out19_din();
    void thread_jj_0_i_out19_write();
    void thread_jj_0_i_out20_blk_n();
    void thread_jj_0_i_out20_din();
    void thread_jj_0_i_out20_write();
    void thread_jj_0_i_out21_blk_n();
    void thread_jj_0_i_out21_din();
    void thread_jj_0_i_out21_write();
    void thread_jj_0_i_out22_blk_n();
    void thread_jj_0_i_out22_din();
    void thread_jj_0_i_out22_write();
    void thread_jj_0_i_out23_blk_n();
    void thread_jj_0_i_out23_din();
    void thread_jj_0_i_out23_write();
    void thread_jj_0_i_out24_blk_n();
    void thread_jj_0_i_out24_din();
    void thread_jj_0_i_out24_write();
    void thread_jj_0_i_out25_blk_n();
    void thread_jj_0_i_out25_din();
    void thread_jj_0_i_out25_write();
    void thread_jj_0_i_out26_blk_n();
    void thread_jj_0_i_out26_din();
    void thread_jj_0_i_out26_write();
    void thread_jj_0_i_out27_blk_n();
    void thread_jj_0_i_out27_din();
    void thread_jj_0_i_out27_write();
    void thread_jj_0_i_out28_blk_n();
    void thread_jj_0_i_out28_din();
    void thread_jj_0_i_out28_write();
    void thread_jj_0_i_out29_blk_n();
    void thread_jj_0_i_out29_din();
    void thread_jj_0_i_out29_write();
    void thread_jj_0_i_out30_blk_n();
    void thread_jj_0_i_out30_din();
    void thread_jj_0_i_out30_write();
    void thread_jj_0_i_out31_blk_n();
    void thread_jj_0_i_out31_din();
    void thread_jj_0_i_out31_write();
    void thread_jj_0_i_out32_blk_n();
    void thread_jj_0_i_out32_din();
    void thread_jj_0_i_out32_write();
    void thread_jj_0_i_out_blk_n();
    void thread_jj_0_i_out_din();
    void thread_jj_0_i_out_write();
    void thread_jj_0_i_read();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
