-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_systolic_array_k_768_2_Loop_data_drain_AB_proc22 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_fifo_0_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_0_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_0_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_0_12_empty_n : IN STD_LOGIC;
    A_fifo_0_12_read : OUT STD_LOGIC;
    A_fifo_1_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_1_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_1_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_1_12_empty_n : IN STD_LOGIC;
    A_fifo_1_12_read : OUT STD_LOGIC;
    A_fifo_2_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_2_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_2_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_2_12_empty_n : IN STD_LOGIC;
    A_fifo_2_12_read : OUT STD_LOGIC;
    A_fifo_3_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_3_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_3_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_3_12_empty_n : IN STD_LOGIC;
    A_fifo_3_12_read : OUT STD_LOGIC;
    A_fifo_4_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_4_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_4_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_4_12_empty_n : IN STD_LOGIC;
    A_fifo_4_12_read : OUT STD_LOGIC;
    A_fifo_5_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_5_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_5_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_5_12_empty_n : IN STD_LOGIC;
    A_fifo_5_12_read : OUT STD_LOGIC;
    A_fifo_6_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_6_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_6_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_6_12_empty_n : IN STD_LOGIC;
    A_fifo_6_12_read : OUT STD_LOGIC;
    A_fifo_7_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_7_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_7_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_7_12_empty_n : IN STD_LOGIC;
    A_fifo_7_12_read : OUT STD_LOGIC;
    A_fifo_8_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_8_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_8_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_8_12_empty_n : IN STD_LOGIC;
    A_fifo_8_12_read : OUT STD_LOGIC;
    A_fifo_9_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_9_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_9_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_9_12_empty_n : IN STD_LOGIC;
    A_fifo_9_12_read : OUT STD_LOGIC;
    A_fifo_10_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_10_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_10_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_10_12_empty_n : IN STD_LOGIC;
    A_fifo_10_12_read : OUT STD_LOGIC;
    A_fifo_11_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    A_fifo_11_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_11_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    A_fifo_11_12_empty_n : IN STD_LOGIC;
    A_fifo_11_12_read : OUT STD_LOGIC;
    B_fifo_0_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_0_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_0_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_0_12_empty_n : IN STD_LOGIC;
    B_fifo_0_12_read : OUT STD_LOGIC;
    B_fifo_1_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_1_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_1_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_1_12_empty_n : IN STD_LOGIC;
    B_fifo_1_12_read : OUT STD_LOGIC;
    B_fifo_2_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_2_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_2_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_2_12_empty_n : IN STD_LOGIC;
    B_fifo_2_12_read : OUT STD_LOGIC;
    B_fifo_3_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_3_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_3_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_3_12_empty_n : IN STD_LOGIC;
    B_fifo_3_12_read : OUT STD_LOGIC;
    B_fifo_4_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_4_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_4_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_4_12_empty_n : IN STD_LOGIC;
    B_fifo_4_12_read : OUT STD_LOGIC;
    B_fifo_5_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_5_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_5_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_5_12_empty_n : IN STD_LOGIC;
    B_fifo_5_12_read : OUT STD_LOGIC;
    B_fifo_6_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_6_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_6_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_6_12_empty_n : IN STD_LOGIC;
    B_fifo_6_12_read : OUT STD_LOGIC;
    B_fifo_7_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_7_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_7_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_7_12_empty_n : IN STD_LOGIC;
    B_fifo_7_12_read : OUT STD_LOGIC;
    B_fifo_8_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_8_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_8_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_8_12_empty_n : IN STD_LOGIC;
    B_fifo_8_12_read : OUT STD_LOGIC;
    B_fifo_9_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_9_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_9_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_9_12_empty_n : IN STD_LOGIC;
    B_fifo_9_12_read : OUT STD_LOGIC;
    B_fifo_10_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_10_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_10_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_10_12_empty_n : IN STD_LOGIC;
    B_fifo_10_12_read : OUT STD_LOGIC;
    B_fifo_11_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    B_fifo_11_12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_11_12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    B_fifo_11_12_empty_n : IN STD_LOGIC;
    B_fifo_11_12_read : OUT STD_LOGIC );
end;


architecture behav of Bert_layer_systolic_array_k_768_2_Loop_data_drain_AB_proc22 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln49_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal A_fifo_0_12_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal A_fifo_1_12_blk_n : STD_LOGIC;
    signal A_fifo_2_12_blk_n : STD_LOGIC;
    signal A_fifo_3_12_blk_n : STD_LOGIC;
    signal A_fifo_4_12_blk_n : STD_LOGIC;
    signal A_fifo_5_12_blk_n : STD_LOGIC;
    signal A_fifo_6_12_blk_n : STD_LOGIC;
    signal A_fifo_7_12_blk_n : STD_LOGIC;
    signal A_fifo_8_12_blk_n : STD_LOGIC;
    signal A_fifo_9_12_blk_n : STD_LOGIC;
    signal A_fifo_10_12_blk_n : STD_LOGIC;
    signal A_fifo_11_12_blk_n : STD_LOGIC;
    signal B_fifo_0_12_blk_n : STD_LOGIC;
    signal B_fifo_1_12_blk_n : STD_LOGIC;
    signal B_fifo_2_12_blk_n : STD_LOGIC;
    signal B_fifo_3_12_blk_n : STD_LOGIC;
    signal B_fifo_4_12_blk_n : STD_LOGIC;
    signal B_fifo_5_12_blk_n : STD_LOGIC;
    signal B_fifo_6_12_blk_n : STD_LOGIC;
    signal B_fifo_7_12_blk_n : STD_LOGIC;
    signal B_fifo_8_12_blk_n : STD_LOGIC;
    signal B_fifo_9_12_blk_n : STD_LOGIC;
    signal B_fifo_10_12_blk_n : STD_LOGIC;
    signal B_fifo_11_12_blk_n : STD_LOGIC;
    signal k_fu_78 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_11_fu_240_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_sig_allocacmp_k_10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_285 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_U : component Bert_layer_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    k_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_285)) then
                if ((icmp_ln49_fu_234_p2 = ap_const_lv1_0)) then 
                    k_fu_78 <= k_11_fu_240_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_78 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    A_fifo_0_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_0_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_0_12_blk_n <= A_fifo_0_12_empty_n;
        else 
            A_fifo_0_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_0_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_0_12_read <= ap_const_logic_1;
        else 
            A_fifo_0_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_10_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_10_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_10_12_blk_n <= A_fifo_10_12_empty_n;
        else 
            A_fifo_10_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_10_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_10_12_read <= ap_const_logic_1;
        else 
            A_fifo_10_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_11_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_11_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_11_12_blk_n <= A_fifo_11_12_empty_n;
        else 
            A_fifo_11_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_11_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_11_12_read <= ap_const_logic_1;
        else 
            A_fifo_11_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_1_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_1_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_1_12_blk_n <= A_fifo_1_12_empty_n;
        else 
            A_fifo_1_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_1_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_1_12_read <= ap_const_logic_1;
        else 
            A_fifo_1_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_2_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_2_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_2_12_blk_n <= A_fifo_2_12_empty_n;
        else 
            A_fifo_2_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_2_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_2_12_read <= ap_const_logic_1;
        else 
            A_fifo_2_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_3_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_3_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_3_12_blk_n <= A_fifo_3_12_empty_n;
        else 
            A_fifo_3_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_3_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_3_12_read <= ap_const_logic_1;
        else 
            A_fifo_3_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_4_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_4_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_4_12_blk_n <= A_fifo_4_12_empty_n;
        else 
            A_fifo_4_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_4_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_4_12_read <= ap_const_logic_1;
        else 
            A_fifo_4_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_5_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_5_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_5_12_blk_n <= A_fifo_5_12_empty_n;
        else 
            A_fifo_5_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_5_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_5_12_read <= ap_const_logic_1;
        else 
            A_fifo_5_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_6_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_6_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_6_12_blk_n <= A_fifo_6_12_empty_n;
        else 
            A_fifo_6_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_6_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_6_12_read <= ap_const_logic_1;
        else 
            A_fifo_6_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_7_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_7_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_7_12_blk_n <= A_fifo_7_12_empty_n;
        else 
            A_fifo_7_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_7_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_7_12_read <= ap_const_logic_1;
        else 
            A_fifo_7_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_8_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_8_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_8_12_blk_n <= A_fifo_8_12_empty_n;
        else 
            A_fifo_8_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_8_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_8_12_read <= ap_const_logic_1;
        else 
            A_fifo_8_12_read <= ap_const_logic_0;
        end if; 
    end process;


    A_fifo_9_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, A_fifo_9_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_9_12_blk_n <= A_fifo_9_12_empty_n;
        else 
            A_fifo_9_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_fifo_9_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_fifo_9_12_read <= ap_const_logic_1;
        else 
            A_fifo_9_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_0_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_0_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_0_12_blk_n <= B_fifo_0_12_empty_n;
        else 
            B_fifo_0_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_0_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_0_12_read <= ap_const_logic_1;
        else 
            B_fifo_0_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_10_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_10_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_10_12_blk_n <= B_fifo_10_12_empty_n;
        else 
            B_fifo_10_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_10_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_10_12_read <= ap_const_logic_1;
        else 
            B_fifo_10_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_11_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_11_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_11_12_blk_n <= B_fifo_11_12_empty_n;
        else 
            B_fifo_11_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_11_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_11_12_read <= ap_const_logic_1;
        else 
            B_fifo_11_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_1_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_1_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_1_12_blk_n <= B_fifo_1_12_empty_n;
        else 
            B_fifo_1_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_1_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_1_12_read <= ap_const_logic_1;
        else 
            B_fifo_1_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_2_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_2_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_2_12_blk_n <= B_fifo_2_12_empty_n;
        else 
            B_fifo_2_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_2_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_2_12_read <= ap_const_logic_1;
        else 
            B_fifo_2_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_3_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_3_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_3_12_blk_n <= B_fifo_3_12_empty_n;
        else 
            B_fifo_3_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_3_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_3_12_read <= ap_const_logic_1;
        else 
            B_fifo_3_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_4_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_4_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_4_12_blk_n <= B_fifo_4_12_empty_n;
        else 
            B_fifo_4_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_4_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_4_12_read <= ap_const_logic_1;
        else 
            B_fifo_4_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_5_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_5_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_5_12_blk_n <= B_fifo_5_12_empty_n;
        else 
            B_fifo_5_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_5_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_5_12_read <= ap_const_logic_1;
        else 
            B_fifo_5_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_6_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_6_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_6_12_blk_n <= B_fifo_6_12_empty_n;
        else 
            B_fifo_6_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_6_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_6_12_read <= ap_const_logic_1;
        else 
            B_fifo_6_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_7_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_7_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_7_12_blk_n <= B_fifo_7_12_empty_n;
        else 
            B_fifo_7_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_7_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_7_12_read <= ap_const_logic_1;
        else 
            B_fifo_7_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_8_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_8_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_8_12_blk_n <= B_fifo_8_12_empty_n;
        else 
            B_fifo_8_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_8_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_8_12_read <= ap_const_logic_1;
        else 
            B_fifo_8_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_fifo_9_12_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, B_fifo_9_12_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_9_12_blk_n <= B_fifo_9_12_empty_n;
        else 
            B_fifo_9_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_fifo_9_12_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_fifo_9_12_read <= ap_const_logic_1;
        else 
            B_fifo_9_12_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, A_fifo_0_12_empty_n, A_fifo_1_12_empty_n, A_fifo_2_12_empty_n, A_fifo_3_12_empty_n, A_fifo_4_12_empty_n, A_fifo_5_12_empty_n, A_fifo_6_12_empty_n, A_fifo_7_12_empty_n, A_fifo_8_12_empty_n, A_fifo_9_12_empty_n, A_fifo_10_12_empty_n, A_fifo_11_12_empty_n, B_fifo_0_12_empty_n, B_fifo_1_12_empty_n, B_fifo_2_12_empty_n, B_fifo_3_12_empty_n, B_fifo_4_12_empty_n, B_fifo_5_12_empty_n, B_fifo_6_12_empty_n, B_fifo_7_12_empty_n, B_fifo_8_12_empty_n, B_fifo_9_12_empty_n, B_fifo_10_12_empty_n, B_fifo_11_12_empty_n, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = A_fifo_7_12_empty_n) or (ap_const_logic_0 = A_fifo_6_12_empty_n) or (ap_const_logic_0 = A_fifo_5_12_empty_n) or (ap_const_logic_0 = A_fifo_4_12_empty_n) or (ap_const_logic_0 = A_fifo_3_12_empty_n) or (ap_const_logic_0 = A_fifo_2_12_empty_n) or (ap_const_logic_0 = A_fifo_1_12_empty_n) or (ap_const_logic_0 = A_fifo_0_12_empty_n) or (ap_const_logic_0 = B_fifo_11_12_empty_n) or (ap_const_logic_0 = B_fifo_10_12_empty_n) or (ap_const_logic_0 = B_fifo_9_12_empty_n) or (ap_const_logic_0 = B_fifo_8_12_empty_n) or (ap_const_logic_0 = B_fifo_7_12_empty_n) or (ap_const_logic_0 = B_fifo_6_12_empty_n) or (ap_const_logic_0 = B_fifo_5_12_empty_n) or (ap_const_logic_0 = B_fifo_4_12_empty_n) or (ap_const_logic_0 = B_fifo_3_12_empty_n) or (ap_const_logic_0 = B_fifo_2_12_empty_n) or (ap_const_logic_0 = B_fifo_1_12_empty_n) or (ap_const_logic_0 = B_fifo_0_12_empty_n) or (ap_const_logic_0 = A_fifo_11_12_empty_n) or (ap_const_logic_0 = A_fifo_10_12_empty_n) or (ap_const_logic_0 = A_fifo_9_12_empty_n) or (ap_const_logic_0 = A_fifo_8_12_empty_n))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, A_fifo_0_12_empty_n, A_fifo_1_12_empty_n, A_fifo_2_12_empty_n, A_fifo_3_12_empty_n, A_fifo_4_12_empty_n, A_fifo_5_12_empty_n, A_fifo_6_12_empty_n, A_fifo_7_12_empty_n, A_fifo_8_12_empty_n, A_fifo_9_12_empty_n, A_fifo_10_12_empty_n, A_fifo_11_12_empty_n, B_fifo_0_12_empty_n, B_fifo_1_12_empty_n, B_fifo_2_12_empty_n, B_fifo_3_12_empty_n, B_fifo_4_12_empty_n, B_fifo_5_12_empty_n, B_fifo_6_12_empty_n, B_fifo_7_12_empty_n, B_fifo_8_12_empty_n, B_fifo_9_12_empty_n, B_fifo_10_12_empty_n, B_fifo_11_12_empty_n, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = A_fifo_7_12_empty_n) or (ap_const_logic_0 = A_fifo_6_12_empty_n) or (ap_const_logic_0 = A_fifo_5_12_empty_n) or (ap_const_logic_0 = A_fifo_4_12_empty_n) or (ap_const_logic_0 = A_fifo_3_12_empty_n) or (ap_const_logic_0 = A_fifo_2_12_empty_n) or (ap_const_logic_0 = A_fifo_1_12_empty_n) or (ap_const_logic_0 = A_fifo_0_12_empty_n) or (ap_const_logic_0 = B_fifo_11_12_empty_n) or (ap_const_logic_0 = B_fifo_10_12_empty_n) or (ap_const_logic_0 = B_fifo_9_12_empty_n) or (ap_const_logic_0 = B_fifo_8_12_empty_n) or (ap_const_logic_0 = B_fifo_7_12_empty_n) or (ap_const_logic_0 = B_fifo_6_12_empty_n) or (ap_const_logic_0 = B_fifo_5_12_empty_n) or (ap_const_logic_0 = B_fifo_4_12_empty_n) or (ap_const_logic_0 = B_fifo_3_12_empty_n) or (ap_const_logic_0 = B_fifo_2_12_empty_n) or (ap_const_logic_0 = B_fifo_1_12_empty_n) or (ap_const_logic_0 = B_fifo_0_12_empty_n) or (ap_const_logic_0 = A_fifo_11_12_empty_n) or (ap_const_logic_0 = A_fifo_10_12_empty_n) or (ap_const_logic_0 = A_fifo_9_12_empty_n) or (ap_const_logic_0 = A_fifo_8_12_empty_n))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(A_fifo_0_12_empty_n, A_fifo_1_12_empty_n, A_fifo_2_12_empty_n, A_fifo_3_12_empty_n, A_fifo_4_12_empty_n, A_fifo_5_12_empty_n, A_fifo_6_12_empty_n, A_fifo_7_12_empty_n, A_fifo_8_12_empty_n, A_fifo_9_12_empty_n, A_fifo_10_12_empty_n, A_fifo_11_12_empty_n, B_fifo_0_12_empty_n, B_fifo_1_12_empty_n, B_fifo_2_12_empty_n, B_fifo_3_12_empty_n, B_fifo_4_12_empty_n, B_fifo_5_12_empty_n, B_fifo_6_12_empty_n, B_fifo_7_12_empty_n, B_fifo_8_12_empty_n, B_fifo_9_12_empty_n, B_fifo_10_12_empty_n, B_fifo_11_12_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_const_logic_0 = A_fifo_7_12_empty_n) or (ap_const_logic_0 = A_fifo_6_12_empty_n) or (ap_const_logic_0 = A_fifo_5_12_empty_n) or (ap_const_logic_0 = A_fifo_4_12_empty_n) or (ap_const_logic_0 = A_fifo_3_12_empty_n) or (ap_const_logic_0 = A_fifo_2_12_empty_n) or (ap_const_logic_0 = A_fifo_1_12_empty_n) or (ap_const_logic_0 = A_fifo_0_12_empty_n) or (ap_const_logic_0 = B_fifo_11_12_empty_n) or (ap_const_logic_0 = B_fifo_10_12_empty_n) or (ap_const_logic_0 = B_fifo_9_12_empty_n) or (ap_const_logic_0 = B_fifo_8_12_empty_n) or (ap_const_logic_0 = B_fifo_7_12_empty_n) or (ap_const_logic_0 = B_fifo_6_12_empty_n) or (ap_const_logic_0 = B_fifo_5_12_empty_n) or (ap_const_logic_0 = B_fifo_4_12_empty_n) or (ap_const_logic_0 = B_fifo_3_12_empty_n) or (ap_const_logic_0 = B_fifo_2_12_empty_n) or (ap_const_logic_0 = B_fifo_1_12_empty_n) or (ap_const_logic_0 = B_fifo_0_12_empty_n) or (ap_const_logic_0 = A_fifo_11_12_empty_n) or (ap_const_logic_0 = A_fifo_10_12_empty_n) or (ap_const_logic_0 = A_fifo_9_12_empty_n) or (ap_const_logic_0 = A_fifo_8_12_empty_n));
    end process;


    ap_condition_285_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_285 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln49_fu_234_p2, ap_start_int)
    begin
        if (((icmp_ln49_fu_234_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_10_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_78, ap_loop_init, ap_start_int)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_10 <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_k_10 <= k_fu_78;
        end if; 
    end process;

    icmp_ln49_fu_234_p2 <= "1" when (ap_sig_allocacmp_k_10 = ap_const_lv10_300) else "0";
    k_11_fu_240_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_10) + unsigned(ap_const_lv10_1));
end behav;
