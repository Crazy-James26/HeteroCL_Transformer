-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gemm_systolic_array_4 is
port (
    A_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_0_ce0 : OUT STD_LOGIC;
    A_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_0_we0 : OUT STD_LOGIC;
    A_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_0_ce1 : OUT STD_LOGIC;
    A_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_0_we1 : OUT STD_LOGIC;
    A_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_1_ce0 : OUT STD_LOGIC;
    A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_1_we0 : OUT STD_LOGIC;
    A_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_1_ce1 : OUT STD_LOGIC;
    A_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_1_we1 : OUT STD_LOGIC;
    A_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_2_ce0 : OUT STD_LOGIC;
    A_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_2_we0 : OUT STD_LOGIC;
    A_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_2_ce1 : OUT STD_LOGIC;
    A_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_2_we1 : OUT STD_LOGIC;
    A_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_3_ce0 : OUT STD_LOGIC;
    A_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_3_we0 : OUT STD_LOGIC;
    A_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    A_3_ce1 : OUT STD_LOGIC;
    A_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_3_we1 : OUT STD_LOGIC;
    B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_ce0 : OUT STD_LOGIC;
    B_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_we0 : OUT STD_LOGIC;
    B_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_0_ce1 : OUT STD_LOGIC;
    B_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_we1 : OUT STD_LOGIC;
    B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_ce0 : OUT STD_LOGIC;
    B_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_we0 : OUT STD_LOGIC;
    B_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_1_ce1 : OUT STD_LOGIC;
    B_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_we1 : OUT STD_LOGIC;
    B_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_ce0 : OUT STD_LOGIC;
    B_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_we0 : OUT STD_LOGIC;
    B_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_2_ce1 : OUT STD_LOGIC;
    B_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_we1 : OUT STD_LOGIC;
    B_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_ce0 : OUT STD_LOGIC;
    B_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_we0 : OUT STD_LOGIC;
    B_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_3_ce1 : OUT STD_LOGIC;
    B_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_we1 : OUT STD_LOGIC;
    C_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_0_ce0 : OUT STD_LOGIC;
    C_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_0_we0 : OUT STD_LOGIC;
    C_0_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_0_ce1 : OUT STD_LOGIC;
    C_0_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_0_we1 : OUT STD_LOGIC;
    C_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_1_ce0 : OUT STD_LOGIC;
    C_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_1_we0 : OUT STD_LOGIC;
    C_0_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_1_ce1 : OUT STD_LOGIC;
    C_0_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_1_we1 : OUT STD_LOGIC;
    C_0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_2_ce0 : OUT STD_LOGIC;
    C_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_2_we0 : OUT STD_LOGIC;
    C_0_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_2_ce1 : OUT STD_LOGIC;
    C_0_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_2_we1 : OUT STD_LOGIC;
    C_0_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_3_ce0 : OUT STD_LOGIC;
    C_0_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_3_we0 : OUT STD_LOGIC;
    C_0_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_0_3_ce1 : OUT STD_LOGIC;
    C_0_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_0_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_0_3_we1 : OUT STD_LOGIC;
    C_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_0_ce0 : OUT STD_LOGIC;
    C_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_0_we0 : OUT STD_LOGIC;
    C_1_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_0_ce1 : OUT STD_LOGIC;
    C_1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_0_we1 : OUT STD_LOGIC;
    C_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_1_ce0 : OUT STD_LOGIC;
    C_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_1_we0 : OUT STD_LOGIC;
    C_1_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_1_ce1 : OUT STD_LOGIC;
    C_1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_1_we1 : OUT STD_LOGIC;
    C_1_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_2_ce0 : OUT STD_LOGIC;
    C_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_2_we0 : OUT STD_LOGIC;
    C_1_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_2_ce1 : OUT STD_LOGIC;
    C_1_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_2_we1 : OUT STD_LOGIC;
    C_1_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_3_ce0 : OUT STD_LOGIC;
    C_1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_3_we0 : OUT STD_LOGIC;
    C_1_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_1_3_ce1 : OUT STD_LOGIC;
    C_1_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_1_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_1_3_we1 : OUT STD_LOGIC;
    C_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_0_ce0 : OUT STD_LOGIC;
    C_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_0_we0 : OUT STD_LOGIC;
    C_2_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_0_ce1 : OUT STD_LOGIC;
    C_2_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_0_we1 : OUT STD_LOGIC;
    C_2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_1_ce0 : OUT STD_LOGIC;
    C_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_1_we0 : OUT STD_LOGIC;
    C_2_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_1_ce1 : OUT STD_LOGIC;
    C_2_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_1_we1 : OUT STD_LOGIC;
    C_2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_2_ce0 : OUT STD_LOGIC;
    C_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_2_we0 : OUT STD_LOGIC;
    C_2_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_2_ce1 : OUT STD_LOGIC;
    C_2_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_2_we1 : OUT STD_LOGIC;
    C_2_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_3_ce0 : OUT STD_LOGIC;
    C_2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_3_we0 : OUT STD_LOGIC;
    C_2_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_2_3_ce1 : OUT STD_LOGIC;
    C_2_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_2_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_2_3_we1 : OUT STD_LOGIC;
    C_3_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_0_ce0 : OUT STD_LOGIC;
    C_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_0_we0 : OUT STD_LOGIC;
    C_3_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_0_ce1 : OUT STD_LOGIC;
    C_3_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_0_we1 : OUT STD_LOGIC;
    C_3_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_1_ce0 : OUT STD_LOGIC;
    C_3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_1_we0 : OUT STD_LOGIC;
    C_3_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_1_ce1 : OUT STD_LOGIC;
    C_3_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_1_we1 : OUT STD_LOGIC;
    C_3_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_2_ce0 : OUT STD_LOGIC;
    C_3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_2_we0 : OUT STD_LOGIC;
    C_3_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_2_ce1 : OUT STD_LOGIC;
    C_3_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_2_we1 : OUT STD_LOGIC;
    C_3_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_3_ce0 : OUT STD_LOGIC;
    C_3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_3_we0 : OUT STD_LOGIC;
    C_3_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    C_3_3_ce1 : OUT STD_LOGIC;
    C_3_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_3_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_3_3_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of gemm_systolic_array_4 is 
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal dataflow_parent_loop_2_U0_A_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_0_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_0_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_0_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_0_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_1_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_1_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_1_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_1_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_2_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_2_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_2_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_2_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_3_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_3_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_A_3_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_A_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_A_3_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_0_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_0_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_0_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_0_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_1_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_1_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_1_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_1_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_2_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_2_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_2_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_2_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_3_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_3_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_parent_loop_2_U0_B_3_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_B_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_B_3_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_0_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_0_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_0_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_0_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_1_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_1_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_1_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_1_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_2_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_2_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_2_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_2_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_3_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_3_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_3_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_0_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_0_3_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_0_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_0_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_0_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_0_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_1_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_1_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_1_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_1_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_2_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_2_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_2_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_2_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_3_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_3_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_3_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_1_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_1_3_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_0_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_0_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_0_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_0_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_1_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_1_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_1_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_1_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_2_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_2_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_2_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_2_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_3_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_3_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_3_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_2_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_2_3_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_0_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_0_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_0_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_0_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_1_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_1_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_1_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_1_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_2_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_2_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_2_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_2_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_3_ce0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_3_we0 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_3_ce1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_C_3_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_parent_loop_2_U0_C_3_3_we1 : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_ap_start : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_ap_done : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_ap_ready : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_ap_idle : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_ap_continue : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal bound_minus_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_parent_loop_2_U0_start_full_n : STD_LOGIC;
    signal dataflow_parent_loop_2_U0_start_write : STD_LOGIC;

    component dataflow_parent_loop_2 IS
    port (
        ii_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        A_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_0_ce0 : OUT STD_LOGIC;
        A_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_0_we0 : OUT STD_LOGIC;
        A_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_0_ce1 : OUT STD_LOGIC;
        A_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_0_we1 : OUT STD_LOGIC;
        A_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_1_ce0 : OUT STD_LOGIC;
        A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_we0 : OUT STD_LOGIC;
        A_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_1_ce1 : OUT STD_LOGIC;
        A_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_1_we1 : OUT STD_LOGIC;
        A_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_2_ce0 : OUT STD_LOGIC;
        A_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_we0 : OUT STD_LOGIC;
        A_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_2_ce1 : OUT STD_LOGIC;
        A_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_2_we1 : OUT STD_LOGIC;
        A_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_3_ce0 : OUT STD_LOGIC;
        A_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_we0 : OUT STD_LOGIC;
        A_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        A_3_ce1 : OUT STD_LOGIC;
        A_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_3_we1 : OUT STD_LOGIC;
        B_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_0_ce0 : OUT STD_LOGIC;
        B_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_we0 : OUT STD_LOGIC;
        B_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_0_ce1 : OUT STD_LOGIC;
        B_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_0_we1 : OUT STD_LOGIC;
        B_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_1_ce0 : OUT STD_LOGIC;
        B_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_we0 : OUT STD_LOGIC;
        B_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_1_ce1 : OUT STD_LOGIC;
        B_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_1_we1 : OUT STD_LOGIC;
        B_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_2_ce0 : OUT STD_LOGIC;
        B_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_we0 : OUT STD_LOGIC;
        B_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_2_ce1 : OUT STD_LOGIC;
        B_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_2_we1 : OUT STD_LOGIC;
        B_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_3_ce0 : OUT STD_LOGIC;
        B_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_we0 : OUT STD_LOGIC;
        B_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_3_ce1 : OUT STD_LOGIC;
        B_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_3_we1 : OUT STD_LOGIC;
        C_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_0_ce0 : OUT STD_LOGIC;
        C_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_0_we0 : OUT STD_LOGIC;
        C_0_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_0_ce1 : OUT STD_LOGIC;
        C_0_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_0_we1 : OUT STD_LOGIC;
        C_0_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_1_ce0 : OUT STD_LOGIC;
        C_0_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_1_we0 : OUT STD_LOGIC;
        C_0_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_1_ce1 : OUT STD_LOGIC;
        C_0_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_1_we1 : OUT STD_LOGIC;
        C_0_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_2_ce0 : OUT STD_LOGIC;
        C_0_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_2_we0 : OUT STD_LOGIC;
        C_0_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_2_ce1 : OUT STD_LOGIC;
        C_0_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_2_we1 : OUT STD_LOGIC;
        C_0_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_3_ce0 : OUT STD_LOGIC;
        C_0_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_3_we0 : OUT STD_LOGIC;
        C_0_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_0_3_ce1 : OUT STD_LOGIC;
        C_0_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_0_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_0_3_we1 : OUT STD_LOGIC;
        C_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_0_ce0 : OUT STD_LOGIC;
        C_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_0_we0 : OUT STD_LOGIC;
        C_1_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_0_ce1 : OUT STD_LOGIC;
        C_1_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_0_we1 : OUT STD_LOGIC;
        C_1_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_1_ce0 : OUT STD_LOGIC;
        C_1_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_1_we0 : OUT STD_LOGIC;
        C_1_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_1_ce1 : OUT STD_LOGIC;
        C_1_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_1_we1 : OUT STD_LOGIC;
        C_1_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_2_ce0 : OUT STD_LOGIC;
        C_1_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_2_we0 : OUT STD_LOGIC;
        C_1_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_2_ce1 : OUT STD_LOGIC;
        C_1_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_2_we1 : OUT STD_LOGIC;
        C_1_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_3_ce0 : OUT STD_LOGIC;
        C_1_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_3_we0 : OUT STD_LOGIC;
        C_1_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_1_3_ce1 : OUT STD_LOGIC;
        C_1_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_1_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_1_3_we1 : OUT STD_LOGIC;
        C_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_0_ce0 : OUT STD_LOGIC;
        C_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_0_we0 : OUT STD_LOGIC;
        C_2_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_0_ce1 : OUT STD_LOGIC;
        C_2_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_0_we1 : OUT STD_LOGIC;
        C_2_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_1_ce0 : OUT STD_LOGIC;
        C_2_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_1_we0 : OUT STD_LOGIC;
        C_2_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_1_ce1 : OUT STD_LOGIC;
        C_2_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_1_we1 : OUT STD_LOGIC;
        C_2_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_2_ce0 : OUT STD_LOGIC;
        C_2_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_2_we0 : OUT STD_LOGIC;
        C_2_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_2_ce1 : OUT STD_LOGIC;
        C_2_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_2_we1 : OUT STD_LOGIC;
        C_2_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_3_ce0 : OUT STD_LOGIC;
        C_2_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_3_we0 : OUT STD_LOGIC;
        C_2_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_2_3_ce1 : OUT STD_LOGIC;
        C_2_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_2_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_2_3_we1 : OUT STD_LOGIC;
        C_3_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_0_ce0 : OUT STD_LOGIC;
        C_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_0_we0 : OUT STD_LOGIC;
        C_3_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_0_ce1 : OUT STD_LOGIC;
        C_3_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_0_we1 : OUT STD_LOGIC;
        C_3_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_1_ce0 : OUT STD_LOGIC;
        C_3_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_1_we0 : OUT STD_LOGIC;
        C_3_1_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_1_ce1 : OUT STD_LOGIC;
        C_3_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_1_we1 : OUT STD_LOGIC;
        C_3_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_2_ce0 : OUT STD_LOGIC;
        C_3_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_2_we0 : OUT STD_LOGIC;
        C_3_2_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_2_ce1 : OUT STD_LOGIC;
        C_3_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_2_we1 : OUT STD_LOGIC;
        C_3_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_3_ce0 : OUT STD_LOGIC;
        C_3_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_3_we0 : OUT STD_LOGIC;
        C_3_3_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        C_3_3_ce1 : OUT STD_LOGIC;
        C_3_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_3_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        C_3_3_we1 : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ii_0_i_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dataflow_parent_loop_2_U0 : component dataflow_parent_loop_2
    port map (
        ii_0_i => loop_dataflow_input_count,
        A_0_address0 => dataflow_parent_loop_2_U0_A_0_address0,
        A_0_ce0 => dataflow_parent_loop_2_U0_A_0_ce0,
        A_0_d0 => dataflow_parent_loop_2_U0_A_0_d0,
        A_0_q0 => A_0_q0,
        A_0_we0 => dataflow_parent_loop_2_U0_A_0_we0,
        A_0_address1 => dataflow_parent_loop_2_U0_A_0_address1,
        A_0_ce1 => dataflow_parent_loop_2_U0_A_0_ce1,
        A_0_d1 => dataflow_parent_loop_2_U0_A_0_d1,
        A_0_q1 => ap_const_lv32_0,
        A_0_we1 => dataflow_parent_loop_2_U0_A_0_we1,
        A_1_address0 => dataflow_parent_loop_2_U0_A_1_address0,
        A_1_ce0 => dataflow_parent_loop_2_U0_A_1_ce0,
        A_1_d0 => dataflow_parent_loop_2_U0_A_1_d0,
        A_1_q0 => A_1_q0,
        A_1_we0 => dataflow_parent_loop_2_U0_A_1_we0,
        A_1_address1 => dataflow_parent_loop_2_U0_A_1_address1,
        A_1_ce1 => dataflow_parent_loop_2_U0_A_1_ce1,
        A_1_d1 => dataflow_parent_loop_2_U0_A_1_d1,
        A_1_q1 => ap_const_lv32_0,
        A_1_we1 => dataflow_parent_loop_2_U0_A_1_we1,
        A_2_address0 => dataflow_parent_loop_2_U0_A_2_address0,
        A_2_ce0 => dataflow_parent_loop_2_U0_A_2_ce0,
        A_2_d0 => dataflow_parent_loop_2_U0_A_2_d0,
        A_2_q0 => A_2_q0,
        A_2_we0 => dataflow_parent_loop_2_U0_A_2_we0,
        A_2_address1 => dataflow_parent_loop_2_U0_A_2_address1,
        A_2_ce1 => dataflow_parent_loop_2_U0_A_2_ce1,
        A_2_d1 => dataflow_parent_loop_2_U0_A_2_d1,
        A_2_q1 => ap_const_lv32_0,
        A_2_we1 => dataflow_parent_loop_2_U0_A_2_we1,
        A_3_address0 => dataflow_parent_loop_2_U0_A_3_address0,
        A_3_ce0 => dataflow_parent_loop_2_U0_A_3_ce0,
        A_3_d0 => dataflow_parent_loop_2_U0_A_3_d0,
        A_3_q0 => A_3_q0,
        A_3_we0 => dataflow_parent_loop_2_U0_A_3_we0,
        A_3_address1 => dataflow_parent_loop_2_U0_A_3_address1,
        A_3_ce1 => dataflow_parent_loop_2_U0_A_3_ce1,
        A_3_d1 => dataflow_parent_loop_2_U0_A_3_d1,
        A_3_q1 => ap_const_lv32_0,
        A_3_we1 => dataflow_parent_loop_2_U0_A_3_we1,
        B_0_address0 => dataflow_parent_loop_2_U0_B_0_address0,
        B_0_ce0 => dataflow_parent_loop_2_U0_B_0_ce0,
        B_0_d0 => dataflow_parent_loop_2_U0_B_0_d0,
        B_0_q0 => B_0_q0,
        B_0_we0 => dataflow_parent_loop_2_U0_B_0_we0,
        B_0_address1 => dataflow_parent_loop_2_U0_B_0_address1,
        B_0_ce1 => dataflow_parent_loop_2_U0_B_0_ce1,
        B_0_d1 => dataflow_parent_loop_2_U0_B_0_d1,
        B_0_q1 => ap_const_lv32_0,
        B_0_we1 => dataflow_parent_loop_2_U0_B_0_we1,
        B_1_address0 => dataflow_parent_loop_2_U0_B_1_address0,
        B_1_ce0 => dataflow_parent_loop_2_U0_B_1_ce0,
        B_1_d0 => dataflow_parent_loop_2_U0_B_1_d0,
        B_1_q0 => B_1_q0,
        B_1_we0 => dataflow_parent_loop_2_U0_B_1_we0,
        B_1_address1 => dataflow_parent_loop_2_U0_B_1_address1,
        B_1_ce1 => dataflow_parent_loop_2_U0_B_1_ce1,
        B_1_d1 => dataflow_parent_loop_2_U0_B_1_d1,
        B_1_q1 => ap_const_lv32_0,
        B_1_we1 => dataflow_parent_loop_2_U0_B_1_we1,
        B_2_address0 => dataflow_parent_loop_2_U0_B_2_address0,
        B_2_ce0 => dataflow_parent_loop_2_U0_B_2_ce0,
        B_2_d0 => dataflow_parent_loop_2_U0_B_2_d0,
        B_2_q0 => B_2_q0,
        B_2_we0 => dataflow_parent_loop_2_U0_B_2_we0,
        B_2_address1 => dataflow_parent_loop_2_U0_B_2_address1,
        B_2_ce1 => dataflow_parent_loop_2_U0_B_2_ce1,
        B_2_d1 => dataflow_parent_loop_2_U0_B_2_d1,
        B_2_q1 => ap_const_lv32_0,
        B_2_we1 => dataflow_parent_loop_2_U0_B_2_we1,
        B_3_address0 => dataflow_parent_loop_2_U0_B_3_address0,
        B_3_ce0 => dataflow_parent_loop_2_U0_B_3_ce0,
        B_3_d0 => dataflow_parent_loop_2_U0_B_3_d0,
        B_3_q0 => B_3_q0,
        B_3_we0 => dataflow_parent_loop_2_U0_B_3_we0,
        B_3_address1 => dataflow_parent_loop_2_U0_B_3_address1,
        B_3_ce1 => dataflow_parent_loop_2_U0_B_3_ce1,
        B_3_d1 => dataflow_parent_loop_2_U0_B_3_d1,
        B_3_q1 => ap_const_lv32_0,
        B_3_we1 => dataflow_parent_loop_2_U0_B_3_we1,
        C_0_0_address0 => dataflow_parent_loop_2_U0_C_0_0_address0,
        C_0_0_ce0 => dataflow_parent_loop_2_U0_C_0_0_ce0,
        C_0_0_d0 => dataflow_parent_loop_2_U0_C_0_0_d0,
        C_0_0_q0 => C_0_0_q0,
        C_0_0_we0 => dataflow_parent_loop_2_U0_C_0_0_we0,
        C_0_0_address1 => dataflow_parent_loop_2_U0_C_0_0_address1,
        C_0_0_ce1 => dataflow_parent_loop_2_U0_C_0_0_ce1,
        C_0_0_d1 => dataflow_parent_loop_2_U0_C_0_0_d1,
        C_0_0_q1 => ap_const_lv32_0,
        C_0_0_we1 => dataflow_parent_loop_2_U0_C_0_0_we1,
        C_0_1_address0 => dataflow_parent_loop_2_U0_C_0_1_address0,
        C_0_1_ce0 => dataflow_parent_loop_2_U0_C_0_1_ce0,
        C_0_1_d0 => dataflow_parent_loop_2_U0_C_0_1_d0,
        C_0_1_q0 => C_0_1_q0,
        C_0_1_we0 => dataflow_parent_loop_2_U0_C_0_1_we0,
        C_0_1_address1 => dataflow_parent_loop_2_U0_C_0_1_address1,
        C_0_1_ce1 => dataflow_parent_loop_2_U0_C_0_1_ce1,
        C_0_1_d1 => dataflow_parent_loop_2_U0_C_0_1_d1,
        C_0_1_q1 => ap_const_lv32_0,
        C_0_1_we1 => dataflow_parent_loop_2_U0_C_0_1_we1,
        C_0_2_address0 => dataflow_parent_loop_2_U0_C_0_2_address0,
        C_0_2_ce0 => dataflow_parent_loop_2_U0_C_0_2_ce0,
        C_0_2_d0 => dataflow_parent_loop_2_U0_C_0_2_d0,
        C_0_2_q0 => C_0_2_q0,
        C_0_2_we0 => dataflow_parent_loop_2_U0_C_0_2_we0,
        C_0_2_address1 => dataflow_parent_loop_2_U0_C_0_2_address1,
        C_0_2_ce1 => dataflow_parent_loop_2_U0_C_0_2_ce1,
        C_0_2_d1 => dataflow_parent_loop_2_U0_C_0_2_d1,
        C_0_2_q1 => ap_const_lv32_0,
        C_0_2_we1 => dataflow_parent_loop_2_U0_C_0_2_we1,
        C_0_3_address0 => dataflow_parent_loop_2_U0_C_0_3_address0,
        C_0_3_ce0 => dataflow_parent_loop_2_U0_C_0_3_ce0,
        C_0_3_d0 => dataflow_parent_loop_2_U0_C_0_3_d0,
        C_0_3_q0 => C_0_3_q0,
        C_0_3_we0 => dataflow_parent_loop_2_U0_C_0_3_we0,
        C_0_3_address1 => dataflow_parent_loop_2_U0_C_0_3_address1,
        C_0_3_ce1 => dataflow_parent_loop_2_U0_C_0_3_ce1,
        C_0_3_d1 => dataflow_parent_loop_2_U0_C_0_3_d1,
        C_0_3_q1 => ap_const_lv32_0,
        C_0_3_we1 => dataflow_parent_loop_2_U0_C_0_3_we1,
        C_1_0_address0 => dataflow_parent_loop_2_U0_C_1_0_address0,
        C_1_0_ce0 => dataflow_parent_loop_2_U0_C_1_0_ce0,
        C_1_0_d0 => dataflow_parent_loop_2_U0_C_1_0_d0,
        C_1_0_q0 => C_1_0_q0,
        C_1_0_we0 => dataflow_parent_loop_2_U0_C_1_0_we0,
        C_1_0_address1 => dataflow_parent_loop_2_U0_C_1_0_address1,
        C_1_0_ce1 => dataflow_parent_loop_2_U0_C_1_0_ce1,
        C_1_0_d1 => dataflow_parent_loop_2_U0_C_1_0_d1,
        C_1_0_q1 => ap_const_lv32_0,
        C_1_0_we1 => dataflow_parent_loop_2_U0_C_1_0_we1,
        C_1_1_address0 => dataflow_parent_loop_2_U0_C_1_1_address0,
        C_1_1_ce0 => dataflow_parent_loop_2_U0_C_1_1_ce0,
        C_1_1_d0 => dataflow_parent_loop_2_U0_C_1_1_d0,
        C_1_1_q0 => C_1_1_q0,
        C_1_1_we0 => dataflow_parent_loop_2_U0_C_1_1_we0,
        C_1_1_address1 => dataflow_parent_loop_2_U0_C_1_1_address1,
        C_1_1_ce1 => dataflow_parent_loop_2_U0_C_1_1_ce1,
        C_1_1_d1 => dataflow_parent_loop_2_U0_C_1_1_d1,
        C_1_1_q1 => ap_const_lv32_0,
        C_1_1_we1 => dataflow_parent_loop_2_U0_C_1_1_we1,
        C_1_2_address0 => dataflow_parent_loop_2_U0_C_1_2_address0,
        C_1_2_ce0 => dataflow_parent_loop_2_U0_C_1_2_ce0,
        C_1_2_d0 => dataflow_parent_loop_2_U0_C_1_2_d0,
        C_1_2_q0 => C_1_2_q0,
        C_1_2_we0 => dataflow_parent_loop_2_U0_C_1_2_we0,
        C_1_2_address1 => dataflow_parent_loop_2_U0_C_1_2_address1,
        C_1_2_ce1 => dataflow_parent_loop_2_U0_C_1_2_ce1,
        C_1_2_d1 => dataflow_parent_loop_2_U0_C_1_2_d1,
        C_1_2_q1 => ap_const_lv32_0,
        C_1_2_we1 => dataflow_parent_loop_2_U0_C_1_2_we1,
        C_1_3_address0 => dataflow_parent_loop_2_U0_C_1_3_address0,
        C_1_3_ce0 => dataflow_parent_loop_2_U0_C_1_3_ce0,
        C_1_3_d0 => dataflow_parent_loop_2_U0_C_1_3_d0,
        C_1_3_q0 => C_1_3_q0,
        C_1_3_we0 => dataflow_parent_loop_2_U0_C_1_3_we0,
        C_1_3_address1 => dataflow_parent_loop_2_U0_C_1_3_address1,
        C_1_3_ce1 => dataflow_parent_loop_2_U0_C_1_3_ce1,
        C_1_3_d1 => dataflow_parent_loop_2_U0_C_1_3_d1,
        C_1_3_q1 => ap_const_lv32_0,
        C_1_3_we1 => dataflow_parent_loop_2_U0_C_1_3_we1,
        C_2_0_address0 => dataflow_parent_loop_2_U0_C_2_0_address0,
        C_2_0_ce0 => dataflow_parent_loop_2_U0_C_2_0_ce0,
        C_2_0_d0 => dataflow_parent_loop_2_U0_C_2_0_d0,
        C_2_0_q0 => C_2_0_q0,
        C_2_0_we0 => dataflow_parent_loop_2_U0_C_2_0_we0,
        C_2_0_address1 => dataflow_parent_loop_2_U0_C_2_0_address1,
        C_2_0_ce1 => dataflow_parent_loop_2_U0_C_2_0_ce1,
        C_2_0_d1 => dataflow_parent_loop_2_U0_C_2_0_d1,
        C_2_0_q1 => ap_const_lv32_0,
        C_2_0_we1 => dataflow_parent_loop_2_U0_C_2_0_we1,
        C_2_1_address0 => dataflow_parent_loop_2_U0_C_2_1_address0,
        C_2_1_ce0 => dataflow_parent_loop_2_U0_C_2_1_ce0,
        C_2_1_d0 => dataflow_parent_loop_2_U0_C_2_1_d0,
        C_2_1_q0 => C_2_1_q0,
        C_2_1_we0 => dataflow_parent_loop_2_U0_C_2_1_we0,
        C_2_1_address1 => dataflow_parent_loop_2_U0_C_2_1_address1,
        C_2_1_ce1 => dataflow_parent_loop_2_U0_C_2_1_ce1,
        C_2_1_d1 => dataflow_parent_loop_2_U0_C_2_1_d1,
        C_2_1_q1 => ap_const_lv32_0,
        C_2_1_we1 => dataflow_parent_loop_2_U0_C_2_1_we1,
        C_2_2_address0 => dataflow_parent_loop_2_U0_C_2_2_address0,
        C_2_2_ce0 => dataflow_parent_loop_2_U0_C_2_2_ce0,
        C_2_2_d0 => dataflow_parent_loop_2_U0_C_2_2_d0,
        C_2_2_q0 => C_2_2_q0,
        C_2_2_we0 => dataflow_parent_loop_2_U0_C_2_2_we0,
        C_2_2_address1 => dataflow_parent_loop_2_U0_C_2_2_address1,
        C_2_2_ce1 => dataflow_parent_loop_2_U0_C_2_2_ce1,
        C_2_2_d1 => dataflow_parent_loop_2_U0_C_2_2_d1,
        C_2_2_q1 => ap_const_lv32_0,
        C_2_2_we1 => dataflow_parent_loop_2_U0_C_2_2_we1,
        C_2_3_address0 => dataflow_parent_loop_2_U0_C_2_3_address0,
        C_2_3_ce0 => dataflow_parent_loop_2_U0_C_2_3_ce0,
        C_2_3_d0 => dataflow_parent_loop_2_U0_C_2_3_d0,
        C_2_3_q0 => C_2_3_q0,
        C_2_3_we0 => dataflow_parent_loop_2_U0_C_2_3_we0,
        C_2_3_address1 => dataflow_parent_loop_2_U0_C_2_3_address1,
        C_2_3_ce1 => dataflow_parent_loop_2_U0_C_2_3_ce1,
        C_2_3_d1 => dataflow_parent_loop_2_U0_C_2_3_d1,
        C_2_3_q1 => ap_const_lv32_0,
        C_2_3_we1 => dataflow_parent_loop_2_U0_C_2_3_we1,
        C_3_0_address0 => dataflow_parent_loop_2_U0_C_3_0_address0,
        C_3_0_ce0 => dataflow_parent_loop_2_U0_C_3_0_ce0,
        C_3_0_d0 => dataflow_parent_loop_2_U0_C_3_0_d0,
        C_3_0_q0 => C_3_0_q0,
        C_3_0_we0 => dataflow_parent_loop_2_U0_C_3_0_we0,
        C_3_0_address1 => dataflow_parent_loop_2_U0_C_3_0_address1,
        C_3_0_ce1 => dataflow_parent_loop_2_U0_C_3_0_ce1,
        C_3_0_d1 => dataflow_parent_loop_2_U0_C_3_0_d1,
        C_3_0_q1 => ap_const_lv32_0,
        C_3_0_we1 => dataflow_parent_loop_2_U0_C_3_0_we1,
        C_3_1_address0 => dataflow_parent_loop_2_U0_C_3_1_address0,
        C_3_1_ce0 => dataflow_parent_loop_2_U0_C_3_1_ce0,
        C_3_1_d0 => dataflow_parent_loop_2_U0_C_3_1_d0,
        C_3_1_q0 => C_3_1_q0,
        C_3_1_we0 => dataflow_parent_loop_2_U0_C_3_1_we0,
        C_3_1_address1 => dataflow_parent_loop_2_U0_C_3_1_address1,
        C_3_1_ce1 => dataflow_parent_loop_2_U0_C_3_1_ce1,
        C_3_1_d1 => dataflow_parent_loop_2_U0_C_3_1_d1,
        C_3_1_q1 => ap_const_lv32_0,
        C_3_1_we1 => dataflow_parent_loop_2_U0_C_3_1_we1,
        C_3_2_address0 => dataflow_parent_loop_2_U0_C_3_2_address0,
        C_3_2_ce0 => dataflow_parent_loop_2_U0_C_3_2_ce0,
        C_3_2_d0 => dataflow_parent_loop_2_U0_C_3_2_d0,
        C_3_2_q0 => C_3_2_q0,
        C_3_2_we0 => dataflow_parent_loop_2_U0_C_3_2_we0,
        C_3_2_address1 => dataflow_parent_loop_2_U0_C_3_2_address1,
        C_3_2_ce1 => dataflow_parent_loop_2_U0_C_3_2_ce1,
        C_3_2_d1 => dataflow_parent_loop_2_U0_C_3_2_d1,
        C_3_2_q1 => ap_const_lv32_0,
        C_3_2_we1 => dataflow_parent_loop_2_U0_C_3_2_we1,
        C_3_3_address0 => dataflow_parent_loop_2_U0_C_3_3_address0,
        C_3_3_ce0 => dataflow_parent_loop_2_U0_C_3_3_ce0,
        C_3_3_d0 => dataflow_parent_loop_2_U0_C_3_3_d0,
        C_3_3_q0 => C_3_3_q0,
        C_3_3_we0 => dataflow_parent_loop_2_U0_C_3_3_we0,
        C_3_3_address1 => dataflow_parent_loop_2_U0_C_3_3_address1,
        C_3_3_ce1 => dataflow_parent_loop_2_U0_C_3_3_ce1,
        C_3_3_d1 => dataflow_parent_loop_2_U0_C_3_3_d1,
        C_3_3_q1 => ap_const_lv32_0,
        C_3_3_we1 => dataflow_parent_loop_2_U0_C_3_3_we1,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ii_0_i_ap_vld => ap_const_logic_0,
        ap_start => dataflow_parent_loop_2_U0_ap_start,
        ap_done => dataflow_parent_loop_2_U0_ap_done,
        ap_ready => dataflow_parent_loop_2_U0_ap_ready,
        ap_idle => dataflow_parent_loop_2_U0_ap_idle,
        ap_continue => dataflow_parent_loop_2_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_input_count <= ap_const_lv2_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_parent_loop_2_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv2_1));
                elsif (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_parent_loop_2_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv2_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                loop_dataflow_output_count <= ap_const_lv2_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_parent_loop_2_U0_ap_continue = ap_const_logic_1) and (dataflow_parent_loop_2_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv2_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_parent_loop_2_U0_ap_continue = ap_const_logic_1) and (dataflow_parent_loop_2_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv2_0;
                end if; 
            end if;
        end if;
    end process;

    A_0_address0 <= dataflow_parent_loop_2_U0_A_0_address0;
    A_0_address1 <= ap_const_lv6_0;
    A_0_ce0 <= dataflow_parent_loop_2_U0_A_0_ce0;
    A_0_ce1 <= ap_const_logic_0;
    A_0_d0 <= ap_const_lv32_0;
    A_0_d1 <= ap_const_lv32_0;
    A_0_we0 <= ap_const_logic_0;
    A_0_we1 <= ap_const_logic_0;
    A_1_address0 <= dataflow_parent_loop_2_U0_A_1_address0;
    A_1_address1 <= ap_const_lv6_0;
    A_1_ce0 <= dataflow_parent_loop_2_U0_A_1_ce0;
    A_1_ce1 <= ap_const_logic_0;
    A_1_d0 <= ap_const_lv32_0;
    A_1_d1 <= ap_const_lv32_0;
    A_1_we0 <= ap_const_logic_0;
    A_1_we1 <= ap_const_logic_0;
    A_2_address0 <= dataflow_parent_loop_2_U0_A_2_address0;
    A_2_address1 <= ap_const_lv6_0;
    A_2_ce0 <= dataflow_parent_loop_2_U0_A_2_ce0;
    A_2_ce1 <= ap_const_logic_0;
    A_2_d0 <= ap_const_lv32_0;
    A_2_d1 <= ap_const_lv32_0;
    A_2_we0 <= ap_const_logic_0;
    A_2_we1 <= ap_const_logic_0;
    A_3_address0 <= dataflow_parent_loop_2_U0_A_3_address0;
    A_3_address1 <= ap_const_lv6_0;
    A_3_ce0 <= dataflow_parent_loop_2_U0_A_3_ce0;
    A_3_ce1 <= ap_const_logic_0;
    A_3_d0 <= ap_const_lv32_0;
    A_3_d1 <= ap_const_lv32_0;
    A_3_we0 <= ap_const_logic_0;
    A_3_we1 <= ap_const_logic_0;
    B_0_address0 <= dataflow_parent_loop_2_U0_B_0_address0;
    B_0_address1 <= ap_const_lv8_0;
    B_0_ce0 <= dataflow_parent_loop_2_U0_B_0_ce0;
    B_0_ce1 <= ap_const_logic_0;
    B_0_d0 <= ap_const_lv32_0;
    B_0_d1 <= ap_const_lv32_0;
    B_0_we0 <= ap_const_logic_0;
    B_0_we1 <= ap_const_logic_0;
    B_1_address0 <= dataflow_parent_loop_2_U0_B_1_address0;
    B_1_address1 <= ap_const_lv8_0;
    B_1_ce0 <= dataflow_parent_loop_2_U0_B_1_ce0;
    B_1_ce1 <= ap_const_logic_0;
    B_1_d0 <= ap_const_lv32_0;
    B_1_d1 <= ap_const_lv32_0;
    B_1_we0 <= ap_const_logic_0;
    B_1_we1 <= ap_const_logic_0;
    B_2_address0 <= dataflow_parent_loop_2_U0_B_2_address0;
    B_2_address1 <= ap_const_lv8_0;
    B_2_ce0 <= dataflow_parent_loop_2_U0_B_2_ce0;
    B_2_ce1 <= ap_const_logic_0;
    B_2_d0 <= ap_const_lv32_0;
    B_2_d1 <= ap_const_lv32_0;
    B_2_we0 <= ap_const_logic_0;
    B_2_we1 <= ap_const_logic_0;
    B_3_address0 <= dataflow_parent_loop_2_U0_B_3_address0;
    B_3_address1 <= ap_const_lv8_0;
    B_3_ce0 <= dataflow_parent_loop_2_U0_B_3_ce0;
    B_3_ce1 <= ap_const_logic_0;
    B_3_d0 <= ap_const_lv32_0;
    B_3_d1 <= ap_const_lv32_0;
    B_3_we0 <= ap_const_logic_0;
    B_3_we1 <= ap_const_logic_0;
    C_0_0_address0 <= dataflow_parent_loop_2_U0_C_0_0_address0;
    C_0_0_address1 <= ap_const_lv6_0;
    C_0_0_ce0 <= dataflow_parent_loop_2_U0_C_0_0_ce0;
    C_0_0_ce1 <= ap_const_logic_0;
    C_0_0_d0 <= dataflow_parent_loop_2_U0_C_0_0_d0;
    C_0_0_d1 <= ap_const_lv32_0;
    C_0_0_we0 <= dataflow_parent_loop_2_U0_C_0_0_we0;
    C_0_0_we1 <= ap_const_logic_0;
    C_0_1_address0 <= dataflow_parent_loop_2_U0_C_0_1_address0;
    C_0_1_address1 <= ap_const_lv6_0;
    C_0_1_ce0 <= dataflow_parent_loop_2_U0_C_0_1_ce0;
    C_0_1_ce1 <= ap_const_logic_0;
    C_0_1_d0 <= dataflow_parent_loop_2_U0_C_0_1_d0;
    C_0_1_d1 <= ap_const_lv32_0;
    C_0_1_we0 <= dataflow_parent_loop_2_U0_C_0_1_we0;
    C_0_1_we1 <= ap_const_logic_0;
    C_0_2_address0 <= dataflow_parent_loop_2_U0_C_0_2_address0;
    C_0_2_address1 <= ap_const_lv6_0;
    C_0_2_ce0 <= dataflow_parent_loop_2_U0_C_0_2_ce0;
    C_0_2_ce1 <= ap_const_logic_0;
    C_0_2_d0 <= dataflow_parent_loop_2_U0_C_0_2_d0;
    C_0_2_d1 <= ap_const_lv32_0;
    C_0_2_we0 <= dataflow_parent_loop_2_U0_C_0_2_we0;
    C_0_2_we1 <= ap_const_logic_0;
    C_0_3_address0 <= dataflow_parent_loop_2_U0_C_0_3_address0;
    C_0_3_address1 <= ap_const_lv6_0;
    C_0_3_ce0 <= dataflow_parent_loop_2_U0_C_0_3_ce0;
    C_0_3_ce1 <= ap_const_logic_0;
    C_0_3_d0 <= dataflow_parent_loop_2_U0_C_0_3_d0;
    C_0_3_d1 <= ap_const_lv32_0;
    C_0_3_we0 <= dataflow_parent_loop_2_U0_C_0_3_we0;
    C_0_3_we1 <= ap_const_logic_0;
    C_1_0_address0 <= dataflow_parent_loop_2_U0_C_1_0_address0;
    C_1_0_address1 <= ap_const_lv6_0;
    C_1_0_ce0 <= dataflow_parent_loop_2_U0_C_1_0_ce0;
    C_1_0_ce1 <= ap_const_logic_0;
    C_1_0_d0 <= dataflow_parent_loop_2_U0_C_1_0_d0;
    C_1_0_d1 <= ap_const_lv32_0;
    C_1_0_we0 <= dataflow_parent_loop_2_U0_C_1_0_we0;
    C_1_0_we1 <= ap_const_logic_0;
    C_1_1_address0 <= dataflow_parent_loop_2_U0_C_1_1_address0;
    C_1_1_address1 <= ap_const_lv6_0;
    C_1_1_ce0 <= dataflow_parent_loop_2_U0_C_1_1_ce0;
    C_1_1_ce1 <= ap_const_logic_0;
    C_1_1_d0 <= dataflow_parent_loop_2_U0_C_1_1_d0;
    C_1_1_d1 <= ap_const_lv32_0;
    C_1_1_we0 <= dataflow_parent_loop_2_U0_C_1_1_we0;
    C_1_1_we1 <= ap_const_logic_0;
    C_1_2_address0 <= dataflow_parent_loop_2_U0_C_1_2_address0;
    C_1_2_address1 <= ap_const_lv6_0;
    C_1_2_ce0 <= dataflow_parent_loop_2_U0_C_1_2_ce0;
    C_1_2_ce1 <= ap_const_logic_0;
    C_1_2_d0 <= dataflow_parent_loop_2_U0_C_1_2_d0;
    C_1_2_d1 <= ap_const_lv32_0;
    C_1_2_we0 <= dataflow_parent_loop_2_U0_C_1_2_we0;
    C_1_2_we1 <= ap_const_logic_0;
    C_1_3_address0 <= dataflow_parent_loop_2_U0_C_1_3_address0;
    C_1_3_address1 <= ap_const_lv6_0;
    C_1_3_ce0 <= dataflow_parent_loop_2_U0_C_1_3_ce0;
    C_1_3_ce1 <= ap_const_logic_0;
    C_1_3_d0 <= dataflow_parent_loop_2_U0_C_1_3_d0;
    C_1_3_d1 <= ap_const_lv32_0;
    C_1_3_we0 <= dataflow_parent_loop_2_U0_C_1_3_we0;
    C_1_3_we1 <= ap_const_logic_0;
    C_2_0_address0 <= dataflow_parent_loop_2_U0_C_2_0_address0;
    C_2_0_address1 <= ap_const_lv6_0;
    C_2_0_ce0 <= dataflow_parent_loop_2_U0_C_2_0_ce0;
    C_2_0_ce1 <= ap_const_logic_0;
    C_2_0_d0 <= dataflow_parent_loop_2_U0_C_2_0_d0;
    C_2_0_d1 <= ap_const_lv32_0;
    C_2_0_we0 <= dataflow_parent_loop_2_U0_C_2_0_we0;
    C_2_0_we1 <= ap_const_logic_0;
    C_2_1_address0 <= dataflow_parent_loop_2_U0_C_2_1_address0;
    C_2_1_address1 <= ap_const_lv6_0;
    C_2_1_ce0 <= dataflow_parent_loop_2_U0_C_2_1_ce0;
    C_2_1_ce1 <= ap_const_logic_0;
    C_2_1_d0 <= dataflow_parent_loop_2_U0_C_2_1_d0;
    C_2_1_d1 <= ap_const_lv32_0;
    C_2_1_we0 <= dataflow_parent_loop_2_U0_C_2_1_we0;
    C_2_1_we1 <= ap_const_logic_0;
    C_2_2_address0 <= dataflow_parent_loop_2_U0_C_2_2_address0;
    C_2_2_address1 <= ap_const_lv6_0;
    C_2_2_ce0 <= dataflow_parent_loop_2_U0_C_2_2_ce0;
    C_2_2_ce1 <= ap_const_logic_0;
    C_2_2_d0 <= dataflow_parent_loop_2_U0_C_2_2_d0;
    C_2_2_d1 <= ap_const_lv32_0;
    C_2_2_we0 <= dataflow_parent_loop_2_U0_C_2_2_we0;
    C_2_2_we1 <= ap_const_logic_0;
    C_2_3_address0 <= dataflow_parent_loop_2_U0_C_2_3_address0;
    C_2_3_address1 <= ap_const_lv6_0;
    C_2_3_ce0 <= dataflow_parent_loop_2_U0_C_2_3_ce0;
    C_2_3_ce1 <= ap_const_logic_0;
    C_2_3_d0 <= dataflow_parent_loop_2_U0_C_2_3_d0;
    C_2_3_d1 <= ap_const_lv32_0;
    C_2_3_we0 <= dataflow_parent_loop_2_U0_C_2_3_we0;
    C_2_3_we1 <= ap_const_logic_0;
    C_3_0_address0 <= dataflow_parent_loop_2_U0_C_3_0_address0;
    C_3_0_address1 <= ap_const_lv6_0;
    C_3_0_ce0 <= dataflow_parent_loop_2_U0_C_3_0_ce0;
    C_3_0_ce1 <= ap_const_logic_0;
    C_3_0_d0 <= dataflow_parent_loop_2_U0_C_3_0_d0;
    C_3_0_d1 <= ap_const_lv32_0;
    C_3_0_we0 <= dataflow_parent_loop_2_U0_C_3_0_we0;
    C_3_0_we1 <= ap_const_logic_0;
    C_3_1_address0 <= dataflow_parent_loop_2_U0_C_3_1_address0;
    C_3_1_address1 <= ap_const_lv6_0;
    C_3_1_ce0 <= dataflow_parent_loop_2_U0_C_3_1_ce0;
    C_3_1_ce1 <= ap_const_logic_0;
    C_3_1_d0 <= dataflow_parent_loop_2_U0_C_3_1_d0;
    C_3_1_d1 <= ap_const_lv32_0;
    C_3_1_we0 <= dataflow_parent_loop_2_U0_C_3_1_we0;
    C_3_1_we1 <= ap_const_logic_0;
    C_3_2_address0 <= dataflow_parent_loop_2_U0_C_3_2_address0;
    C_3_2_address1 <= ap_const_lv6_0;
    C_3_2_ce0 <= dataflow_parent_loop_2_U0_C_3_2_ce0;
    C_3_2_ce1 <= ap_const_logic_0;
    C_3_2_d0 <= dataflow_parent_loop_2_U0_C_3_2_d0;
    C_3_2_d1 <= ap_const_lv32_0;
    C_3_2_we0 <= dataflow_parent_loop_2_U0_C_3_2_we0;
    C_3_2_we1 <= ap_const_logic_0;
    C_3_3_address0 <= dataflow_parent_loop_2_U0_C_3_3_address0;
    C_3_3_address1 <= ap_const_lv6_0;
    C_3_3_ce0 <= dataflow_parent_loop_2_U0_C_3_3_ce0;
    C_3_3_ce1 <= ap_const_logic_0;
    C_3_3_d0 <= dataflow_parent_loop_2_U0_C_3_3_d0;
    C_3_3_d1 <= ap_const_lv32_0;
    C_3_3_we0 <= dataflow_parent_loop_2_U0_C_3_3_we0;
    C_3_3_we1 <= ap_const_logic_0;

    ap_done_assign_proc : process(dataflow_parent_loop_2_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_parent_loop_2_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(dataflow_parent_loop_2_U0_ap_idle, ap_start, loop_dataflow_output_count)
    begin
        if (((loop_dataflow_output_count = ap_const_lv2_0) and (dataflow_parent_loop_2_U0_ap_idle = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(dataflow_parent_loop_2_U0_ap_ready, ap_start, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((loop_dataflow_input_count = bound_minus_1) and (ap_start = ap_const_logic_1) and (dataflow_parent_loop_2_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_sync_continue <= ap_continue;
    ap_sync_done <= dataflow_parent_loop_2_U0_ap_done;
    ap_sync_ready <= dataflow_parent_loop_2_U0_ap_ready;
    bound_minus_1 <= std_logic_vector(unsigned(ap_const_lv2_3) - unsigned(ap_const_lv2_1));

    dataflow_parent_loop_2_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_parent_loop_2_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_parent_loop_2_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_parent_loop_2_U0_ap_start <= ap_start;
    dataflow_parent_loop_2_U0_start_full_n <= ap_const_logic_1;
    dataflow_parent_loop_2_U0_start_write <= ap_const_logic_0;
end behav;
