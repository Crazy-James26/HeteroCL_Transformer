// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_j2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_sumRow_load,
        inp_sumRow_address0,
        inp_sumRow_ce0,
        inp_sumRow_we0,
        inp_sumRow_d0,
        zext_ln71,
        v84_15_address0,
        v84_15_ce0,
        v84_15_we0,
        v84_15_d0,
        v84_15_address1,
        v84_15_ce1,
        v84_15_q1,
        v84_14_address0,
        v84_14_ce0,
        v84_14_we0,
        v84_14_d0,
        v84_14_q0,
        v84_13_address0,
        v84_13_ce0,
        v84_13_we0,
        v84_13_d0,
        v84_13_q0,
        v84_12_address0,
        v84_12_ce0,
        v84_12_we0,
        v84_12_d0,
        v84_12_q0,
        v84_11_address0,
        v84_11_ce0,
        v84_11_we0,
        v84_11_d0,
        v84_11_address1,
        v84_11_ce1,
        v84_11_q1,
        v84_10_address0,
        v84_10_ce0,
        v84_10_we0,
        v84_10_d0,
        v84_10_q0,
        v84_9_address0,
        v84_9_ce0,
        v84_9_we0,
        v84_9_d0,
        v84_9_q0,
        v84_8_address0,
        v84_8_ce0,
        v84_8_we0,
        v84_8_d0,
        v84_8_q0,
        v84_7_address0,
        v84_7_ce0,
        v84_7_we0,
        v84_7_d0,
        v84_7_address1,
        v84_7_ce1,
        v84_7_q1,
        v84_6_address0,
        v84_6_ce0,
        v84_6_we0,
        v84_6_d0,
        v84_6_q0,
        v84_5_address0,
        v84_5_ce0,
        v84_5_we0,
        v84_5_d0,
        v84_5_q0,
        v84_4_address0,
        v84_4_ce0,
        v84_4_we0,
        v84_4_d0,
        v84_4_q0,
        v84_3_address0,
        v84_3_ce0,
        v84_3_we0,
        v84_3_d0,
        v84_3_address1,
        v84_3_ce1,
        v84_3_q1,
        v84_2_address0,
        v84_2_ce0,
        v84_2_we0,
        v84_2_d0,
        v84_2_address1,
        v84_2_ce1,
        v84_2_q1,
        v84_1_address0,
        v84_1_ce0,
        v84_1_we0,
        v84_1_d0,
        v84_1_address1,
        v84_1_ce1,
        v84_1_q1,
        v84_address0,
        v84_ce0,
        v84_we0,
        v84_d0,
        v84_address1,
        v84_ce1,
        v84_q1,
        sub_ln74,
        trunc_ln13,
        grp_fu_2403_p_din0,
        grp_fu_2403_p_din1,
        grp_fu_2403_p_opcode,
        grp_fu_2403_p_dout0,
        grp_fu_2403_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inp_sumRow_load;
output  [3:0] inp_sumRow_address0;
output   inp_sumRow_ce0;
output   inp_sumRow_we0;
output  [31:0] inp_sumRow_d0;
input  [3:0] zext_ln71;
output  [3:0] v84_15_address0;
output   v84_15_ce0;
output   v84_15_we0;
output  [31:0] v84_15_d0;
output  [3:0] v84_15_address1;
output   v84_15_ce1;
input  [31:0] v84_15_q1;
output  [3:0] v84_14_address0;
output   v84_14_ce0;
output   v84_14_we0;
output  [31:0] v84_14_d0;
input  [31:0] v84_14_q0;
output  [3:0] v84_13_address0;
output   v84_13_ce0;
output   v84_13_we0;
output  [31:0] v84_13_d0;
input  [31:0] v84_13_q0;
output  [3:0] v84_12_address0;
output   v84_12_ce0;
output   v84_12_we0;
output  [31:0] v84_12_d0;
input  [31:0] v84_12_q0;
output  [3:0] v84_11_address0;
output   v84_11_ce0;
output   v84_11_we0;
output  [31:0] v84_11_d0;
output  [3:0] v84_11_address1;
output   v84_11_ce1;
input  [31:0] v84_11_q1;
output  [3:0] v84_10_address0;
output   v84_10_ce0;
output   v84_10_we0;
output  [31:0] v84_10_d0;
input  [31:0] v84_10_q0;
output  [3:0] v84_9_address0;
output   v84_9_ce0;
output   v84_9_we0;
output  [31:0] v84_9_d0;
input  [31:0] v84_9_q0;
output  [3:0] v84_8_address0;
output   v84_8_ce0;
output   v84_8_we0;
output  [31:0] v84_8_d0;
input  [31:0] v84_8_q0;
output  [3:0] v84_7_address0;
output   v84_7_ce0;
output   v84_7_we0;
output  [31:0] v84_7_d0;
output  [3:0] v84_7_address1;
output   v84_7_ce1;
input  [31:0] v84_7_q1;
output  [3:0] v84_6_address0;
output   v84_6_ce0;
output   v84_6_we0;
output  [31:0] v84_6_d0;
input  [31:0] v84_6_q0;
output  [3:0] v84_5_address0;
output   v84_5_ce0;
output   v84_5_we0;
output  [31:0] v84_5_d0;
input  [31:0] v84_5_q0;
output  [3:0] v84_4_address0;
output   v84_4_ce0;
output   v84_4_we0;
output  [31:0] v84_4_d0;
input  [31:0] v84_4_q0;
output  [3:0] v84_3_address0;
output   v84_3_ce0;
output   v84_3_we0;
output  [31:0] v84_3_d0;
output  [3:0] v84_3_address1;
output   v84_3_ce1;
input  [31:0] v84_3_q1;
output  [3:0] v84_2_address0;
output   v84_2_ce0;
output   v84_2_we0;
output  [31:0] v84_2_d0;
output  [3:0] v84_2_address1;
output   v84_2_ce1;
input  [31:0] v84_2_q1;
output  [3:0] v84_1_address0;
output   v84_1_ce0;
output   v84_1_we0;
output  [31:0] v84_1_d0;
output  [3:0] v84_1_address1;
output   v84_1_ce1;
input  [31:0] v84_1_q1;
output  [3:0] v84_address0;
output   v84_ce0;
output   v84_we0;
output  [31:0] v84_d0;
output  [3:0] v84_address1;
output   v84_ce1;
input  [31:0] v84_q1;
input  [3:0] sub_ln74;
input  [1:0] trunc_ln13;
output  [31:0] grp_fu_2403_p_din0;
output  [31:0] grp_fu_2403_p_din1;
output  [0:0] grp_fu_2403_p_opcode;
input  [31:0] grp_fu_2403_p_dout0;
output   grp_fu_2403_p_ce;

reg ap_idle;
reg inp_sumRow_ce0;
reg inp_sumRow_we0;
reg v84_15_ce0;
reg v84_15_we0;
reg v84_15_ce1;
reg[3:0] v84_14_address0;
reg v84_14_ce0;
reg v84_14_we0;
reg[3:0] v84_13_address0;
reg v84_13_ce0;
reg v84_13_we0;
reg[3:0] v84_12_address0;
reg v84_12_ce0;
reg v84_12_we0;
reg v84_11_ce0;
reg v84_11_we0;
reg v84_11_ce1;
reg[3:0] v84_10_address0;
reg v84_10_ce0;
reg v84_10_we0;
reg[3:0] v84_9_address0;
reg v84_9_ce0;
reg v84_9_we0;
reg[3:0] v84_8_address0;
reg v84_8_ce0;
reg v84_8_we0;
reg v84_7_ce0;
reg v84_7_we0;
reg v84_7_ce1;
reg[3:0] v84_6_address0;
reg v84_6_ce0;
reg v84_6_we0;
reg[3:0] v84_5_address0;
reg v84_5_ce0;
reg v84_5_we0;
reg[3:0] v84_4_address0;
reg v84_4_ce0;
reg v84_4_we0;
reg v84_3_ce0;
reg v84_3_we0;
reg v84_3_ce1;
reg v84_2_ce0;
reg v84_2_we0;
reg v84_2_ce1;
reg v84_1_ce0;
reg v84_1_we0;
reg v84_1_ce1;
reg v84_ce0;
reg v84_we0;
reg v84_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln72_reg_560;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln13_read_reg_550;
reg   [3:0] inp_sumRow_addr_reg_555;
reg   [3:0] inp_sumRow_addr_reg_555_pp0_iter1_reg;
reg   [3:0] inp_sumRow_addr_reg_555_pp0_iter2_reg;
reg   [3:0] inp_sumRow_addr_reg_555_pp0_iter3_reg;
reg   [3:0] inp_sumRow_addr_reg_555_pp0_iter4_reg;
wire   [0:0] icmp_ln72_fu_395_p2;
reg   [0:0] icmp_ln72_reg_560_pp0_iter1_reg;
reg   [0:0] icmp_ln72_reg_560_pp0_iter2_reg;
reg   [0:0] icmp_ln72_reg_560_pp0_iter3_reg;
wire   [1:0] trunc_ln72_fu_407_p1;
reg   [1:0] trunc_ln72_reg_564;
reg   [1:0] trunc_ln72_reg_564_pp0_iter1_reg;
reg   [1:0] trunc_ln72_reg_564_pp0_iter2_reg;
reg   [1:0] trunc_ln72_reg_564_pp0_iter3_reg;
reg   [3:0] v84_addr_reg_572;
reg   [3:0] v84_addr_reg_572_pp0_iter1_reg;
reg   [3:0] v84_addr_reg_572_pp0_iter2_reg;
reg   [3:0] v84_1_addr_reg_578;
reg   [3:0] v84_1_addr_reg_578_pp0_iter1_reg;
reg   [3:0] v84_1_addr_reg_578_pp0_iter2_reg;
reg   [3:0] v84_2_addr_reg_584;
reg   [3:0] v84_2_addr_reg_584_pp0_iter1_reg;
reg   [3:0] v84_2_addr_reg_584_pp0_iter2_reg;
reg   [3:0] v84_3_addr_reg_590;
reg   [3:0] v84_3_addr_reg_590_pp0_iter1_reg;
reg   [3:0] v84_3_addr_reg_590_pp0_iter2_reg;
reg   [3:0] v84_4_addr_reg_596;
reg   [3:0] v84_4_addr_reg_596_pp0_iter1_reg;
reg   [3:0] v84_4_addr_reg_596_pp0_iter2_reg;
reg   [3:0] v84_4_addr_reg_596_pp0_iter3_reg;
reg   [3:0] v84_5_addr_reg_601;
reg   [3:0] v84_5_addr_reg_601_pp0_iter1_reg;
reg   [3:0] v84_5_addr_reg_601_pp0_iter2_reg;
reg   [3:0] v84_5_addr_reg_601_pp0_iter3_reg;
reg   [3:0] v84_6_addr_reg_606;
reg   [3:0] v84_6_addr_reg_606_pp0_iter1_reg;
reg   [3:0] v84_6_addr_reg_606_pp0_iter2_reg;
reg   [3:0] v84_6_addr_reg_606_pp0_iter3_reg;
reg   [3:0] v84_7_addr_reg_611;
reg   [3:0] v84_7_addr_reg_611_pp0_iter1_reg;
reg   [3:0] v84_7_addr_reg_611_pp0_iter2_reg;
reg   [3:0] v84_8_addr_reg_617;
reg   [3:0] v84_8_addr_reg_617_pp0_iter1_reg;
reg   [3:0] v84_8_addr_reg_617_pp0_iter2_reg;
reg   [3:0] v84_8_addr_reg_617_pp0_iter3_reg;
reg   [3:0] v84_9_addr_reg_622;
reg   [3:0] v84_9_addr_reg_622_pp0_iter1_reg;
reg   [3:0] v84_9_addr_reg_622_pp0_iter2_reg;
reg   [3:0] v84_9_addr_reg_622_pp0_iter3_reg;
reg   [3:0] v84_10_addr_reg_627;
reg   [3:0] v84_10_addr_reg_627_pp0_iter1_reg;
reg   [3:0] v84_10_addr_reg_627_pp0_iter2_reg;
reg   [3:0] v84_10_addr_reg_627_pp0_iter3_reg;
reg   [3:0] v84_11_addr_reg_632;
reg   [3:0] v84_11_addr_reg_632_pp0_iter1_reg;
reg   [3:0] v84_11_addr_reg_632_pp0_iter2_reg;
reg   [3:0] v84_12_addr_reg_638;
reg   [3:0] v84_12_addr_reg_638_pp0_iter1_reg;
reg   [3:0] v84_12_addr_reg_638_pp0_iter2_reg;
reg   [3:0] v84_12_addr_reg_638_pp0_iter3_reg;
reg   [3:0] v84_13_addr_reg_643;
reg   [3:0] v84_13_addr_reg_643_pp0_iter1_reg;
reg   [3:0] v84_13_addr_reg_643_pp0_iter2_reg;
reg   [3:0] v84_13_addr_reg_643_pp0_iter3_reg;
reg   [3:0] v84_14_addr_reg_648;
reg   [3:0] v84_14_addr_reg_648_pp0_iter1_reg;
reg   [3:0] v84_14_addr_reg_648_pp0_iter2_reg;
reg   [3:0] v84_14_addr_reg_648_pp0_iter3_reg;
reg   [3:0] v84_15_addr_reg_653;
reg   [3:0] v84_15_addr_reg_653_pp0_iter1_reg;
reg   [3:0] v84_15_addr_reg_653_pp0_iter2_reg;
wire   [0:0] icmp_ln72_1_fu_451_p2;
reg   [0:0] icmp_ln72_1_reg_659;
reg   [0:0] icmp_ln72_1_reg_659_pp0_iter1_reg;
reg   [0:0] icmp_ln72_1_reg_659_pp0_iter2_reg;
reg   [0:0] icmp_ln72_1_reg_659_pp0_iter3_reg;
reg   [0:0] icmp_ln72_1_reg_659_pp0_iter4_reg;
wire   [31:0] v44_fu_514_p6;
reg   [31:0] v44_reg_663;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state13_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_fu_372_p2;
reg   [31:0] v46_reg_668;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] v48_reg_694;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln71_cast_fu_377_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln74_3_fu_431_p1;
reg   [31:0] v47_fu_88;
reg   [31:0] ap_sig_allocacmp_v47_load;
wire    ap_loop_init;
reg   [3:0] j2_fu_92;
wire   [3:0] add_ln72_fu_401_p2;
reg   [3:0] ap_sig_allocacmp_j2_1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [1:0] lshr_ln4_fu_411_p4;
wire   [3:0] zext_ln74_fu_421_p1;
wire   [3:0] add_ln74_fu_425_p2;
wire   [31:0] tmp_39_fu_462_p6;
wire   [31:0] tmp_40_fu_475_p6;
wire   [31:0] tmp_41_fu_488_p6;
wire   [31:0] tmp_s_fu_501_p6;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage1;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_fexp_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_10_full_dsp_1_U4214(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(v44_reg_663),
    .ce(1'b1),
    .dout(grp_fu_372_p2)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4215(
    .din0(v84_q1),
    .din1(v84_1_q1),
    .din2(v84_2_q1),
    .din3(v84_3_q1),
    .din4(trunc_ln72_reg_564),
    .dout(tmp_39_fu_462_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4216(
    .din0(v84_4_q0),
    .din1(v84_5_q0),
    .din2(v84_6_q0),
    .din3(v84_7_q1),
    .din4(trunc_ln72_reg_564),
    .dout(tmp_40_fu_475_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4217(
    .din0(v84_8_q0),
    .din1(v84_9_q0),
    .din2(v84_10_q0),
    .din3(v84_11_q1),
    .din4(trunc_ln72_reg_564),
    .dout(tmp_41_fu_488_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4218(
    .din0(v84_12_q0),
    .din1(v84_13_q0),
    .din2(v84_14_q0),
    .din3(v84_15_q1),
    .din4(trunc_ln72_reg_564),
    .dout(tmp_s_fu_501_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U4219(
    .din0(tmp_39_fu_462_p6),
    .din1(tmp_40_fu_475_p6),
    .din2(tmp_41_fu_488_p6),
    .din3(tmp_s_fu_501_p6),
    .din4(trunc_ln13),
    .dout(v44_fu_514_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln72_fu_395_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j2_fu_92 <= add_ln72_fu_401_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j2_fu_92 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v47_fu_88 <= inp_sumRow_load;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            v47_fu_88 <= grp_fu_2403_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln72_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln72_1_reg_659 <= icmp_ln72_1_fu_451_p2;
        trunc_ln72_reg_564 <= trunc_ln72_fu_407_p1;
        v84_10_addr_reg_627 <= zext_ln74_3_fu_431_p1;
        v84_11_addr_reg_632 <= zext_ln74_3_fu_431_p1;
        v84_12_addr_reg_638 <= zext_ln74_3_fu_431_p1;
        v84_13_addr_reg_643 <= zext_ln74_3_fu_431_p1;
        v84_14_addr_reg_648 <= zext_ln74_3_fu_431_p1;
        v84_15_addr_reg_653 <= zext_ln74_3_fu_431_p1;
        v84_1_addr_reg_578 <= zext_ln74_3_fu_431_p1;
        v84_2_addr_reg_584 <= zext_ln74_3_fu_431_p1;
        v84_3_addr_reg_590 <= zext_ln74_3_fu_431_p1;
        v84_4_addr_reg_596 <= zext_ln74_3_fu_431_p1;
        v84_5_addr_reg_601 <= zext_ln74_3_fu_431_p1;
        v84_6_addr_reg_606 <= zext_ln74_3_fu_431_p1;
        v84_7_addr_reg_611 <= zext_ln74_3_fu_431_p1;
        v84_8_addr_reg_617 <= zext_ln74_3_fu_431_p1;
        v84_9_addr_reg_622 <= zext_ln74_3_fu_431_p1;
        v84_addr_reg_572 <= zext_ln74_3_fu_431_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln72_1_reg_659_pp0_iter1_reg <= icmp_ln72_1_reg_659;
        icmp_ln72_1_reg_659_pp0_iter2_reg <= icmp_ln72_1_reg_659_pp0_iter1_reg;
        icmp_ln72_1_reg_659_pp0_iter3_reg <= icmp_ln72_1_reg_659_pp0_iter2_reg;
        icmp_ln72_1_reg_659_pp0_iter4_reg <= icmp_ln72_1_reg_659_pp0_iter3_reg;
        icmp_ln72_reg_560 <= icmp_ln72_fu_395_p2;
        icmp_ln72_reg_560_pp0_iter1_reg <= icmp_ln72_reg_560;
        icmp_ln72_reg_560_pp0_iter2_reg <= icmp_ln72_reg_560_pp0_iter1_reg;
        icmp_ln72_reg_560_pp0_iter3_reg <= icmp_ln72_reg_560_pp0_iter2_reg;
        inp_sumRow_addr_reg_555 <= zext_ln71_cast_fu_377_p1;
        inp_sumRow_addr_reg_555_pp0_iter1_reg <= inp_sumRow_addr_reg_555;
        inp_sumRow_addr_reg_555_pp0_iter2_reg <= inp_sumRow_addr_reg_555_pp0_iter1_reg;
        inp_sumRow_addr_reg_555_pp0_iter3_reg <= inp_sumRow_addr_reg_555_pp0_iter2_reg;
        inp_sumRow_addr_reg_555_pp0_iter4_reg <= inp_sumRow_addr_reg_555_pp0_iter3_reg;
        trunc_ln72_reg_564_pp0_iter1_reg <= trunc_ln72_reg_564;
        trunc_ln72_reg_564_pp0_iter2_reg <= trunc_ln72_reg_564_pp0_iter1_reg;
        trunc_ln72_reg_564_pp0_iter3_reg <= trunc_ln72_reg_564_pp0_iter2_reg;
        v48_reg_694 <= grp_fu_2403_p_dout0;
        v84_10_addr_reg_627_pp0_iter1_reg <= v84_10_addr_reg_627;
        v84_10_addr_reg_627_pp0_iter2_reg <= v84_10_addr_reg_627_pp0_iter1_reg;
        v84_10_addr_reg_627_pp0_iter3_reg <= v84_10_addr_reg_627_pp0_iter2_reg;
        v84_11_addr_reg_632_pp0_iter1_reg <= v84_11_addr_reg_632;
        v84_11_addr_reg_632_pp0_iter2_reg <= v84_11_addr_reg_632_pp0_iter1_reg;
        v84_12_addr_reg_638_pp0_iter1_reg <= v84_12_addr_reg_638;
        v84_12_addr_reg_638_pp0_iter2_reg <= v84_12_addr_reg_638_pp0_iter1_reg;
        v84_12_addr_reg_638_pp0_iter3_reg <= v84_12_addr_reg_638_pp0_iter2_reg;
        v84_13_addr_reg_643_pp0_iter1_reg <= v84_13_addr_reg_643;
        v84_13_addr_reg_643_pp0_iter2_reg <= v84_13_addr_reg_643_pp0_iter1_reg;
        v84_13_addr_reg_643_pp0_iter3_reg <= v84_13_addr_reg_643_pp0_iter2_reg;
        v84_14_addr_reg_648_pp0_iter1_reg <= v84_14_addr_reg_648;
        v84_14_addr_reg_648_pp0_iter2_reg <= v84_14_addr_reg_648_pp0_iter1_reg;
        v84_14_addr_reg_648_pp0_iter3_reg <= v84_14_addr_reg_648_pp0_iter2_reg;
        v84_15_addr_reg_653_pp0_iter1_reg <= v84_15_addr_reg_653;
        v84_15_addr_reg_653_pp0_iter2_reg <= v84_15_addr_reg_653_pp0_iter1_reg;
        v84_1_addr_reg_578_pp0_iter1_reg <= v84_1_addr_reg_578;
        v84_1_addr_reg_578_pp0_iter2_reg <= v84_1_addr_reg_578_pp0_iter1_reg;
        v84_2_addr_reg_584_pp0_iter1_reg <= v84_2_addr_reg_584;
        v84_2_addr_reg_584_pp0_iter2_reg <= v84_2_addr_reg_584_pp0_iter1_reg;
        v84_3_addr_reg_590_pp0_iter1_reg <= v84_3_addr_reg_590;
        v84_3_addr_reg_590_pp0_iter2_reg <= v84_3_addr_reg_590_pp0_iter1_reg;
        v84_4_addr_reg_596_pp0_iter1_reg <= v84_4_addr_reg_596;
        v84_4_addr_reg_596_pp0_iter2_reg <= v84_4_addr_reg_596_pp0_iter1_reg;
        v84_4_addr_reg_596_pp0_iter3_reg <= v84_4_addr_reg_596_pp0_iter2_reg;
        v84_5_addr_reg_601_pp0_iter1_reg <= v84_5_addr_reg_601;
        v84_5_addr_reg_601_pp0_iter2_reg <= v84_5_addr_reg_601_pp0_iter1_reg;
        v84_5_addr_reg_601_pp0_iter3_reg <= v84_5_addr_reg_601_pp0_iter2_reg;
        v84_6_addr_reg_606_pp0_iter1_reg <= v84_6_addr_reg_606;
        v84_6_addr_reg_606_pp0_iter2_reg <= v84_6_addr_reg_606_pp0_iter1_reg;
        v84_6_addr_reg_606_pp0_iter3_reg <= v84_6_addr_reg_606_pp0_iter2_reg;
        v84_7_addr_reg_611_pp0_iter1_reg <= v84_7_addr_reg_611;
        v84_7_addr_reg_611_pp0_iter2_reg <= v84_7_addr_reg_611_pp0_iter1_reg;
        v84_8_addr_reg_617_pp0_iter1_reg <= v84_8_addr_reg_617;
        v84_8_addr_reg_617_pp0_iter2_reg <= v84_8_addr_reg_617_pp0_iter1_reg;
        v84_8_addr_reg_617_pp0_iter3_reg <= v84_8_addr_reg_617_pp0_iter2_reg;
        v84_9_addr_reg_622_pp0_iter1_reg <= v84_9_addr_reg_622;
        v84_9_addr_reg_622_pp0_iter2_reg <= v84_9_addr_reg_622_pp0_iter1_reg;
        v84_9_addr_reg_622_pp0_iter3_reg <= v84_9_addr_reg_622_pp0_iter2_reg;
        v84_addr_reg_572_pp0_iter1_reg <= v84_addr_reg_572;
        v84_addr_reg_572_pp0_iter2_reg <= v84_addr_reg_572_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_reg_560 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v44_reg_663 <= v44_fu_514_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v46_reg_668 <= grp_fu_372_p2;
    end
end

always @ (*) begin
    if (((icmp_ln72_reg_560 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln72_reg_560_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j2_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_j2_1 = j2_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v47_load = grp_fu_2403_p_dout0;
    end else begin
        ap_sig_allocacmp_v47_load = v47_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln72_1_reg_659_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inp_sumRow_we0 = 1'b1;
    end else begin
        inp_sumRow_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_10_address0 = v84_10_addr_reg_627_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_10_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_10_ce0 = 1'b1;
    end else begin
        v84_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd2) & (trunc_ln13_read_reg_550 == 2'd2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_10_we0 = 1'b1;
    end else begin
        v84_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_11_ce0 = 1'b1;
    end else begin
        v84_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_11_ce1 = 1'b1;
    end else begin
        v84_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd3) & (trunc_ln13_read_reg_550 == 2'd2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_11_we0 = 1'b1;
    end else begin
        v84_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_12_address0 = v84_12_addr_reg_638_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_12_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_12_ce0 = 1'b1;
    end else begin
        v84_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd0) & (trunc_ln13_read_reg_550 == 2'd3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_12_we0 = 1'b1;
    end else begin
        v84_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_13_address0 = v84_13_addr_reg_643_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_13_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_13_ce0 = 1'b1;
    end else begin
        v84_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd1) & (trunc_ln13_read_reg_550 == 2'd3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_13_we0 = 1'b1;
    end else begin
        v84_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_14_address0 = v84_14_addr_reg_648_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_14_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_14_ce0 = 1'b1;
    end else begin
        v84_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd2) & (trunc_ln13_read_reg_550 == 2'd3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_14_we0 = 1'b1;
    end else begin
        v84_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_15_ce0 = 1'b1;
    end else begin
        v84_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_15_ce1 = 1'b1;
    end else begin
        v84_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd3) & (trunc_ln13_read_reg_550 == 2'd3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_15_we0 = 1'b1;
    end else begin
        v84_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_1_ce0 = 1'b1;
    end else begin
        v84_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_1_ce1 = 1'b1;
    end else begin
        v84_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd1) & (trunc_ln13_read_reg_550 == 2'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_1_we0 = 1'b1;
    end else begin
        v84_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_2_ce0 = 1'b1;
    end else begin
        v84_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_2_ce1 = 1'b1;
    end else begin
        v84_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd2) & (trunc_ln13_read_reg_550 == 2'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_2_we0 = 1'b1;
    end else begin
        v84_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_3_ce0 = 1'b1;
    end else begin
        v84_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_3_ce1 = 1'b1;
    end else begin
        v84_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd3) & (trunc_ln13_read_reg_550 == 2'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_3_we0 = 1'b1;
    end else begin
        v84_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_4_address0 = v84_4_addr_reg_596_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_4_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_4_ce0 = 1'b1;
    end else begin
        v84_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd0) & (trunc_ln13_read_reg_550 == 2'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_4_we0 = 1'b1;
    end else begin
        v84_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_5_address0 = v84_5_addr_reg_601_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_5_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_5_ce0 = 1'b1;
    end else begin
        v84_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd1) & (trunc_ln13_read_reg_550 == 2'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_5_we0 = 1'b1;
    end else begin
        v84_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_6_address0 = v84_6_addr_reg_606_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_6_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_6_ce0 = 1'b1;
    end else begin
        v84_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd2) & (trunc_ln13_read_reg_550 == 2'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_6_we0 = 1'b1;
    end else begin
        v84_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_7_ce0 = 1'b1;
    end else begin
        v84_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_7_ce1 = 1'b1;
    end else begin
        v84_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd3) & (trunc_ln13_read_reg_550 == 2'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_7_we0 = 1'b1;
    end else begin
        v84_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_8_address0 = v84_8_addr_reg_617_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_8_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_8_ce0 = 1'b1;
    end else begin
        v84_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd0) & (trunc_ln13_read_reg_550 == 2'd2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_8_we0 = 1'b1;
    end else begin
        v84_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_9_address0 = v84_9_addr_reg_622_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_9_address0 = zext_ln74_3_fu_431_p1;
    end else begin
        v84_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        v84_9_ce0 = 1'b1;
    end else begin
        v84_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (trunc_ln72_reg_564_pp0_iter3_reg == 2'd1) & (trunc_ln13_read_reg_550 == 2'd2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v84_9_we0 = 1'b1;
    end else begin
        v84_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_ce0 = 1'b1;
    end else begin
        v84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_ce1 = 1'b1;
    end else begin
        v84_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln72_reg_564_pp0_iter2_reg == 2'd0) & (trunc_ln13_read_reg_550 == 2'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_we0 = 1'b1;
    end else begin
        v84_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln72_fu_401_p2 = (ap_sig_allocacmp_j2_1 + 4'd1);

assign add_ln74_fu_425_p2 = (sub_ln74 + zext_ln74_fu_421_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_2403_p_ce = 1'b1;

assign grp_fu_2403_p_din0 = ap_sig_allocacmp_v47_load;

assign grp_fu_2403_p_din1 = v46_reg_668;

assign grp_fu_2403_p_opcode = 2'd0;

assign icmp_ln72_1_fu_451_p2 = ((add_ln72_fu_401_p2 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_395_p2 = ((ap_sig_allocacmp_j2_1 == 4'd12) ? 1'b1 : 1'b0);

assign inp_sumRow_address0 = inp_sumRow_addr_reg_555_pp0_iter4_reg;

assign inp_sumRow_d0 = v48_reg_694;

assign lshr_ln4_fu_411_p4 = {{ap_sig_allocacmp_j2_1[3:2]}};

assign trunc_ln13_read_reg_550 = trunc_ln13;

assign trunc_ln72_fu_407_p1 = ap_sig_allocacmp_j2_1[1:0];

assign v84_10_d0 = v46_reg_668;

assign v84_11_address0 = v84_11_addr_reg_632_pp0_iter2_reg;

assign v84_11_address1 = zext_ln74_3_fu_431_p1;

assign v84_11_d0 = v46_reg_668;

assign v84_12_d0 = v46_reg_668;

assign v84_13_d0 = v46_reg_668;

assign v84_14_d0 = v46_reg_668;

assign v84_15_address0 = v84_15_addr_reg_653_pp0_iter2_reg;

assign v84_15_address1 = zext_ln74_3_fu_431_p1;

assign v84_15_d0 = v46_reg_668;

assign v84_1_address0 = v84_1_addr_reg_578_pp0_iter2_reg;

assign v84_1_address1 = zext_ln74_3_fu_431_p1;

assign v84_1_d0 = v46_reg_668;

assign v84_2_address0 = v84_2_addr_reg_584_pp0_iter2_reg;

assign v84_2_address1 = zext_ln74_3_fu_431_p1;

assign v84_2_d0 = v46_reg_668;

assign v84_3_address0 = v84_3_addr_reg_590_pp0_iter2_reg;

assign v84_3_address1 = zext_ln74_3_fu_431_p1;

assign v84_3_d0 = v46_reg_668;

assign v84_4_d0 = v46_reg_668;

assign v84_5_d0 = v46_reg_668;

assign v84_6_d0 = v46_reg_668;

assign v84_7_address0 = v84_7_addr_reg_611_pp0_iter2_reg;

assign v84_7_address1 = zext_ln74_3_fu_431_p1;

assign v84_7_d0 = v46_reg_668;

assign v84_8_d0 = v46_reg_668;

assign v84_9_d0 = v46_reg_668;

assign v84_address0 = v84_addr_reg_572_pp0_iter2_reg;

assign v84_address1 = zext_ln74_3_fu_431_p1;

assign v84_d0 = v46_reg_668;

assign zext_ln71_cast_fu_377_p1 = zext_ln71;

assign zext_ln74_3_fu_431_p1 = add_ln74_fu_425_p2;

assign zext_ln74_fu_421_p1 = lshr_ln4_fu_411_p4;

endmodule //Bert_layer_Self_attention_Pipeline_l_j2
