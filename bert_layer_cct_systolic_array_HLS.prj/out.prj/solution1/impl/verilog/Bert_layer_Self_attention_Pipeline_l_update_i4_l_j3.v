// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_update_i4_l_j3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_sumRow_address0,
        inp_sumRow_ce0,
        inp_sumRow_q0,
        v84_address0,
        v84_ce0,
        v84_q0,
        v84_1_address0,
        v84_1_ce0,
        v84_1_q0,
        v84_2_address0,
        v84_2_ce0,
        v84_2_q0,
        v84_3_address0,
        v84_3_ce0,
        v84_3_q0,
        v85_address0,
        v85_ce0,
        v85_we0,
        v85_d0,
        v85_1_address0,
        v85_1_ce0,
        v85_1_we0,
        v85_1_d0,
        v85_2_address0,
        v85_2_ce0,
        v85_2_we0,
        v85_2_d0,
        v85_3_address0,
        v85_3_ce0,
        v85_3_we0,
        v85_3_d0,
        grp_fu_641_p_din0,
        grp_fu_641_p_din1,
        grp_fu_641_p_dout0,
        grp_fu_641_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] inp_sumRow_address0;
output   inp_sumRow_ce0;
input  [31:0] inp_sumRow_q0;
output  [5:0] v84_address0;
output   v84_ce0;
input  [31:0] v84_q0;
output  [5:0] v84_1_address0;
output   v84_1_ce0;
input  [31:0] v84_1_q0;
output  [5:0] v84_2_address0;
output   v84_2_ce0;
input  [31:0] v84_2_q0;
output  [5:0] v84_3_address0;
output   v84_3_ce0;
input  [31:0] v84_3_q0;
output  [5:0] v85_address0;
output   v85_ce0;
output   v85_we0;
output  [31:0] v85_d0;
output  [5:0] v85_1_address0;
output   v85_1_ce0;
output   v85_1_we0;
output  [31:0] v85_1_d0;
output  [5:0] v85_2_address0;
output   v85_2_ce0;
output   v85_2_we0;
output  [31:0] v85_2_d0;
output  [5:0] v85_3_address0;
output   v85_3_ce0;
output   v85_3_we0;
output  [31:0] v85_3_d0;
output  [31:0] grp_fu_641_p_din0;
output  [31:0] grp_fu_641_p_din1;
input  [31:0] grp_fu_641_p_dout0;
output   grp_fu_641_p_ce;

reg ap_idle;
reg inp_sumRow_ce0;
reg v84_ce0;
reg v84_1_ce0;
reg v84_2_ce0;
reg v84_3_ce0;
reg v85_ce0;
reg v85_we0;
reg v85_1_ce0;
reg v85_1_we0;
reg v85_2_ce0;
reg v85_2_we0;
reg v85_3_ce0;
reg v85_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln80_fu_215_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln80_fu_245_p3;
reg   [3:0] select_ln80_reg_383;
wire   [3:0] select_ln80_1_fu_253_p3;
reg   [3:0] select_ln80_1_reg_388;
wire   [1:0] trunc_ln80_fu_261_p1;
reg   [1:0] trunc_ln80_reg_393;
reg   [1:0] trunc_ln80_reg_393_pp0_iter1_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter2_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter3_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter4_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter5_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter6_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter7_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter8_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter9_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter10_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter11_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter12_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter13_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter14_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter15_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter16_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter17_reg;
reg   [1:0] trunc_ln80_reg_393_pp0_iter18_reg;
reg   [1:0] p_cast15_mid2_v_reg_398;
reg   [5:0] v85_addr_reg_429;
reg   [5:0] v85_addr_reg_429_pp0_iter2_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter3_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter4_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter5_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter6_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter7_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter8_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter9_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter10_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter11_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter12_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter13_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter14_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter15_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter16_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter17_reg;
reg   [5:0] v85_addr_reg_429_pp0_iter18_reg;
reg   [5:0] v85_1_addr_reg_434;
reg   [5:0] v85_1_addr_reg_434_pp0_iter2_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter3_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter4_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter5_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter6_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter7_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter8_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter9_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter10_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter11_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter12_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter13_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter14_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter15_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter16_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter17_reg;
reg   [5:0] v85_1_addr_reg_434_pp0_iter18_reg;
reg   [5:0] v85_2_addr_reg_439;
reg   [5:0] v85_2_addr_reg_439_pp0_iter2_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter3_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter4_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter5_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter6_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter7_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter8_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter9_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter10_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter11_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter12_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter13_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter14_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter15_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter16_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter17_reg;
reg   [5:0] v85_2_addr_reg_439_pp0_iter18_reg;
reg   [5:0] v85_3_addr_reg_444;
reg   [5:0] v85_3_addr_reg_444_pp0_iter2_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter3_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter4_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter5_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter6_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter7_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter8_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter9_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter10_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter11_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter12_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter13_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter14_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter15_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter16_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter17_reg;
reg   [5:0] v85_3_addr_reg_444_pp0_iter18_reg;
reg   [31:0] inp_sumRow_load_reg_449;
wire   [31:0] v51_fu_345_p6;
reg   [31:0] v51_reg_454;
reg   [31:0] v53_reg_459;
wire   [63:0] zext_ln80_fu_296_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln83_2_fu_333_p1;
reg   [3:0] j3_fu_68;
wire   [3:0] add_ln81_fu_275_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j3_load;
reg   [3:0] i4_fu_72;
reg   [3:0] ap_sig_allocacmp_i4_load;
reg   [7:0] indvar_flatten30_fu_76;
wire   [7:0] add_ln80_1_fu_221_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten30_load;
wire   [0:0] icmp_ln81_fu_239_p2;
wire   [3:0] add_ln80_fu_233_p2;
wire   [3:0] tmp_27_fu_307_p3;
wire   [5:0] tmp_s_fu_300_p3;
wire   [5:0] zext_ln83_fu_314_p1;
wire   [5:0] sub_ln83_fu_318_p2;
wire   [5:0] zext_ln83_1_fu_324_p1;
wire   [5:0] add_ln83_fu_327_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2868(
    .din0(v84_q0),
    .din1(v84_1_q0),
    .din2(v84_2_q0),
    .din3(v84_3_q0),
    .din4(trunc_ln80_reg_393_pp0_iter1_reg),
    .dout(v51_fu_345_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln80_fu_215_p2 == 1'd0))) begin
            i4_fu_72 <= select_ln80_1_fu_253_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i4_fu_72 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln80_fu_215_p2 == 1'd0))) begin
            indvar_flatten30_fu_76 <= add_ln80_1_fu_221_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten30_fu_76 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln80_fu_215_p2 == 1'd0))) begin
            j3_fu_68 <= add_ln81_fu_275_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j3_fu_68 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        inp_sumRow_load_reg_449 <= inp_sumRow_q0;
        trunc_ln80_reg_393_pp0_iter10_reg <= trunc_ln80_reg_393_pp0_iter9_reg;
        trunc_ln80_reg_393_pp0_iter11_reg <= trunc_ln80_reg_393_pp0_iter10_reg;
        trunc_ln80_reg_393_pp0_iter12_reg <= trunc_ln80_reg_393_pp0_iter11_reg;
        trunc_ln80_reg_393_pp0_iter13_reg <= trunc_ln80_reg_393_pp0_iter12_reg;
        trunc_ln80_reg_393_pp0_iter14_reg <= trunc_ln80_reg_393_pp0_iter13_reg;
        trunc_ln80_reg_393_pp0_iter15_reg <= trunc_ln80_reg_393_pp0_iter14_reg;
        trunc_ln80_reg_393_pp0_iter16_reg <= trunc_ln80_reg_393_pp0_iter15_reg;
        trunc_ln80_reg_393_pp0_iter17_reg <= trunc_ln80_reg_393_pp0_iter16_reg;
        trunc_ln80_reg_393_pp0_iter18_reg <= trunc_ln80_reg_393_pp0_iter17_reg;
        trunc_ln80_reg_393_pp0_iter2_reg <= trunc_ln80_reg_393_pp0_iter1_reg;
        trunc_ln80_reg_393_pp0_iter3_reg <= trunc_ln80_reg_393_pp0_iter2_reg;
        trunc_ln80_reg_393_pp0_iter4_reg <= trunc_ln80_reg_393_pp0_iter3_reg;
        trunc_ln80_reg_393_pp0_iter5_reg <= trunc_ln80_reg_393_pp0_iter4_reg;
        trunc_ln80_reg_393_pp0_iter6_reg <= trunc_ln80_reg_393_pp0_iter5_reg;
        trunc_ln80_reg_393_pp0_iter7_reg <= trunc_ln80_reg_393_pp0_iter6_reg;
        trunc_ln80_reg_393_pp0_iter8_reg <= trunc_ln80_reg_393_pp0_iter7_reg;
        trunc_ln80_reg_393_pp0_iter9_reg <= trunc_ln80_reg_393_pp0_iter8_reg;
        v51_reg_454 <= v51_fu_345_p6;
        v53_reg_459 <= grp_fu_641_p_dout0;
        v85_1_addr_reg_434_pp0_iter10_reg <= v85_1_addr_reg_434_pp0_iter9_reg;
        v85_1_addr_reg_434_pp0_iter11_reg <= v85_1_addr_reg_434_pp0_iter10_reg;
        v85_1_addr_reg_434_pp0_iter12_reg <= v85_1_addr_reg_434_pp0_iter11_reg;
        v85_1_addr_reg_434_pp0_iter13_reg <= v85_1_addr_reg_434_pp0_iter12_reg;
        v85_1_addr_reg_434_pp0_iter14_reg <= v85_1_addr_reg_434_pp0_iter13_reg;
        v85_1_addr_reg_434_pp0_iter15_reg <= v85_1_addr_reg_434_pp0_iter14_reg;
        v85_1_addr_reg_434_pp0_iter16_reg <= v85_1_addr_reg_434_pp0_iter15_reg;
        v85_1_addr_reg_434_pp0_iter17_reg <= v85_1_addr_reg_434_pp0_iter16_reg;
        v85_1_addr_reg_434_pp0_iter18_reg <= v85_1_addr_reg_434_pp0_iter17_reg;
        v85_1_addr_reg_434_pp0_iter2_reg <= v85_1_addr_reg_434;
        v85_1_addr_reg_434_pp0_iter3_reg <= v85_1_addr_reg_434_pp0_iter2_reg;
        v85_1_addr_reg_434_pp0_iter4_reg <= v85_1_addr_reg_434_pp0_iter3_reg;
        v85_1_addr_reg_434_pp0_iter5_reg <= v85_1_addr_reg_434_pp0_iter4_reg;
        v85_1_addr_reg_434_pp0_iter6_reg <= v85_1_addr_reg_434_pp0_iter5_reg;
        v85_1_addr_reg_434_pp0_iter7_reg <= v85_1_addr_reg_434_pp0_iter6_reg;
        v85_1_addr_reg_434_pp0_iter8_reg <= v85_1_addr_reg_434_pp0_iter7_reg;
        v85_1_addr_reg_434_pp0_iter9_reg <= v85_1_addr_reg_434_pp0_iter8_reg;
        v85_2_addr_reg_439_pp0_iter10_reg <= v85_2_addr_reg_439_pp0_iter9_reg;
        v85_2_addr_reg_439_pp0_iter11_reg <= v85_2_addr_reg_439_pp0_iter10_reg;
        v85_2_addr_reg_439_pp0_iter12_reg <= v85_2_addr_reg_439_pp0_iter11_reg;
        v85_2_addr_reg_439_pp0_iter13_reg <= v85_2_addr_reg_439_pp0_iter12_reg;
        v85_2_addr_reg_439_pp0_iter14_reg <= v85_2_addr_reg_439_pp0_iter13_reg;
        v85_2_addr_reg_439_pp0_iter15_reg <= v85_2_addr_reg_439_pp0_iter14_reg;
        v85_2_addr_reg_439_pp0_iter16_reg <= v85_2_addr_reg_439_pp0_iter15_reg;
        v85_2_addr_reg_439_pp0_iter17_reg <= v85_2_addr_reg_439_pp0_iter16_reg;
        v85_2_addr_reg_439_pp0_iter18_reg <= v85_2_addr_reg_439_pp0_iter17_reg;
        v85_2_addr_reg_439_pp0_iter2_reg <= v85_2_addr_reg_439;
        v85_2_addr_reg_439_pp0_iter3_reg <= v85_2_addr_reg_439_pp0_iter2_reg;
        v85_2_addr_reg_439_pp0_iter4_reg <= v85_2_addr_reg_439_pp0_iter3_reg;
        v85_2_addr_reg_439_pp0_iter5_reg <= v85_2_addr_reg_439_pp0_iter4_reg;
        v85_2_addr_reg_439_pp0_iter6_reg <= v85_2_addr_reg_439_pp0_iter5_reg;
        v85_2_addr_reg_439_pp0_iter7_reg <= v85_2_addr_reg_439_pp0_iter6_reg;
        v85_2_addr_reg_439_pp0_iter8_reg <= v85_2_addr_reg_439_pp0_iter7_reg;
        v85_2_addr_reg_439_pp0_iter9_reg <= v85_2_addr_reg_439_pp0_iter8_reg;
        v85_3_addr_reg_444_pp0_iter10_reg <= v85_3_addr_reg_444_pp0_iter9_reg;
        v85_3_addr_reg_444_pp0_iter11_reg <= v85_3_addr_reg_444_pp0_iter10_reg;
        v85_3_addr_reg_444_pp0_iter12_reg <= v85_3_addr_reg_444_pp0_iter11_reg;
        v85_3_addr_reg_444_pp0_iter13_reg <= v85_3_addr_reg_444_pp0_iter12_reg;
        v85_3_addr_reg_444_pp0_iter14_reg <= v85_3_addr_reg_444_pp0_iter13_reg;
        v85_3_addr_reg_444_pp0_iter15_reg <= v85_3_addr_reg_444_pp0_iter14_reg;
        v85_3_addr_reg_444_pp0_iter16_reg <= v85_3_addr_reg_444_pp0_iter15_reg;
        v85_3_addr_reg_444_pp0_iter17_reg <= v85_3_addr_reg_444_pp0_iter16_reg;
        v85_3_addr_reg_444_pp0_iter18_reg <= v85_3_addr_reg_444_pp0_iter17_reg;
        v85_3_addr_reg_444_pp0_iter2_reg <= v85_3_addr_reg_444;
        v85_3_addr_reg_444_pp0_iter3_reg <= v85_3_addr_reg_444_pp0_iter2_reg;
        v85_3_addr_reg_444_pp0_iter4_reg <= v85_3_addr_reg_444_pp0_iter3_reg;
        v85_3_addr_reg_444_pp0_iter5_reg <= v85_3_addr_reg_444_pp0_iter4_reg;
        v85_3_addr_reg_444_pp0_iter6_reg <= v85_3_addr_reg_444_pp0_iter5_reg;
        v85_3_addr_reg_444_pp0_iter7_reg <= v85_3_addr_reg_444_pp0_iter6_reg;
        v85_3_addr_reg_444_pp0_iter8_reg <= v85_3_addr_reg_444_pp0_iter7_reg;
        v85_3_addr_reg_444_pp0_iter9_reg <= v85_3_addr_reg_444_pp0_iter8_reg;
        v85_addr_reg_429_pp0_iter10_reg <= v85_addr_reg_429_pp0_iter9_reg;
        v85_addr_reg_429_pp0_iter11_reg <= v85_addr_reg_429_pp0_iter10_reg;
        v85_addr_reg_429_pp0_iter12_reg <= v85_addr_reg_429_pp0_iter11_reg;
        v85_addr_reg_429_pp0_iter13_reg <= v85_addr_reg_429_pp0_iter12_reg;
        v85_addr_reg_429_pp0_iter14_reg <= v85_addr_reg_429_pp0_iter13_reg;
        v85_addr_reg_429_pp0_iter15_reg <= v85_addr_reg_429_pp0_iter14_reg;
        v85_addr_reg_429_pp0_iter16_reg <= v85_addr_reg_429_pp0_iter15_reg;
        v85_addr_reg_429_pp0_iter17_reg <= v85_addr_reg_429_pp0_iter16_reg;
        v85_addr_reg_429_pp0_iter18_reg <= v85_addr_reg_429_pp0_iter17_reg;
        v85_addr_reg_429_pp0_iter2_reg <= v85_addr_reg_429;
        v85_addr_reg_429_pp0_iter3_reg <= v85_addr_reg_429_pp0_iter2_reg;
        v85_addr_reg_429_pp0_iter4_reg <= v85_addr_reg_429_pp0_iter3_reg;
        v85_addr_reg_429_pp0_iter5_reg <= v85_addr_reg_429_pp0_iter4_reg;
        v85_addr_reg_429_pp0_iter6_reg <= v85_addr_reg_429_pp0_iter5_reg;
        v85_addr_reg_429_pp0_iter7_reg <= v85_addr_reg_429_pp0_iter6_reg;
        v85_addr_reg_429_pp0_iter8_reg <= v85_addr_reg_429_pp0_iter7_reg;
        v85_addr_reg_429_pp0_iter9_reg <= v85_addr_reg_429_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        trunc_ln80_reg_393_pp0_iter1_reg <= trunc_ln80_reg_393;
        v85_1_addr_reg_434 <= zext_ln83_2_fu_333_p1;
        v85_2_addr_reg_439 <= zext_ln83_2_fu_333_p1;
        v85_3_addr_reg_444 <= zext_ln83_2_fu_333_p1;
        v85_addr_reg_429 <= zext_ln83_2_fu_333_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln80_fu_215_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_cast15_mid2_v_reg_398 <= {{select_ln80_1_fu_253_p3[3:2]}};
        select_ln80_1_reg_388 <= select_ln80_1_fu_253_p3;
        select_ln80_reg_383 <= select_ln80_fu_245_p3;
        trunc_ln80_reg_393 <= trunc_ln80_fu_261_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln80_fu_215_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter18_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i4_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i4_load = i4_fu_72;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten30_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten30_load = indvar_flatten30_fu_76;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j3_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j3_load = j3_fu_68;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v84_1_ce0 = 1'b1;
    end else begin
        v84_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v84_2_ce0 = 1'b1;
    end else begin
        v84_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v84_3_ce0 = 1'b1;
    end else begin
        v84_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v84_ce0 = 1'b1;
    end else begin
        v84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_1_ce0 = 1'b1;
    end else begin
        v85_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln80_reg_393_pp0_iter18_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_1_we0 = 1'b1;
    end else begin
        v85_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_2_ce0 = 1'b1;
    end else begin
        v85_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln80_reg_393_pp0_iter18_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_2_we0 = 1'b1;
    end else begin
        v85_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_3_ce0 = 1'b1;
    end else begin
        v85_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln80_reg_393_pp0_iter18_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_3_we0 = 1'b1;
    end else begin
        v85_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_ce0 = 1'b1;
    end else begin
        v85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (trunc_ln80_reg_393_pp0_iter18_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v85_we0 = 1'b1;
    end else begin
        v85_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln80_1_fu_221_p2 = (ap_sig_allocacmp_indvar_flatten30_load + 8'd1);

assign add_ln80_fu_233_p2 = (ap_sig_allocacmp_i4_load + 4'd1);

assign add_ln81_fu_275_p2 = (select_ln80_fu_245_p3 + 4'd1);

assign add_ln83_fu_327_p2 = (sub_ln83_fu_318_p2 + zext_ln83_1_fu_324_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_641_p_ce = 1'b1;

assign grp_fu_641_p_din0 = v51_reg_454;

assign grp_fu_641_p_din1 = inp_sumRow_load_reg_449;

assign icmp_ln80_fu_215_p2 = ((ap_sig_allocacmp_indvar_flatten30_load == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_239_p2 = ((ap_sig_allocacmp_j3_load == 4'd12) ? 1'b1 : 1'b0);

assign inp_sumRow_address0 = zext_ln80_fu_296_p1;

assign select_ln80_1_fu_253_p3 = ((icmp_ln81_fu_239_p2[0:0] == 1'b1) ? add_ln80_fu_233_p2 : ap_sig_allocacmp_i4_load);

assign select_ln80_fu_245_p3 = ((icmp_ln81_fu_239_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j3_load);

assign sub_ln83_fu_318_p2 = (tmp_s_fu_300_p3 - zext_ln83_fu_314_p1);

assign tmp_27_fu_307_p3 = {{p_cast15_mid2_v_reg_398}, {2'd0}};

assign tmp_s_fu_300_p3 = {{p_cast15_mid2_v_reg_398}, {4'd0}};

assign trunc_ln80_fu_261_p1 = select_ln80_1_fu_253_p3[1:0];

assign v84_1_address0 = zext_ln83_2_fu_333_p1;

assign v84_2_address0 = zext_ln83_2_fu_333_p1;

assign v84_3_address0 = zext_ln83_2_fu_333_p1;

assign v84_address0 = zext_ln83_2_fu_333_p1;

assign v85_1_address0 = v85_1_addr_reg_434_pp0_iter18_reg;

assign v85_1_d0 = v53_reg_459;

assign v85_2_address0 = v85_2_addr_reg_439_pp0_iter18_reg;

assign v85_2_d0 = v53_reg_459;

assign v85_3_address0 = v85_3_addr_reg_444_pp0_iter18_reg;

assign v85_3_d0 = v53_reg_459;

assign v85_address0 = v85_addr_reg_429_pp0_iter18_reg;

assign v85_d0 = v53_reg_459;

assign zext_ln80_fu_296_p1 = select_ln80_1_reg_388;

assign zext_ln83_1_fu_324_p1 = select_ln80_reg_383;

assign zext_ln83_2_fu_333_p1 = add_ln83_fu_327_p2;

assign zext_ln83_fu_314_p1 = tmp_27_fu_307_p3;

endmodule //Bert_layer_Self_attention_Pipeline_l_update_i4_l_j3
