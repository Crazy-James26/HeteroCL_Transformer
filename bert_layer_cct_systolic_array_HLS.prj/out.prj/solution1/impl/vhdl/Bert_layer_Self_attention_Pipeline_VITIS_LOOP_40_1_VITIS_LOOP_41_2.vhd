-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_Self_attention_Pipeline_VITIS_LOOP_40_1_VITIS_LOOP_41_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v84_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_ce0 : OUT STD_LOGIC;
    v84_we0 : OUT STD_LOGIC;
    v84_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_1_ce0 : OUT STD_LOGIC;
    v84_1_we0 : OUT STD_LOGIC;
    v84_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_2_ce0 : OUT STD_LOGIC;
    v84_2_we0 : OUT STD_LOGIC;
    v84_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_3_ce0 : OUT STD_LOGIC;
    v84_3_we0 : OUT STD_LOGIC;
    v84_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_4_ce0 : OUT STD_LOGIC;
    v84_4_we0 : OUT STD_LOGIC;
    v84_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_5_ce0 : OUT STD_LOGIC;
    v84_5_we0 : OUT STD_LOGIC;
    v84_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_6_ce0 : OUT STD_LOGIC;
    v84_6_we0 : OUT STD_LOGIC;
    v84_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_7_ce0 : OUT STD_LOGIC;
    v84_7_we0 : OUT STD_LOGIC;
    v84_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_8_ce0 : OUT STD_LOGIC;
    v84_8_we0 : OUT STD_LOGIC;
    v84_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_9_ce0 : OUT STD_LOGIC;
    v84_9_we0 : OUT STD_LOGIC;
    v84_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_10_ce0 : OUT STD_LOGIC;
    v84_10_we0 : OUT STD_LOGIC;
    v84_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_11_ce0 : OUT STD_LOGIC;
    v84_11_we0 : OUT STD_LOGIC;
    v84_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_12_ce0 : OUT STD_LOGIC;
    v84_12_we0 : OUT STD_LOGIC;
    v84_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_13_ce0 : OUT STD_LOGIC;
    v84_13_we0 : OUT STD_LOGIC;
    v84_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_14_ce0 : OUT STD_LOGIC;
    v84_14_we0 : OUT STD_LOGIC;
    v84_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v84_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    v84_15_ce0 : OUT STD_LOGIC;
    v84_15_we0 : OUT STD_LOGIC;
    v84_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Bert_layer_Self_attention_Pipeline_VITIS_LOOP_40_1_VITIS_LOOP_41_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln40_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal trunc_ln40_fu_410_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln40_reg_502 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln42_fu_428_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln42_reg_506 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln42_fu_434_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln42_reg_511 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln42_2_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal v21_fu_82 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln41_fu_438_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_v21_load : STD_LOGIC_VECTOR (3 downto 0);
    signal v20_fu_86 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_1_fu_374_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_v20_load : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten9_fu_90 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln40_1_fu_342_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten9_load : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln41_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_fu_354_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cast9_mid2_v_fu_382_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_396_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln42_fu_392_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_fu_366_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln_fu_414_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln42_fu_404_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln42_1_fu_424_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component Bert_layer_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten9_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_336_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten9_fu_90 <= add_ln40_1_fu_342_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten9_fu_90 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    v20_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_336_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    v20_fu_86 <= select_ln40_1_fu_374_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    v20_fu_86 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    v21_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_336_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    v21_fu_82 <= add_ln41_fu_438_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    v21_fu_82 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_336_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln42_reg_506 <= add_ln42_fu_428_p2;
                trunc_ln40_reg_502 <= trunc_ln40_fu_410_p1;
                trunc_ln42_reg_511 <= trunc_ln42_fu_434_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln40_1_fu_342_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten9_load) + unsigned(ap_const_lv8_1));
    add_ln40_fu_354_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_v20_load) + unsigned(ap_const_lv4_1));
    add_ln41_fu_438_p2 <= std_logic_vector(unsigned(select_ln40_fu_366_p3) + unsigned(ap_const_lv4_1));
    add_ln42_fu_428_p2 <= std_logic_vector(unsigned(sub_ln42_fu_404_p2) + unsigned(zext_ln42_1_fu_424_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln40_fu_336_p2)
    begin
        if (((icmp_ln40_fu_336_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten9_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten9_fu_90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten9_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten9_load <= indvar_flatten9_fu_90;
        end if; 
    end process;


    ap_sig_allocacmp_v20_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, v20_fu_86)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_v20_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_v20_load <= v20_fu_86;
        end if; 
    end process;


    ap_sig_allocacmp_v21_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, v21_fu_82, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_v21_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_v21_load <= v21_fu_82;
        end if; 
    end process;

    icmp_ln40_fu_336_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten9_load = ap_const_lv8_90) else "0";
    icmp_ln41_fu_360_p2 <= "1" when (ap_sig_allocacmp_v21_load = ap_const_lv4_C) else "0";
    lshr_ln_fu_414_p4 <= select_ln40_fu_366_p3(3 downto 2);
    p_cast9_mid2_v_fu_382_p4 <= select_ln40_1_fu_374_p3(3 downto 2);
    select_ln40_1_fu_374_p3 <= 
        add_ln40_fu_354_p2 when (icmp_ln41_fu_360_p2(0) = '1') else 
        ap_sig_allocacmp_v20_load;
    select_ln40_fu_366_p3 <= 
        ap_const_lv4_0 when (icmp_ln41_fu_360_p2(0) = '1') else 
        ap_sig_allocacmp_v21_load;
    sub_ln42_fu_404_p2 <= std_logic_vector(unsigned(tmp_s_fu_396_p3) - unsigned(zext_ln42_fu_392_p1));
    tmp_s_fu_396_p3 <= (p_cast9_mid2_v_fu_382_p4 & ap_const_lv2_0);
    trunc_ln40_fu_410_p1 <= select_ln40_1_fu_374_p3(2 - 1 downto 0);
    trunc_ln42_fu_434_p1 <= select_ln40_fu_366_p3(2 - 1 downto 0);
    v84_10_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_10_ce0 <= ap_const_logic_1;
        else 
            v84_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_10_d0 <= ap_const_lv32_0;

    v84_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_2) and (trunc_ln40_reg_502 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_10_we0 <= ap_const_logic_1;
        else 
            v84_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_11_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_11_ce0 <= ap_const_logic_1;
        else 
            v84_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_11_d0 <= ap_const_lv32_0;

    v84_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_3) and (trunc_ln40_reg_502 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_11_we0 <= ap_const_logic_1;
        else 
            v84_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_12_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_12_ce0 <= ap_const_logic_1;
        else 
            v84_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_12_d0 <= ap_const_lv32_0;

    v84_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_0) and (trunc_ln40_reg_502 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_12_we0 <= ap_const_logic_1;
        else 
            v84_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_13_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_13_ce0 <= ap_const_logic_1;
        else 
            v84_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_13_d0 <= ap_const_lv32_0;

    v84_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_1) and (trunc_ln40_reg_502 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_13_we0 <= ap_const_logic_1;
        else 
            v84_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_14_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_14_ce0 <= ap_const_logic_1;
        else 
            v84_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_14_d0 <= ap_const_lv32_0;

    v84_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_2) and (trunc_ln40_reg_502 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_14_we0 <= ap_const_logic_1;
        else 
            v84_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_15_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_15_ce0 <= ap_const_logic_1;
        else 
            v84_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_15_d0 <= ap_const_lv32_0;

    v84_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_3) and (trunc_ln40_reg_502 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_15_we0 <= ap_const_logic_1;
        else 
            v84_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_1_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_1_ce0 <= ap_const_logic_1;
        else 
            v84_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_1_d0 <= ap_const_lv32_0;

    v84_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_1) and (trunc_ln40_reg_502 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_1_we0 <= ap_const_logic_1;
        else 
            v84_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_2_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_2_ce0 <= ap_const_logic_1;
        else 
            v84_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_2_d0 <= ap_const_lv32_0;

    v84_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_2) and (trunc_ln40_reg_502 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_2_we0 <= ap_const_logic_1;
        else 
            v84_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_3_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_3_ce0 <= ap_const_logic_1;
        else 
            v84_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_3_d0 <= ap_const_lv32_0;

    v84_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_3) and (trunc_ln40_reg_502 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_3_we0 <= ap_const_logic_1;
        else 
            v84_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_4_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_4_ce0 <= ap_const_logic_1;
        else 
            v84_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_4_d0 <= ap_const_lv32_0;

    v84_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_0) and (trunc_ln40_reg_502 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_4_we0 <= ap_const_logic_1;
        else 
            v84_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_5_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_5_ce0 <= ap_const_logic_1;
        else 
            v84_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_5_d0 <= ap_const_lv32_0;

    v84_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_1) and (trunc_ln40_reg_502 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_5_we0 <= ap_const_logic_1;
        else 
            v84_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_6_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_6_ce0 <= ap_const_logic_1;
        else 
            v84_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_6_d0 <= ap_const_lv32_0;

    v84_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_2) and (trunc_ln40_reg_502 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_6_we0 <= ap_const_logic_1;
        else 
            v84_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_7_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_7_ce0 <= ap_const_logic_1;
        else 
            v84_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_7_d0 <= ap_const_lv32_0;

    v84_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_3) and (trunc_ln40_reg_502 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_7_we0 <= ap_const_logic_1;
        else 
            v84_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_8_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_8_ce0 <= ap_const_logic_1;
        else 
            v84_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_8_d0 <= ap_const_lv32_0;

    v84_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_0) and (trunc_ln40_reg_502 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_8_we0 <= ap_const_logic_1;
        else 
            v84_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_9_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_9_ce0 <= ap_const_logic_1;
        else 
            v84_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_9_d0 <= ap_const_lv32_0;

    v84_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_1) and (trunc_ln40_reg_502 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_9_we0 <= ap_const_logic_1;
        else 
            v84_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_address0 <= zext_ln42_2_fu_459_p1(4 - 1 downto 0);

    v84_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_ce0 <= ap_const_logic_1;
        else 
            v84_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v84_d0 <= ap_const_lv32_0;

    v84_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln40_reg_502, ap_block_pp0_stage0_11001, trunc_ln42_reg_511)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln42_reg_511 = ap_const_lv2_0) and (trunc_ln40_reg_502 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            v84_we0 <= ap_const_logic_1;
        else 
            v84_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln42_1_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_414_p4),4));
    zext_ln42_2_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln42_reg_506),64));
    zext_ln42_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast9_mid2_v_fu_382_p4),4));
end behav;
