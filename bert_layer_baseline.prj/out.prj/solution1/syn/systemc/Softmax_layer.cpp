// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Softmax_layer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Softmax_layer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Softmax_layer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<41> Softmax_layer::ap_ST_fsm_state1 = "1";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state2 = "10";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state3 = "100";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state4 = "1000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state5 = "10000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state6 = "100000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state7 = "1000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state8 = "10000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state9 = "100000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state10 = "1000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state11 = "10000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state12 = "100000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<41> Softmax_layer::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<32> Softmax_layer::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Softmax_layer::ap_const_lv32_4 = "100";
const sc_lv<32> Softmax_layer::ap_const_lv32_17 = "10111";
const sc_lv<32> Softmax_layer::ap_const_lv32_D = "1101";
const sc_lv<32> Softmax_layer::ap_const_lv32_15 = "10101";
const sc_lv<32> Softmax_layer::ap_const_lv32_1 = "1";
const sc_lv<32> Softmax_layer::ap_const_lv32_2 = "10";
const sc_lv<1> Softmax_layer::ap_const_lv1_0 = "0";
const sc_lv<32> Softmax_layer::ap_const_lv32_3 = "11";
const sc_lv<32> Softmax_layer::ap_const_lv32_12 = "10010";
const sc_lv<32> Softmax_layer::ap_const_lv32_14 = "10100";
const sc_lv<32> Softmax_layer::ap_const_lv32_16 = "10110";
const sc_lv<32> Softmax_layer::ap_const_lv32_27 = "100111";
const sc_lv<4> Softmax_layer::ap_const_lv4_0 = "0000";
const sc_lv<1> Softmax_layer::ap_const_lv1_1 = "1";
const sc_lv<32> Softmax_layer::ap_const_lv32_13 = "10011";
const sc_lv<32> Softmax_layer::ap_const_lv32_28 = "101000";
const sc_lv<32> Softmax_layer::ap_const_lv32_C = "1100";
const sc_lv<32> Softmax_layer::ap_const_lv32_E = "1110";
const sc_lv<32> Softmax_layer::ap_const_lv32_18 = "11000";
const sc_lv<32> Softmax_layer::ap_const_lv32_5 = "101";
const sc_lv<4> Softmax_layer::ap_const_lv4_C = "1100";
const sc_lv<4> Softmax_layer::ap_const_lv4_1 = "1";
const sc_lv<2> Softmax_layer::ap_const_lv2_0 = "00";
const bool Softmax_layer::ap_const_boolean_1 = true;

Softmax_layer::Softmax_layer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inp_sumRow_U = new Softmax_layer_inpdEe("inp_sumRow_U");
    inp_sumRow_U->clk(ap_clk);
    inp_sumRow_U->reset(ap_rst);
    inp_sumRow_U->address0(inp_sumRow_address0);
    inp_sumRow_U->ce0(inp_sumRow_ce0);
    inp_sumRow_U->we0(inp_sumRow_we0);
    inp_sumRow_U->d0(inp_sumRow_d0);
    inp_sumRow_U->q0(inp_sumRow_q0);
    Bert_layer_fadd_3bkb_U14 = new Bert_layer_fadd_3bkb<1,5,32,32,32>("Bert_layer_fadd_3bkb_U14");
    Bert_layer_fadd_3bkb_U14->clk(ap_clk);
    Bert_layer_fadd_3bkb_U14->reset(ap_rst);
    Bert_layer_fadd_3bkb_U14->din0(reg_181);
    Bert_layer_fadd_3bkb_U14->din1(v43_reg_389);
    Bert_layer_fadd_3bkb_U14->ce(ap_var_for_const0);
    Bert_layer_fadd_3bkb_U14->dout(grp_fu_162_p2);
    Bert_layer_fdiv_3eOg_U15 = new Bert_layer_fdiv_3eOg<1,16,32,32,32>("Bert_layer_fdiv_3eOg_U15");
    Bert_layer_fdiv_3eOg_U15->clk(ap_clk);
    Bert_layer_fdiv_3eOg_U15->reset(ap_rst);
    Bert_layer_fdiv_3eOg_U15->din0(reg_175);
    Bert_layer_fdiv_3eOg_U15->din1(reg_181);
    Bert_layer_fdiv_3eOg_U15->ce(ap_var_for_const0);
    Bert_layer_fdiv_3eOg_U15->dout(grp_fu_166_p2);
    Bert_layer_fexp_3fYi_U16 = new Bert_layer_fexp_3fYi<1,9,32,32,32>("Bert_layer_fexp_3fYi_U16");
    Bert_layer_fexp_3fYi_U16->clk(ap_clk);
    Bert_layer_fexp_3fYi_U16->reset(ap_rst);
    Bert_layer_fexp_3fYi_U16->din0(ap_var_for_const1);
    Bert_layer_fexp_3fYi_U16->din1(reg_175);
    Bert_layer_fexp_3fYi_U16->ce(ap_var_for_const0);
    Bert_layer_fexp_3fYi_U16->dout(grp_fu_170_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln101_fu_340_p2);
    sensitive << ( sub_ln101_reg_413 );
    sensitive << ( zext_ln101_3_fu_336_p1 );

    SC_METHOD(thread_add_ln90_fu_267_p2);
    sensitive << ( sub_ln90_reg_366 );
    sensitive << ( zext_ln90_3_fu_263_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln99_fu_277_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln99_fu_277_p2 );

    SC_METHOD(thread_i4_fu_210_p2);
    sensitive << ( i4_0_reg_117 );

    SC_METHOD(thread_i5_fu_283_p2);
    sensitive << ( i5_0_reg_139 );

    SC_METHOD(thread_icmp_ln100_fu_324_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( j5_0_reg_151 );

    SC_METHOD(thread_icmp_ln85_fu_187_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( v39_0_reg_106 );

    SC_METHOD(thread_icmp_ln88_fu_204_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i4_0_reg_117 );

    SC_METHOD(thread_icmp_ln89_fu_251_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j4_0_reg_128 );

    SC_METHOD(thread_icmp_ln99_fu_277_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( i5_0_reg_139 );

    SC_METHOD(thread_inp_sumRow_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( inp_sumRow_addr_1_reg_371 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln86_fu_199_p1 );
    sensitive << ( zext_ln101_fu_289_p1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_inp_sumRow_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_inp_sumRow_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( v46_reg_395 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_inp_sumRow_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln85_fu_187_p2 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_j4_fu_257_p2);
    sensitive << ( j4_0_reg_128 );

    SC_METHOD(thread_j5_fu_330_p2);
    sensitive << ( j5_0_reg_151 );

    SC_METHOD(thread_sext_ln101_fu_345_p1);
    sensitive << ( add_ln101_fu_340_p2 );

    SC_METHOD(thread_sext_ln90_fu_272_p1);
    sensitive << ( add_ln90_fu_267_p2 );

    SC_METHOD(thread_sub_ln101_fu_318_p2);
    sensitive << ( zext_ln101_1_fu_302_p1 );
    sensitive << ( zext_ln101_2_fu_314_p1 );

    SC_METHOD(thread_sub_ln90_fu_245_p2);
    sensitive << ( zext_ln90_1_fu_229_p1 );
    sensitive << ( zext_ln90_2_fu_241_p1 );

    SC_METHOD(thread_tmp_15_fu_221_p3);
    sensitive << ( i4_0_reg_117 );

    SC_METHOD(thread_tmp_16_fu_233_p3);
    sensitive << ( i4_0_reg_117 );

    SC_METHOD(thread_tmp_17_fu_294_p3);
    sensitive << ( i5_0_reg_139 );

    SC_METHOD(thread_tmp_18_fu_306_p3);
    sensitive << ( i5_0_reg_139 );

    SC_METHOD(thread_v36_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( v36_addr_reg_384 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( sext_ln101_fu_345_p1 );
    sensitive << ( sext_ln90_fu_272_p1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_v36_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_v36_d0);
    sensitive << ( v43_reg_389 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_v36_we0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_v37_address0);
    sensitive << ( sext_ln101_reg_426 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_v37_ce0);
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_v37_d0);
    sensitive << ( v51_reg_436 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_v37_we0);
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_v39_fu_193_p2);
    sensitive << ( v39_0_reg_106 );

    SC_METHOD(thread_zext_ln101_1_fu_302_p1);
    sensitive << ( tmp_17_fu_294_p3 );

    SC_METHOD(thread_zext_ln101_2_fu_314_p1);
    sensitive << ( tmp_18_fu_306_p3 );

    SC_METHOD(thread_zext_ln101_3_fu_336_p1);
    sensitive << ( j5_0_reg_151 );

    SC_METHOD(thread_zext_ln101_fu_289_p1);
    sensitive << ( i5_0_reg_139 );

    SC_METHOD(thread_zext_ln86_fu_199_p1);
    sensitive << ( v39_0_reg_106 );

    SC_METHOD(thread_zext_ln90_1_fu_229_p1);
    sensitive << ( tmp_15_fu_221_p3 );

    SC_METHOD(thread_zext_ln90_2_fu_241_p1);
    sensitive << ( tmp_16_fu_233_p3 );

    SC_METHOD(thread_zext_ln90_3_fu_263_p1);
    sensitive << ( j4_0_reg_128 );

    SC_METHOD(thread_zext_ln90_fu_216_p1);
    sensitive << ( i4_0_reg_117 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln88_fu_204_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln89_fu_251_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln99_fu_277_p2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( icmp_ln100_fu_324_p2 );
    sensitive << ( icmp_ln85_fu_187_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Softmax_layer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v36_address0, "(port)v36_address0");
    sc_trace(mVcdFile, v36_ce0, "(port)v36_ce0");
    sc_trace(mVcdFile, v36_we0, "(port)v36_we0");
    sc_trace(mVcdFile, v36_d0, "(port)v36_d0");
    sc_trace(mVcdFile, v36_q0, "(port)v36_q0");
    sc_trace(mVcdFile, v37_address0, "(port)v37_address0");
    sc_trace(mVcdFile, v37_ce0, "(port)v37_ce0");
    sc_trace(mVcdFile, v37_we0, "(port)v37_we0");
    sc_trace(mVcdFile, v37_d0, "(port)v37_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_175, "reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, inp_sumRow_q0, "inp_sumRow_q0");
    sc_trace(mVcdFile, reg_181, "reg_181");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, v39_fu_193_p2, "v39_fu_193_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i4_fu_210_p2, "i4_fu_210_p2");
    sc_trace(mVcdFile, i4_reg_361, "i4_reg_361");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln90_fu_245_p2, "sub_ln90_fu_245_p2");
    sc_trace(mVcdFile, sub_ln90_reg_366, "sub_ln90_reg_366");
    sc_trace(mVcdFile, icmp_ln88_fu_204_p2, "icmp_ln88_fu_204_p2");
    sc_trace(mVcdFile, inp_sumRow_addr_1_reg_371, "inp_sumRow_addr_1_reg_371");
    sc_trace(mVcdFile, j4_fu_257_p2, "j4_fu_257_p2");
    sc_trace(mVcdFile, j4_reg_379, "j4_reg_379");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, v36_addr_reg_384, "v36_addr_reg_384");
    sc_trace(mVcdFile, icmp_ln89_fu_251_p2, "icmp_ln89_fu_251_p2");
    sc_trace(mVcdFile, grp_fu_170_p2, "grp_fu_170_p2");
    sc_trace(mVcdFile, v43_reg_389, "v43_reg_389");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, v46_reg_395, "v46_reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, i5_fu_283_p2, "i5_fu_283_p2");
    sc_trace(mVcdFile, i5_reg_403, "i5_reg_403");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, icmp_ln99_fu_277_p2, "icmp_ln99_fu_277_p2");
    sc_trace(mVcdFile, sub_ln101_fu_318_p2, "sub_ln101_fu_318_p2");
    sc_trace(mVcdFile, sub_ln101_reg_413, "sub_ln101_reg_413");
    sc_trace(mVcdFile, j5_fu_330_p2, "j5_fu_330_p2");
    sc_trace(mVcdFile, j5_reg_421, "j5_reg_421");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, sext_ln101_fu_345_p1, "sext_ln101_fu_345_p1");
    sc_trace(mVcdFile, sext_ln101_reg_426, "sext_ln101_reg_426");
    sc_trace(mVcdFile, icmp_ln100_fu_324_p2, "icmp_ln100_fu_324_p2");
    sc_trace(mVcdFile, grp_fu_166_p2, "grp_fu_166_p2");
    sc_trace(mVcdFile, v51_reg_436, "v51_reg_436");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, inp_sumRow_address0, "inp_sumRow_address0");
    sc_trace(mVcdFile, inp_sumRow_ce0, "inp_sumRow_ce0");
    sc_trace(mVcdFile, inp_sumRow_we0, "inp_sumRow_we0");
    sc_trace(mVcdFile, inp_sumRow_d0, "inp_sumRow_d0");
    sc_trace(mVcdFile, v39_0_reg_106, "v39_0_reg_106");
    sc_trace(mVcdFile, icmp_ln85_fu_187_p2, "icmp_ln85_fu_187_p2");
    sc_trace(mVcdFile, i4_0_reg_117, "i4_0_reg_117");
    sc_trace(mVcdFile, j4_0_reg_128, "j4_0_reg_128");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, i5_0_reg_139, "i5_0_reg_139");
    sc_trace(mVcdFile, j5_0_reg_151, "j5_0_reg_151");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, zext_ln86_fu_199_p1, "zext_ln86_fu_199_p1");
    sc_trace(mVcdFile, zext_ln90_fu_216_p1, "zext_ln90_fu_216_p1");
    sc_trace(mVcdFile, sext_ln90_fu_272_p1, "sext_ln90_fu_272_p1");
    sc_trace(mVcdFile, zext_ln101_fu_289_p1, "zext_ln101_fu_289_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_15_fu_221_p3, "tmp_15_fu_221_p3");
    sc_trace(mVcdFile, tmp_16_fu_233_p3, "tmp_16_fu_233_p3");
    sc_trace(mVcdFile, zext_ln90_1_fu_229_p1, "zext_ln90_1_fu_229_p1");
    sc_trace(mVcdFile, zext_ln90_2_fu_241_p1, "zext_ln90_2_fu_241_p1");
    sc_trace(mVcdFile, zext_ln90_3_fu_263_p1, "zext_ln90_3_fu_263_p1");
    sc_trace(mVcdFile, add_ln90_fu_267_p2, "add_ln90_fu_267_p2");
    sc_trace(mVcdFile, tmp_17_fu_294_p3, "tmp_17_fu_294_p3");
    sc_trace(mVcdFile, tmp_18_fu_306_p3, "tmp_18_fu_306_p3");
    sc_trace(mVcdFile, zext_ln101_1_fu_302_p1, "zext_ln101_1_fu_302_p1");
    sc_trace(mVcdFile, zext_ln101_2_fu_314_p1, "zext_ln101_2_fu_314_p1");
    sc_trace(mVcdFile, zext_ln101_3_fu_336_p1, "zext_ln101_3_fu_336_p1");
    sc_trace(mVcdFile, add_ln101_fu_340_p2, "add_ln101_fu_340_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Softmax_layer::~Softmax_layer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete inp_sumRow_U;
    delete Bert_layer_fadd_3bkb_U14;
    delete Bert_layer_fdiv_3eOg_U15;
    delete Bert_layer_fexp_3fYi_U16;
}

void Softmax_layer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Softmax_layer::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void Softmax_layer::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln85_fu_187_p2.read(), ap_const_lv1_1))) {
        i4_0_reg_117 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln89_fu_251_p2.read(), ap_const_lv1_1))) {
        i4_0_reg_117 = i4_reg_361.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln88_fu_204_p2.read(), ap_const_lv1_1))) {
        i5_0_reg_139 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
                esl_seteq<1,1,1>(icmp_ln100_fu_324_p2.read(), ap_const_lv1_1))) {
        i5_0_reg_139 = i5_reg_403.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        j4_0_reg_128 = j4_reg_379.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln88_fu_204_p2.read(), ap_const_lv1_0))) {
        j4_0_reg_128 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        j5_0_reg_151 = j5_reg_421.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        j5_0_reg_151 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln85_fu_187_p2.read()))) {
        v39_0_reg_106 = v39_fu_193_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        v39_0_reg_106 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i4_reg_361 = i4_fu_210_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        i5_reg_403 = i5_fu_283_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln88_fu_204_p2.read(), ap_const_lv1_0))) {
        inp_sumRow_addr_1_reg_371 =  (sc_lv<4>) (zext_ln90_fu_216_p1.read());
        sub_ln90_reg_366 = sub_ln90_fu_245_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j4_reg_379 = j4_fu_257_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        j5_reg_421 = j5_fu_330_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        reg_175 = v36_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_181 = inp_sumRow_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln100_fu_324_p2.read()))) {
        sext_ln101_reg_426 = sext_ln101_fu_345_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        sub_ln101_reg_413 = sub_ln101_fu_318_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln89_fu_251_p2.read()))) {
        v36_addr_reg_384 =  (sc_lv<8>) (sext_ln90_fu_272_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        v43_reg_389 = grp_fu_170_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        v46_reg_395 = grp_fu_162_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        v51_reg_436 = grp_fu_166_p2.read();
    }
}

void Softmax_layer::thread_add_ln101_fu_340_p2() {
    add_ln101_fu_340_p2 = (!sub_ln101_reg_413.read().is_01() || !zext_ln101_3_fu_336_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln101_reg_413.read()) + sc_biguint<9>(zext_ln101_3_fu_336_p1.read()));
}

void Softmax_layer::thread_add_ln90_fu_267_p2() {
    add_ln90_fu_267_p2 = (!sub_ln90_reg_366.read().is_01() || !zext_ln90_3_fu_263_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln90_reg_366.read()) + sc_biguint<9>(zext_ln90_3_fu_263_p1.read()));
}

void Softmax_layer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Softmax_layer::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Softmax_layer::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void Softmax_layer::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void Softmax_layer::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void Softmax_layer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Softmax_layer::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void Softmax_layer::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Softmax_layer::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Softmax_layer::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void Softmax_layer::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void Softmax_layer::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void Softmax_layer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Softmax_layer::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Softmax_layer::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void Softmax_layer::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void Softmax_layer::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Softmax_layer::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Softmax_layer::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(icmp_ln99_fu_277_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Softmax_layer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Softmax_layer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(icmp_ln99_fu_277_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Softmax_layer::thread_i4_fu_210_p2() {
    i4_fu_210_p2 = (!i4_0_reg_117.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i4_0_reg_117.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Softmax_layer::thread_i5_fu_283_p2() {
    i5_fu_283_p2 = (!i5_0_reg_139.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i5_0_reg_139.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Softmax_layer::thread_icmp_ln100_fu_324_p2() {
    icmp_ln100_fu_324_p2 = (!j5_0_reg_151.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(j5_0_reg_151.read() == ap_const_lv4_C);
}

void Softmax_layer::thread_icmp_ln85_fu_187_p2() {
    icmp_ln85_fu_187_p2 = (!v39_0_reg_106.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(v39_0_reg_106.read() == ap_const_lv4_C);
}

void Softmax_layer::thread_icmp_ln88_fu_204_p2() {
    icmp_ln88_fu_204_p2 = (!i4_0_reg_117.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i4_0_reg_117.read() == ap_const_lv4_C);
}

void Softmax_layer::thread_icmp_ln89_fu_251_p2() {
    icmp_ln89_fu_251_p2 = (!j4_0_reg_128.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(j4_0_reg_128.read() == ap_const_lv4_C);
}

void Softmax_layer::thread_icmp_ln99_fu_277_p2() {
    icmp_ln99_fu_277_p2 = (!i5_0_reg_139.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i5_0_reg_139.read() == ap_const_lv4_C);
}

void Softmax_layer::thread_inp_sumRow_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        inp_sumRow_address0 =  (sc_lv<4>) (zext_ln101_fu_289_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        inp_sumRow_address0 = inp_sumRow_addr_1_reg_371.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inp_sumRow_address0 =  (sc_lv<4>) (zext_ln86_fu_199_p1.read());
    } else {
        inp_sumRow_address0 = "XXXX";
    }
}

void Softmax_layer::thread_inp_sumRow_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        inp_sumRow_ce0 = ap_const_logic_1;
    } else {
        inp_sumRow_ce0 = ap_const_logic_0;
    }
}

void Softmax_layer::thread_inp_sumRow_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        inp_sumRow_d0 = v46_reg_395.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inp_sumRow_d0 = ap_const_lv32_0;
    } else {
        inp_sumRow_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Softmax_layer::thread_inp_sumRow_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln85_fu_187_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        inp_sumRow_we0 = ap_const_logic_1;
    } else {
        inp_sumRow_we0 = ap_const_logic_0;
    }
}

void Softmax_layer::thread_j4_fu_257_p2() {
    j4_fu_257_p2 = (!j4_0_reg_128.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j4_0_reg_128.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Softmax_layer::thread_j5_fu_330_p2() {
    j5_fu_330_p2 = (!j5_0_reg_151.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j5_0_reg_151.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Softmax_layer::thread_sext_ln101_fu_345_p1() {
    sext_ln101_fu_345_p1 = esl_sext<64,9>(add_ln101_fu_340_p2.read());
}

void Softmax_layer::thread_sext_ln90_fu_272_p1() {
    sext_ln90_fu_272_p1 = esl_sext<64,9>(add_ln90_fu_267_p2.read());
}

void Softmax_layer::thread_sub_ln101_fu_318_p2() {
    sub_ln101_fu_318_p2 = (!zext_ln101_1_fu_302_p1.read().is_01() || !zext_ln101_2_fu_314_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln101_1_fu_302_p1.read()) - sc_biguint<9>(zext_ln101_2_fu_314_p1.read()));
}

void Softmax_layer::thread_sub_ln90_fu_245_p2() {
    sub_ln90_fu_245_p2 = (!zext_ln90_1_fu_229_p1.read().is_01() || !zext_ln90_2_fu_241_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln90_1_fu_229_p1.read()) - sc_biguint<9>(zext_ln90_2_fu_241_p1.read()));
}

void Softmax_layer::thread_tmp_15_fu_221_p3() {
    tmp_15_fu_221_p3 = esl_concat<4,4>(i4_0_reg_117.read(), ap_const_lv4_0);
}

void Softmax_layer::thread_tmp_16_fu_233_p3() {
    tmp_16_fu_233_p3 = esl_concat<4,2>(i4_0_reg_117.read(), ap_const_lv2_0);
}

void Softmax_layer::thread_tmp_17_fu_294_p3() {
    tmp_17_fu_294_p3 = esl_concat<4,4>(i5_0_reg_139.read(), ap_const_lv4_0);
}

void Softmax_layer::thread_tmp_18_fu_306_p3() {
    tmp_18_fu_306_p3 = esl_concat<4,2>(i5_0_reg_139.read(), ap_const_lv2_0);
}

void Softmax_layer::thread_v36_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        v36_address0 =  (sc_lv<8>) (sext_ln101_fu_345_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        v36_address0 = v36_addr_reg_384.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v36_address0 =  (sc_lv<8>) (sext_ln90_fu_272_p1.read());
    } else {
        v36_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void Softmax_layer::thread_v36_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        v36_ce0 = ap_const_logic_1;
    } else {
        v36_ce0 = ap_const_logic_0;
    }
}

void Softmax_layer::thread_v36_d0() {
    v36_d0 = v43_reg_389.read();
}

void Softmax_layer::thread_v36_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        v36_we0 = ap_const_logic_1;
    } else {
        v36_we0 = ap_const_logic_0;
    }
}

void Softmax_layer::thread_v37_address0() {
    v37_address0 =  (sc_lv<8>) (sext_ln101_reg_426.read());
}

void Softmax_layer::thread_v37_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        v37_ce0 = ap_const_logic_1;
    } else {
        v37_ce0 = ap_const_logic_0;
    }
}

void Softmax_layer::thread_v37_d0() {
    v37_d0 = v51_reg_436.read();
}

void Softmax_layer::thread_v37_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        v37_we0 = ap_const_logic_1;
    } else {
        v37_we0 = ap_const_logic_0;
    }
}

void Softmax_layer::thread_v39_fu_193_p2() {
    v39_fu_193_p2 = (!v39_0_reg_106.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(v39_0_reg_106.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Softmax_layer::thread_zext_ln101_1_fu_302_p1() {
    zext_ln101_1_fu_302_p1 = esl_zext<9,8>(tmp_17_fu_294_p3.read());
}

void Softmax_layer::thread_zext_ln101_2_fu_314_p1() {
    zext_ln101_2_fu_314_p1 = esl_zext<9,6>(tmp_18_fu_306_p3.read());
}

void Softmax_layer::thread_zext_ln101_3_fu_336_p1() {
    zext_ln101_3_fu_336_p1 = esl_zext<9,4>(j5_0_reg_151.read());
}

void Softmax_layer::thread_zext_ln101_fu_289_p1() {
    zext_ln101_fu_289_p1 = esl_zext<64,4>(i5_0_reg_139.read());
}

void Softmax_layer::thread_zext_ln86_fu_199_p1() {
    zext_ln86_fu_199_p1 = esl_zext<64,4>(v39_0_reg_106.read());
}

void Softmax_layer::thread_zext_ln90_1_fu_229_p1() {
    zext_ln90_1_fu_229_p1 = esl_zext<9,8>(tmp_15_fu_221_p3.read());
}

void Softmax_layer::thread_zext_ln90_2_fu_241_p1() {
    zext_ln90_2_fu_241_p1 = esl_zext<9,6>(tmp_16_fu_233_p3.read());
}

void Softmax_layer::thread_zext_ln90_3_fu_263_p1() {
    zext_ln90_3_fu_263_p1 = esl_zext<9,4>(j4_0_reg_128.read());
}

void Softmax_layer::thread_zext_ln90_fu_216_p1() {
    zext_ln90_fu_216_p1 = esl_zext<64,4>(i4_0_reg_117.read());
}

void Softmax_layer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln85_fu_187_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln88_fu_204_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln89_fu_251_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(icmp_ln99_fu_277_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(icmp_ln100_fu_324_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<41>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

