// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_exp_sum_i4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v78_address0,
        v78_ce0,
        v78_we0,
        v78_d0,
        v78_q0,
        v78_address1,
        v78_ce1,
        v78_we1,
        v78_d1,
        v78_q1,
        inp_sumRow_address0,
        inp_sumRow_ce0,
        inp_sumRow_we0,
        inp_sumRow_d0,
        inp_sumRow_address1,
        inp_sumRow_ce1,
        inp_sumRow_q1,
        grp_fu_267_p_din0,
        grp_fu_267_p_din1,
        grp_fu_267_p_opcode,
        grp_fu_267_p_dout0,
        grp_fu_267_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 12'd1;
parameter    ap_ST_fsm_pp0_stage1 = 12'd2;
parameter    ap_ST_fsm_pp0_stage2 = 12'd4;
parameter    ap_ST_fsm_pp0_stage3 = 12'd8;
parameter    ap_ST_fsm_pp0_stage4 = 12'd16;
parameter    ap_ST_fsm_pp0_stage5 = 12'd32;
parameter    ap_ST_fsm_pp0_stage6 = 12'd64;
parameter    ap_ST_fsm_pp0_stage7 = 12'd128;
parameter    ap_ST_fsm_pp0_stage8 = 12'd256;
parameter    ap_ST_fsm_pp0_stage9 = 12'd512;
parameter    ap_ST_fsm_pp0_stage10 = 12'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] v78_address0;
output   v78_ce0;
output   v78_we0;
output  [31:0] v78_d0;
input  [31:0] v78_q0;
output  [7:0] v78_address1;
output   v78_ce1;
output   v78_we1;
output  [31:0] v78_d1;
input  [31:0] v78_q1;
output  [3:0] inp_sumRow_address0;
output   inp_sumRow_ce0;
output   inp_sumRow_we0;
output  [31:0] inp_sumRow_d0;
output  [3:0] inp_sumRow_address1;
output   inp_sumRow_ce1;
input  [31:0] inp_sumRow_q1;
output  [31:0] grp_fu_267_p_din0;
output  [31:0] grp_fu_267_p_din1;
output  [0:0] grp_fu_267_p_opcode;
input  [31:0] grp_fu_267_p_dout0;
output   grp_fu_267_p_ce;

reg ap_idle;
reg[7:0] v78_address0;
reg v78_ce0;
reg v78_we0;
reg[31:0] v78_d0;
reg[7:0] v78_address1;
reg v78_ce1;
reg v78_we1;
reg[31:0] v78_d1;
reg inp_sumRow_ce0;
reg inp_sumRow_we0;
reg inp_sumRow_ce1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state24_pp0_stage11_iter1;
wire    ap_block_state36_pp0_stage11_iter2;
wire    ap_block_state48_pp0_stage11_iter3;
wire    ap_block_state60_pp0_stage11_iter4;
wire    ap_block_state72_pp0_stage11_iter5;
wire    ap_block_pp0_stage11_subdone;
reg   [0:0] icmp_ln88_reg_400;
reg    ap_condition_exit_pp0_iter0_stage11;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_195;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state17_pp0_stage4_iter1;
wire    ap_block_state29_pp0_stage4_iter2;
wire    ap_block_state41_pp0_stage4_iter3;
wire    ap_block_state53_pp0_stage4_iter4;
wire    ap_block_state65_pp0_stage4_iter5;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state22_pp0_stage9_iter1;
wire    ap_block_state34_pp0_stage9_iter2;
wire    ap_block_state46_pp0_stage9_iter3;
wire    ap_block_state58_pp0_stage9_iter4;
wire    ap_block_state70_pp0_stage9_iter5;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] reg_200;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_block_state27_pp0_stage2_iter2;
wire    ap_block_state39_pp0_stage2_iter3;
wire    ap_block_state51_pp0_stage2_iter4;
wire    ap_block_state63_pp0_stage2_iter5;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state20_pp0_stage7_iter1;
wire    ap_block_state32_pp0_stage7_iter2;
wire    ap_block_state44_pp0_stage7_iter3;
wire    ap_block_state56_pp0_stage7_iter4;
wire    ap_block_state68_pp0_stage7_iter5;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] reg_205;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_state25_pp0_stage0_iter2;
wire    ap_block_state37_pp0_stage0_iter3;
wire    ap_block_state49_pp0_stage0_iter4;
wire    ap_block_state61_pp0_stage0_iter5;
wire    ap_block_state73_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state18_pp0_stage5_iter1;
wire    ap_block_state30_pp0_stage5_iter2;
wire    ap_block_state42_pp0_stage5_iter3;
wire    ap_block_state54_pp0_stage5_iter4;
wire    ap_block_state66_pp0_stage5_iter5;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage11_11001;
reg   [31:0] reg_211;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state23_pp0_stage10_iter1;
wire    ap_block_state35_pp0_stage10_iter2;
wire    ap_block_state47_pp0_stage10_iter3;
wire    ap_block_state59_pp0_stage10_iter4;
wire    ap_block_state71_pp0_stage10_iter5;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_block_state28_pp0_stage3_iter2;
wire    ap_block_state40_pp0_stage3_iter3;
wire    ap_block_state52_pp0_stage3_iter4;
wire    ap_block_state64_pp0_stage3_iter5;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] reg_216;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state21_pp0_stage8_iter1;
wire    ap_block_state33_pp0_stage8_iter2;
wire    ap_block_state45_pp0_stage8_iter3;
wire    ap_block_state57_pp0_stage8_iter4;
wire    ap_block_state69_pp0_stage8_iter5;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_state26_pp0_stage1_iter2;
wire    ap_block_state38_pp0_stage1_iter3;
wire    ap_block_state50_pp0_stage1_iter4;
wire    ap_block_state62_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln88_fu_229_p2;
reg   [0:0] icmp_ln88_reg_400_pp0_iter1_reg;
reg   [0:0] icmp_ln88_reg_400_pp0_iter2_reg;
reg   [0:0] icmp_ln88_reg_400_pp0_iter3_reg;
reg   [0:0] icmp_ln88_reg_400_pp0_iter4_reg;
wire   [7:0] sub_ln90_fu_266_p2;
reg   [7:0] sub_ln90_reg_404;
reg   [7:0] v78_addr_3_reg_418;
reg   [7:0] v78_addr_3_reg_418_pp0_iter1_reg;
reg   [7:0] v78_addr_4_reg_423;
reg   [7:0] v78_addr_4_reg_423_pp0_iter1_reg;
reg   [3:0] inp_sumRow_addr_reg_428;
reg   [3:0] inp_sumRow_addr_reg_428_pp0_iter1_reg;
reg   [3:0] inp_sumRow_addr_reg_428_pp0_iter2_reg;
reg   [3:0] inp_sumRow_addr_reg_428_pp0_iter3_reg;
reg   [3:0] inp_sumRow_addr_reg_428_pp0_iter4_reg;
reg   [3:0] inp_sumRow_addr_reg_428_pp0_iter5_reg;
reg   [7:0] v78_addr_5_reg_434;
reg   [7:0] v78_addr_5_reg_434_pp0_iter1_reg;
reg   [7:0] v78_addr_6_reg_439;
reg   [7:0] v78_addr_6_reg_439_pp0_iter1_reg;
reg   [31:0] inp_sumRow_load_reg_444;
reg   [31:0] v78_load_1_reg_449;
reg   [31:0] v78_load_2_reg_454;
reg   [7:0] v78_addr_7_reg_459;
reg   [7:0] v78_addr_7_reg_459_pp0_iter1_reg;
reg   [7:0] v78_addr_8_reg_464;
reg   [7:0] v78_addr_8_reg_464_pp0_iter1_reg;
reg   [31:0] v78_load_3_reg_469;
reg   [31:0] v78_load_4_reg_474;
reg   [7:0] v78_addr_9_reg_479;
reg   [7:0] v78_addr_9_reg_479_pp0_iter1_reg;
reg   [7:0] v78_addr_10_reg_484;
reg   [7:0] v78_addr_10_reg_484_pp0_iter1_reg;
reg   [31:0] v78_load_5_reg_489;
reg   [31:0] v78_load_6_reg_494;
reg   [7:0] v78_addr_11_reg_499;
reg   [7:0] v78_addr_11_reg_499_pp0_iter1_reg;
reg   [7:0] v78_addr_reg_504;
reg   [7:0] v78_addr_reg_504_pp0_iter1_reg;
reg   [31:0] v78_load_7_reg_509;
reg   [31:0] v78_load_8_reg_514;
reg   [7:0] v78_addr_12_reg_519;
reg   [7:0] v78_addr_12_reg_519_pp0_iter1_reg;
reg   [7:0] v78_addr_13_reg_524;
reg   [7:0] v78_addr_13_reg_524_pp0_iter1_reg;
reg   [31:0] v78_load_9_reg_529;
reg   [31:0] v78_load_10_reg_534;
reg   [31:0] v78_load_11_reg_539;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state19_pp0_stage6_iter1;
wire    ap_block_state31_pp0_stage6_iter2;
wire    ap_block_state43_pp0_stage6_iter3;
wire    ap_block_state55_pp0_stage6_iter4;
wire    ap_block_state67_pp0_stage6_iter5;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] v78_load_reg_544;
wire   [31:0] grp_fu_190_p2;
reg   [31:0] v3_reg_549;
reg   [31:0] v43_1_reg_555;
reg   [31:0] v43_2_reg_561;
reg   [31:0] v43_3_reg_567;
reg   [31:0] v43_3_reg_567_pp0_iter2_reg;
reg   [31:0] v43_4_reg_573;
reg   [31:0] v43_4_reg_573_pp0_iter2_reg;
reg   [31:0] v43_5_reg_579;
reg   [31:0] v43_5_reg_579_pp0_iter2_reg;
reg   [31:0] v43_6_reg_585;
reg   [31:0] v43_6_reg_585_pp0_iter2_reg;
reg   [31:0] v43_6_reg_585_pp0_iter3_reg;
reg   [31:0] v43_7_reg_591;
reg   [31:0] v43_7_reg_591_pp0_iter2_reg;
reg   [31:0] v43_7_reg_591_pp0_iter3_reg;
reg   [31:0] v43_8_reg_597;
reg   [31:0] v43_8_reg_597_pp0_iter2_reg;
reg   [31:0] v43_8_reg_597_pp0_iter3_reg;
reg   [31:0] v43_9_reg_603;
reg   [31:0] v43_9_reg_603_pp0_iter2_reg;
reg   [31:0] v43_9_reg_603_pp0_iter3_reg;
reg   [31:0] v43_9_reg_603_pp0_iter4_reg;
reg   [31:0] v43_s_reg_609;
reg   [31:0] v43_s_reg_609_pp0_iter2_reg;
reg   [31:0] v43_s_reg_609_pp0_iter3_reg;
reg   [31:0] v43_s_reg_609_pp0_iter4_reg;
reg   [31:0] v43_10_reg_615;
reg   [31:0] v43_10_reg_615_pp0_iter2_reg;
reg   [31:0] v43_10_reg_615_pp0_iter3_reg;
reg   [31:0] v43_10_reg_615_pp0_iter4_reg;
reg   [31:0] v46_s_reg_621;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln90_1_fu_272_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln90_2_fu_283_p1;
wire   [63:0] i4_cast_fu_241_p1;
wire   [63:0] zext_ln90_3_fu_298_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln90_4_fu_308_p1;
wire   [63:0] zext_ln90_5_fu_318_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln90_6_fu_328_p1;
wire   [63:0] zext_ln90_7_fu_338_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln90_8_fu_348_p1;
wire   [63:0] zext_ln90_9_fu_358_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln90_10_fu_368_p1;
wire   [63:0] zext_ln90_11_fu_378_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln90_12_fu_388_p1;
reg   [3:0] i4_fu_60;
wire   [3:0] add_ln88_fu_235_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i4_1;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
reg   [31:0] grp_fu_186_p0;
reg   [31:0] grp_fu_186_p1;
reg   [31:0] grp_fu_190_p1;
wire   [5:0] tmp_27_fu_254_p3;
wire   [7:0] tmp_s_fu_246_p3;
wire   [7:0] zext_ln90_fu_262_p1;
wire   [7:0] or_ln90_fu_277_p2;
wire   [7:0] or_ln90_1_fu_293_p2;
wire   [7:0] or_ln90_2_fu_303_p2;
wire   [7:0] add_ln90_fu_313_p2;
wire   [7:0] add_ln90_1_fu_323_p2;
wire   [7:0] add_ln90_2_fu_333_p2;
wire   [7:0] add_ln90_3_fu_343_p2;
wire   [7:0] add_ln90_4_fu_353_p2;
wire   [7:0] add_ln90_5_fu_363_p2;
wire   [7:0] add_ln90_6_fu_373_p2;
wire   [7:0] add_ln90_7_fu_383_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage11_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage7_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter5_stage0;
reg    ap_idle_pp0_0to4;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp0_1to6;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_fexp_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_10_full_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_190_p1),
    .ce(1'b1),
    .dout(grp_fu_190_p2)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage11),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage11)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln88_fu_229_p2 == 1'd0))) begin
            i4_fu_60 <= add_ln88_fu_235_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i4_fu_60 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln88_reg_400 <= icmp_ln88_fu_229_p2;
        icmp_ln88_reg_400_pp0_iter1_reg <= icmp_ln88_reg_400;
        icmp_ln88_reg_400_pp0_iter2_reg <= icmp_ln88_reg_400_pp0_iter1_reg;
        icmp_ln88_reg_400_pp0_iter3_reg <= icmp_ln88_reg_400_pp0_iter2_reg;
        icmp_ln88_reg_400_pp0_iter4_reg <= icmp_ln88_reg_400_pp0_iter3_reg;
        inp_sumRow_addr_reg_428_pp0_iter1_reg <= inp_sumRow_addr_reg_428;
        inp_sumRow_addr_reg_428_pp0_iter2_reg <= inp_sumRow_addr_reg_428_pp0_iter1_reg;
        inp_sumRow_addr_reg_428_pp0_iter3_reg <= inp_sumRow_addr_reg_428_pp0_iter2_reg;
        inp_sumRow_addr_reg_428_pp0_iter4_reg <= inp_sumRow_addr_reg_428_pp0_iter3_reg;
        inp_sumRow_addr_reg_428_pp0_iter5_reg <= inp_sumRow_addr_reg_428_pp0_iter4_reg;
        v78_addr_3_reg_418_pp0_iter1_reg[7 : 2] <= v78_addr_3_reg_418[7 : 2];
        v78_addr_4_reg_423_pp0_iter1_reg[7 : 2] <= v78_addr_4_reg_423[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_fu_229_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_sumRow_addr_reg_428 <= i4_cast_fu_241_p1;
        sub_ln90_reg_404[7 : 2] <= sub_ln90_fu_266_p2[7 : 2];
        v78_addr_3_reg_418[7 : 2] <= zext_ln90_1_fu_272_p1[7 : 2];
        v78_addr_4_reg_423[7 : 2] <= zext_ln90_2_fu_283_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inp_sumRow_load_reg_444 <= inp_sumRow_q1;
        v78_load_1_reg_449 <= v78_q1;
        v78_load_2_reg_454 <= v78_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_195 <= grp_fu_267_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_200 <= grp_fu_267_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_205 <= grp_fu_267_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)))) begin
        reg_211 <= grp_fu_267_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_216 <= grp_fu_267_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v3_reg_549 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v43_10_reg_615 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v43_10_reg_615_pp0_iter2_reg <= v43_10_reg_615;
        v43_10_reg_615_pp0_iter3_reg <= v43_10_reg_615_pp0_iter2_reg;
        v43_10_reg_615_pp0_iter4_reg <= v43_10_reg_615_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v43_1_reg_555 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v43_2_reg_561 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v43_3_reg_567 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v43_3_reg_567_pp0_iter2_reg <= v43_3_reg_567;
        v78_addr_7_reg_459_pp0_iter1_reg[7 : 2] <= v78_addr_7_reg_459[7 : 2];
        v78_addr_8_reg_464_pp0_iter1_reg[7 : 2] <= v78_addr_8_reg_464[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v43_4_reg_573 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v43_4_reg_573_pp0_iter2_reg <= v43_4_reg_573;
        v78_addr_10_reg_484_pp0_iter1_reg[7 : 2] <= v78_addr_10_reg_484[7 : 2];
        v78_addr_9_reg_479_pp0_iter1_reg[7 : 2] <= v78_addr_9_reg_479[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v43_5_reg_579 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v43_5_reg_579_pp0_iter2_reg <= v43_5_reg_579;
        v78_addr_11_reg_499_pp0_iter1_reg[7 : 2] <= v78_addr_11_reg_499[7 : 2];
        v78_addr_reg_504_pp0_iter1_reg[7 : 2] <= v78_addr_reg_504[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v43_6_reg_585 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v43_6_reg_585_pp0_iter2_reg <= v43_6_reg_585;
        v43_6_reg_585_pp0_iter3_reg <= v43_6_reg_585_pp0_iter2_reg;
        v78_addr_12_reg_519_pp0_iter1_reg[7 : 2] <= v78_addr_12_reg_519[7 : 2];
        v78_addr_13_reg_524_pp0_iter1_reg[7 : 2] <= v78_addr_13_reg_524[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v43_7_reg_591 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v43_7_reg_591_pp0_iter2_reg <= v43_7_reg_591;
        v43_7_reg_591_pp0_iter3_reg <= v43_7_reg_591_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        v43_8_reg_597 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        v43_8_reg_597_pp0_iter2_reg <= v43_8_reg_597;
        v43_8_reg_597_pp0_iter3_reg <= v43_8_reg_597_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v43_9_reg_603 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v43_9_reg_603_pp0_iter2_reg <= v43_9_reg_603;
        v43_9_reg_603_pp0_iter3_reg <= v43_9_reg_603_pp0_iter2_reg;
        v43_9_reg_603_pp0_iter4_reg <= v43_9_reg_603_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v43_s_reg_609 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v43_s_reg_609_pp0_iter2_reg <= v43_s_reg_609;
        v43_s_reg_609_pp0_iter3_reg <= v43_s_reg_609_pp0_iter2_reg;
        v43_s_reg_609_pp0_iter4_reg <= v43_s_reg_609_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v46_s_reg_621 <= grp_fu_267_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v78_addr_10_reg_484[7 : 2] <= zext_ln90_8_fu_348_p1[7 : 2];
        v78_addr_9_reg_479[7 : 2] <= zext_ln90_7_fu_338_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v78_addr_11_reg_499[7 : 2] <= zext_ln90_9_fu_358_p1[7 : 2];
        v78_addr_reg_504[7 : 2] <= zext_ln90_10_fu_368_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v78_addr_12_reg_519[7 : 2] <= zext_ln90_11_fu_378_p1[7 : 2];
        v78_addr_13_reg_524[7 : 2] <= zext_ln90_12_fu_388_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v78_addr_5_reg_434[7 : 2] <= zext_ln90_3_fu_298_p1[7 : 2];
        v78_addr_6_reg_439[7 : 2] <= zext_ln90_4_fu_308_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v78_addr_5_reg_434_pp0_iter1_reg[7 : 2] <= v78_addr_5_reg_434[7 : 2];
        v78_addr_6_reg_439_pp0_iter1_reg[7 : 2] <= v78_addr_6_reg_439[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v78_addr_7_reg_459[7 : 2] <= zext_ln90_5_fu_318_p1[7 : 2];
        v78_addr_8_reg_464[7 : 2] <= zext_ln90_6_fu_328_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v78_load_10_reg_534 <= v78_q0;
        v78_load_9_reg_529 <= v78_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v78_load_11_reg_539 <= v78_q1;
        v78_load_reg_544 <= v78_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v78_load_3_reg_469 <= v78_q1;
        v78_load_4_reg_474 <= v78_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v78_load_5_reg_489 <= v78_q1;
        v78_load_6_reg_494 <= v78_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_reg_400 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v78_load_7_reg_509 <= v78_q1;
        v78_load_8_reg_514 <= v78_q0;
    end
end

always @ (*) begin
    if (((icmp_ln88_reg_400 == 1'd1) & (1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_condition_exit_pp0_iter0_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln88_reg_400_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to6 = 1'b1;
    end else begin
        ap_idle_pp0_1to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i4_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_i4_1 = i4_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_186_p0 = v46_s_reg_621;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_186_p0 = reg_216;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_186_p0 = reg_211;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_186_p0 = reg_205;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_186_p0 = reg_200;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_186_p0 = reg_195;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_186_p0 = inp_sumRow_load_reg_444;
    end else begin
        grp_fu_186_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_186_p1 = v43_10_reg_615_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_186_p1 = v43_s_reg_609_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_186_p1 = v43_9_reg_603_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_186_p1 = v43_8_reg_597_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_186_p1 = v43_7_reg_591_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_186_p1 = v43_6_reg_585_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_186_p1 = v43_5_reg_579_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_186_p1 = v43_4_reg_573_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_186_p1 = v43_3_reg_567_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_186_p1 = v43_2_reg_561;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_186_p1 = v43_1_reg_555;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_186_p1 = v3_reg_549;
    end else begin
        grp_fu_186_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_190_p1 = v78_load_reg_544;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_190_p1 = v78_load_11_reg_539;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_190_p1 = v78_load_10_reg_534;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_190_p1 = v78_load_9_reg_529;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_190_p1 = v78_load_8_reg_514;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_190_p1 = v78_load_7_reg_509;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_190_p1 = v78_load_6_reg_494;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_190_p1 = v78_load_5_reg_489;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_190_p1 = v78_load_4_reg_474;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_190_p1 = v78_load_3_reg_469;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_190_p1 = v78_load_2_reg_454;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_190_p1 = v78_load_1_reg_449;
    end else begin
        grp_fu_190_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_sumRow_ce1 = 1'b1;
    end else begin
        inp_sumRow_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_sumRow_we0 = 1'b1;
    end else begin
        inp_sumRow_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v78_address0 = v78_addr_13_reg_524_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v78_address0 = v78_addr_reg_504_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v78_address0 = v78_addr_10_reg_484_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v78_address0 = v78_addr_8_reg_464_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        v78_address0 = v78_addr_6_reg_439_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v78_address0 = v78_addr_4_reg_423_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v78_address0 = zext_ln90_12_fu_388_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v78_address0 = zext_ln90_10_fu_368_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v78_address0 = zext_ln90_8_fu_348_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v78_address0 = zext_ln90_6_fu_328_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v78_address0 = zext_ln90_4_fu_308_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v78_address0 = zext_ln90_2_fu_283_p1;
    end else begin
        v78_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        v78_address1 = v78_addr_12_reg_519_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        v78_address1 = v78_addr_11_reg_499_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        v78_address1 = v78_addr_9_reg_479_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v78_address1 = v78_addr_7_reg_459_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        v78_address1 = v78_addr_5_reg_434_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        v78_address1 = v78_addr_3_reg_418_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        v78_address1 = zext_ln90_11_fu_378_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        v78_address1 = zext_ln90_9_fu_358_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v78_address1 = zext_ln90_7_fu_338_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v78_address1 = zext_ln90_5_fu_318_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v78_address1 = zext_ln90_3_fu_298_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v78_address1 = zext_ln90_1_fu_272_p1;
    end else begin
        v78_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        v78_ce0 = 1'b1;
    end else begin
        v78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        v78_ce1 = 1'b1;
    end else begin
        v78_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            v78_d0 = v43_10_reg_615;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            v78_d0 = v43_9_reg_603;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            v78_d0 = v43_7_reg_591;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            v78_d0 = v43_5_reg_579;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            v78_d0 = v43_3_reg_567;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            v78_d0 = v43_1_reg_555;
        end else begin
            v78_d0 = 'bx;
        end
    end else begin
        v78_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            v78_d1 = v43_s_reg_609;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            v78_d1 = v43_8_reg_597;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            v78_d1 = v43_6_reg_585;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            v78_d1 = v43_4_reg_573;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            v78_d1 = v43_2_reg_561;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            v78_d1 = v3_reg_549;
        end else begin
            v78_d1 = 'bx;
        end
    end else begin
        v78_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        v78_we0 = 1'b1;
    end else begin
        v78_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        v78_we1 = 1'b1;
    end else begin
        v78_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to4 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter5_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to6 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln88_fu_235_p2 = (ap_sig_allocacmp_i4_1 + 4'd1);

assign add_ln90_1_fu_323_p2 = (sub_ln90_reg_404 + 8'd5);

assign add_ln90_2_fu_333_p2 = (sub_ln90_reg_404 + 8'd6);

assign add_ln90_3_fu_343_p2 = (sub_ln90_reg_404 + 8'd7);

assign add_ln90_4_fu_353_p2 = (sub_ln90_reg_404 + 8'd8);

assign add_ln90_5_fu_363_p2 = (sub_ln90_reg_404 + 8'd9);

assign add_ln90_6_fu_373_p2 = (sub_ln90_reg_404 + 8'd10);

assign add_ln90_7_fu_383_p2 = (sub_ln90_reg_404 + 8'd11);

assign add_ln90_fu_313_p2 = (sub_ln90_reg_404 + 8'd4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage11;

assign grp_fu_267_p_ce = 1'b1;

assign grp_fu_267_p_din0 = grp_fu_186_p0;

assign grp_fu_267_p_din1 = grp_fu_186_p1;

assign grp_fu_267_p_opcode = 2'd0;

assign i4_cast_fu_241_p1 = ap_sig_allocacmp_i4_1;

assign icmp_ln88_fu_229_p2 = ((ap_sig_allocacmp_i4_1 == 4'd12) ? 1'b1 : 1'b0);

assign inp_sumRow_address0 = inp_sumRow_addr_reg_428_pp0_iter5_reg;

assign inp_sumRow_address1 = i4_cast_fu_241_p1;

assign inp_sumRow_d0 = reg_205;

assign or_ln90_1_fu_293_p2 = (sub_ln90_reg_404 | 8'd2);

assign or_ln90_2_fu_303_p2 = (sub_ln90_reg_404 | 8'd3);

assign or_ln90_fu_277_p2 = (sub_ln90_fu_266_p2 | 8'd1);

assign sub_ln90_fu_266_p2 = (tmp_s_fu_246_p3 - zext_ln90_fu_262_p1);

assign tmp_27_fu_254_p3 = {{ap_sig_allocacmp_i4_1}, {2'd0}};

assign tmp_s_fu_246_p3 = {{ap_sig_allocacmp_i4_1}, {4'd0}};

assign zext_ln90_10_fu_368_p1 = add_ln90_5_fu_363_p2;

assign zext_ln90_11_fu_378_p1 = add_ln90_6_fu_373_p2;

assign zext_ln90_12_fu_388_p1 = add_ln90_7_fu_383_p2;

assign zext_ln90_1_fu_272_p1 = sub_ln90_fu_266_p2;

assign zext_ln90_2_fu_283_p1 = or_ln90_fu_277_p2;

assign zext_ln90_3_fu_298_p1 = or_ln90_1_fu_293_p2;

assign zext_ln90_4_fu_308_p1 = or_ln90_2_fu_303_p2;

assign zext_ln90_5_fu_318_p1 = add_ln90_fu_313_p2;

assign zext_ln90_6_fu_328_p1 = add_ln90_1_fu_323_p2;

assign zext_ln90_7_fu_338_p1 = add_ln90_2_fu_333_p2;

assign zext_ln90_8_fu_348_p1 = add_ln90_3_fu_343_p2;

assign zext_ln90_9_fu_358_p1 = add_ln90_4_fu_353_p2;

assign zext_ln90_fu_262_p1 = tmp_27_fu_254_p3;

always @ (posedge ap_clk) begin
    sub_ln90_reg_404[1:0] <= 2'b00;
    v78_addr_3_reg_418[1:0] <= 2'b00;
    v78_addr_3_reg_418_pp0_iter1_reg[1:0] <= 2'b00;
    v78_addr_4_reg_423[1:0] <= 2'b01;
    v78_addr_4_reg_423_pp0_iter1_reg[1:0] <= 2'b01;
    v78_addr_5_reg_434[1:0] <= 2'b10;
    v78_addr_5_reg_434_pp0_iter1_reg[1:0] <= 2'b10;
    v78_addr_6_reg_439[1:0] <= 2'b11;
    v78_addr_6_reg_439_pp0_iter1_reg[1:0] <= 2'b11;
    v78_addr_7_reg_459[1:0] <= 2'b00;
    v78_addr_7_reg_459_pp0_iter1_reg[1:0] <= 2'b00;
    v78_addr_8_reg_464[1:0] <= 2'b01;
    v78_addr_8_reg_464_pp0_iter1_reg[1:0] <= 2'b01;
    v78_addr_9_reg_479[1:0] <= 2'b10;
    v78_addr_9_reg_479_pp0_iter1_reg[1:0] <= 2'b10;
    v78_addr_10_reg_484[1:0] <= 2'b11;
    v78_addr_10_reg_484_pp0_iter1_reg[1:0] <= 2'b11;
    v78_addr_11_reg_499[1:0] <= 2'b00;
    v78_addr_11_reg_499_pp0_iter1_reg[1:0] <= 2'b00;
    v78_addr_reg_504[1:0] <= 2'b01;
    v78_addr_reg_504_pp0_iter1_reg[1:0] <= 2'b01;
    v78_addr_12_reg_519[1:0] <= 2'b10;
    v78_addr_12_reg_519_pp0_iter1_reg[1:0] <= 2'b10;
    v78_addr_13_reg_524[1:0] <= 2'b11;
    v78_addr_13_reg_524_pp0_iter1_reg[1:0] <= 2'b11;
end

endmodule //Bert_layer_Self_attention_Pipeline_l_exp_sum_i4
