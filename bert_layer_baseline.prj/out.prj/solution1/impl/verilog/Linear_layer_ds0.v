// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Linear_layer_ds0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v84_address0,
        v84_ce0,
        v84_q0,
        v85_address0,
        v85_ce0,
        v85_q0,
        v86_address0,
        v86_ce0,
        v86_q0,
        v87_address0,
        v87_ce0,
        v87_we0,
        v87_d0,
        v87_q0
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v84_address0;
output   v84_ce0;
input  [31:0] v84_q0;
output  [19:0] v85_address0;
output   v85_ce0;
input  [31:0] v85_q0;
output  [9:0] v86_address0;
output   v86_ce0;
input  [31:0] v86_q0;
output  [13:0] v87_address0;
output   v87_ce0;
output   v87_we0;
output  [31:0] v87_d0;
input  [31:0] v87_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v84_ce0;
reg v85_ce0;
reg v86_ce0;
reg[13:0] v87_address0;
reg v87_ce0;
reg v87_we0;
reg[31:0] v87_d0;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_209;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_201_p2;
reg   [31:0] reg_214;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state27;
wire   [3:0] v88_fu_225_p2;
reg   [3:0] v88_reg_500;
wire    ap_CS_fsm_state2;
wire   [14:0] sub_ln176_fu_255_p2;
reg   [14:0] sub_ln176_reg_505;
wire   [0:0] icmp_ln174_fu_219_p2;
wire   [9:0] v89_fu_267_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] i9_fu_293_p2;
reg   [3:0] i9_reg_521;
wire    ap_CS_fsm_state4;
wire   [14:0] sub_ln182_fu_323_p2;
reg   [14:0] sub_ln182_reg_526;
wire   [0:0] icmp_ln179_fu_287_p2;
wire   [9:0] j9_fu_335_p2;
reg   [9:0] j9_reg_535;
wire    ap_CS_fsm_state5;
wire   [20:0] sub_ln183_fu_369_p2;
reg   [20:0] sub_ln183_reg_540;
wire   [0:0] icmp_ln180_fu_329_p2;
reg   [13:0] v87_addr_1_reg_545;
wire   [9:0] k3_fu_391_p2;
reg   [9:0] k3_reg_553;
wire    ap_CS_fsm_state6;
wire   [14:0] add_ln182_fu_405_p2;
reg   [14:0] add_ln182_reg_558;
wire   [0:0] icmp_ln181_fu_385_p2;
wire    ap_CS_fsm_state8;
reg   [31:0] v93_reg_573;
wire    ap_CS_fsm_state9;
reg   [31:0] v94_reg_578;
wire   [31:0] grp_fu_205_p2;
reg   [31:0] v95_reg_583;
wire   [3:0] i10_fu_430_p2;
reg   [3:0] i10_reg_591;
wire    ap_CS_fsm_state20;
wire   [14:0] sub_ln194_fu_460_p2;
reg   [14:0] sub_ln194_reg_596;
wire   [0:0] icmp_ln191_fu_424_p2;
wire   [9:0] j10_fu_472_p2;
reg   [9:0] j10_reg_604;
wire    ap_CS_fsm_state21;
reg   [13:0] v87_addr_2_reg_609;
wire   [0:0] icmp_ln192_fu_466_p2;
reg   [31:0] v100_reg_619;
reg   [3:0] v88_0_reg_124;
wire   [0:0] icmp_ln175_fu_261_p2;
reg   [9:0] v89_0_reg_135;
reg   [3:0] i9_0_reg_146;
reg   [9:0] j9_0_reg_157;
reg   [9:0] k3_0_reg_168;
wire    ap_CS_fsm_state19;
reg   [3:0] i10_0_reg_179;
reg   [9:0] j10_0_reg_190;
wire    ap_CS_fsm_state28;
wire  signed [63:0] sext_ln176_fu_282_p1;
wire  signed [63:0] sext_ln185_fu_380_p1;
wire  signed [63:0] sext_ln183_fu_415_p1;
wire  signed [63:0] sext_ln182_fu_420_p1;
wire  signed [63:0] sext_ln194_fu_492_p1;
wire   [63:0] zext_ln193_fu_478_p1;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state7;
reg   [31:0] grp_fu_201_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state10;
wire   [13:0] tmp_52_fu_231_p3;
wire   [11:0] tmp_53_fu_243_p3;
wire   [14:0] zext_ln176_fu_239_p1;
wire   [14:0] zext_ln176_1_fu_251_p1;
wire   [14:0] zext_ln176_2_fu_273_p1;
wire   [14:0] add_ln176_fu_277_p2;
wire   [13:0] tmp_54_fu_299_p3;
wire   [11:0] tmp_55_fu_311_p3;
wire   [14:0] zext_ln182_fu_307_p1;
wire   [14:0] zext_ln182_1_fu_319_p1;
wire   [19:0] tmp_58_fu_345_p3;
wire   [17:0] tmp_59_fu_357_p3;
wire   [20:0] zext_ln183_1_fu_353_p1;
wire   [20:0] zext_ln183_2_fu_365_p1;
wire   [14:0] zext_ln183_fu_341_p1;
wire   [14:0] add_ln185_fu_375_p2;
wire   [14:0] zext_ln182_3_fu_401_p1;
wire   [20:0] zext_ln182_2_fu_397_p1;
wire   [20:0] add_ln183_fu_410_p2;
wire   [13:0] tmp_56_fu_436_p3;
wire   [11:0] tmp_57_fu_448_p3;
wire   [14:0] zext_ln194_fu_444_p1;
wire   [14:0] zext_ln194_1_fu_456_p1;
wire   [14:0] zext_ln194_2_fu_483_p1;
wire   [14:0] add_ln194_fu_487_p2;
reg   [27:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
end

Bert_layer_fadd_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fadd_3bkb_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_209),
    .din1(grp_fu_201_p1),
    .ce(1'b1),
    .dout(grp_fu_201_p2)
);

Bert_layer_fmul_3cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fmul_3cud_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v93_reg_573),
    .din1(v94_reg_578),
    .ce(1'b1),
    .dout(grp_fu_205_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_287_p2 == 1'd1))) begin
        i10_0_reg_179 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln192_fu_466_p2 == 1'd1))) begin
        i10_0_reg_179 <= i10_reg_591;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln174_fu_219_p2 == 1'd1))) begin
        i9_0_reg_146 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_329_p2 == 1'd1))) begin
        i9_0_reg_146 <= i9_reg_521;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j10_0_reg_190 <= j10_reg_604;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln191_fu_424_p2 == 1'd0))) begin
        j10_0_reg_190 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln181_fu_385_p2 == 1'd1))) begin
        j9_0_reg_157 <= j9_reg_535;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_287_p2 == 1'd0))) begin
        j9_0_reg_157 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        k3_0_reg_168 <= k3_reg_553;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_329_p2 == 1'd0))) begin
        k3_0_reg_168 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln175_fu_261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        v88_0_reg_124 <= v88_reg_500;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v88_0_reg_124 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln174_fu_219_p2 == 1'd0))) begin
        v89_0_reg_135 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln175_fu_261_p2 == 1'd0))) begin
        v89_0_reg_135 <= v89_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln181_fu_385_p2 == 1'd0))) begin
        add_ln182_reg_558 <= add_ln182_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i10_reg_591 <= i10_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i9_reg_521 <= i9_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j10_reg_604 <= j10_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j9_reg_535 <= j9_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k3_reg_553 <= k3_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_209 <= v87_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_214 <= grp_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln174_fu_219_p2 == 1'd0))) begin
        sub_ln176_reg_505[14 : 8] <= sub_ln176_fu_255_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_287_p2 == 1'd0))) begin
        sub_ln182_reg_526[14 : 8] <= sub_ln182_fu_323_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_329_p2 == 1'd0))) begin
        sub_ln183_reg_540[20 : 8] <= sub_ln183_fu_369_p2[20 : 8];
        v87_addr_1_reg_545 <= sext_ln185_fu_380_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln191_fu_424_p2 == 1'd0))) begin
        sub_ln194_reg_596[14 : 8] <= sub_ln194_fu_460_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        v100_reg_619 <= v86_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln192_fu_466_p2 == 1'd0))) begin
        v87_addr_2_reg_609 <= sext_ln194_fu_492_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v88_reg_500 <= v88_fu_225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v93_reg_573 <= v84_q0;
        v94_reg_578 <= v85_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v95_reg_583 <= grp_fu_205_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state20) & (icmp_ln191_fu_424_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln191_fu_424_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_201_p1 = v100_reg_619;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_201_p1 = v95_reg_583;
    end else begin
        grp_fu_201_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v84_ce0 = 1'b1;
    end else begin
        v84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        v85_ce0 = 1'b1;
    end else begin
        v85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        v86_ce0 = 1'b1;
    end else begin
        v86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        v87_address0 = v87_addr_2_reg_609;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        v87_address0 = sext_ln194_fu_492_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state19))) begin
        v87_address0 = v87_addr_1_reg_545;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v87_address0 = sext_ln176_fu_282_p1;
    end else begin
        v87_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state3))) begin
        v87_ce0 = 1'b1;
    end else begin
        v87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19))) begin
        v87_d0 = reg_214;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v87_d0 = 32'd0;
    end else begin
        v87_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln175_fu_261_p2 == 1'd0)))) begin
        v87_we0 = 1'b1;
    end else begin
        v87_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln174_fu_219_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln175_fu_261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln179_fu_287_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln180_fu_329_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln181_fu_385_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln191_fu_424_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln192_fu_466_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln176_fu_277_p2 = (sub_ln176_reg_505 + zext_ln176_2_fu_273_p1);

assign add_ln182_fu_405_p2 = (sub_ln182_reg_526 + zext_ln182_3_fu_401_p1);

assign add_ln183_fu_410_p2 = (sub_ln183_reg_540 + zext_ln182_2_fu_397_p1);

assign add_ln185_fu_375_p2 = (sub_ln182_reg_526 + zext_ln183_fu_341_p1);

assign add_ln194_fu_487_p2 = (sub_ln194_reg_596 + zext_ln194_2_fu_483_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign i10_fu_430_p2 = (i10_0_reg_179 + 4'd1);

assign i9_fu_293_p2 = (i9_0_reg_146 + 4'd1);

assign icmp_ln174_fu_219_p2 = ((v88_0_reg_124 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_261_p2 = ((v89_0_reg_135 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_287_p2 = ((i9_0_reg_146 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_329_p2 = ((j9_0_reg_157 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln181_fu_385_p2 = ((k3_0_reg_168 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_424_p2 = ((i10_0_reg_179 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_466_p2 = ((j10_0_reg_190 == 10'd768) ? 1'b1 : 1'b0);

assign j10_fu_472_p2 = (j10_0_reg_190 + 10'd1);

assign j9_fu_335_p2 = (j9_0_reg_157 + 10'd1);

assign k3_fu_391_p2 = (k3_0_reg_168 + 10'd1);

assign sext_ln176_fu_282_p1 = $signed(add_ln176_fu_277_p2);

assign sext_ln182_fu_420_p1 = $signed(add_ln182_reg_558);

assign sext_ln183_fu_415_p1 = $signed(add_ln183_fu_410_p2);

assign sext_ln185_fu_380_p1 = $signed(add_ln185_fu_375_p2);

assign sext_ln194_fu_492_p1 = $signed(add_ln194_fu_487_p2);

assign sub_ln176_fu_255_p2 = (zext_ln176_fu_239_p1 - zext_ln176_1_fu_251_p1);

assign sub_ln182_fu_323_p2 = (zext_ln182_fu_307_p1 - zext_ln182_1_fu_319_p1);

assign sub_ln183_fu_369_p2 = (zext_ln183_1_fu_353_p1 - zext_ln183_2_fu_365_p1);

assign sub_ln194_fu_460_p2 = (zext_ln194_fu_444_p1 - zext_ln194_1_fu_456_p1);

assign tmp_52_fu_231_p3 = {{v88_0_reg_124}, {10'd0}};

assign tmp_53_fu_243_p3 = {{v88_0_reg_124}, {8'd0}};

assign tmp_54_fu_299_p3 = {{i9_0_reg_146}, {10'd0}};

assign tmp_55_fu_311_p3 = {{i9_0_reg_146}, {8'd0}};

assign tmp_56_fu_436_p3 = {{i10_0_reg_179}, {10'd0}};

assign tmp_57_fu_448_p3 = {{i10_0_reg_179}, {8'd0}};

assign tmp_58_fu_345_p3 = {{j9_0_reg_157}, {10'd0}};

assign tmp_59_fu_357_p3 = {{j9_0_reg_157}, {8'd0}};

assign v84_address0 = sext_ln182_fu_420_p1;

assign v85_address0 = sext_ln183_fu_415_p1;

assign v86_address0 = zext_ln193_fu_478_p1;

assign v88_fu_225_p2 = (v88_0_reg_124 + 4'd1);

assign v89_fu_267_p2 = (v89_0_reg_135 + 10'd1);

assign zext_ln176_1_fu_251_p1 = tmp_53_fu_243_p3;

assign zext_ln176_2_fu_273_p1 = v89_0_reg_135;

assign zext_ln176_fu_239_p1 = tmp_52_fu_231_p3;

assign zext_ln182_1_fu_319_p1 = tmp_55_fu_311_p3;

assign zext_ln182_2_fu_397_p1 = k3_0_reg_168;

assign zext_ln182_3_fu_401_p1 = k3_0_reg_168;

assign zext_ln182_fu_307_p1 = tmp_54_fu_299_p3;

assign zext_ln183_1_fu_353_p1 = tmp_58_fu_345_p3;

assign zext_ln183_2_fu_365_p1 = tmp_59_fu_357_p3;

assign zext_ln183_fu_341_p1 = j9_0_reg_157;

assign zext_ln193_fu_478_p1 = j10_0_reg_190;

assign zext_ln194_1_fu_456_p1 = tmp_57_fu_448_p3;

assign zext_ln194_2_fu_483_p1 = j10_0_reg_190;

assign zext_ln194_fu_444_p1 = tmp_56_fu_436_p3;

always @ (posedge ap_clk) begin
    sub_ln176_reg_505[7:0] <= 8'b00000000;
    sub_ln182_reg_526[7:0] <= 8'b00000000;
    sub_ln183_reg_540[7:0] <= 8'b00000000;
    sub_ln194_reg_596[7:0] <= 8'b00000000;
end

endmodule //Linear_layer_ds0
