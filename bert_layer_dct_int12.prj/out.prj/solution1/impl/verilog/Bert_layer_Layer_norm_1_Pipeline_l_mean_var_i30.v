// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Layer_norm_1_Pipeline_l_mean_var_i30 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mean_address0,
        mean_ce0,
        mean_we0,
        mean_d0,
        mean_address1,
        mean_ce1,
        mean_q1,
        mean2_address0,
        mean2_ce0,
        mean2_we0,
        mean2_d0,
        mean2_address1,
        mean2_ce1,
        mean2_q1,
        var_address0,
        var_ce0,
        var_we0,
        var_d0,
        grp_fu_399_p_din0,
        grp_fu_399_p_din1,
        grp_fu_399_p_opcode,
        grp_fu_399_p_dout0,
        grp_fu_399_p_ce,
        grp_fu_403_p_din0,
        grp_fu_403_p_din1,
        grp_fu_403_p_dout0,
        grp_fu_403_p_ce,
        grp_fu_407_p_din0,
        grp_fu_407_p_din1,
        grp_fu_407_p_dout0,
        grp_fu_407_p_ce,
        grp_fu_411_p_din0,
        grp_fu_411_p_din1,
        grp_fu_411_p_dout0,
        grp_fu_411_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] mean_address0;
output   mean_ce0;
output   mean_we0;
output  [31:0] mean_d0;
output  [3:0] mean_address1;
output   mean_ce1;
input  [31:0] mean_q1;
output  [3:0] mean2_address0;
output   mean2_ce0;
output   mean2_we0;
output  [31:0] mean2_d0;
output  [3:0] mean2_address1;
output   mean2_ce1;
input  [31:0] mean2_q1;
output  [3:0] var_address0;
output   var_ce0;
output   var_we0;
output  [31:0] var_d0;
output  [31:0] grp_fu_399_p_din0;
output  [31:0] grp_fu_399_p_din1;
output  [0:0] grp_fu_399_p_opcode;
input  [31:0] grp_fu_399_p_dout0;
output   grp_fu_399_p_ce;
output  [31:0] grp_fu_403_p_din0;
output  [31:0] grp_fu_403_p_din1;
input  [31:0] grp_fu_403_p_dout0;
output   grp_fu_403_p_ce;
output  [31:0] grp_fu_407_p_din0;
output  [31:0] grp_fu_407_p_din1;
input  [31:0] grp_fu_407_p_dout0;
output   grp_fu_407_p_ce;
output  [31:0] grp_fu_411_p_din0;
output  [31:0] grp_fu_411_p_din1;
input  [31:0] grp_fu_411_p_dout0;
output   grp_fu_411_p_ce;

reg ap_idle;
reg mean_ce0;
reg mean_we0;
reg mean_ce1;
reg mean2_ce0;
reg mean2_we0;
reg mean2_ce1;
reg var_ce0;
reg var_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln609_fu_111_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] i30_cast_fu_123_p1;
reg   [63:0] i30_cast_reg_145;
reg   [63:0] i30_cast_reg_145_pp0_iter1_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter2_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter3_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter4_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter5_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter6_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter7_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter8_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter9_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter10_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter11_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter12_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter13_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter14_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter15_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter16_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter17_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter18_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter19_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter20_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter21_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter22_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter23_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter24_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter25_reg;
reg   [63:0] i30_cast_reg_145_pp0_iter26_reg;
reg   [3:0] mean_addr_reg_150;
reg   [3:0] mean_addr_reg_150_pp0_iter1_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter2_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter3_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter4_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter5_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter6_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter7_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter8_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter9_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter10_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter11_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter12_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter13_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter14_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter15_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter16_reg;
reg   [3:0] mean_addr_reg_150_pp0_iter17_reg;
reg   [3:0] mean2_addr_reg_156;
reg   [3:0] mean2_addr_reg_156_pp0_iter1_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter2_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter3_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter4_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter5_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter6_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter7_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter8_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter9_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter10_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter11_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter12_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter13_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter14_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter15_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter16_reg;
reg   [3:0] mean2_addr_reg_156_pp0_iter17_reg;
reg   [31:0] v364_reg_162;
reg   [31:0] v366_reg_167;
reg   [31:0] v365_reg_172;
reg   [31:0] v367_reg_179;
reg   [31:0] v367_reg_179_pp0_iter18_reg;
reg   [31:0] v367_reg_179_pp0_iter19_reg;
reg   [31:0] v367_reg_179_pp0_iter20_reg;
reg   [31:0] v367_reg_179_pp0_iter21_reg;
reg   [31:0] v370_reg_185;
reg   [31:0] v371_reg_190;
wire    ap_block_pp0_stage0;
reg   [3:0] i30_fu_34;
wire   [3:0] add_ln609_fu_117_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i30_2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln609_fu_111_p2 == 1'd0))) begin
            i30_fu_34 <= add_ln609_fu_117_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i30_fu_34 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i30_cast_reg_145_pp0_iter10_reg[3 : 0] <= i30_cast_reg_145_pp0_iter9_reg[3 : 0];
        i30_cast_reg_145_pp0_iter11_reg[3 : 0] <= i30_cast_reg_145_pp0_iter10_reg[3 : 0];
        i30_cast_reg_145_pp0_iter12_reg[3 : 0] <= i30_cast_reg_145_pp0_iter11_reg[3 : 0];
        i30_cast_reg_145_pp0_iter13_reg[3 : 0] <= i30_cast_reg_145_pp0_iter12_reg[3 : 0];
        i30_cast_reg_145_pp0_iter14_reg[3 : 0] <= i30_cast_reg_145_pp0_iter13_reg[3 : 0];
        i30_cast_reg_145_pp0_iter15_reg[3 : 0] <= i30_cast_reg_145_pp0_iter14_reg[3 : 0];
        i30_cast_reg_145_pp0_iter16_reg[3 : 0] <= i30_cast_reg_145_pp0_iter15_reg[3 : 0];
        i30_cast_reg_145_pp0_iter17_reg[3 : 0] <= i30_cast_reg_145_pp0_iter16_reg[3 : 0];
        i30_cast_reg_145_pp0_iter18_reg[3 : 0] <= i30_cast_reg_145_pp0_iter17_reg[3 : 0];
        i30_cast_reg_145_pp0_iter19_reg[3 : 0] <= i30_cast_reg_145_pp0_iter18_reg[3 : 0];
        i30_cast_reg_145_pp0_iter20_reg[3 : 0] <= i30_cast_reg_145_pp0_iter19_reg[3 : 0];
        i30_cast_reg_145_pp0_iter21_reg[3 : 0] <= i30_cast_reg_145_pp0_iter20_reg[3 : 0];
        i30_cast_reg_145_pp0_iter22_reg[3 : 0] <= i30_cast_reg_145_pp0_iter21_reg[3 : 0];
        i30_cast_reg_145_pp0_iter23_reg[3 : 0] <= i30_cast_reg_145_pp0_iter22_reg[3 : 0];
        i30_cast_reg_145_pp0_iter24_reg[3 : 0] <= i30_cast_reg_145_pp0_iter23_reg[3 : 0];
        i30_cast_reg_145_pp0_iter25_reg[3 : 0] <= i30_cast_reg_145_pp0_iter24_reg[3 : 0];
        i30_cast_reg_145_pp0_iter26_reg[3 : 0] <= i30_cast_reg_145_pp0_iter25_reg[3 : 0];
        i30_cast_reg_145_pp0_iter2_reg[3 : 0] <= i30_cast_reg_145_pp0_iter1_reg[3 : 0];
        i30_cast_reg_145_pp0_iter3_reg[3 : 0] <= i30_cast_reg_145_pp0_iter2_reg[3 : 0];
        i30_cast_reg_145_pp0_iter4_reg[3 : 0] <= i30_cast_reg_145_pp0_iter3_reg[3 : 0];
        i30_cast_reg_145_pp0_iter5_reg[3 : 0] <= i30_cast_reg_145_pp0_iter4_reg[3 : 0];
        i30_cast_reg_145_pp0_iter6_reg[3 : 0] <= i30_cast_reg_145_pp0_iter5_reg[3 : 0];
        i30_cast_reg_145_pp0_iter7_reg[3 : 0] <= i30_cast_reg_145_pp0_iter6_reg[3 : 0];
        i30_cast_reg_145_pp0_iter8_reg[3 : 0] <= i30_cast_reg_145_pp0_iter7_reg[3 : 0];
        i30_cast_reg_145_pp0_iter9_reg[3 : 0] <= i30_cast_reg_145_pp0_iter8_reg[3 : 0];
        mean2_addr_reg_156_pp0_iter10_reg <= mean2_addr_reg_156_pp0_iter9_reg;
        mean2_addr_reg_156_pp0_iter11_reg <= mean2_addr_reg_156_pp0_iter10_reg;
        mean2_addr_reg_156_pp0_iter12_reg <= mean2_addr_reg_156_pp0_iter11_reg;
        mean2_addr_reg_156_pp0_iter13_reg <= mean2_addr_reg_156_pp0_iter12_reg;
        mean2_addr_reg_156_pp0_iter14_reg <= mean2_addr_reg_156_pp0_iter13_reg;
        mean2_addr_reg_156_pp0_iter15_reg <= mean2_addr_reg_156_pp0_iter14_reg;
        mean2_addr_reg_156_pp0_iter16_reg <= mean2_addr_reg_156_pp0_iter15_reg;
        mean2_addr_reg_156_pp0_iter17_reg <= mean2_addr_reg_156_pp0_iter16_reg;
        mean2_addr_reg_156_pp0_iter2_reg <= mean2_addr_reg_156_pp0_iter1_reg;
        mean2_addr_reg_156_pp0_iter3_reg <= mean2_addr_reg_156_pp0_iter2_reg;
        mean2_addr_reg_156_pp0_iter4_reg <= mean2_addr_reg_156_pp0_iter3_reg;
        mean2_addr_reg_156_pp0_iter5_reg <= mean2_addr_reg_156_pp0_iter4_reg;
        mean2_addr_reg_156_pp0_iter6_reg <= mean2_addr_reg_156_pp0_iter5_reg;
        mean2_addr_reg_156_pp0_iter7_reg <= mean2_addr_reg_156_pp0_iter6_reg;
        mean2_addr_reg_156_pp0_iter8_reg <= mean2_addr_reg_156_pp0_iter7_reg;
        mean2_addr_reg_156_pp0_iter9_reg <= mean2_addr_reg_156_pp0_iter8_reg;
        mean_addr_reg_150_pp0_iter10_reg <= mean_addr_reg_150_pp0_iter9_reg;
        mean_addr_reg_150_pp0_iter11_reg <= mean_addr_reg_150_pp0_iter10_reg;
        mean_addr_reg_150_pp0_iter12_reg <= mean_addr_reg_150_pp0_iter11_reg;
        mean_addr_reg_150_pp0_iter13_reg <= mean_addr_reg_150_pp0_iter12_reg;
        mean_addr_reg_150_pp0_iter14_reg <= mean_addr_reg_150_pp0_iter13_reg;
        mean_addr_reg_150_pp0_iter15_reg <= mean_addr_reg_150_pp0_iter14_reg;
        mean_addr_reg_150_pp0_iter16_reg <= mean_addr_reg_150_pp0_iter15_reg;
        mean_addr_reg_150_pp0_iter17_reg <= mean_addr_reg_150_pp0_iter16_reg;
        mean_addr_reg_150_pp0_iter2_reg <= mean_addr_reg_150_pp0_iter1_reg;
        mean_addr_reg_150_pp0_iter3_reg <= mean_addr_reg_150_pp0_iter2_reg;
        mean_addr_reg_150_pp0_iter4_reg <= mean_addr_reg_150_pp0_iter3_reg;
        mean_addr_reg_150_pp0_iter5_reg <= mean_addr_reg_150_pp0_iter4_reg;
        mean_addr_reg_150_pp0_iter6_reg <= mean_addr_reg_150_pp0_iter5_reg;
        mean_addr_reg_150_pp0_iter7_reg <= mean_addr_reg_150_pp0_iter6_reg;
        mean_addr_reg_150_pp0_iter8_reg <= mean_addr_reg_150_pp0_iter7_reg;
        mean_addr_reg_150_pp0_iter9_reg <= mean_addr_reg_150_pp0_iter8_reg;
        v365_reg_172 <= grp_fu_407_p_dout0;
        v367_reg_179 <= grp_fu_411_p_dout0;
        v367_reg_179_pp0_iter18_reg <= v367_reg_179;
        v367_reg_179_pp0_iter19_reg <= v367_reg_179_pp0_iter18_reg;
        v367_reg_179_pp0_iter20_reg <= v367_reg_179_pp0_iter19_reg;
        v367_reg_179_pp0_iter21_reg <= v367_reg_179_pp0_iter20_reg;
        v370_reg_185 <= grp_fu_403_p_dout0;
        v371_reg_190 <= grp_fu_399_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i30_cast_reg_145_pp0_iter1_reg[3 : 0] <= i30_cast_reg_145[3 : 0];
        mean2_addr_reg_156_pp0_iter1_reg <= mean2_addr_reg_156;
        mean_addr_reg_150_pp0_iter1_reg <= mean_addr_reg_150;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln609_fu_111_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i30_cast_reg_145[3 : 0] <= i30_cast_fu_123_p1[3 : 0];
        mean2_addr_reg_156 <= i30_cast_fu_123_p1;
        mean_addr_reg_150 <= i30_cast_fu_123_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v364_reg_162 <= mean_q1;
        v366_reg_167 <= mean2_q1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln609_fu_111_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i30_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_i30_2 = i30_fu_34;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean2_ce0 = 1'b1;
    end else begin
        mean2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean2_ce1 = 1'b1;
    end else begin
        mean2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean2_we0 = 1'b1;
    end else begin
        mean2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_ce0 = 1'b1;
    end else begin
        mean_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_ce1 = 1'b1;
    end else begin
        mean_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mean_we0 = 1'b1;
    end else begin
        mean_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        var_ce0 = 1'b1;
    end else begin
        var_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        var_we0 = 1'b1;
    end else begin
        var_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln609_fu_117_p2 = (ap_sig_allocacmp_i30_2 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_399_p_ce = 1'b1;

assign grp_fu_399_p_din0 = v367_reg_179_pp0_iter21_reg;

assign grp_fu_399_p_din1 = v370_reg_185;

assign grp_fu_399_p_opcode = 2'd1;

assign grp_fu_403_p_ce = 1'b1;

assign grp_fu_403_p_din0 = v365_reg_172;

assign grp_fu_403_p_din1 = v365_reg_172;

assign grp_fu_407_p_ce = 1'b1;

assign grp_fu_407_p_din0 = v364_reg_162;

assign grp_fu_407_p_din1 = 32'd1145044992;

assign grp_fu_411_p_ce = 1'b1;

assign grp_fu_411_p_din0 = v366_reg_167;

assign grp_fu_411_p_din1 = 32'd1145044992;

assign i30_cast_fu_123_p1 = ap_sig_allocacmp_i30_2;

assign icmp_ln609_fu_111_p2 = ((ap_sig_allocacmp_i30_2 == 4'd12) ? 1'b1 : 1'b0);

assign mean2_address0 = mean2_addr_reg_156_pp0_iter17_reg;

assign mean2_address1 = i30_cast_fu_123_p1;

assign mean2_d0 = v367_reg_179;

assign mean_address0 = mean_addr_reg_150_pp0_iter17_reg;

assign mean_address1 = i30_cast_fu_123_p1;

assign mean_d0 = v365_reg_172;

assign var_address0 = i30_cast_reg_145_pp0_iter26_reg;

assign var_d0 = v371_reg_190;

always @ (posedge ap_clk) begin
    i30_cast_reg_145[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter7_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter8_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter9_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter10_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter11_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter12_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter13_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter14_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter15_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter16_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter17_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter18_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter19_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter20_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter21_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter22_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter23_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter24_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter25_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    i30_cast_reg_145_pp0_iter26_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Layer_norm_1_Pipeline_l_mean_var_i30
