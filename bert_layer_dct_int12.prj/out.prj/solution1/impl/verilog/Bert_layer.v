// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Bert_layer,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=620106484,HLS_SYN_TPT=none,HLS_SYN_MEM=8646,HLS_SYN_DSP=202,HLS_SYN_FF=44568,HLS_SYN_LUT=58402,HLS_VERSION=2019_2_1}" *)

module Bert_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v552_address0,
        v552_ce0,
        v552_q0,
        v553_address0,
        v553_ce0,
        v553_q0,
        v554_address0,
        v554_ce0,
        v554_q0,
        v555_address0,
        v555_ce0,
        v555_q0,
        v556_address0,
        v556_ce0,
        v556_q0,
        v557_address0,
        v557_ce0,
        v557_q0,
        v558_address0,
        v558_ce0,
        v558_q0,
        v559_address0,
        v559_ce0,
        v559_q0,
        v560_address0,
        v560_ce0,
        v560_q0,
        v561_address0,
        v561_ce0,
        v561_q0,
        v562_address0,
        v562_ce0,
        v562_q0,
        v563_address0,
        v563_ce0,
        v563_q0,
        v564_address0,
        v564_ce0,
        v564_q0,
        v565_address0,
        v565_ce0,
        v565_q0,
        v566_address0,
        v566_ce0,
        v566_q0,
        v567_address0,
        v567_ce0,
        v567_q0,
        v568_address0,
        v568_ce0,
        v568_q0,
        v569_address0,
        v569_ce0,
        v569_we0,
        v569_d0
);

parameter    ap_ST_fsm_state1 = 136'd1;
parameter    ap_ST_fsm_state2 = 136'd2;
parameter    ap_ST_fsm_state3 = 136'd4;
parameter    ap_ST_fsm_state4 = 136'd8;
parameter    ap_ST_fsm_state5 = 136'd16;
parameter    ap_ST_fsm_state6 = 136'd32;
parameter    ap_ST_fsm_state7 = 136'd64;
parameter    ap_ST_fsm_state8 = 136'd128;
parameter    ap_ST_fsm_state9 = 136'd256;
parameter    ap_ST_fsm_state10 = 136'd512;
parameter    ap_ST_fsm_state11 = 136'd1024;
parameter    ap_ST_fsm_state12 = 136'd2048;
parameter    ap_ST_fsm_state13 = 136'd4096;
parameter    ap_ST_fsm_state14 = 136'd8192;
parameter    ap_ST_fsm_state15 = 136'd16384;
parameter    ap_ST_fsm_state16 = 136'd32768;
parameter    ap_ST_fsm_state17 = 136'd65536;
parameter    ap_ST_fsm_state18 = 136'd131072;
parameter    ap_ST_fsm_state19 = 136'd262144;
parameter    ap_ST_fsm_state20 = 136'd524288;
parameter    ap_ST_fsm_state21 = 136'd1048576;
parameter    ap_ST_fsm_state22 = 136'd2097152;
parameter    ap_ST_fsm_state23 = 136'd4194304;
parameter    ap_ST_fsm_state24 = 136'd8388608;
parameter    ap_ST_fsm_state25 = 136'd16777216;
parameter    ap_ST_fsm_state26 = 136'd33554432;
parameter    ap_ST_fsm_state27 = 136'd67108864;
parameter    ap_ST_fsm_state28 = 136'd134217728;
parameter    ap_ST_fsm_state29 = 136'd268435456;
parameter    ap_ST_fsm_state30 = 136'd536870912;
parameter    ap_ST_fsm_state31 = 136'd1073741824;
parameter    ap_ST_fsm_state32 = 136'd2147483648;
parameter    ap_ST_fsm_state33 = 136'd4294967296;
parameter    ap_ST_fsm_state34 = 136'd8589934592;
parameter    ap_ST_fsm_state35 = 136'd17179869184;
parameter    ap_ST_fsm_state36 = 136'd34359738368;
parameter    ap_ST_fsm_state37 = 136'd68719476736;
parameter    ap_ST_fsm_state38 = 136'd137438953472;
parameter    ap_ST_fsm_state39 = 136'd274877906944;
parameter    ap_ST_fsm_state40 = 136'd549755813888;
parameter    ap_ST_fsm_state41 = 136'd1099511627776;
parameter    ap_ST_fsm_state42 = 136'd2199023255552;
parameter    ap_ST_fsm_state43 = 136'd4398046511104;
parameter    ap_ST_fsm_state44 = 136'd8796093022208;
parameter    ap_ST_fsm_state45 = 136'd17592186044416;
parameter    ap_ST_fsm_state46 = 136'd35184372088832;
parameter    ap_ST_fsm_state47 = 136'd70368744177664;
parameter    ap_ST_fsm_state48 = 136'd140737488355328;
parameter    ap_ST_fsm_state49 = 136'd281474976710656;
parameter    ap_ST_fsm_state50 = 136'd562949953421312;
parameter    ap_ST_fsm_state51 = 136'd1125899906842624;
parameter    ap_ST_fsm_state52 = 136'd2251799813685248;
parameter    ap_ST_fsm_state53 = 136'd4503599627370496;
parameter    ap_ST_fsm_state54 = 136'd9007199254740992;
parameter    ap_ST_fsm_state55 = 136'd18014398509481984;
parameter    ap_ST_fsm_state56 = 136'd36028797018963968;
parameter    ap_ST_fsm_state57 = 136'd72057594037927936;
parameter    ap_ST_fsm_state58 = 136'd144115188075855872;
parameter    ap_ST_fsm_state59 = 136'd288230376151711744;
parameter    ap_ST_fsm_state60 = 136'd576460752303423488;
parameter    ap_ST_fsm_state61 = 136'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 136'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 136'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 136'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 136'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 136'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 136'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 136'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 136'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 136'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 136'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 136'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 136'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 136'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 136'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 136'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 136'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 136'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 136'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 136'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 136'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 136'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 136'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 136'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 136'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 136'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 136'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 136'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 136'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 136'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 136'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 136'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 136'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 136'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 136'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 136'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 136'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 136'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 136'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 136'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 136'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 136'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 136'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 136'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 136'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 136'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 136'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 136'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 136'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 136'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 136'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 136'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 136'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 136'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 136'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 136'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 136'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 136'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 136'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 136'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 136'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 136'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 136'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 136'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 136'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 136'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 136'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 136'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 136'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 136'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 136'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 136'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 136'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 136'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 136'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 136'd43556142965880123323311949751266331066368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v552_address0;
output   v552_ce0;
input  [31:0] v552_q0;
output  [19:0] v553_address0;
output   v553_ce0;
input  [31:0] v553_q0;
output  [9:0] v554_address0;
output   v554_ce0;
input  [31:0] v554_q0;
output  [19:0] v555_address0;
output   v555_ce0;
input  [31:0] v555_q0;
output  [9:0] v556_address0;
output   v556_ce0;
input  [31:0] v556_q0;
output  [19:0] v557_address0;
output   v557_ce0;
input  [31:0] v557_q0;
output  [9:0] v558_address0;
output   v558_ce0;
input  [31:0] v558_q0;
output  [19:0] v559_address0;
output   v559_ce0;
input  [31:0] v559_q0;
output  [9:0] v560_address0;
output   v560_ce0;
input  [31:0] v560_q0;
output  [21:0] v561_address0;
output   v561_ce0;
input  [31:0] v561_q0;
output  [11:0] v562_address0;
output   v562_ce0;
input  [31:0] v562_q0;
output  [21:0] v563_address0;
output   v563_ce0;
input  [31:0] v563_q0;
output  [9:0] v564_address0;
output   v564_ce0;
input  [31:0] v564_q0;
output  [9:0] v565_address0;
output   v565_ce0;
input  [31:0] v565_q0;
output  [9:0] v566_address0;
output   v566_ce0;
input  [31:0] v566_q0;
output  [9:0] v567_address0;
output   v567_ce0;
input  [31:0] v567_q0;
output  [9:0] v568_address0;
output   v568_ce0;
input  [31:0] v568_q0;
output  [13:0] v569_address0;
output   v569_ce0;
output   v569_we0;
output  [31:0] v569_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] v552_address0;
reg v552_ce0;
reg v553_ce0;
reg v554_ce0;
reg v555_ce0;
reg v556_ce0;
reg v557_ce0;
reg v558_ce0;
reg v565_ce0;
reg v566_ce0;
reg v567_ce0;
reg v568_ce0;
reg v569_ce0;
reg v569_we0;

(* fsm_encoding = "none" *) reg   [135:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_354_p1;
reg   [63:0] reg_364;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state111;
wire   [31:0] grp_fu_351_p1;
reg   [31:0] reg_370;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state119;
wire   [63:0] grp_fu_358_p2;
reg   [63:0] reg_377;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state117;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] reg_382;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state126;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] reg_388;
wire    ap_CS_fsm_state130;
wire   [3:0] i38_fu_400_p2;
reg   [3:0] i38_reg_465;
wire    ap_CS_fsm_state17;
wire   [16:0] sub_ln769_fu_430_p2;
reg   [16:0] sub_ln769_reg_470;
wire   [0:0] icmp_ln767_fu_394_p2;
wire   [11:0] j37_fu_442_p2;
reg   [11:0] j37_reg_478;
wire    ap_CS_fsm_state18;
wire  signed [63:0] sext_ln769_fu_457_p1;
reg  signed [63:0] sext_ln769_reg_483;
wire   [0:0] icmp_ln768_fu_436_p2;
wire   [31:0] v577_q0;
reg   [31:0] v466_reg_493;
wire    ap_CS_fsm_state19;
wire   [63:0] grp_pow_generic_double_s_fu_226_ap_return;
reg   [63:0] tmp_i_i_i_reg_500;
wire    ap_CS_fsm_state92;
wire   [31:0] grp_generic_tanh_float_s_fu_263_ap_return;
reg   [31:0] v472_reg_505;
wire    ap_CS_fsm_state121;
wire    grp_generic_tanh_float_s_fu_263_ap_ready;
wire    grp_generic_tanh_float_s_fu_263_ap_done;
reg   [13:0] v570_address0;
reg    v570_ce0;
reg    v570_we0;
wire   [31:0] v570_q0;
reg   [13:0] v571_address0;
reg    v571_ce0;
reg    v571_we0;
wire   [31:0] v571_q0;
reg   [13:0] v572_address0;
reg    v572_ce0;
reg    v572_we0;
wire   [31:0] v572_q0;
reg   [13:0] v573_address0;
reg    v573_ce0;
reg    v573_we0;
wire   [31:0] v573_q0;
reg   [13:0] v574_address0;
reg    v574_ce0;
reg    v574_we0;
wire   [31:0] v574_q0;
reg   [13:0] v575_address0;
reg    v575_ce0;
reg    v575_we0;
wire   [31:0] v575_q0;
reg   [13:0] v576_address0;
reg    v576_ce0;
reg    v576_we0;
wire   [31:0] v576_q0;
reg   [15:0] v577_address0;
reg    v577_ce0;
reg    v577_we0;
reg   [15:0] v578_address0;
reg    v578_ce0;
reg    v578_we0;
wire   [31:0] v578_q0;
reg   [13:0] v579_address0;
reg    v579_ce0;
reg    v579_we0;
wire   [31:0] v579_q0;
reg   [13:0] v580_address0;
reg    v580_ce0;
reg    v580_we0;
wire   [31:0] v580_q0;
wire    grp_pow_generic_double_s_fu_226_ap_start;
wire    grp_pow_generic_double_s_fu_226_ap_done;
wire    grp_pow_generic_double_s_fu_226_ap_idle;
wire    grp_pow_generic_double_s_fu_226_ap_ready;
wire    grp_Self_attention_fu_255_ap_start;
wire    grp_Self_attention_fu_255_ap_done;
wire    grp_Self_attention_fu_255_ap_idle;
wire    grp_Self_attention_fu_255_ap_ready;
wire   [13:0] grp_Self_attention_fu_255_v241_address0;
wire    grp_Self_attention_fu_255_v241_ce0;
wire   [13:0] grp_Self_attention_fu_255_v242_address0;
wire    grp_Self_attention_fu_255_v242_ce0;
wire   [13:0] grp_Self_attention_fu_255_v243_address0;
wire    grp_Self_attention_fu_255_v243_ce0;
wire   [13:0] grp_Self_attention_fu_255_v244_address0;
wire    grp_Self_attention_fu_255_v244_ce0;
wire    grp_Self_attention_fu_255_v244_we0;
wire   [31:0] grp_Self_attention_fu_255_v244_d0;
wire    grp_generic_tanh_float_s_fu_263_ap_start;
wire    grp_generic_tanh_float_s_fu_263_ap_idle;
wire    grp_Linear_layer_ds1_fu_274_ap_start;
wire    grp_Linear_layer_ds1_fu_274_ap_done;
wire    grp_Linear_layer_ds1_fu_274_ap_idle;
wire    grp_Linear_layer_ds1_fu_274_ap_ready;
wire   [13:0] grp_Linear_layer_ds1_fu_274_v385_address0;
wire    grp_Linear_layer_ds1_fu_274_v385_ce0;
wire   [21:0] grp_Linear_layer_ds1_fu_274_v386_address0;
wire    grp_Linear_layer_ds1_fu_274_v386_ce0;
wire   [11:0] grp_Linear_layer_ds1_fu_274_v387_address0;
wire    grp_Linear_layer_ds1_fu_274_v387_ce0;
wire   [15:0] grp_Linear_layer_ds1_fu_274_v388_address0;
wire    grp_Linear_layer_ds1_fu_274_v388_ce0;
wire    grp_Linear_layer_ds1_fu_274_v388_we0;
wire   [31:0] grp_Linear_layer_ds1_fu_274_v388_d0;
wire    grp_Linear_layer_ds2_fu_284_ap_start;
wire    grp_Linear_layer_ds2_fu_284_ap_done;
wire    grp_Linear_layer_ds2_fu_284_ap_idle;
wire    grp_Linear_layer_ds2_fu_284_ap_ready;
wire   [15:0] grp_Linear_layer_ds2_fu_284_v475_address0;
wire    grp_Linear_layer_ds2_fu_284_v475_ce0;
wire   [21:0] grp_Linear_layer_ds2_fu_284_v476_address0;
wire    grp_Linear_layer_ds2_fu_284_v476_ce0;
wire   [9:0] grp_Linear_layer_ds2_fu_284_v477_address0;
wire    grp_Linear_layer_ds2_fu_284_v477_ce0;
wire   [13:0] grp_Linear_layer_ds2_fu_284_v478_address0;
wire    grp_Linear_layer_ds2_fu_284_v478_ce0;
wire    grp_Linear_layer_ds2_fu_284_v478_we0;
wire   [31:0] grp_Linear_layer_ds2_fu_284_v478_d0;
wire    grp_Linear_layer_qkv_fu_294_ap_start;
wire    grp_Linear_layer_qkv_fu_294_ap_done;
wire    grp_Linear_layer_qkv_fu_294_ap_idle;
wire    grp_Linear_layer_qkv_fu_294_ap_ready;
wire   [13:0] grp_Linear_layer_qkv_fu_294_v0_address0;
wire    grp_Linear_layer_qkv_fu_294_v0_ce0;
wire   [19:0] grp_Linear_layer_qkv_fu_294_v1_address0;
wire    grp_Linear_layer_qkv_fu_294_v1_ce0;
reg   [31:0] grp_Linear_layer_qkv_fu_294_v1_q0;
wire   [9:0] grp_Linear_layer_qkv_fu_294_v2_address0;
wire    grp_Linear_layer_qkv_fu_294_v2_ce0;
reg   [31:0] grp_Linear_layer_qkv_fu_294_v2_q0;
wire   [13:0] grp_Linear_layer_qkv_fu_294_v3_address0;
wire    grp_Linear_layer_qkv_fu_294_v3_ce0;
wire    grp_Linear_layer_qkv_fu_294_v3_we0;
wire   [31:0] grp_Linear_layer_qkv_fu_294_v3_d0;
wire    grp_Linear_layer_ds0_fu_310_ap_start;
wire    grp_Linear_layer_ds0_fu_310_ap_done;
wire    grp_Linear_layer_ds0_fu_310_ap_idle;
wire    grp_Linear_layer_ds0_fu_310_ap_ready;
wire   [13:0] grp_Linear_layer_ds0_fu_310_v260_address0;
wire    grp_Linear_layer_ds0_fu_310_v260_ce0;
wire   [19:0] grp_Linear_layer_ds0_fu_310_v261_address0;
wire    grp_Linear_layer_ds0_fu_310_v261_ce0;
wire   [9:0] grp_Linear_layer_ds0_fu_310_v262_address0;
wire    grp_Linear_layer_ds0_fu_310_v262_ce0;
wire   [13:0] grp_Linear_layer_ds0_fu_310_v263_address0;
wire    grp_Linear_layer_ds0_fu_310_v263_ce0;
wire    grp_Linear_layer_ds0_fu_310_v263_we0;
wire   [31:0] grp_Linear_layer_ds0_fu_310_v263_d0;
wire    grp_Layer_norm_fu_320_ap_start;
wire    grp_Layer_norm_fu_320_ap_done;
wire    grp_Layer_norm_fu_320_ap_idle;
wire    grp_Layer_norm_fu_320_ap_ready;
wire   [13:0] grp_Layer_norm_fu_320_v345_address0;
wire    grp_Layer_norm_fu_320_v345_ce0;
reg   [31:0] grp_Layer_norm_fu_320_v345_q0;
wire   [9:0] grp_Layer_norm_fu_320_v346_address0;
wire    grp_Layer_norm_fu_320_v346_ce0;
reg   [31:0] grp_Layer_norm_fu_320_v346_q0;
wire   [9:0] grp_Layer_norm_fu_320_v347_address0;
wire    grp_Layer_norm_fu_320_v347_ce0;
reg   [31:0] grp_Layer_norm_fu_320_v347_q0;
wire   [13:0] grp_Layer_norm_fu_320_v348_address0;
wire    grp_Layer_norm_fu_320_v348_ce0;
wire    grp_Layer_norm_fu_320_v348_we0;
wire   [31:0] grp_Layer_norm_fu_320_v348_d0;
wire    grp_Res_layer_fu_333_ap_start;
wire    grp_Res_layer_fu_333_ap_done;
wire    grp_Res_layer_fu_333_ap_idle;
wire    grp_Res_layer_fu_333_ap_ready;
wire   [13:0] grp_Res_layer_fu_333_v337_address0;
wire    grp_Res_layer_fu_333_v337_ce0;
reg   [31:0] grp_Res_layer_fu_333_v337_q0;
wire   [13:0] grp_Res_layer_fu_333_v338_address0;
wire    grp_Res_layer_fu_333_v338_ce0;
reg   [31:0] grp_Res_layer_fu_333_v338_q0;
wire   [13:0] grp_Res_layer_fu_333_v339_address0;
wire    grp_Res_layer_fu_333_v339_ce0;
wire    grp_Res_layer_fu_333_v339_we0;
wire   [31:0] grp_Res_layer_fu_333_v339_d0;
reg   [3:0] i38_0_i_reg_204;
wire    ap_CS_fsm_state16;
reg   [11:0] j37_0_i_reg_215;
wire    ap_CS_fsm_state131;
reg    grp_pow_generic_double_s_fu_226_ap_start_reg;
reg   [135:0] ap_NS_fsm;
wire    ap_NS_fsm_state21;
wire    ap_CS_fsm_state21;
reg    grp_Self_attention_fu_255_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_generic_tanh_float_s_fu_263_ap_start_reg;
wire    ap_CS_fsm_state120;
reg    grp_Linear_layer_ds1_fu_274_ap_start_reg;
wire    ap_CS_fsm_state15;
reg    grp_Linear_layer_ds2_fu_284_ap_start_reg;
wire    ap_CS_fsm_state132;
reg    grp_Linear_layer_qkv_fu_294_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state6;
reg    grp_Linear_layer_ds0_fu_310_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_Layer_norm_fu_320_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state136;
reg    grp_Res_layer_fu_333_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state134;
reg   [31:0] grp_fu_341_p0;
reg   [31:0] grp_fu_341_p1;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state122;
reg   [31:0] grp_fu_346_p0;
reg   [31:0] grp_fu_346_p1;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state127;
reg   [63:0] grp_fu_351_p0;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state118;
reg   [31:0] grp_fu_354_p0;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state110;
reg   [63:0] grp_fu_358_p1;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state112;
wire   [15:0] tmp_fu_406_p3;
wire   [13:0] tmp_s_fu_418_p3;
wire   [16:0] zext_ln769_fu_414_p1;
wire   [16:0] zext_ln769_1_fu_426_p1;
wire   [16:0] zext_ln769_2_fu_448_p1;
wire   [16:0] add_ln769_fu_452_p2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 136'd1;
#0 grp_pow_generic_double_s_fu_226_ap_start_reg = 1'b0;
#0 grp_Self_attention_fu_255_ap_start_reg = 1'b0;
#0 grp_generic_tanh_float_s_fu_263_ap_start_reg = 1'b0;
#0 grp_Linear_layer_ds1_fu_274_ap_start_reg = 1'b0;
#0 grp_Linear_layer_ds2_fu_284_ap_start_reg = 1'b0;
#0 grp_Linear_layer_qkv_fu_294_ap_start_reg = 1'b0;
#0 grp_Linear_layer_ds0_fu_310_ap_start_reg = 1'b0;
#0 grp_Layer_norm_fu_320_ap_start_reg = 1'b0;
#0 grp_Res_layer_fu_333_ap_start_reg = 1'b0;
end

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v570_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v570_address0),
    .ce0(v570_ce0),
    .we0(v570_we0),
    .d0(grp_Linear_layer_qkv_fu_294_v3_d0),
    .q0(v570_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v571_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v571_address0),
    .ce0(v571_ce0),
    .we0(v571_we0),
    .d0(grp_Linear_layer_qkv_fu_294_v3_d0),
    .q0(v571_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v572_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v572_address0),
    .ce0(v572_ce0),
    .we0(v572_we0),
    .d0(grp_Linear_layer_qkv_fu_294_v3_d0),
    .q0(v572_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v573_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v573_address0),
    .ce0(v573_ce0),
    .we0(v573_we0),
    .d0(grp_Self_attention_fu_255_v244_d0),
    .q0(v573_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v574_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v574_address0),
    .ce0(v574_ce0),
    .we0(v574_we0),
    .d0(grp_Linear_layer_ds0_fu_310_v263_d0),
    .q0(v574_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v575_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v575_address0),
    .ce0(v575_ce0),
    .we0(v575_we0),
    .d0(grp_Res_layer_fu_333_v339_d0),
    .q0(v575_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v576_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v576_address0),
    .ce0(v576_ce0),
    .we0(v576_we0),
    .d0(grp_Layer_norm_fu_320_v348_d0),
    .q0(v576_q0)
);

Linear_layer_ds1_Mgi #(
    .DataWidth( 32 ),
    .AddressRange( 36864 ),
    .AddressWidth( 16 ))
v577_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v577_address0),
    .ce0(v577_ce0),
    .we0(v577_we0),
    .d0(grp_Linear_layer_ds1_fu_274_v388_d0),
    .q0(v577_q0)
);

Linear_layer_ds1_Mgi #(
    .DataWidth( 32 ),
    .AddressRange( 36864 ),
    .AddressWidth( 16 ))
v578_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v578_address0),
    .ce0(v578_ce0),
    .we0(v578_we0),
    .d0(reg_388),
    .q0(v578_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v579_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v579_address0),
    .ce0(v579_ce0),
    .we0(v579_we0),
    .d0(grp_Linear_layer_ds2_fu_284_v478_d0),
    .q0(v579_q0)
);

Linear_layer_qkv_fYi #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
v580_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v580_address0),
    .ce0(v580_ce0),
    .we0(v580_we0),
    .d0(grp_Res_layer_fu_333_v339_d0),
    .q0(v580_q0)
);

pow_generic_double_s grp_pow_generic_double_s_fu_226(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_generic_double_s_fu_226_ap_start),
    .ap_done(grp_pow_generic_double_s_fu_226_ap_done),
    .ap_idle(grp_pow_generic_double_s_fu_226_ap_idle),
    .ap_ready(grp_pow_generic_double_s_fu_226_ap_ready),
    .base_r(reg_364),
    .ap_return(grp_pow_generic_double_s_fu_226_ap_return)
);

Self_attention grp_Self_attention_fu_255(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Self_attention_fu_255_ap_start),
    .ap_done(grp_Self_attention_fu_255_ap_done),
    .ap_idle(grp_Self_attention_fu_255_ap_idle),
    .ap_ready(grp_Self_attention_fu_255_ap_ready),
    .v241_address0(grp_Self_attention_fu_255_v241_address0),
    .v241_ce0(grp_Self_attention_fu_255_v241_ce0),
    .v241_q0(v570_q0),
    .v242_address0(grp_Self_attention_fu_255_v242_address0),
    .v242_ce0(grp_Self_attention_fu_255_v242_ce0),
    .v242_q0(v571_q0),
    .v243_address0(grp_Self_attention_fu_255_v243_address0),
    .v243_ce0(grp_Self_attention_fu_255_v243_ce0),
    .v243_q0(v572_q0),
    .v244_address0(grp_Self_attention_fu_255_v244_address0),
    .v244_ce0(grp_Self_attention_fu_255_v244_ce0),
    .v244_we0(grp_Self_attention_fu_255_v244_we0),
    .v244_d0(grp_Self_attention_fu_255_v244_d0)
);

generic_tanh_float_s grp_generic_tanh_float_s_fu_263(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_tanh_float_s_fu_263_ap_start),
    .ap_done(grp_generic_tanh_float_s_fu_263_ap_done),
    .ap_idle(grp_generic_tanh_float_s_fu_263_ap_idle),
    .ap_ready(grp_generic_tanh_float_s_fu_263_ap_ready),
    .t_in(reg_370),
    .ap_return(grp_generic_tanh_float_s_fu_263_ap_return)
);

Linear_layer_ds1 grp_Linear_layer_ds1_fu_274(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Linear_layer_ds1_fu_274_ap_start),
    .ap_done(grp_Linear_layer_ds1_fu_274_ap_done),
    .ap_idle(grp_Linear_layer_ds1_fu_274_ap_idle),
    .ap_ready(grp_Linear_layer_ds1_fu_274_ap_ready),
    .v385_address0(grp_Linear_layer_ds1_fu_274_v385_address0),
    .v385_ce0(grp_Linear_layer_ds1_fu_274_v385_ce0),
    .v385_q0(v576_q0),
    .v386_address0(grp_Linear_layer_ds1_fu_274_v386_address0),
    .v386_ce0(grp_Linear_layer_ds1_fu_274_v386_ce0),
    .v386_q0(v561_q0),
    .v387_address0(grp_Linear_layer_ds1_fu_274_v387_address0),
    .v387_ce0(grp_Linear_layer_ds1_fu_274_v387_ce0),
    .v387_q0(v562_q0),
    .v388_address0(grp_Linear_layer_ds1_fu_274_v388_address0),
    .v388_ce0(grp_Linear_layer_ds1_fu_274_v388_ce0),
    .v388_we0(grp_Linear_layer_ds1_fu_274_v388_we0),
    .v388_d0(grp_Linear_layer_ds1_fu_274_v388_d0)
);

Linear_layer_ds2 grp_Linear_layer_ds2_fu_284(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Linear_layer_ds2_fu_284_ap_start),
    .ap_done(grp_Linear_layer_ds2_fu_284_ap_done),
    .ap_idle(grp_Linear_layer_ds2_fu_284_ap_idle),
    .ap_ready(grp_Linear_layer_ds2_fu_284_ap_ready),
    .v475_address0(grp_Linear_layer_ds2_fu_284_v475_address0),
    .v475_ce0(grp_Linear_layer_ds2_fu_284_v475_ce0),
    .v475_q0(v578_q0),
    .v476_address0(grp_Linear_layer_ds2_fu_284_v476_address0),
    .v476_ce0(grp_Linear_layer_ds2_fu_284_v476_ce0),
    .v476_q0(v563_q0),
    .v477_address0(grp_Linear_layer_ds2_fu_284_v477_address0),
    .v477_ce0(grp_Linear_layer_ds2_fu_284_v477_ce0),
    .v477_q0(v564_q0),
    .v478_address0(grp_Linear_layer_ds2_fu_284_v478_address0),
    .v478_ce0(grp_Linear_layer_ds2_fu_284_v478_ce0),
    .v478_we0(grp_Linear_layer_ds2_fu_284_v478_we0),
    .v478_d0(grp_Linear_layer_ds2_fu_284_v478_d0)
);

Linear_layer_qkv grp_Linear_layer_qkv_fu_294(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Linear_layer_qkv_fu_294_ap_start),
    .ap_done(grp_Linear_layer_qkv_fu_294_ap_done),
    .ap_idle(grp_Linear_layer_qkv_fu_294_ap_idle),
    .ap_ready(grp_Linear_layer_qkv_fu_294_ap_ready),
    .v0_address0(grp_Linear_layer_qkv_fu_294_v0_address0),
    .v0_ce0(grp_Linear_layer_qkv_fu_294_v0_ce0),
    .v0_q0(v552_q0),
    .v1_address0(grp_Linear_layer_qkv_fu_294_v1_address0),
    .v1_ce0(grp_Linear_layer_qkv_fu_294_v1_ce0),
    .v1_q0(grp_Linear_layer_qkv_fu_294_v1_q0),
    .v2_address0(grp_Linear_layer_qkv_fu_294_v2_address0),
    .v2_ce0(grp_Linear_layer_qkv_fu_294_v2_ce0),
    .v2_q0(grp_Linear_layer_qkv_fu_294_v2_q0),
    .v3_address0(grp_Linear_layer_qkv_fu_294_v3_address0),
    .v3_ce0(grp_Linear_layer_qkv_fu_294_v3_ce0),
    .v3_we0(grp_Linear_layer_qkv_fu_294_v3_we0),
    .v3_d0(grp_Linear_layer_qkv_fu_294_v3_d0)
);

Linear_layer_ds0 grp_Linear_layer_ds0_fu_310(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Linear_layer_ds0_fu_310_ap_start),
    .ap_done(grp_Linear_layer_ds0_fu_310_ap_done),
    .ap_idle(grp_Linear_layer_ds0_fu_310_ap_idle),
    .ap_ready(grp_Linear_layer_ds0_fu_310_ap_ready),
    .v260_address0(grp_Linear_layer_ds0_fu_310_v260_address0),
    .v260_ce0(grp_Linear_layer_ds0_fu_310_v260_ce0),
    .v260_q0(v573_q0),
    .v261_address0(grp_Linear_layer_ds0_fu_310_v261_address0),
    .v261_ce0(grp_Linear_layer_ds0_fu_310_v261_ce0),
    .v261_q0(v559_q0),
    .v262_address0(grp_Linear_layer_ds0_fu_310_v262_address0),
    .v262_ce0(grp_Linear_layer_ds0_fu_310_v262_ce0),
    .v262_q0(v560_q0),
    .v263_address0(grp_Linear_layer_ds0_fu_310_v263_address0),
    .v263_ce0(grp_Linear_layer_ds0_fu_310_v263_ce0),
    .v263_we0(grp_Linear_layer_ds0_fu_310_v263_we0),
    .v263_d0(grp_Linear_layer_ds0_fu_310_v263_d0)
);

Layer_norm grp_Layer_norm_fu_320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Layer_norm_fu_320_ap_start),
    .ap_done(grp_Layer_norm_fu_320_ap_done),
    .ap_idle(grp_Layer_norm_fu_320_ap_idle),
    .ap_ready(grp_Layer_norm_fu_320_ap_ready),
    .v345_address0(grp_Layer_norm_fu_320_v345_address0),
    .v345_ce0(grp_Layer_norm_fu_320_v345_ce0),
    .v345_q0(grp_Layer_norm_fu_320_v345_q0),
    .v346_address0(grp_Layer_norm_fu_320_v346_address0),
    .v346_ce0(grp_Layer_norm_fu_320_v346_ce0),
    .v346_q0(grp_Layer_norm_fu_320_v346_q0),
    .v347_address0(grp_Layer_norm_fu_320_v347_address0),
    .v347_ce0(grp_Layer_norm_fu_320_v347_ce0),
    .v347_q0(grp_Layer_norm_fu_320_v347_q0),
    .v348_address0(grp_Layer_norm_fu_320_v348_address0),
    .v348_ce0(grp_Layer_norm_fu_320_v348_ce0),
    .v348_we0(grp_Layer_norm_fu_320_v348_we0),
    .v348_d0(grp_Layer_norm_fu_320_v348_d0)
);

Res_layer grp_Res_layer_fu_333(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Res_layer_fu_333_ap_start),
    .ap_done(grp_Res_layer_fu_333_ap_done),
    .ap_idle(grp_Res_layer_fu_333_ap_idle),
    .ap_ready(grp_Res_layer_fu_333_ap_ready),
    .v337_address0(grp_Res_layer_fu_333_v337_address0),
    .v337_ce0(grp_Res_layer_fu_333_v337_ce0),
    .v337_q0(grp_Res_layer_fu_333_v337_q0),
    .v338_address0(grp_Res_layer_fu_333_v338_address0),
    .v338_ce0(grp_Res_layer_fu_333_v338_ce0),
    .v338_q0(grp_Res_layer_fu_333_v338_q0),
    .v339_address0(grp_Res_layer_fu_333_v339_address0),
    .v339_ce0(grp_Res_layer_fu_333_v339_ce0),
    .v339_we0(grp_Res_layer_fu_333_v339_we0),
    .v339_d0(grp_Res_layer_fu_333_v339_d0)
);

Bert_layer_fadd_3g8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fadd_3g8j_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_341_p0),
    .din1(grp_fu_341_p1),
    .ce(1'b1),
    .dout(grp_fu_341_p2)
);

Bert_layer_fmul_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fmul_3hbi_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_346_p0),
    .din1(grp_fu_346_p1),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

Bert_layer_fptrunEe0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Bert_layer_fptrunEe0_U170(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_351_p0),
    .ce(1'b1),
    .dout(grp_fu_351_p1)
);

Bert_layer_fpext_Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Bert_layer_fpext_Ffa_U171(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_354_p0),
    .ce(1'b1),
    .dout(grp_fu_354_p1)
);

Bert_layer_dmul_6bqm #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Bert_layer_dmul_6bqm_U172(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_364),
    .din1(grp_fu_358_p1),
    .ce(1'b1),
    .dout(grp_fu_358_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Layer_norm_fu_320_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state13))) begin
            grp_Layer_norm_fu_320_ap_start_reg <= 1'b1;
        end else if ((grp_Layer_norm_fu_320_ap_ready == 1'b1)) begin
            grp_Layer_norm_fu_320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Linear_layer_ds0_fu_310_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_Linear_layer_ds0_fu_310_ap_start_reg <= 1'b1;
        end else if ((grp_Linear_layer_ds0_fu_310_ap_ready == 1'b1)) begin
            grp_Linear_layer_ds0_fu_310_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Linear_layer_ds1_fu_274_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_Linear_layer_ds1_fu_274_ap_start_reg <= 1'b1;
        end else if ((grp_Linear_layer_ds1_fu_274_ap_ready == 1'b1)) begin
            grp_Linear_layer_ds1_fu_274_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Linear_layer_ds2_fu_284_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln767_fu_394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
            grp_Linear_layer_ds2_fu_284_ap_start_reg <= 1'b1;
        end else if ((grp_Linear_layer_ds2_fu_284_ap_ready == 1'b1)) begin
            grp_Linear_layer_ds2_fu_284_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Linear_layer_qkv_fu_294_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
            grp_Linear_layer_qkv_fu_294_ap_start_reg <= 1'b1;
        end else if ((grp_Linear_layer_qkv_fu_294_ap_ready == 1'b1)) begin
            grp_Linear_layer_qkv_fu_294_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Res_layer_fu_333_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state11))) begin
            grp_Res_layer_fu_333_ap_start_reg <= 1'b1;
        end else if ((grp_Res_layer_fu_333_ap_ready == 1'b1)) begin
            grp_Res_layer_fu_333_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Self_attention_fu_255_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_Self_attention_fu_255_ap_start_reg <= 1'b1;
        end else if ((grp_Self_attention_fu_255_ap_ready == 1'b1)) begin
            grp_Self_attention_fu_255_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_tanh_float_s_fu_263_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state120)) begin
            grp_generic_tanh_float_s_fu_263_ap_start_reg <= 1'b1;
        end else if ((grp_generic_tanh_float_s_fu_263_ap_ready == 1'b1)) begin
            grp_generic_tanh_float_s_fu_263_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_double_s_fu_226_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state21) & (1'b1 == ap_CS_fsm_state20))) begin
            grp_pow_generic_double_s_fu_226_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_double_s_fu_226_ap_ready == 1'b1)) begin
            grp_pow_generic_double_s_fu_226_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln768_fu_436_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i38_0_i_reg_204 <= i38_reg_465;
    end else if (((grp_Linear_layer_ds1_fu_274_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i38_0_i_reg_204 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        j37_0_i_reg_215 <= j37_reg_478;
    end else if (((icmp_ln767_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        j37_0_i_reg_215 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i38_reg_465 <= i38_fu_400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j37_reg_478 <= j37_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_364 <= grp_fu_354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state94))) begin
        reg_370 <= grp_fu_351_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state102))) begin
        reg_377 <= grp_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state109))) begin
        reg_382 <= grp_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state126))) begin
        reg_388 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln768_fu_436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        sext_ln769_reg_483 <= sext_ln769_fu_457_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln767_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        sub_ln769_reg_470[16 : 10] <= sub_ln769_fu_430_p2[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        tmp_i_i_i_reg_500 <= grp_pow_generic_double_s_fu_226_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        v466_reg_493 <= v577_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_generic_tanh_float_s_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state121))) begin
        v472_reg_505 <= grp_generic_tanh_float_s_fu_263_ap_return;
    end
end

always @ (*) begin
    if (((grp_Layer_norm_fu_320_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state136))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_Layer_norm_fu_320_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state136))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_Layer_norm_fu_320_v345_q0 = v580_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_Layer_norm_fu_320_v345_q0 = v575_q0;
    end else begin
        grp_Layer_norm_fu_320_v345_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_Layer_norm_fu_320_v346_q0 = v567_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_Layer_norm_fu_320_v346_q0 = v565_q0;
    end else begin
        grp_Layer_norm_fu_320_v346_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        grp_Layer_norm_fu_320_v347_q0 = v568_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_Layer_norm_fu_320_v347_q0 = v566_q0;
    end else begin
        grp_Layer_norm_fu_320_v347_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Linear_layer_qkv_fu_294_v1_q0 = v557_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Linear_layer_qkv_fu_294_v1_q0 = v555_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_Linear_layer_qkv_fu_294_v1_q0 = v553_q0;
    end else begin
        grp_Linear_layer_qkv_fu_294_v1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_Linear_layer_qkv_fu_294_v2_q0 = v558_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_Linear_layer_qkv_fu_294_v2_q0 = v556_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_Linear_layer_qkv_fu_294_v2_q0 = v554_q0;
    end else begin
        grp_Linear_layer_qkv_fu_294_v2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        grp_Res_layer_fu_333_v337_q0 = v579_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_Res_layer_fu_333_v337_q0 = v574_q0;
    end else begin
        grp_Res_layer_fu_333_v337_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        grp_Res_layer_fu_333_v338_q0 = v576_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_Res_layer_fu_333_v338_q0 = v552_q0;
    end else begin
        grp_Res_layer_fu_333_v338_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        grp_fu_341_p0 = v472_reg_505;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_fu_341_p0 = v466_reg_493;
    end else begin
        grp_fu_341_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state122)) begin
        grp_fu_341_p1 = 32'd1065353216;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_fu_341_p1 = reg_370;
    end else begin
        grp_fu_341_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_346_p0 = reg_388;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_346_p0 = v466_reg_493;
    end else begin
        grp_fu_346_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        grp_fu_346_p1 = reg_382;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        grp_fu_346_p1 = 32'd1056964608;
    end else begin
        grp_fu_346_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state103))) begin
        grp_fu_351_p0 = reg_377;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_351_p0 = tmp_i_i_i_reg_500;
    end else begin
        grp_fu_351_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        grp_fu_354_p0 = reg_382;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        grp_fu_354_p0 = reg_370;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_354_p0 = v577_q0;
    end else begin
        grp_fu_354_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        grp_fu_358_p1 = 64'd4605361928722645432;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_fu_358_p1 = 64'd4586604931670606327;
    end else begin
        grp_fu_358_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v552_address0 = grp_Res_layer_fu_333_v338_address0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        v552_address0 = grp_Linear_layer_qkv_fu_294_v0_address0;
    end else begin
        v552_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v552_ce0 = grp_Res_layer_fu_333_v338_ce0;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        v552_ce0 = grp_Linear_layer_qkv_fu_294_v0_ce0;
    end else begin
        v552_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v553_ce0 = grp_Linear_layer_qkv_fu_294_v1_ce0;
    end else begin
        v553_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v554_ce0 = grp_Linear_layer_qkv_fu_294_v2_ce0;
    end else begin
        v554_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v555_ce0 = grp_Linear_layer_qkv_fu_294_v1_ce0;
    end else begin
        v555_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v556_ce0 = grp_Linear_layer_qkv_fu_294_v2_ce0;
    end else begin
        v556_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v557_ce0 = grp_Linear_layer_qkv_fu_294_v1_ce0;
    end else begin
        v557_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v558_ce0 = grp_Linear_layer_qkv_fu_294_v2_ce0;
    end else begin
        v558_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v565_ce0 = grp_Layer_norm_fu_320_v346_ce0;
    end else begin
        v565_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v566_ce0 = grp_Layer_norm_fu_320_v347_ce0;
    end else begin
        v566_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        v567_ce0 = grp_Layer_norm_fu_320_v346_ce0;
    end else begin
        v567_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        v568_ce0 = grp_Layer_norm_fu_320_v347_ce0;
    end else begin
        v568_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        v569_ce0 = grp_Layer_norm_fu_320_v348_ce0;
    end else begin
        v569_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        v569_we0 = grp_Layer_norm_fu_320_v348_we0;
    end else begin
        v569_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v570_address0 = grp_Linear_layer_qkv_fu_294_v3_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v570_address0 = grp_Self_attention_fu_255_v241_address0;
    end else begin
        v570_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v570_ce0 = grp_Linear_layer_qkv_fu_294_v3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v570_ce0 = grp_Self_attention_fu_255_v241_ce0;
    end else begin
        v570_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v570_we0 = grp_Linear_layer_qkv_fu_294_v3_we0;
    end else begin
        v570_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v571_address0 = grp_Linear_layer_qkv_fu_294_v3_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v571_address0 = grp_Self_attention_fu_255_v242_address0;
    end else begin
        v571_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v571_ce0 = grp_Linear_layer_qkv_fu_294_v3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v571_ce0 = grp_Self_attention_fu_255_v242_ce0;
    end else begin
        v571_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v571_we0 = grp_Linear_layer_qkv_fu_294_v3_we0;
    end else begin
        v571_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v572_address0 = grp_Linear_layer_qkv_fu_294_v3_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v572_address0 = grp_Self_attention_fu_255_v243_address0;
    end else begin
        v572_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v572_ce0 = grp_Linear_layer_qkv_fu_294_v3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v572_ce0 = grp_Self_attention_fu_255_v243_ce0;
    end else begin
        v572_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v572_we0 = grp_Linear_layer_qkv_fu_294_v3_we0;
    end else begin
        v572_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v573_address0 = grp_Linear_layer_ds0_fu_310_v260_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v573_address0 = grp_Self_attention_fu_255_v244_address0;
    end else begin
        v573_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v573_ce0 = grp_Linear_layer_ds0_fu_310_v260_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v573_ce0 = grp_Self_attention_fu_255_v244_ce0;
    end else begin
        v573_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v573_we0 = grp_Self_attention_fu_255_v244_we0;
    end else begin
        v573_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v574_address0 = grp_Res_layer_fu_333_v337_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v574_address0 = grp_Linear_layer_ds0_fu_310_v263_address0;
    end else begin
        v574_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v574_ce0 = grp_Res_layer_fu_333_v337_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v574_ce0 = grp_Linear_layer_ds0_fu_310_v263_ce0;
    end else begin
        v574_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v574_we0 = grp_Linear_layer_ds0_fu_310_v263_we0;
    end else begin
        v574_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v575_address0 = grp_Res_layer_fu_333_v339_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v575_address0 = grp_Layer_norm_fu_320_v345_address0;
    end else begin
        v575_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v575_ce0 = grp_Res_layer_fu_333_v339_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v575_ce0 = grp_Layer_norm_fu_320_v345_ce0;
    end else begin
        v575_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v575_we0 = grp_Res_layer_fu_333_v339_we0;
    end else begin
        v575_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v576_address0 = grp_Res_layer_fu_333_v338_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v576_address0 = grp_Layer_norm_fu_320_v348_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        v576_address0 = grp_Linear_layer_ds1_fu_274_v385_address0;
    end else begin
        v576_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v576_ce0 = grp_Res_layer_fu_333_v338_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v576_ce0 = grp_Layer_norm_fu_320_v348_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        v576_ce0 = grp_Linear_layer_ds1_fu_274_v385_ce0;
    end else begin
        v576_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v576_we0 = grp_Layer_norm_fu_320_v348_we0;
    end else begin
        v576_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        v577_address0 = sext_ln769_fu_457_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        v577_address0 = grp_Linear_layer_ds1_fu_274_v388_address0;
    end else begin
        v577_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        v577_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        v577_ce0 = grp_Linear_layer_ds1_fu_274_v388_ce0;
    end else begin
        v577_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        v577_we0 = grp_Linear_layer_ds1_fu_274_v388_we0;
    end else begin
        v577_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        v578_address0 = sext_ln769_reg_483;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        v578_address0 = grp_Linear_layer_ds2_fu_284_v475_address0;
    end else begin
        v578_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        v578_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        v578_ce0 = grp_Linear_layer_ds2_fu_284_v475_ce0;
    end else begin
        v578_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        v578_we0 = 1'b1;
    end else begin
        v578_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v579_address0 = grp_Res_layer_fu_333_v337_address0;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        v579_address0 = grp_Linear_layer_ds2_fu_284_v478_address0;
    end else begin
        v579_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v579_ce0 = grp_Res_layer_fu_333_v337_ce0;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        v579_ce0 = grp_Linear_layer_ds2_fu_284_v478_ce0;
    end else begin
        v579_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        v579_we0 = grp_Linear_layer_ds2_fu_284_v478_we0;
    end else begin
        v579_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v580_address0 = grp_Res_layer_fu_333_v339_address0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        v580_address0 = grp_Layer_norm_fu_320_v345_address0;
    end else begin
        v580_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v580_ce0 = grp_Res_layer_fu_333_v339_ce0;
    end else if ((1'b1 == ap_CS_fsm_state136)) begin
        v580_ce0 = grp_Layer_norm_fu_320_v345_ce0;
    end else begin
        v580_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        v580_we0 = grp_Res_layer_fu_333_v339_we0;
    end else begin
        v580_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_Linear_layer_qkv_fu_294_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_Linear_layer_qkv_fu_294_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Linear_layer_qkv_fu_294_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_Self_attention_fu_255_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_Linear_layer_ds0_fu_310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_Res_layer_fu_333_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_Layer_norm_fu_320_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_Linear_layer_ds1_fu_274_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln767_fu_394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln768_fu_436_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            if (((grp_generic_tanh_float_s_fu_263_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state121))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state132 : begin
            if (((grp_Linear_layer_ds2_fu_284_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state132))) begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            if (((grp_Res_layer_fu_333_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state134))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            if (((grp_Layer_norm_fu_320_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state136))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln769_fu_452_p2 = (sub_ln769_reg_470 + zext_ln769_2_fu_448_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_NS_fsm_state21 = ap_NS_fsm[32'd20];

assign grp_Layer_norm_fu_320_ap_start = grp_Layer_norm_fu_320_ap_start_reg;

assign grp_Linear_layer_ds0_fu_310_ap_start = grp_Linear_layer_ds0_fu_310_ap_start_reg;

assign grp_Linear_layer_ds1_fu_274_ap_start = grp_Linear_layer_ds1_fu_274_ap_start_reg;

assign grp_Linear_layer_ds2_fu_284_ap_start = grp_Linear_layer_ds2_fu_284_ap_start_reg;

assign grp_Linear_layer_qkv_fu_294_ap_start = grp_Linear_layer_qkv_fu_294_ap_start_reg;

assign grp_Res_layer_fu_333_ap_start = grp_Res_layer_fu_333_ap_start_reg;

assign grp_Self_attention_fu_255_ap_start = grp_Self_attention_fu_255_ap_start_reg;

assign grp_generic_tanh_float_s_fu_263_ap_start = grp_generic_tanh_float_s_fu_263_ap_start_reg;

assign grp_pow_generic_double_s_fu_226_ap_start = grp_pow_generic_double_s_fu_226_ap_start_reg;

assign i38_fu_400_p2 = (i38_0_i_reg_204 + 4'd1);

assign icmp_ln767_fu_394_p2 = ((i38_0_i_reg_204 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_436_p2 = ((j37_0_i_reg_215 == 12'd3072) ? 1'b1 : 1'b0);

assign j37_fu_442_p2 = (j37_0_i_reg_215 + 12'd1);

assign sext_ln769_fu_457_p1 = $signed(add_ln769_fu_452_p2);

assign sub_ln769_fu_430_p2 = (zext_ln769_fu_414_p1 - zext_ln769_1_fu_426_p1);

assign tmp_fu_406_p3 = {{i38_0_i_reg_204}, {12'd0}};

assign tmp_s_fu_418_p3 = {{i38_0_i_reg_204}, {10'd0}};

assign v553_address0 = grp_Linear_layer_qkv_fu_294_v1_address0;

assign v554_address0 = grp_Linear_layer_qkv_fu_294_v2_address0;

assign v555_address0 = grp_Linear_layer_qkv_fu_294_v1_address0;

assign v556_address0 = grp_Linear_layer_qkv_fu_294_v2_address0;

assign v557_address0 = grp_Linear_layer_qkv_fu_294_v1_address0;

assign v558_address0 = grp_Linear_layer_qkv_fu_294_v2_address0;

assign v559_address0 = grp_Linear_layer_ds0_fu_310_v261_address0;

assign v559_ce0 = grp_Linear_layer_ds0_fu_310_v261_ce0;

assign v560_address0 = grp_Linear_layer_ds0_fu_310_v262_address0;

assign v560_ce0 = grp_Linear_layer_ds0_fu_310_v262_ce0;

assign v561_address0 = grp_Linear_layer_ds1_fu_274_v386_address0;

assign v561_ce0 = grp_Linear_layer_ds1_fu_274_v386_ce0;

assign v562_address0 = grp_Linear_layer_ds1_fu_274_v387_address0;

assign v562_ce0 = grp_Linear_layer_ds1_fu_274_v387_ce0;

assign v563_address0 = grp_Linear_layer_ds2_fu_284_v476_address0;

assign v563_ce0 = grp_Linear_layer_ds2_fu_284_v476_ce0;

assign v564_address0 = grp_Linear_layer_ds2_fu_284_v477_address0;

assign v564_ce0 = grp_Linear_layer_ds2_fu_284_v477_ce0;

assign v565_address0 = grp_Layer_norm_fu_320_v346_address0;

assign v566_address0 = grp_Layer_norm_fu_320_v347_address0;

assign v567_address0 = grp_Layer_norm_fu_320_v346_address0;

assign v568_address0 = grp_Layer_norm_fu_320_v347_address0;

assign v569_address0 = grp_Layer_norm_fu_320_v348_address0;

assign v569_d0 = grp_Layer_norm_fu_320_v348_d0;

assign zext_ln769_1_fu_426_p1 = tmp_s_fu_418_p3;

assign zext_ln769_2_fu_448_p1 = j37_0_i_reg_215;

assign zext_ln769_fu_414_p1 = tmp_fu_406_p3;

always @ (posedge ap_clk) begin
    sub_ln769_reg_470[9:0] <= 10'b0000000000;
end

endmodule //Bert_layer
