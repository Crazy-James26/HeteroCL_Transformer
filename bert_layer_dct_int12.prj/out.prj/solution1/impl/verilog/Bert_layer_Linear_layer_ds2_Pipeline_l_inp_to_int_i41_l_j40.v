// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Linear_layer_ds2_Pipeline_l_inp_to_int_i41_l_j40 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_inp3_address0,
        max_inp3_ce0,
        max_inp3_q0,
        v475_address0,
        v475_ce0,
        v475_q0,
        q_inp3_V_address0,
        q_inp3_V_ce0,
        q_inp3_V_we0,
        q_inp3_V_d0,
        grp_fu_655_p_din0,
        grp_fu_655_p_din1,
        grp_fu_655_p_dout0,
        grp_fu_655_p_ce,
        grp_fu_659_p_din0,
        grp_fu_659_p_din1,
        grp_fu_659_p_dout0,
        grp_fu_659_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] max_inp3_address0;
output   max_inp3_ce0;
input  [31:0] max_inp3_q0;
output  [15:0] v475_address0;
output   v475_ce0;
input  [31:0] v475_q0;
output  [15:0] q_inp3_V_address0;
output   q_inp3_V_ce0;
output   q_inp3_V_we0;
output  [11:0] q_inp3_V_d0;
output  [31:0] grp_fu_655_p_din0;
output  [31:0] grp_fu_655_p_din1;
input  [31:0] grp_fu_655_p_dout0;
output   grp_fu_655_p_ce;
output  [31:0] grp_fu_659_p_din0;
output  [31:0] grp_fu_659_p_din1;
input  [31:0] grp_fu_659_p_dout0;
output   grp_fu_659_p_ce;

reg ap_idle;
reg max_inp3_ce0;
reg v475_ce0;
reg q_inp3_V_ce0;
reg q_inp3_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln855_fu_156_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [11:0] select_ln855_fu_186_p3;
reg   [11:0] select_ln855_reg_484;
wire   [3:0] select_ln855_2_fu_194_p3;
reg   [3:0] select_ln855_2_reg_489;
reg   [3:0] select_ln855_2_reg_489_pp0_iter1_reg;
reg   [3:0] select_ln855_2_reg_489_pp0_iter2_reg;
reg   [3:0] select_ln855_2_reg_489_pp0_iter3_reg;
reg   [3:0] select_ln855_2_reg_489_pp0_iter4_reg;
wire   [63:0] zext_ln857_2_fu_256_p1;
reg   [63:0] zext_ln857_2_reg_496;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter2_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter3_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter4_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter5_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter6_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter7_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter8_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter9_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter10_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter11_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter12_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter13_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter14_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter15_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter16_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter17_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter18_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter19_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter20_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter21_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter22_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter23_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter24_reg;
reg   [63:0] zext_ln857_2_reg_496_pp0_iter25_reg;
reg   [31:0] v518_reg_506;
reg   [31:0] max_inp3_load_reg_516;
reg   [31:0] v519_reg_521;
reg   [31:0] v521_reg_526;
wire   [31:0] reg_fu_265_p1;
reg   [31:0] reg_reg_531;
reg   [0:0] p_Result_s_reg_536;
reg   [0:0] p_Result_s_reg_536_pp0_iter24_reg;
wire   [11:0] v522_V_fu_294_p1;
reg   [11:0] v522_V_reg_541;
reg   [11:0] v522_V_reg_541_pp0_iter24_reg;
wire   [0:0] icmp_ln295_fu_298_p2;
reg   [0:0] icmp_ln295_reg_547;
reg   [0:0] icmp_ln295_reg_547_pp0_iter24_reg;
wire  signed [8:0] sh_amt_fu_304_p2;
reg  signed [8:0] sh_amt_reg_553;
wire   [0:0] icmp_ln299_fu_310_p2;
reg   [0:0] icmp_ln299_reg_561;
reg   [0:0] icmp_ln299_reg_561_pp0_iter24_reg;
wire   [0:0] icmp_ln301_fu_330_p2;
reg   [0:0] icmp_ln301_reg_567;
wire  signed [8:0] sh_amt_3_fu_340_p2;
reg  signed [8:0] sh_amt_3_reg_572;
wire   [0:0] icmp_ln320_fu_345_p2;
reg   [0:0] icmp_ln320_reg_577;
wire   [0:0] or_ln299_fu_365_p2;
reg   [0:0] or_ln299_reg_582;
wire   [11:0] v522_V_3_fu_387_p3;
reg   [11:0] v522_V_3_reg_587;
wire   [11:0] v522_V_7_fu_452_p3;
reg   [11:0] v522_V_7_reg_592;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln855_fu_261_p1;
reg   [11:0] j40_fu_78;
wire   [11:0] add_ln856_fu_202_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_j40_load;
reg   [3:0] i41_fu_82;
reg   [3:0] ap_sig_allocacmp_i41_load;
reg   [15:0] indvar_flatten11_fu_86;
wire   [15:0] add_ln855_1_fu_162_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten11_load;
wire   [0:0] icmp_ln856_fu_180_p2;
wire   [3:0] add_ln855_fu_174_p2;
wire   [13:0] tmp_fu_230_p3;
wire   [15:0] p_shl6_fu_223_p3;
wire   [15:0] zext_ln857_fu_237_p1;
wire   [15:0] sub_ln857_fu_241_p2;
wire   [15:0] zext_ln857_1_fu_247_p1;
wire   [15:0] add_ln857_fu_250_p2;
wire   [7:0] exp_fu_280_p4;
wire   [30:0] trunc_ln278_fu_268_p1;
wire   [8:0] zext_ln283_fu_290_p1;
wire   [22:0] trunc_ln287_fu_316_p1;
wire   [23:0] zext_ln304_cast_fu_319_p3;
wire   [31:0] zext_ln304_fu_351_p1;
wire  signed [31:0] sext_ln298_fu_327_p1;
wire   [31:0] lshr_ln304_fu_355_p2;
wire   [0:0] icmp_ln302_fu_335_p2;
wire   [0:0] xor_ln299_fu_369_p2;
wire   [0:0] and_ln302_fu_375_p2;
wire   [0:0] and_ln302_3_fu_381_p2;
wire   [11:0] v522_V_1_fu_361_p1;
wire  signed [31:0] sext_ln298_3_fu_395_p1;
wire   [11:0] sext_ln298_3cast_fu_398_p1;
wire   [0:0] or_ln301_fu_407_p2;
wire   [0:0] xor_ln301_fu_411_p2;
wire   [0:0] and_ln320_fu_417_p2;
wire   [11:0] shl_ln322_fu_402_p2;
wire   [0:0] xor_ln295_fu_429_p2;
wire   [0:0] and_ln299_fu_434_p2;
wire   [11:0] v522_V_4_fu_422_p3;
wire   [11:0] v522_V_5_fu_439_p3;
wire   [11:0] v522_V_6_fu_446_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter25_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln855_fu_156_p2 == 1'd0))) begin
            i41_fu_82 <= select_ln855_2_fu_194_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i41_fu_82 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln855_fu_156_p2 == 1'd0))) begin
            indvar_flatten11_fu_86 <= add_ln855_1_fu_162_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten11_fu_86 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln855_fu_156_p2 == 1'd0))) begin
            j40_fu_78 <= add_ln856_fu_202_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j40_fu_78 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln295_reg_547 <= icmp_ln295_fu_298_p2;
        icmp_ln295_reg_547_pp0_iter24_reg <= icmp_ln295_reg_547;
        icmp_ln299_reg_561 <= icmp_ln299_fu_310_p2;
        icmp_ln299_reg_561_pp0_iter24_reg <= icmp_ln299_reg_561;
        icmp_ln301_reg_567 <= icmp_ln301_fu_330_p2;
        icmp_ln320_reg_577 <= icmp_ln320_fu_345_p2;
        max_inp3_load_reg_516 <= max_inp3_q0;
        or_ln299_reg_582 <= or_ln299_fu_365_p2;
        p_Result_s_reg_536 <= reg_fu_265_p1[32'd31];
        p_Result_s_reg_536_pp0_iter24_reg <= p_Result_s_reg_536;
        reg_reg_531 <= reg_fu_265_p1;
        select_ln855_2_reg_489_pp0_iter2_reg <= select_ln855_2_reg_489_pp0_iter1_reg;
        select_ln855_2_reg_489_pp0_iter3_reg <= select_ln855_2_reg_489_pp0_iter2_reg;
        select_ln855_2_reg_489_pp0_iter4_reg <= select_ln855_2_reg_489_pp0_iter3_reg;
        sh_amt_3_reg_572 <= sh_amt_3_fu_340_p2;
        sh_amt_reg_553 <= sh_amt_fu_304_p2;
        v518_reg_506 <= v475_q0;
        v519_reg_521 <= grp_fu_655_p_dout0;
        v521_reg_526 <= grp_fu_659_p_dout0;
        v522_V_3_reg_587 <= v522_V_3_fu_387_p3;
        v522_V_7_reg_592 <= v522_V_7_fu_452_p3;
        v522_V_reg_541 <= v522_V_fu_294_p1;
        v522_V_reg_541_pp0_iter24_reg <= v522_V_reg_541;
        zext_ln857_2_reg_496_pp0_iter10_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter9_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter11_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter10_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter12_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter11_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter13_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter12_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter14_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter13_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter15_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter14_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter16_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter15_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter17_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter16_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter18_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter17_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter19_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter18_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter20_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter19_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter21_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter20_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter22_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter21_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter23_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter22_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter24_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter23_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter25_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter24_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter2_reg[15 : 0] <= zext_ln857_2_reg_496[15 : 0];
        zext_ln857_2_reg_496_pp0_iter3_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter2_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter4_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter3_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter5_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter4_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter6_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter5_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter7_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter6_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter8_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter7_reg[15 : 0];
        zext_ln857_2_reg_496_pp0_iter9_reg[15 : 0] <= zext_ln857_2_reg_496_pp0_iter8_reg[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln855_2_reg_489_pp0_iter1_reg <= select_ln855_2_reg_489;
        zext_ln857_2_reg_496[15 : 0] <= zext_ln857_2_fu_256_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln855_fu_156_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln855_2_reg_489 <= select_ln855_2_fu_194_p3;
        select_ln855_reg_484 <= select_ln855_fu_186_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln855_fu_156_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter25_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i41_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i41_load = i41_fu_82;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten11_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten11_load = indvar_flatten11_fu_86;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j40_load = 12'd0;
    end else begin
        ap_sig_allocacmp_j40_load = j40_fu_78;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_inp3_ce0 = 1'b1;
    end else begin
        max_inp3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        q_inp3_V_ce0 = 1'b1;
    end else begin
        q_inp3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        q_inp3_V_we0 = 1'b1;
    end else begin
        q_inp3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v475_ce0 = 1'b1;
    end else begin
        v475_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln855_1_fu_162_p2 = (ap_sig_allocacmp_indvar_flatten11_load + 16'd1);

assign add_ln855_fu_174_p2 = (ap_sig_allocacmp_i41_load + 4'd1);

assign add_ln856_fu_202_p2 = (select_ln855_fu_186_p3 + 12'd1);

assign add_ln857_fu_250_p2 = (sub_ln857_fu_241_p2 + zext_ln857_1_fu_247_p1);

assign and_ln299_fu_434_p2 = (xor_ln295_fu_429_p2 & icmp_ln299_reg_561_pp0_iter24_reg);

assign and_ln302_3_fu_381_p2 = (icmp_ln301_fu_330_p2 & and_ln302_fu_375_p2);

assign and_ln302_fu_375_p2 = (xor_ln299_fu_369_p2 & icmp_ln302_fu_335_p2);

assign and_ln320_fu_417_p2 = (xor_ln301_fu_411_p2 & icmp_ln320_reg_577);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign exp_fu_280_p4 = {{reg_fu_265_p1[30:23]}};

assign grp_fu_655_p_ce = 1'b1;

assign grp_fu_655_p_din0 = v518_reg_506;

assign grp_fu_655_p_din1 = 32'd1157619712;

assign grp_fu_659_p_ce = 1'b1;

assign grp_fu_659_p_din0 = v519_reg_521;

assign grp_fu_659_p_din1 = max_inp3_load_reg_516;

assign icmp_ln295_fu_298_p2 = ((trunc_ln278_fu_268_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_310_p2 = ((exp_fu_280_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_330_p2 = (($signed(sh_amt_reg_553) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_335_p2 = (($signed(sh_amt_reg_553) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln320_fu_345_p2 = (($signed(sh_amt_3_fu_340_p2) < $signed(9'd12)) ? 1'b1 : 1'b0);

assign icmp_ln855_fu_156_p2 = ((ap_sig_allocacmp_indvar_flatten11_load == 16'd36864) ? 1'b1 : 1'b0);

assign icmp_ln856_fu_180_p2 = ((ap_sig_allocacmp_j40_load == 12'd3072) ? 1'b1 : 1'b0);

assign lshr_ln304_fu_355_p2 = zext_ln304_fu_351_p1 >> sext_ln298_fu_327_p1;

assign max_inp3_address0 = zext_ln855_fu_261_p1;

assign or_ln299_fu_365_p2 = (icmp_ln299_reg_561 | icmp_ln295_reg_547);

assign or_ln301_fu_407_p2 = (or_ln299_reg_582 | icmp_ln301_reg_567);

assign p_shl6_fu_223_p3 = {{select_ln855_2_reg_489}, {12'd0}};

assign q_inp3_V_address0 = zext_ln857_2_reg_496_pp0_iter25_reg;

assign q_inp3_V_d0 = v522_V_7_reg_592;

assign reg_fu_265_p1 = v521_reg_526;

assign select_ln855_2_fu_194_p3 = ((icmp_ln856_fu_180_p2[0:0] == 1'b1) ? add_ln855_fu_174_p2 : ap_sig_allocacmp_i41_load);

assign select_ln855_fu_186_p3 = ((icmp_ln856_fu_180_p2[0:0] == 1'b1) ? 12'd0 : ap_sig_allocacmp_j40_load);

assign sext_ln298_3_fu_395_p1 = sh_amt_3_reg_572;

assign sext_ln298_3cast_fu_398_p1 = sext_ln298_3_fu_395_p1[11:0];

assign sext_ln298_fu_327_p1 = sh_amt_reg_553;

assign sh_amt_3_fu_340_p2 = ($signed(9'd0) - $signed(sh_amt_reg_553));

assign sh_amt_fu_304_p2 = (9'd150 - zext_ln283_fu_290_p1);

assign shl_ln322_fu_402_p2 = v522_V_reg_541_pp0_iter24_reg << sext_ln298_3cast_fu_398_p1;

assign sub_ln857_fu_241_p2 = (p_shl6_fu_223_p3 - zext_ln857_fu_237_p1);

assign tmp_fu_230_p3 = {{select_ln855_2_reg_489}, {10'd0}};

assign trunc_ln278_fu_268_p1 = reg_fu_265_p1[30:0];

assign trunc_ln287_fu_316_p1 = reg_reg_531[22:0];

assign v475_address0 = zext_ln857_2_fu_256_p1;

assign v522_V_1_fu_361_p1 = lshr_ln304_fu_355_p2[11:0];

assign v522_V_3_fu_387_p3 = ((and_ln302_3_fu_381_p2[0:0] == 1'b1) ? v522_V_1_fu_361_p1 : 12'd0);

assign v522_V_4_fu_422_p3 = ((and_ln320_fu_417_p2[0:0] == 1'b1) ? shl_ln322_fu_402_p2 : v522_V_3_reg_587);

assign v522_V_5_fu_439_p3 = ((and_ln299_fu_434_p2[0:0] == 1'b1) ? v522_V_reg_541_pp0_iter24_reg : v522_V_4_fu_422_p3);

assign v522_V_6_fu_446_p2 = (12'd0 - v522_V_5_fu_439_p3);

assign v522_V_7_fu_452_p3 = ((p_Result_s_reg_536_pp0_iter24_reg[0:0] == 1'b1) ? v522_V_6_fu_446_p2 : v522_V_5_fu_439_p3);

assign v522_V_fu_294_p1 = reg_fu_265_p1[11:0];

assign xor_ln295_fu_429_p2 = (icmp_ln295_reg_547_pp0_iter24_reg ^ 1'd1);

assign xor_ln299_fu_369_p2 = (or_ln299_fu_365_p2 ^ 1'd1);

assign xor_ln301_fu_411_p2 = (or_ln301_fu_407_p2 ^ 1'd1);

assign zext_ln283_fu_290_p1 = exp_fu_280_p4;

assign zext_ln304_cast_fu_319_p3 = {{1'd1}, {trunc_ln287_fu_316_p1}};

assign zext_ln304_fu_351_p1 = zext_ln304_cast_fu_319_p3;

assign zext_ln855_fu_261_p1 = select_ln855_2_reg_489_pp0_iter4_reg;

assign zext_ln857_1_fu_247_p1 = select_ln855_reg_484;

assign zext_ln857_2_fu_256_p1 = add_ln857_fu_250_p2;

assign zext_ln857_fu_237_p1 = tmp_fu_230_p3;

always @ (posedge ap_clk) begin
    zext_ln857_2_reg_496[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter2_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter3_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter4_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter5_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter6_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter7_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter8_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter9_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter10_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter11_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter12_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter13_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter14_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter15_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter16_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter17_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter18_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter19_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter20_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter21_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter22_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter23_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter24_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln857_2_reg_496_pp0_iter25_reg[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Linear_layer_ds2_Pipeline_l_inp_to_int_i41_l_j40
