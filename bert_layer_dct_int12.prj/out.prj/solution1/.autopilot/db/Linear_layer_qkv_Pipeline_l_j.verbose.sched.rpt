

================================================================
== Vitis HLS Report for 'Linear_layer_qkv_Pipeline_l_j'
================================================================
* Date:           Sun Sep  3 07:02:55 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.424 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2307|     2307|  23.070 us|  23.070 us|  2307|  2307|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_j     |     2305|     2305|         5|          3|          1|   768|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 3, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.06>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%v17 = alloca i32 1"   --->   Operation 8 'alloca' 'v17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 9 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sub_ln40_read = read i14 @_ssdm_op_Read.ap_auto.i14, i14 %sub_ln40"   --->   Operation 10 'read' 'sub_ln40_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln38_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %zext_ln38"   --->   Operation 11 'read' 'zext_ln38_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%max_inp_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %max_inp_load"   --->   Operation 12 'read' 'max_inp_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln38_cast = zext i4 %zext_ln38_read"   --->   Operation 13 'zext' 'zext_ln38_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %v552, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln0 = store i10 0, i10 %j"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %max_inp_load_read, i32 %v17"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body56"   --->   Operation 17 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j_1 = load i10 %j" [kernel.cpp:39]   --->   Operation 18 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%max_inp_addr = getelementptr i32 %max_inp, i64 0, i64 %zext_ln38_cast"   --->   Operation 19 'getelementptr' 'max_inp_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 20 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.77ns)   --->   "%icmp_ln39 = icmp_eq  i10 %j_1, i10 768" [kernel.cpp:39]   --->   Operation 21 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 768, i64 768, i64 768"   --->   Operation 22 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.73ns)   --->   "%add_ln39 = add i10 %j_1, i10 1" [kernel.cpp:39]   --->   Operation 23 'add' 'add_ln39' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %for.body56.split_ifconv, void %for.inc100.exitStub" [kernel.cpp:39]   --->   Operation 24 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i10 %j_1" [kernel.cpp:40]   --->   Operation 25 'zext' 'zext_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.81ns)   --->   "%add_ln40 = add i14 %sub_ln40_read, i14 %zext_ln40" [kernel.cpp:40]   --->   Operation 26 'add' 'add_ln40' <Predicate = (!icmp_ln39)> <Delay = 1.81> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln40_1 = zext i14 %add_ln40" [kernel.cpp:40]   --->   Operation 27 'zext' 'zext_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%v552_addr = getelementptr i32 %v552, i64 0, i64 %zext_ln40_1" [kernel.cpp:40]   --->   Operation 28 'getelementptr' 'v552_addr' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (3.25ns)   --->   "%v552_load = load i14 %v552_addr" [kernel.cpp:40]   --->   Operation 29 'load' 'v552_load' <Predicate = (!icmp_ln39)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9216> <RAM>
ST_1 : Operation 30 [1/1] (1.77ns)   --->   "%ifzero = icmp_eq  i10 %add_ln39, i10 768" [kernel.cpp:39]   --->   Operation 30 'icmp' 'ifzero' <Predicate = (!icmp_ln39)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %ifzero, void %ifFalse, void %ifTrue" [kernel.cpp:39]   --->   Operation 31 'br' 'br_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.70>
ST_2 : Operation 32 [1/2] (3.25ns)   --->   "%v552_load = load i14 %v552_addr" [kernel.cpp:40]   --->   Operation 32 'load' 'v552_load' <Predicate = (!icmp_ln39)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9216> <RAM>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %v552_load, i32 23, i32 30" [kernel.cpp:41]   --->   Operation 33 'partselect' 'tmp_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln41 = trunc i32 %v552_load" [kernel.cpp:41]   --->   Operation 34 'trunc' 'trunc_ln41' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.55ns)   --->   "%icmp_ln41 = icmp_ne  i8 %tmp_1, i8 255" [kernel.cpp:41]   --->   Operation 35 'icmp' 'icmp_ln41' <Predicate = (!icmp_ln39)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (2.44ns)   --->   "%icmp_ln41_1 = icmp_eq  i23 %trunc_ln41, i23 0" [kernel.cpp:41]   --->   Operation 36 'icmp' 'icmp_ln41_1' <Predicate = (!icmp_ln39)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 71 'ret' 'ret_ln0' <Predicate = (icmp_ln39)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.42>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%v17_load = load i32 %v17" [kernel.cpp:46]   --->   Operation 37 'load' 'v17_load' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%v15 = bitcast i32 %v552_load" [kernel.cpp:53]   --->   Operation 38 'bitcast' 'v15' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (5.43ns)   --->   "%tmp_2 = fcmp_oge  i32 %v15, i32 0" [kernel.cpp:41]   --->   Operation 39 'fcmp' 'tmp_2' <Predicate = (!icmp_ln39)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.99ns)   --->   "%xor_ln53 = xor i32 %v552_load, i32 2147483648" [kernel.cpp:53]   --->   Operation 40 'xor' 'xor_ln53' <Predicate = (!icmp_ln39)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%v23 = bitcast i32 %xor_ln53" [kernel.cpp:53]   --->   Operation 41 'bitcast' 'v23' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %xor_ln53, i32 23, i32 30" [kernel.cpp:54]   --->   Operation 42 'partselect' 'tmp_4' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.55ns)   --->   "%icmp_ln54_2 = icmp_ne  i8 %tmp_4, i8 255" [kernel.cpp:54]   --->   Operation 43 'icmp' 'icmp_ln54_2' <Predicate = (!icmp_ln39)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [2/2] (5.43ns)   --->   "%tmp_5 = fcmp_olt  i32 %v17_load, i32 %v23" [kernel.cpp:54]   --->   Operation 44 'fcmp' 'tmp_5' <Predicate = (!icmp_ln39)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [2/2] (5.43ns)   --->   "%tmp_7 = fcmp_olt  i32 %v17_load, i32 %v15" [kernel.cpp:45]   --->   Operation 45 'fcmp' 'tmp_7' <Predicate = (!icmp_ln39)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln39 = store i10 %add_ln39, i10 %j" [kernel.cpp:39]   --->   Operation 46 'store' 'store_ln39' <Predicate = (!icmp_ln39)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.40>
ST_4 : Operation 47 [1/1] (0.97ns)   --->   "%or_ln41 = or i1 %icmp_ln41_1, i1 %icmp_ln41" [kernel.cpp:41]   --->   Operation 47 'or' 'or_ln41' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/2] (5.43ns)   --->   "%tmp_2 = fcmp_oge  i32 %v15, i32 0" [kernel.cpp:41]   --->   Operation 48 'fcmp' 'tmp_2' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%bitcast_ln54 = bitcast i32 %v17_load" [kernel.cpp:54]   --->   Operation 49 'bitcast' 'bitcast_ln54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln54, i32 23, i32 30" [kernel.cpp:54]   --->   Operation 50 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i32 %bitcast_ln54" [kernel.cpp:54]   --->   Operation 51 'trunc' 'trunc_ln54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.55ns)   --->   "%icmp_ln54 = icmp_ne  i8 %tmp_3, i8 255" [kernel.cpp:54]   --->   Operation 52 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (2.44ns)   --->   "%icmp_ln54_1 = icmp_eq  i23 %trunc_ln54, i23 0" [kernel.cpp:54]   --->   Operation 53 'icmp' 'icmp_ln54_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.97ns)   --->   "%or_ln54 = or i1 %icmp_ln54_1, i1 %icmp_ln54" [kernel.cpp:54]   --->   Operation 54 'or' 'or_ln54' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln55)   --->   "%or_ln54_1 = or i1 %icmp_ln41_1, i1 %icmp_ln54_2" [kernel.cpp:54]   --->   Operation 55 'or' 'or_ln54_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/2] (5.43ns)   --->   "%tmp_5 = fcmp_olt  i32 %v17_load, i32 %v23" [kernel.cpp:54]   --->   Operation 56 'fcmp' 'tmp_5' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln55)   --->   "%and_ln54 = and i1 %tmp_5, i1 %or_ln54" [kernel.cpp:54]   --->   Operation 57 'and' 'and_ln54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln55)   --->   "%v24 = and i1 %and_ln54, i1 %or_ln54_1" [kernel.cpp:54]   --->   Operation 58 'and' 'v24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln55 = select i1 %v24, i32 %v23, i32 %v17_load" [kernel.cpp:55]   --->   Operation 59 'select' 'select_ln55' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 60 [1/2] (5.43ns)   --->   "%tmp_7 = fcmp_olt  i32 %v17_load, i32 %v15" [kernel.cpp:45]   --->   Operation 60 'fcmp' 'tmp_7' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln46)   --->   "%and_ln45 = and i1 %tmp_7, i1 %or_ln54" [kernel.cpp:45]   --->   Operation 61 'and' 'and_ln45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln46)   --->   "%v19 = and i1 %and_ln45, i1 %or_ln41" [kernel.cpp:45]   --->   Operation 62 'and' 'v19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln46 = select i1 %v19, i32 %v15, i32 %v17_load" [kernel.cpp:46]   --->   Operation 63 'select' 'select_ln46' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.30>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%specloopname_ln39 = specloopname void @_ssdm_op_SpecLoopName, void @empty_47" [kernel.cpp:39]   --->   Operation 64 'specloopname' 'specloopname_ln39' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln41)   --->   "%and_ln41 = and i1 %or_ln41, i1 %tmp_2" [kernel.cpp:41]   --->   Operation 65 'and' 'and_ln41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln41 = select i1 %and_ln41, i32 %select_ln46, i32 %select_ln55" [kernel.cpp:41]   --->   Operation 66 'select' 'select_ln41' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (2.32ns)   --->   "%store_ln58 = store i32 %select_ln41, i4 %max_inp_addr" [kernel.cpp:58]   --->   Operation 67 'store' 'store_ln58' <Predicate = (ifzero)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse"   --->   Operation 68 'br' 'br_ln0' <Predicate = (ifzero)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln41 = store i32 %select_ln41, i32 %v17" [kernel.cpp:41]   --->   Operation 69 'store' 'store_ln41' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body56"   --->   Operation 70 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.07ns
The critical path consists of the following:
	'alloca' operation ('j') [7]  (0 ns)
	'load' operation ('j', kernel.cpp:39) on local variable 'j' [17]  (0 ns)
	'add' operation ('add_ln40', kernel.cpp:40) [27]  (1.81 ns)
	'getelementptr' operation ('v552_addr', kernel.cpp:40) [29]  (0 ns)
	'load' operation ('v552_load', kernel.cpp:40) on array 'v552' [31]  (3.25 ns)

 <State 2>: 5.7ns
The critical path consists of the following:
	'load' operation ('v552_load', kernel.cpp:40) on array 'v552' [31]  (3.25 ns)
	'icmp' operation ('icmp_ln41_1', kernel.cpp:41) [36]  (2.45 ns)

 <State 3>: 6.42ns
The critical path consists of the following:
	'xor' operation ('xor_ln53', kernel.cpp:53) [40]  (0.993 ns)
	'fcmp' operation ('tmp_5', kernel.cpp:54) [51]  (5.43 ns)

 <State 4>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', kernel.cpp:54) [51]  (5.43 ns)
	'and' operation ('and_ln54', kernel.cpp:54) [52]  (0 ns)
	'and' operation ('v24', kernel.cpp:54) [53]  (0 ns)
	'select' operation ('select_ln55', kernel.cpp:55) [54]  (0.978 ns)

 <State 5>: 3.3ns
The critical path consists of the following:
	'and' operation ('and_ln41', kernel.cpp:41) [39]  (0 ns)
	'select' operation ('select_ln41', kernel.cpp:41) [59]  (0.978 ns)
	'store' operation ('store_ln58', kernel.cpp:58) of variable 'select_ln41', kernel.cpp:41 on array 'max_inp' [63]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
