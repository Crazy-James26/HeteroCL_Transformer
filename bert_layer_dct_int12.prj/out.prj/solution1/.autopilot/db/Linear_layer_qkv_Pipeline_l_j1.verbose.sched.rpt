

================================================================
== Vitis HLS Report for 'Linear_layer_qkv_Pipeline_l_j1'
================================================================
* Date:           Sun Sep  3 07:02:55 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.424 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2307|     2307|  23.070 us|  23.070 us|  2307|  2307|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_j1    |     2305|     2305|         5|          3|          1|   768|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 3, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.44>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%v31 = alloca i32 1"   --->   Operation 8 'alloca' 'v31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%j1 = alloca i32 1"   --->   Operation 9 'alloca' 'j1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sub_ln65_read = read i20 @_ssdm_op_Read.ap_auto.i20, i20 %sub_ln65"   --->   Operation 10 'read' 'sub_ln65_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln63_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %zext_ln63"   --->   Operation 11 'read' 'zext_ln63_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%max_W_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %max_W_load"   --->   Operation 12 'read' 'max_W_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln63_cast = zext i10 %zext_ln63_read"   --->   Operation 13 'zext' 'zext_ln63_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %v553, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln0 = store i10 0, i10 %j1"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %max_W_load_read, i32 %v31"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body110"   --->   Operation 17 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j1_1 = load i10 %j1" [kernel.cpp:64]   --->   Operation 18 'load' 'j1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%max_W_addr = getelementptr i32 %max_W, i64 0, i64 %zext_ln63_cast"   --->   Operation 19 'getelementptr' 'max_W_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 20 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.77ns)   --->   "%icmp_ln64 = icmp_eq  i10 %j1_1, i10 768" [kernel.cpp:64]   --->   Operation 21 'icmp' 'icmp_ln64' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 768, i64 768, i64 768"   --->   Operation 22 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.73ns)   --->   "%add_ln64 = add i10 %j1_1, i10 1" [kernel.cpp:64]   --->   Operation 23 'add' 'add_ln64' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %icmp_ln64, void %for.body110.split_ifconv, void %for.inc159.exitStub" [kernel.cpp:64]   --->   Operation 24 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i10 %j1_1" [kernel.cpp:65]   --->   Operation 25 'zext' 'zext_ln65' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (2.19ns)   --->   "%add_ln65 = add i20 %sub_ln65_read, i20 %zext_ln65" [kernel.cpp:65]   --->   Operation 26 'add' 'add_ln65' <Predicate = (!icmp_ln64)> <Delay = 2.19> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.19> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln65_1 = zext i20 %add_ln65" [kernel.cpp:65]   --->   Operation 27 'zext' 'zext_ln65_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%v553_addr = getelementptr i32 %v553, i64 0, i64 %zext_ln65_1" [kernel.cpp:65]   --->   Operation 28 'getelementptr' 'v553_addr' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (3.25ns)   --->   "%v553_load = load i20 %v553_addr" [kernel.cpp:65]   --->   Operation 29 'load' 'v553_load' <Predicate = (!icmp_ln64)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 589824> <RAM>
ST_1 : Operation 30 [1/1] (1.77ns)   --->   "%ifzero5 = icmp_eq  i10 %add_ln64, i10 768" [kernel.cpp:64]   --->   Operation 30 'icmp' 'ifzero5' <Predicate = (!icmp_ln64)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %ifzero5, void %ifFalse4, void %ifTrue3" [kernel.cpp:64]   --->   Operation 31 'br' 'br_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.70>
ST_2 : Operation 32 [1/2] (3.25ns)   --->   "%v553_load = load i20 %v553_addr" [kernel.cpp:65]   --->   Operation 32 'load' 'v553_load' <Predicate = (!icmp_ln64)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 589824> <RAM>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %v553_load, i32 23, i32 30" [kernel.cpp:66]   --->   Operation 33 'partselect' 'tmp_8' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln66 = trunc i32 %v553_load" [kernel.cpp:66]   --->   Operation 34 'trunc' 'trunc_ln66' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.55ns)   --->   "%icmp_ln66 = icmp_ne  i8 %tmp_8, i8 255" [kernel.cpp:66]   --->   Operation 35 'icmp' 'icmp_ln66' <Predicate = (!icmp_ln64)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (2.44ns)   --->   "%icmp_ln66_1 = icmp_eq  i23 %trunc_ln66, i23 0" [kernel.cpp:66]   --->   Operation 36 'icmp' 'icmp_ln66_1' <Predicate = (!icmp_ln64)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 71 'ret' 'ret_ln0' <Predicate = (icmp_ln64)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.42>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%v31_load = load i32 %v31" [kernel.cpp:71]   --->   Operation 37 'load' 'v31_load' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%v29 = bitcast i32 %v553_load" [kernel.cpp:78]   --->   Operation 38 'bitcast' 'v29' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (5.43ns)   --->   "%tmp_9 = fcmp_oge  i32 %v29, i32 0" [kernel.cpp:66]   --->   Operation 39 'fcmp' 'tmp_9' <Predicate = (!icmp_ln64)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.99ns)   --->   "%xor_ln78 = xor i32 %v553_load, i32 2147483648" [kernel.cpp:78]   --->   Operation 40 'xor' 'xor_ln78' <Predicate = (!icmp_ln64)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%v37 = bitcast i32 %xor_ln78" [kernel.cpp:78]   --->   Operation 41 'bitcast' 'v37' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %xor_ln78, i32 23, i32 30" [kernel.cpp:79]   --->   Operation 42 'partselect' 'tmp_11' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.55ns)   --->   "%icmp_ln79_2 = icmp_ne  i8 %tmp_11, i8 255" [kernel.cpp:79]   --->   Operation 43 'icmp' 'icmp_ln79_2' <Predicate = (!icmp_ln64)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [2/2] (5.43ns)   --->   "%tmp_12 = fcmp_olt  i32 %v31_load, i32 %v37" [kernel.cpp:79]   --->   Operation 44 'fcmp' 'tmp_12' <Predicate = (!icmp_ln64)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [2/2] (5.43ns)   --->   "%tmp_13 = fcmp_olt  i32 %v31_load, i32 %v29" [kernel.cpp:70]   --->   Operation 45 'fcmp' 'tmp_13' <Predicate = (!icmp_ln64)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln64 = store i10 %add_ln64, i10 %j1" [kernel.cpp:64]   --->   Operation 46 'store' 'store_ln64' <Predicate = (!icmp_ln64)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.40>
ST_4 : Operation 47 [1/1] (0.97ns)   --->   "%or_ln66 = or i1 %icmp_ln66_1, i1 %icmp_ln66" [kernel.cpp:66]   --->   Operation 47 'or' 'or_ln66' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/2] (5.43ns)   --->   "%tmp_9 = fcmp_oge  i32 %v29, i32 0" [kernel.cpp:66]   --->   Operation 48 'fcmp' 'tmp_9' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%bitcast_ln79 = bitcast i32 %v31_load" [kernel.cpp:79]   --->   Operation 49 'bitcast' 'bitcast_ln79' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln79, i32 23, i32 30" [kernel.cpp:79]   --->   Operation 50 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i32 %bitcast_ln79" [kernel.cpp:79]   --->   Operation 51 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.55ns)   --->   "%icmp_ln79 = icmp_ne  i8 %tmp_10, i8 255" [kernel.cpp:79]   --->   Operation 52 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (2.44ns)   --->   "%icmp_ln79_1 = icmp_eq  i23 %trunc_ln79, i23 0" [kernel.cpp:79]   --->   Operation 53 'icmp' 'icmp_ln79_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.97ns)   --->   "%or_ln79 = or i1 %icmp_ln79_1, i1 %icmp_ln79" [kernel.cpp:79]   --->   Operation 54 'or' 'or_ln79' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node select_ln80)   --->   "%or_ln79_1 = or i1 %icmp_ln66_1, i1 %icmp_ln79_2" [kernel.cpp:79]   --->   Operation 55 'or' 'or_ln79_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/2] (5.43ns)   --->   "%tmp_12 = fcmp_olt  i32 %v31_load, i32 %v37" [kernel.cpp:79]   --->   Operation 56 'fcmp' 'tmp_12' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln80)   --->   "%and_ln79 = and i1 %tmp_12, i1 %or_ln79" [kernel.cpp:79]   --->   Operation 57 'and' 'and_ln79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln80)   --->   "%v38 = and i1 %and_ln79, i1 %or_ln79_1" [kernel.cpp:79]   --->   Operation 58 'and' 'v38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln80 = select i1 %v38, i32 %v37, i32 %v31_load" [kernel.cpp:80]   --->   Operation 59 'select' 'select_ln80' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 60 [1/2] (5.43ns)   --->   "%tmp_13 = fcmp_olt  i32 %v31_load, i32 %v29" [kernel.cpp:70]   --->   Operation 60 'fcmp' 'tmp_13' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln71)   --->   "%and_ln70 = and i1 %tmp_13, i1 %or_ln79" [kernel.cpp:70]   --->   Operation 61 'and' 'and_ln70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln71)   --->   "%v33 = and i1 %and_ln70, i1 %or_ln66" [kernel.cpp:70]   --->   Operation 62 'and' 'v33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln71 = select i1 %v33, i32 %v29, i32 %v31_load" [kernel.cpp:71]   --->   Operation 63 'select' 'select_ln71' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.23>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%specloopname_ln64 = specloopname void @_ssdm_op_SpecLoopName, void @empty_37" [kernel.cpp:64]   --->   Operation 64 'specloopname' 'specloopname_ln64' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln66)   --->   "%and_ln66 = and i1 %or_ln66, i1 %tmp_9" [kernel.cpp:66]   --->   Operation 65 'and' 'and_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln66 = select i1 %and_ln66, i32 %select_ln71, i32 %select_ln80" [kernel.cpp:66]   --->   Operation 66 'select' 'select_ln66' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (3.25ns)   --->   "%store_ln83 = store i32 %select_ln66, i10 %max_W_addr" [kernel.cpp:83]   --->   Operation 67 'store' 'store_ln83' <Predicate = (ifzero5)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 768> <RAM>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse4"   --->   Operation 68 'br' 'br_ln0' <Predicate = (ifzero5)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (1.58ns)   --->   "%store_ln66 = store i32 %select_ln66, i32 %v31" [kernel.cpp:66]   --->   Operation 69 'store' 'store_ln66' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body110"   --->   Operation 70 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.45ns
The critical path consists of the following:
	'alloca' operation ('j1') [7]  (0 ns)
	'load' operation ('j1', kernel.cpp:64) on local variable 'j1' [17]  (0 ns)
	'add' operation ('add_ln65', kernel.cpp:65) [27]  (2.2 ns)
	'getelementptr' operation ('v553_addr', kernel.cpp:65) [29]  (0 ns)
	'load' operation ('v553_load', kernel.cpp:65) on array 'v553' [31]  (3.25 ns)

 <State 2>: 5.7ns
The critical path consists of the following:
	'load' operation ('v553_load', kernel.cpp:65) on array 'v553' [31]  (3.25 ns)
	'icmp' operation ('icmp_ln66_1', kernel.cpp:66) [36]  (2.45 ns)

 <State 3>: 6.42ns
The critical path consists of the following:
	'xor' operation ('xor_ln78', kernel.cpp:78) [40]  (0.993 ns)
	'fcmp' operation ('tmp_12', kernel.cpp:79) [51]  (5.43 ns)

 <State 4>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_12', kernel.cpp:79) [51]  (5.43 ns)
	'and' operation ('and_ln79', kernel.cpp:79) [52]  (0 ns)
	'and' operation ('v38', kernel.cpp:79) [53]  (0 ns)
	'select' operation ('select_ln80', kernel.cpp:80) [54]  (0.978 ns)

 <State 5>: 4.23ns
The critical path consists of the following:
	'and' operation ('and_ln66', kernel.cpp:66) [39]  (0 ns)
	'select' operation ('select_ln66', kernel.cpp:66) [59]  (0.978 ns)
	'store' operation ('store_ln83', kernel.cpp:83) of variable 'select_ln66', kernel.cpp:66 on array 'max_W' [63]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
