

================================================================
== Vitis HLS Report for 'Linear_layer_ds0_Pipeline_l_j22'
================================================================
* Date:           Sun Sep  3 07:04:40 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.424 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2307|     2307|  23.070 us|  23.070 us|  2307|  2307|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_j22   |     2305|     2305|         5|          3|          1|   768|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 3, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.06>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%v277 = alloca i32 1"   --->   Operation 8 'alloca' 'v277' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%j22 = alloca i32 1"   --->   Operation 9 'alloca' 'j22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sub_ln467_read = read i14 @_ssdm_op_Read.ap_auto.i14, i14 %sub_ln467"   --->   Operation 10 'read' 'sub_ln467_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln465_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %zext_ln465"   --->   Operation 11 'read' 'zext_ln465_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%max_inp1_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %max_inp1_load"   --->   Operation 12 'read' 'max_inp1_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln465_cast = zext i4 %zext_ln465_read"   --->   Operation 13 'zext' 'zext_ln465_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln0 = store i10 0, i10 %j22"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 %max_inp1_load_read, i32 %v277"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body56"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%j22_1 = load i10 %j22" [kernel.cpp:466]   --->   Operation 17 'load' 'j22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%max_inp1_addr = getelementptr i32 %max_inp1, i64 0, i64 %zext_ln465_cast"   --->   Operation 18 'getelementptr' 'max_inp1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 19 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.77ns)   --->   "%icmp_ln466 = icmp_eq  i10 %j22_1, i10 768" [kernel.cpp:466]   --->   Operation 20 'icmp' 'icmp_ln466' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 768, i64 768, i64 768"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.73ns)   --->   "%add_ln466 = add i10 %j22_1, i10 1" [kernel.cpp:466]   --->   Operation 22 'add' 'add_ln466' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln466 = br i1 %icmp_ln466, void %for.body56.split_ifconv, void %for.inc100.exitStub" [kernel.cpp:466]   --->   Operation 23 'br' 'br_ln466' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln467 = zext i10 %j22_1" [kernel.cpp:467]   --->   Operation 24 'zext' 'zext_ln467' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.81ns)   --->   "%add_ln467 = add i14 %sub_ln467_read, i14 %zext_ln467" [kernel.cpp:467]   --->   Operation 25 'add' 'add_ln467' <Predicate = (!icmp_ln466)> <Delay = 1.81> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln467_1 = zext i14 %add_ln467" [kernel.cpp:467]   --->   Operation 26 'zext' 'zext_ln467_1' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%v260_addr = getelementptr i32 %v260, i64 0, i64 %zext_ln467_1" [kernel.cpp:467]   --->   Operation 27 'getelementptr' 'v260_addr' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_1 : Operation 28 [2/2] (3.25ns)   --->   "%v275 = load i14 %v260_addr" [kernel.cpp:480]   --->   Operation 28 'load' 'v275' <Predicate = (!icmp_ln466)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9216> <RAM>
ST_1 : Operation 29 [1/1] (1.77ns)   --->   "%ifzero = icmp_eq  i10 %add_ln466, i10 768" [kernel.cpp:466]   --->   Operation 29 'icmp' 'ifzero' <Predicate = (!icmp_ln466)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln466 = br i1 %ifzero, void %ifFalse, void %ifTrue" [kernel.cpp:466]   --->   Operation 30 'br' 'br_ln466' <Predicate = (!icmp_ln466)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 31 [1/2] (3.25ns)   --->   "%v275 = load i14 %v260_addr" [kernel.cpp:480]   --->   Operation 31 'load' 'v275' <Predicate = (!icmp_ln466)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9216> <RAM>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 70 'ret' 'ret_ln0' <Predicate = (icmp_ln466)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.42>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%v277_load = load i32 %v277" [kernel.cpp:473]   --->   Operation 32 'load' 'v277_load' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%bitcast_ln468 = bitcast i32 %v275" [kernel.cpp:468]   --->   Operation 33 'bitcast' 'bitcast_ln468' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_38 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln468, i32 23, i32 30" [kernel.cpp:468]   --->   Operation 34 'partselect' 'tmp_38' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln468 = trunc i32 %bitcast_ln468" [kernel.cpp:468]   --->   Operation 35 'trunc' 'trunc_ln468' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.55ns)   --->   "%icmp_ln468 = icmp_ne  i8 %tmp_38, i8 255" [kernel.cpp:468]   --->   Operation 36 'icmp' 'icmp_ln468' <Predicate = (!icmp_ln466)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (2.44ns)   --->   "%icmp_ln468_1 = icmp_eq  i23 %trunc_ln468, i23 0" [kernel.cpp:468]   --->   Operation 37 'icmp' 'icmp_ln468_1' <Predicate = (!icmp_ln466)> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [2/2] (5.43ns)   --->   "%tmp_39 = fcmp_oge  i32 %v275, i32 0" [kernel.cpp:468]   --->   Operation 38 'fcmp' 'tmp_39' <Predicate = (!icmp_ln466)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.99ns)   --->   "%xor_ln480 = xor i32 %bitcast_ln468, i32 2147483648" [kernel.cpp:480]   --->   Operation 39 'xor' 'xor_ln480' <Predicate = (!icmp_ln466)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%v283 = bitcast i32 %xor_ln480" [kernel.cpp:480]   --->   Operation 40 'bitcast' 'v283' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_41 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %xor_ln480, i32 23, i32 30" [kernel.cpp:481]   --->   Operation 41 'partselect' 'tmp_41' <Predicate = (!icmp_ln466)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (1.55ns)   --->   "%icmp_ln481_2 = icmp_ne  i8 %tmp_41, i8 255" [kernel.cpp:481]   --->   Operation 42 'icmp' 'icmp_ln481_2' <Predicate = (!icmp_ln466)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [2/2] (5.43ns)   --->   "%tmp_42 = fcmp_olt  i32 %v277_load, i32 %v283" [kernel.cpp:481]   --->   Operation 43 'fcmp' 'tmp_42' <Predicate = (!icmp_ln466)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [2/2] (5.43ns)   --->   "%tmp_43 = fcmp_olt  i32 %v277_load, i32 %v275" [kernel.cpp:472]   --->   Operation 44 'fcmp' 'tmp_43' <Predicate = (!icmp_ln466)> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (1.58ns)   --->   "%store_ln466 = store i10 %add_ln466, i10 %j22" [kernel.cpp:466]   --->   Operation 45 'store' 'store_ln466' <Predicate = (!icmp_ln466)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 6.40>
ST_4 : Operation 46 [1/1] (0.97ns)   --->   "%or_ln468 = or i1 %icmp_ln468_1, i1 %icmp_ln468" [kernel.cpp:468]   --->   Operation 46 'or' 'or_ln468' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/2] (5.43ns)   --->   "%tmp_39 = fcmp_oge  i32 %v275, i32 0" [kernel.cpp:468]   --->   Operation 47 'fcmp' 'tmp_39' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%bitcast_ln481 = bitcast i32 %v277_load" [kernel.cpp:481]   --->   Operation 48 'bitcast' 'bitcast_ln481' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_40 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln481, i32 23, i32 30" [kernel.cpp:481]   --->   Operation 49 'partselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln481 = trunc i32 %bitcast_ln481" [kernel.cpp:481]   --->   Operation 50 'trunc' 'trunc_ln481' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (1.55ns)   --->   "%icmp_ln481 = icmp_ne  i8 %tmp_40, i8 255" [kernel.cpp:481]   --->   Operation 51 'icmp' 'icmp_ln481' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (2.44ns)   --->   "%icmp_ln481_1 = icmp_eq  i23 %trunc_ln481, i23 0" [kernel.cpp:481]   --->   Operation 52 'icmp' 'icmp_ln481_1' <Predicate = true> <Delay = 2.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.97ns)   --->   "%or_ln481 = or i1 %icmp_ln481_1, i1 %icmp_ln481" [kernel.cpp:481]   --->   Operation 53 'or' 'or_ln481' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node select_ln482)   --->   "%or_ln481_1 = or i1 %icmp_ln468_1, i1 %icmp_ln481_2" [kernel.cpp:481]   --->   Operation 54 'or' 'or_ln481_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/2] (5.43ns)   --->   "%tmp_42 = fcmp_olt  i32 %v277_load, i32 %v283" [kernel.cpp:481]   --->   Operation 55 'fcmp' 'tmp_42' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln482)   --->   "%and_ln481 = and i1 %tmp_42, i1 %or_ln481" [kernel.cpp:481]   --->   Operation 56 'and' 'and_ln481' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node select_ln482)   --->   "%v284 = and i1 %and_ln481, i1 %or_ln481_1" [kernel.cpp:481]   --->   Operation 57 'and' 'v284' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln482 = select i1 %v284, i32 %v283, i32 %v277_load" [kernel.cpp:482]   --->   Operation 58 'select' 'select_ln482' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 59 [1/2] (5.43ns)   --->   "%tmp_43 = fcmp_olt  i32 %v277_load, i32 %v275" [kernel.cpp:472]   --->   Operation 59 'fcmp' 'tmp_43' <Predicate = true> <Delay = 5.43> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln473)   --->   "%and_ln472 = and i1 %or_ln468, i1 %or_ln481" [kernel.cpp:472]   --->   Operation 60 'and' 'and_ln472' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node select_ln473)   --->   "%v279 = and i1 %and_ln472, i1 %tmp_43" [kernel.cpp:472]   --->   Operation 61 'and' 'v279' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln473 = select i1 %v279, i32 %v275, i32 %v277_load" [kernel.cpp:473]   --->   Operation 62 'select' 'select_ln473' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.30>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%specloopname_ln466 = specloopname void @_ssdm_op_SpecLoopName, void @empty_69" [kernel.cpp:466]   --->   Operation 63 'specloopname' 'specloopname_ln466' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln468)   --->   "%and_ln468 = and i1 %or_ln468, i1 %tmp_39" [kernel.cpp:468]   --->   Operation 64 'and' 'and_ln468' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln468 = select i1 %and_ln468, i32 %select_ln473, i32 %select_ln482" [kernel.cpp:468]   --->   Operation 65 'select' 'select_ln468' <Predicate = true> <Delay = 0.97> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (2.32ns)   --->   "%store_ln485 = store i32 %select_ln468, i4 %max_inp1_addr" [kernel.cpp:485]   --->   Operation 66 'store' 'store_ln485' <Predicate = (ifzero)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln0 = br void %ifFalse"   --->   Operation 67 'br' 'br_ln0' <Predicate = (ifzero)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (1.58ns)   --->   "%store_ln468 = store i32 %select_ln468, i32 %v277" [kernel.cpp:468]   --->   Operation 68 'store' 'store_ln468' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body56"   --->   Operation 69 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.07ns
The critical path consists of the following:
	'alloca' operation ('j22') [7]  (0 ns)
	'load' operation ('j22', kernel.cpp:466) on local variable 'j22' [16]  (0 ns)
	'add' operation ('add_ln467', kernel.cpp:467) [26]  (1.81 ns)
	'getelementptr' operation ('v260_addr', kernel.cpp:467) [28]  (0 ns)
	'load' operation ('v275', kernel.cpp:480) on array 'v260' [30]  (3.25 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'load' operation ('v275', kernel.cpp:480) on array 'v260' [30]  (3.25 ns)

 <State 3>: 6.42ns
The critical path consists of the following:
	'xor' operation ('xor_ln480', kernel.cpp:480) [39]  (0.993 ns)
	'fcmp' operation ('tmp_42', kernel.cpp:481) [50]  (5.43 ns)

 <State 4>: 6.41ns
The critical path consists of the following:
	'fcmp' operation ('tmp_42', kernel.cpp:481) [50]  (5.43 ns)
	'and' operation ('and_ln481', kernel.cpp:481) [51]  (0 ns)
	'and' operation ('v284', kernel.cpp:481) [52]  (0 ns)
	'select' operation ('select_ln482', kernel.cpp:482) [53]  (0.978 ns)

 <State 5>: 3.3ns
The critical path consists of the following:
	'and' operation ('and_ln468', kernel.cpp:468) [38]  (0 ns)
	'select' operation ('select_ln468', kernel.cpp:468) [58]  (0.978 ns)
	'store' operation ('store_ln485', kernel.cpp:485) of variable 'select_ln468', kernel.cpp:468 on array 'max_inp1' [62]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
