// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Res_layer_HH_
#define _Res_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Bert_layer_fadd_3g8j.h"

namespace ap_rtl {

struct Res_layer : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > v337_address0;
    sc_out< sc_logic > v337_ce0;
    sc_in< sc_lv<32> > v337_q0;
    sc_out< sc_lv<14> > v338_address0;
    sc_out< sc_logic > v338_ce0;
    sc_in< sc_lv<32> > v338_q0;
    sc_out< sc_lv<14> > v339_address0;
    sc_out< sc_logic > v339_ce0;
    sc_out< sc_logic > v339_we0;
    sc_out< sc_lv<32> > v339_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Res_layer(sc_module_name name);
    SC_HAS_PROCESS(Res_layer);

    ~Res_layer();

    sc_trace_file* mVcdFile;

    Bert_layer_fadd_3g8j<1,5,32,32,32>* Bert_layer_fadd_3g8j_U62;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i28_fu_113_p2;
    sc_signal< sc_lv<4> > i28_reg_179;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<15> > sub_ln573_fu_143_p2;
    sc_signal< sc_lv<15> > sub_ln573_reg_184;
    sc_signal< sc_lv<1> > icmp_ln571_fu_107_p2;
    sc_signal< sc_lv<10> > j28_fu_155_p2;
    sc_signal< sc_lv<10> > j28_reg_192;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > sext_ln573_fu_170_p1;
    sc_signal< sc_lv<64> > sext_ln573_reg_197;
    sc_signal< sc_lv<1> > icmp_ln572_fu_149_p2;
    sc_signal< sc_lv<32> > v342_reg_212;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > v343_reg_217;
    sc_signal< sc_lv<32> > grp_fu_103_p2;
    sc_signal< sc_lv<32> > v344_reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > i28_0_reg_81;
    sc_signal< sc_lv<10> > j28_0_reg_92;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > tmp_s_fu_119_p3;
    sc_signal< sc_lv<12> > tmp_25_fu_131_p3;
    sc_signal< sc_lv<15> > zext_ln573_fu_127_p1;
    sc_signal< sc_lv<15> > zext_ln573_1_fu_139_p1;
    sc_signal< sc_lv<15> > zext_ln573_2_fu_161_p1;
    sc_signal< sc_lv<15> > add_ln573_fu_165_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln573_fu_165_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i28_fu_113_p2();
    void thread_icmp_ln571_fu_107_p2();
    void thread_icmp_ln572_fu_149_p2();
    void thread_j28_fu_155_p2();
    void thread_sext_ln573_fu_170_p1();
    void thread_sub_ln573_fu_143_p2();
    void thread_tmp_25_fu_131_p3();
    void thread_tmp_s_fu_119_p3();
    void thread_v337_address0();
    void thread_v337_ce0();
    void thread_v338_address0();
    void thread_v338_ce0();
    void thread_v339_address0();
    void thread_v339_ce0();
    void thread_v339_d0();
    void thread_v339_we0();
    void thread_zext_ln573_1_fu_139_p1();
    void thread_zext_ln573_2_fu_161_p1();
    void thread_zext_ln573_fu_127_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
