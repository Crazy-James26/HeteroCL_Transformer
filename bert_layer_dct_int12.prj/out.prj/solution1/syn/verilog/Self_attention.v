// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Self_attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v241_address0,
        v241_ce0,
        v241_q0,
        v242_address0,
        v242_ce0,
        v242_q0,
        v243_address0,
        v243_ce0,
        v243_q0,
        v244_address0,
        v244_ce0,
        v244_we0,
        v244_d0
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v241_address0;
output   v241_ce0;
input  [31:0] v241_q0;
output  [13:0] v242_address0;
output   v242_ce0;
input  [31:0] v242_q0;
output  [13:0] v243_address0;
output   v243_ce0;
input  [31:0] v243_q0;
output  [13:0] v244_address0;
output   v244_ce0;
output   v244_we0;
output  [31:0] v244_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v241_ce0;
reg v242_ce0;
reg v243_ce0;
reg v244_ce0;
reg v244_we0;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] h_fu_273_p2;
reg   [3:0] h_reg_498;
wire    ap_CS_fsm_state2;
wire   [9:0] shl_ln_fu_279_p3;
reg   [9:0] shl_ln_reg_503;
wire   [0:0] icmp_ln414_fu_267_p2;
wire   [3:0] i20_fu_293_p2;
reg   [3:0] i20_reg_512;
wire    ap_CS_fsm_state3;
wire   [14:0] sub_ln420_fu_323_p2;
reg   [14:0] sub_ln420_reg_517;
wire   [0:0] icmp_ln418_fu_287_p2;
wire   [10:0] zext_ln419_1_fu_337_p1;
reg   [10:0] zext_ln419_1_reg_522;
wire   [6:0] j20_fu_351_p2;
reg   [6:0] j20_reg_530;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln419_fu_345_p2;
wire   [10:0] add_ln421_fu_382_p2;
reg   [10:0] add_ln421_reg_550;
wire   [3:0] i21_fu_399_p2;
reg   [3:0] i21_reg_558;
wire    ap_CS_fsm_state11;
wire   [14:0] sub_ln437_fu_429_p2;
reg   [14:0] sub_ln437_reg_563;
wire   [0:0] icmp_ln434_fu_393_p2;
wire   [10:0] zext_ln435_1_fu_443_p1;
reg   [10:0] zext_ln435_1_reg_568;
wire   [6:0] j21_fu_457_p2;
reg   [6:0] j21_reg_576;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln435_fu_451_p2;
wire   [14:0] add_ln437_1_fu_486_p2;
reg   [14:0] add_ln437_1_reg_586;
reg   [9:0] Q_h_address0;
reg    Q_h_ce0;
reg    Q_h_we0;
wire   [31:0] Q_h_q0;
reg   [9:0] K_h_address0;
reg    K_h_ce0;
reg    K_h_we0;
wire   [31:0] K_h_q0;
reg   [9:0] V_h_address0;
reg    V_h_ce0;
reg    V_h_we0;
wire   [31:0] V_h_q0;
reg   [7:0] v254_address0;
reg    v254_ce0;
reg    v254_we0;
reg   [31:0] v254_d0;
wire   [31:0] v254_q0;
reg   [7:0] v255_address0;
reg    v255_ce0;
reg    v255_we0;
wire   [31:0] v255_q0;
reg   [9:0] v256_address0;
reg    v256_ce0;
reg    v256_we0;
wire   [31:0] v256_q0;
wire    grp_Context_layer_fu_247_ap_start;
wire    grp_Context_layer_fu_247_ap_done;
wire    grp_Context_layer_fu_247_ap_idle;
wire    grp_Context_layer_fu_247_ap_ready;
wire   [7:0] grp_Context_layer_fu_247_v167_address0;
wire    grp_Context_layer_fu_247_v167_ce0;
wire   [9:0] grp_Context_layer_fu_247_v168_address0;
wire    grp_Context_layer_fu_247_v168_ce0;
wire   [9:0] grp_Context_layer_fu_247_v169_address0;
wire    grp_Context_layer_fu_247_v169_ce0;
wire    grp_Context_layer_fu_247_v169_we0;
wire   [31:0] grp_Context_layer_fu_247_v169_d0;
wire    grp_Attention_layer_fu_254_ap_start;
wire    grp_Attention_layer_fu_254_ap_done;
wire    grp_Attention_layer_fu_254_ap_idle;
wire    grp_Attention_layer_fu_254_ap_ready;
wire   [9:0] grp_Attention_layer_fu_254_v77_address0;
wire    grp_Attention_layer_fu_254_v77_ce0;
wire   [9:0] grp_Attention_layer_fu_254_v78_address0;
wire    grp_Attention_layer_fu_254_v78_ce0;
wire   [7:0] grp_Attention_layer_fu_254_v79_address0;
wire    grp_Attention_layer_fu_254_v79_ce0;
wire    grp_Attention_layer_fu_254_v79_we0;
wire   [31:0] grp_Attention_layer_fu_254_v79_d0;
wire    grp_Softmax_layer_fu_261_ap_start;
wire    grp_Softmax_layer_fu_261_ap_done;
wire    grp_Softmax_layer_fu_261_ap_idle;
wire    grp_Softmax_layer_fu_261_ap_ready;
wire   [7:0] grp_Softmax_layer_fu_261_v151_address0;
wire    grp_Softmax_layer_fu_261_v151_ce0;
wire    grp_Softmax_layer_fu_261_v151_we0;
wire   [31:0] grp_Softmax_layer_fu_261_v151_d0;
wire   [7:0] grp_Softmax_layer_fu_261_v152_address0;
wire    grp_Softmax_layer_fu_261_v152_ce0;
wire    grp_Softmax_layer_fu_261_v152_we0;
wire   [31:0] grp_Softmax_layer_fu_261_v152_d0;
reg   [3:0] h_0_reg_192;
reg   [3:0] i20_0_reg_203;
reg   [6:0] j20_0_reg_214;
wire    ap_CS_fsm_state5;
reg   [3:0] i21_0_reg_225;
wire    ap_CS_fsm_state10;
reg   [6:0] j21_0_reg_236;
wire    ap_CS_fsm_state13;
reg    grp_Context_layer_fu_247_ap_start_reg;
wire    ap_CS_fsm_state9;
reg    grp_Attention_layer_fu_254_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_Softmax_layer_fu_261_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire  signed [63:0] sext_ln420_fu_371_p1;
wire   [63:0] zext_ln421_1_fu_387_p1;
wire   [63:0] zext_ln436_1_fu_472_p1;
wire  signed [63:0] sext_ln437_fu_491_p1;
wire   [13:0] tmp_19_fu_299_p3;
wire   [11:0] tmp_20_fu_311_p3;
wire   [14:0] zext_ln420_fu_307_p1;
wire   [14:0] zext_ln420_1_fu_319_p1;
wire   [9:0] tmp_21_fu_329_p3;
wire   [9:0] zext_ln419_fu_341_p1;
wire   [9:0] add_ln420_fu_357_p2;
wire   [14:0] zext_ln420_2_fu_362_p1;
wire   [14:0] add_ln420_1_fu_366_p2;
wire   [10:0] zext_ln421_fu_378_p1;
wire   [13:0] tmp_22_fu_405_p3;
wire   [11:0] tmp_23_fu_417_p3;
wire   [14:0] zext_ln437_fu_413_p1;
wire   [14:0] zext_ln437_1_fu_425_p1;
wire   [9:0] tmp_24_fu_435_p3;
wire   [10:0] zext_ln436_fu_463_p1;
wire   [10:0] add_ln436_fu_467_p2;
wire   [9:0] zext_ln435_fu_447_p1;
wire   [9:0] add_ln437_fu_477_p2;
wire   [14:0] zext_ln437_2_fu_482_p1;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 grp_Context_layer_fu_247_ap_start_reg = 1'b0;
#0 grp_Attention_layer_fu_254_ap_start_reg = 1'b0;
#0 grp_Softmax_layer_fu_261_ap_start_reg = 1'b0;
end

Linear_layer_qkv_cud #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
Q_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Q_h_address0),
    .ce0(Q_h_ce0),
    .we0(Q_h_we0),
    .d0(v241_q0),
    .q0(Q_h_q0)
);

Linear_layer_qkv_cud #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
K_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(K_h_address0),
    .ce0(K_h_ce0),
    .we0(K_h_we0),
    .d0(v242_q0),
    .q0(K_h_q0)
);

Linear_layer_qkv_cud #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
V_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(V_h_address0),
    .ce0(V_h_ce0),
    .we0(V_h_we0),
    .d0(v243_q0),
    .q0(V_h_q0)
);

Attention_layer_qqcK #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
v254_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v254_address0),
    .ce0(v254_ce0),
    .we0(v254_we0),
    .d0(v254_d0),
    .q0(v254_q0)
);

Attention_layer_qqcK #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
v255_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v255_address0),
    .ce0(v255_ce0),
    .we0(v255_we0),
    .d0(grp_Softmax_layer_fu_261_v152_d0),
    .q0(v255_q0)
);

Linear_layer_qkv_cud #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
v256_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v256_address0),
    .ce0(v256_ce0),
    .we0(v256_we0),
    .d0(grp_Context_layer_fu_247_v169_d0),
    .q0(v256_q0)
);

Context_layer grp_Context_layer_fu_247(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Context_layer_fu_247_ap_start),
    .ap_done(grp_Context_layer_fu_247_ap_done),
    .ap_idle(grp_Context_layer_fu_247_ap_idle),
    .ap_ready(grp_Context_layer_fu_247_ap_ready),
    .v167_address0(grp_Context_layer_fu_247_v167_address0),
    .v167_ce0(grp_Context_layer_fu_247_v167_ce0),
    .v167_q0(v255_q0),
    .v168_address0(grp_Context_layer_fu_247_v168_address0),
    .v168_ce0(grp_Context_layer_fu_247_v168_ce0),
    .v168_q0(V_h_q0),
    .v169_address0(grp_Context_layer_fu_247_v169_address0),
    .v169_ce0(grp_Context_layer_fu_247_v169_ce0),
    .v169_we0(grp_Context_layer_fu_247_v169_we0),
    .v169_d0(grp_Context_layer_fu_247_v169_d0)
);

Attention_layer grp_Attention_layer_fu_254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Attention_layer_fu_254_ap_start),
    .ap_done(grp_Attention_layer_fu_254_ap_done),
    .ap_idle(grp_Attention_layer_fu_254_ap_idle),
    .ap_ready(grp_Attention_layer_fu_254_ap_ready),
    .v77_address0(grp_Attention_layer_fu_254_v77_address0),
    .v77_ce0(grp_Attention_layer_fu_254_v77_ce0),
    .v77_q0(Q_h_q0),
    .v78_address0(grp_Attention_layer_fu_254_v78_address0),
    .v78_ce0(grp_Attention_layer_fu_254_v78_ce0),
    .v78_q0(K_h_q0),
    .v79_address0(grp_Attention_layer_fu_254_v79_address0),
    .v79_ce0(grp_Attention_layer_fu_254_v79_ce0),
    .v79_we0(grp_Attention_layer_fu_254_v79_we0),
    .v79_d0(grp_Attention_layer_fu_254_v79_d0)
);

Softmax_layer grp_Softmax_layer_fu_261(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Softmax_layer_fu_261_ap_start),
    .ap_done(grp_Softmax_layer_fu_261_ap_done),
    .ap_idle(grp_Softmax_layer_fu_261_ap_idle),
    .ap_ready(grp_Softmax_layer_fu_261_ap_ready),
    .v151_address0(grp_Softmax_layer_fu_261_v151_address0),
    .v151_ce0(grp_Softmax_layer_fu_261_v151_ce0),
    .v151_we0(grp_Softmax_layer_fu_261_v151_we0),
    .v151_d0(grp_Softmax_layer_fu_261_v151_d0),
    .v151_q0(v254_q0),
    .v152_address0(grp_Softmax_layer_fu_261_v152_address0),
    .v152_ce0(grp_Softmax_layer_fu_261_v152_ce0),
    .v152_we0(grp_Softmax_layer_fu_261_v152_we0),
    .v152_d0(grp_Softmax_layer_fu_261_v152_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Attention_layer_fu_254_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln418_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_Attention_layer_fu_254_ap_start_reg <= 1'b1;
        end else if ((grp_Attention_layer_fu_254_ap_ready == 1'b1)) begin
            grp_Attention_layer_fu_254_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Context_layer_fu_247_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_Context_layer_fu_247_ap_start_reg <= 1'b1;
        end else if ((grp_Context_layer_fu_247_ap_ready == 1'b1)) begin
            grp_Context_layer_fu_247_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Softmax_layer_fu_261_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_Softmax_layer_fu_261_ap_start_reg <= 1'b1;
        end else if ((grp_Softmax_layer_fu_261_ap_ready == 1'b1)) begin
            grp_Softmax_layer_fu_261_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln434_fu_393_p2 == 1'd1))) begin
        h_0_reg_192 <= h_reg_498;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_0_reg_192 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln419_fu_345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i20_0_reg_203 <= i20_reg_512;
    end else if (((icmp_ln414_fu_267_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i20_0_reg_203 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln435_fu_451_p2 == 1'd1))) begin
        i21_0_reg_225 <= i21_reg_558;
    end else if (((1'b1 == ap_CS_fsm_state10) & (grp_Context_layer_fu_247_ap_done == 1'b1))) begin
        i21_0_reg_225 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j20_0_reg_214 <= j20_reg_530;
    end else if (((icmp_ln418_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j20_0_reg_214 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j21_0_reg_236 <= j21_reg_576;
    end else if (((icmp_ln434_fu_393_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        j21_0_reg_236 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln419_fu_345_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln421_reg_550 <= add_ln421_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln435_fu_451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        add_ln437_1_reg_586 <= add_ln437_1_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        h_reg_498 <= h_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i20_reg_512 <= i20_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i21_reg_558 <= i21_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j20_reg_530 <= j20_fu_351_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j21_reg_576 <= j21_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln414_fu_267_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        shl_ln_reg_503[9 : 6] <= shl_ln_fu_279_p3[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln418_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_ln420_reg_517[14 : 8] <= sub_ln420_fu_323_p2[14 : 8];
        zext_ln419_1_reg_522[9 : 6] <= zext_ln419_1_fu_337_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln434_fu_393_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        sub_ln437_reg_563[14 : 8] <= sub_ln437_fu_429_p2[14 : 8];
        zext_ln435_1_reg_568[9 : 6] <= zext_ln435_1_fu_443_p1[9 : 6];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        K_h_address0 = zext_ln421_1_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        K_h_address0 = grp_Attention_layer_fu_254_v78_address0;
    end else begin
        K_h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        K_h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        K_h_ce0 = grp_Attention_layer_fu_254_v78_ce0;
    end else begin
        K_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        K_h_we0 = 1'b1;
    end else begin
        K_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_h_address0 = zext_ln421_1_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Q_h_address0 = grp_Attention_layer_fu_254_v77_address0;
    end else begin
        Q_h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Q_h_ce0 = grp_Attention_layer_fu_254_v77_ce0;
    end else begin
        Q_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Q_h_we0 = 1'b1;
    end else begin
        Q_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        V_h_address0 = zext_ln421_1_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        V_h_address0 = grp_Context_layer_fu_247_v168_address0;
    end else begin
        V_h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        V_h_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        V_h_ce0 = grp_Context_layer_fu_247_v168_ce0;
    end else begin
        V_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        V_h_we0 = 1'b1;
    end else begin
        V_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln414_fu_267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln414_fu_267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v241_ce0 = 1'b1;
    end else begin
        v241_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v242_ce0 = 1'b1;
    end else begin
        v242_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v243_ce0 = 1'b1;
    end else begin
        v243_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v244_ce0 = 1'b1;
    end else begin
        v244_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v244_we0 = 1'b1;
    end else begin
        v244_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v254_address0 = grp_Softmax_layer_fu_261_v151_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v254_address0 = grp_Attention_layer_fu_254_v79_address0;
    end else begin
        v254_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v254_ce0 = grp_Softmax_layer_fu_261_v151_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v254_ce0 = grp_Attention_layer_fu_254_v79_ce0;
    end else begin
        v254_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v254_d0 = grp_Softmax_layer_fu_261_v151_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v254_d0 = grp_Attention_layer_fu_254_v79_d0;
    end else begin
        v254_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v254_we0 = grp_Softmax_layer_fu_261_v151_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v254_we0 = grp_Attention_layer_fu_254_v79_we0;
    end else begin
        v254_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v255_address0 = grp_Softmax_layer_fu_261_v152_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v255_address0 = grp_Context_layer_fu_247_v167_address0;
    end else begin
        v255_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v255_ce0 = grp_Softmax_layer_fu_261_v152_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v255_ce0 = grp_Context_layer_fu_247_v167_ce0;
    end else begin
        v255_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v255_we0 = grp_Softmax_layer_fu_261_v152_we0;
    end else begin
        v255_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v256_address0 = zext_ln436_1_fu_472_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v256_address0 = grp_Context_layer_fu_247_v169_address0;
    end else begin
        v256_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v256_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v256_ce0 = grp_Context_layer_fu_247_v169_ce0;
    end else begin
        v256_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v256_we0 = grp_Context_layer_fu_247_v169_we0;
    end else begin
        v256_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln414_fu_267_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln418_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln419_fu_345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Attention_layer_fu_254_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_Softmax_layer_fu_261_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_Context_layer_fu_247_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln434_fu_393_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln435_fu_451_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln420_1_fu_366_p2 = (sub_ln420_reg_517 + zext_ln420_2_fu_362_p1);

assign add_ln420_fu_357_p2 = (zext_ln419_fu_341_p1 + shl_ln_reg_503);

assign add_ln421_fu_382_p2 = (zext_ln419_1_reg_522 + zext_ln421_fu_378_p1);

assign add_ln436_fu_467_p2 = (zext_ln435_1_reg_568 + zext_ln436_fu_463_p1);

assign add_ln437_1_fu_486_p2 = (sub_ln437_reg_563 + zext_ln437_2_fu_482_p1);

assign add_ln437_fu_477_p2 = (zext_ln435_fu_447_p1 + shl_ln_reg_503);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_Attention_layer_fu_254_ap_start = grp_Attention_layer_fu_254_ap_start_reg;

assign grp_Context_layer_fu_247_ap_start = grp_Context_layer_fu_247_ap_start_reg;

assign grp_Softmax_layer_fu_261_ap_start = grp_Softmax_layer_fu_261_ap_start_reg;

assign h_fu_273_p2 = (h_0_reg_192 + 4'd1);

assign i20_fu_293_p2 = (i20_0_reg_203 + 4'd1);

assign i21_fu_399_p2 = (i21_0_reg_225 + 4'd1);

assign icmp_ln414_fu_267_p2 = ((h_0_reg_192 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln418_fu_287_p2 = ((i20_0_reg_203 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln419_fu_345_p2 = ((j20_0_reg_214 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln434_fu_393_p2 = ((i21_0_reg_225 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln435_fu_451_p2 = ((j21_0_reg_236 == 7'd64) ? 1'b1 : 1'b0);

assign j20_fu_351_p2 = (j20_0_reg_214 + 7'd1);

assign j21_fu_457_p2 = (j21_0_reg_236 + 7'd1);

assign sext_ln420_fu_371_p1 = $signed(add_ln420_1_fu_366_p2);

assign sext_ln437_fu_491_p1 = $signed(add_ln437_1_reg_586);

assign shl_ln_fu_279_p3 = {{h_0_reg_192}, {6'd0}};

assign sub_ln420_fu_323_p2 = (zext_ln420_fu_307_p1 - zext_ln420_1_fu_319_p1);

assign sub_ln437_fu_429_p2 = (zext_ln437_fu_413_p1 - zext_ln437_1_fu_425_p1);

assign tmp_19_fu_299_p3 = {{i20_0_reg_203}, {10'd0}};

assign tmp_20_fu_311_p3 = {{i20_0_reg_203}, {8'd0}};

assign tmp_21_fu_329_p3 = {{i20_0_reg_203}, {6'd0}};

assign tmp_22_fu_405_p3 = {{i21_0_reg_225}, {10'd0}};

assign tmp_23_fu_417_p3 = {{i21_0_reg_225}, {8'd0}};

assign tmp_24_fu_435_p3 = {{i21_0_reg_225}, {6'd0}};

assign v241_address0 = sext_ln420_fu_371_p1;

assign v242_address0 = sext_ln420_fu_371_p1;

assign v243_address0 = sext_ln420_fu_371_p1;

assign v244_address0 = sext_ln437_fu_491_p1;

assign v244_d0 = v256_q0;

assign zext_ln419_1_fu_337_p1 = tmp_21_fu_329_p3;

assign zext_ln419_fu_341_p1 = j20_0_reg_214;

assign zext_ln420_1_fu_319_p1 = tmp_20_fu_311_p3;

assign zext_ln420_2_fu_362_p1 = add_ln420_fu_357_p2;

assign zext_ln420_fu_307_p1 = tmp_19_fu_299_p3;

assign zext_ln421_1_fu_387_p1 = add_ln421_reg_550;

assign zext_ln421_fu_378_p1 = j20_0_reg_214;

assign zext_ln435_1_fu_443_p1 = tmp_24_fu_435_p3;

assign zext_ln435_fu_447_p1 = j21_0_reg_236;

assign zext_ln436_1_fu_472_p1 = add_ln436_fu_467_p2;

assign zext_ln436_fu_463_p1 = j21_0_reg_236;

assign zext_ln437_1_fu_425_p1 = tmp_23_fu_417_p3;

assign zext_ln437_2_fu_482_p1 = add_ln437_fu_477_p2;

assign zext_ln437_fu_413_p1 = tmp_22_fu_405_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_503[5:0] <= 6'b000000;
    sub_ln420_reg_517[7:0] <= 8'b00000000;
    zext_ln419_1_reg_522[5:0] <= 6'b000000;
    zext_ln419_1_reg_522[10] <= 1'b0;
    sub_ln437_reg_563[7:0] <= 8'b00000000;
    zext_ln435_1_reg_568[5:0] <= 6'b000000;
    zext_ln435_1_reg_568[10] <= 1'b0;
end

endmodule //Self_attention
