// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Linear_layer_qkv_Pipeline_l_W_to_int_i3_l_j3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_W_address0,
        max_W_ce0,
        max_W_q0,
        v553_address0,
        v553_ce0,
        v553_q0,
        q_W_V_address0,
        q_W_V_ce0,
        q_W_V_we0,
        q_W_V_d0,
        grp_fu_638_p_din0,
        grp_fu_638_p_din1,
        grp_fu_638_p_dout0,
        grp_fu_638_p_ce,
        grp_fu_642_p_din0,
        grp_fu_642_p_din1,
        grp_fu_642_p_dout0,
        grp_fu_642_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] max_W_address0;
output   max_W_ce0;
input  [31:0] max_W_q0;
output  [19:0] v553_address0;
output   v553_ce0;
input  [31:0] v553_q0;
output  [19:0] q_W_V_address0;
output   q_W_V_ce0;
output   q_W_V_we0;
output  [11:0] q_W_V_d0;
output  [31:0] grp_fu_638_p_din0;
output  [31:0] grp_fu_638_p_din1;
input  [31:0] grp_fu_638_p_dout0;
output   grp_fu_638_p_ce;
output  [31:0] grp_fu_642_p_din0;
output  [31:0] grp_fu_642_p_din1;
input  [31:0] grp_fu_642_p_dout0;
output   grp_fu_642_p_ce;

reg ap_idle;
reg max_W_ce0;
reg v553_ce0;
reg q_W_V_ce0;
reg q_W_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln98_fu_160_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [9:0] select_ln98_fu_190_p3;
reg   [9:0] select_ln98_reg_492;
wire   [9:0] select_ln98_2_fu_198_p3;
reg   [9:0] select_ln98_2_reg_497;
reg   [9:0] select_ln98_2_reg_497_pp0_iter2_reg;
reg   [9:0] select_ln98_2_reg_497_pp0_iter3_reg;
reg   [9:0] select_ln98_2_reg_497_pp0_iter4_reg;
reg   [9:0] select_ln98_2_reg_497_pp0_iter5_reg;
wire   [63:0] zext_ln100_2_fu_260_p1;
reg   [63:0] zext_ln100_2_reg_504;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter3_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter4_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter5_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter6_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter7_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter8_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter9_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter10_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter11_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter12_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter13_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter14_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter15_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter16_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter17_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter18_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter19_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter20_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter21_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter22_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter23_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter24_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter25_reg;
reg   [63:0] zext_ln100_2_reg_504_pp0_iter26_reg;
reg   [31:0] v553_load_reg_514;
wire   [31:0] v50_fu_265_p1;
reg   [31:0] max_W_load_reg_529;
reg   [31:0] v51_reg_534;
reg   [31:0] v53_reg_539;
wire   [31:0] reg_fu_273_p1;
reg   [31:0] reg_reg_544;
reg   [0:0] p_Result_s_reg_549;
reg   [0:0] p_Result_s_reg_549_pp0_iter25_reg;
wire   [11:0] v54_V_fu_302_p1;
reg   [11:0] v54_V_reg_554;
reg   [11:0] v54_V_reg_554_pp0_iter25_reg;
wire   [0:0] icmp_ln295_fu_306_p2;
reg   [0:0] icmp_ln295_reg_560;
reg   [0:0] icmp_ln295_reg_560_pp0_iter25_reg;
wire  signed [8:0] sh_amt_fu_312_p2;
reg  signed [8:0] sh_amt_reg_566;
wire   [0:0] icmp_ln299_fu_318_p2;
reg   [0:0] icmp_ln299_reg_574;
reg   [0:0] icmp_ln299_reg_574_pp0_iter25_reg;
wire   [0:0] icmp_ln301_fu_338_p2;
reg   [0:0] icmp_ln301_reg_580;
wire  signed [8:0] sh_amt_2_fu_348_p2;
reg  signed [8:0] sh_amt_2_reg_585;
wire   [0:0] icmp_ln320_fu_353_p2;
reg   [0:0] icmp_ln320_reg_590;
wire   [0:0] or_ln299_fu_373_p2;
reg   [0:0] or_ln299_reg_595;
wire   [11:0] v54_V_3_fu_395_p3;
reg   [11:0] v54_V_3_reg_600;
wire   [11:0] v54_V_7_fu_460_p3;
reg   [11:0] v54_V_7_reg_605;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln98_fu_269_p1;
reg   [9:0] j3_fu_82;
wire   [9:0] add_ln99_fu_206_p2;
wire    ap_loop_init;
reg   [9:0] i3_fu_86;
reg   [19:0] indvar_flatten19_fu_90;
wire   [19:0] add_ln98_1_fu_166_p2;
wire   [0:0] icmp_ln99_fu_184_p2;
wire   [9:0] add_ln98_fu_178_p2;
wire   [17:0] tmp_fu_234_p3;
wire   [19:0] p_shl9_fu_227_p3;
wire   [19:0] zext_ln100_fu_241_p1;
wire   [19:0] sub_ln100_fu_245_p2;
wire   [19:0] zext_ln100_1_fu_251_p1;
wire   [19:0] add_ln100_fu_254_p2;
wire   [7:0] exp_fu_288_p4;
wire   [30:0] trunc_ln278_fu_276_p1;
wire   [8:0] zext_ln283_fu_298_p1;
wire   [22:0] trunc_ln287_fu_324_p1;
wire   [23:0] zext_ln304_1_cast_fu_327_p3;
wire   [31:0] zext_ln304_fu_359_p1;
wire  signed [31:0] sext_ln298_fu_335_p1;
wire   [31:0] lshr_ln304_fu_363_p2;
wire   [0:0] icmp_ln302_fu_343_p2;
wire   [0:0] xor_ln299_fu_377_p2;
wire   [0:0] and_ln302_fu_383_p2;
wire   [0:0] and_ln302_2_fu_389_p2;
wire   [11:0] v54_V_1_fu_369_p1;
wire  signed [31:0] sext_ln298_2_fu_403_p1;
wire   [11:0] sext_ln298_2cast_fu_406_p1;
wire   [0:0] or_ln301_fu_415_p2;
wire   [0:0] xor_ln301_fu_419_p2;
wire   [0:0] and_ln320_fu_425_p2;
wire   [11:0] shl_ln322_fu_410_p2;
wire   [0:0] xor_ln295_fu_437_p2;
wire   [0:0] and_ln299_fu_442_p2;
wire   [11:0] v54_V_4_fu_430_p3;
wire   [11:0] v54_V_5_fu_447_p3;
wire   [11:0] v54_V_6_fu_454_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i3_fu_86 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln98_fu_160_p2 == 1'd0))) begin
            i3_fu_86 <= select_ln98_2_fu_198_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten19_fu_90 <= 20'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln98_fu_160_p2 == 1'd0))) begin
            indvar_flatten19_fu_90 <= add_ln98_1_fu_166_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j3_fu_82 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln98_fu_160_p2 == 1'd0))) begin
            j3_fu_82 <= add_ln99_fu_206_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln295_reg_560 <= icmp_ln295_fu_306_p2;
        icmp_ln295_reg_560_pp0_iter25_reg <= icmp_ln295_reg_560;
        icmp_ln299_reg_574 <= icmp_ln299_fu_318_p2;
        icmp_ln299_reg_574_pp0_iter25_reg <= icmp_ln299_reg_574;
        icmp_ln301_reg_580 <= icmp_ln301_fu_338_p2;
        icmp_ln320_reg_590 <= icmp_ln320_fu_353_p2;
        max_W_load_reg_529 <= max_W_q0;
        or_ln299_reg_595 <= or_ln299_fu_373_p2;
        p_Result_s_reg_549 <= reg_fu_273_p1[32'd31];
        p_Result_s_reg_549_pp0_iter25_reg <= p_Result_s_reg_549;
        reg_reg_544 <= reg_fu_273_p1;
        select_ln98_2_reg_497_pp0_iter2_reg <= select_ln98_2_reg_497;
        select_ln98_2_reg_497_pp0_iter3_reg <= select_ln98_2_reg_497_pp0_iter2_reg;
        select_ln98_2_reg_497_pp0_iter4_reg <= select_ln98_2_reg_497_pp0_iter3_reg;
        select_ln98_2_reg_497_pp0_iter5_reg <= select_ln98_2_reg_497_pp0_iter4_reg;
        sh_amt_2_reg_585 <= sh_amt_2_fu_348_p2;
        sh_amt_reg_566 <= sh_amt_fu_312_p2;
        v51_reg_534 <= grp_fu_638_p_dout0;
        v53_reg_539 <= grp_fu_642_p_dout0;
        v54_V_3_reg_600 <= v54_V_3_fu_395_p3;
        v54_V_7_reg_605 <= v54_V_7_fu_460_p3;
        v54_V_reg_554 <= v54_V_fu_302_p1;
        v54_V_reg_554_pp0_iter25_reg <= v54_V_reg_554;
        v553_load_reg_514 <= v553_q0;
        zext_ln100_2_reg_504[19 : 0] <= zext_ln100_2_fu_260_p1[19 : 0];
        zext_ln100_2_reg_504_pp0_iter10_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter9_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter11_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter10_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter12_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter11_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter13_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter12_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter14_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter13_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter15_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter14_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter16_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter15_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter17_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter16_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter18_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter17_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter19_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter18_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter20_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter19_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter21_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter20_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter22_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter21_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter23_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter22_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter24_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter23_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter25_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter24_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter26_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter25_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter3_reg[19 : 0] <= zext_ln100_2_reg_504[19 : 0];
        zext_ln100_2_reg_504_pp0_iter4_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter3_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter5_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter4_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter6_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter5_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter7_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter6_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter8_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter7_reg[19 : 0];
        zext_ln100_2_reg_504_pp0_iter9_reg[19 : 0] <= zext_ln100_2_reg_504_pp0_iter8_reg[19 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_fu_160_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln98_2_reg_497 <= select_ln98_2_fu_198_p3;
        select_ln98_reg_492 <= select_ln98_fu_190_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln98_fu_160_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_W_ce0 = 1'b1;
    end else begin
        max_W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        q_W_V_ce0 = 1'b1;
    end else begin
        q_W_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        q_W_V_we0 = 1'b1;
    end else begin
        q_W_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v553_ce0 = 1'b1;
    end else begin
        v553_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_254_p2 = (sub_ln100_fu_245_p2 + zext_ln100_1_fu_251_p1);

assign add_ln98_1_fu_166_p2 = (indvar_flatten19_fu_90 + 20'd1);

assign add_ln98_fu_178_p2 = (i3_fu_86 + 10'd1);

assign add_ln99_fu_206_p2 = (select_ln98_fu_190_p3 + 10'd1);

assign and_ln299_fu_442_p2 = (xor_ln295_fu_437_p2 & icmp_ln299_reg_574_pp0_iter25_reg);

assign and_ln302_2_fu_389_p2 = (icmp_ln301_fu_338_p2 & and_ln302_fu_383_p2);

assign and_ln302_fu_383_p2 = (xor_ln299_fu_377_p2 & icmp_ln302_fu_343_p2);

assign and_ln320_fu_425_p2 = (xor_ln301_fu_419_p2 & icmp_ln320_reg_590);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign exp_fu_288_p4 = {{reg_fu_273_p1[30:23]}};

assign grp_fu_638_p_ce = 1'b1;

assign grp_fu_638_p_din0 = v50_fu_265_p1;

assign grp_fu_638_p_din1 = 32'd1157619712;

assign grp_fu_642_p_ce = 1'b1;

assign grp_fu_642_p_din0 = v51_reg_534;

assign grp_fu_642_p_din1 = max_W_load_reg_529;

assign icmp_ln295_fu_306_p2 = ((trunc_ln278_fu_276_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_318_p2 = ((exp_fu_288_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_338_p2 = (($signed(sh_amt_reg_566) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln302_fu_343_p2 = (($signed(sh_amt_reg_566) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln320_fu_353_p2 = (($signed(sh_amt_2_fu_348_p2) < $signed(9'd12)) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_160_p2 = ((indvar_flatten19_fu_90 == 20'd589824) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_184_p2 = ((j3_fu_82 == 10'd768) ? 1'b1 : 1'b0);

assign lshr_ln304_fu_363_p2 = zext_ln304_fu_359_p1 >> sext_ln298_fu_335_p1;

assign max_W_address0 = zext_ln98_fu_269_p1;

assign or_ln299_fu_373_p2 = (icmp_ln299_reg_574 | icmp_ln295_reg_560);

assign or_ln301_fu_415_p2 = (or_ln299_reg_595 | icmp_ln301_reg_580);

assign p_shl9_fu_227_p3 = {{select_ln98_2_reg_497}, {10'd0}};

assign q_W_V_address0 = zext_ln100_2_reg_504_pp0_iter26_reg;

assign q_W_V_d0 = v54_V_7_reg_605;

assign reg_fu_273_p1 = v53_reg_539;

assign select_ln98_2_fu_198_p3 = ((icmp_ln99_fu_184_p2[0:0] == 1'b1) ? add_ln98_fu_178_p2 : i3_fu_86);

assign select_ln98_fu_190_p3 = ((icmp_ln99_fu_184_p2[0:0] == 1'b1) ? 10'd0 : j3_fu_82);

assign sext_ln298_2_fu_403_p1 = sh_amt_2_reg_585;

assign sext_ln298_2cast_fu_406_p1 = sext_ln298_2_fu_403_p1[11:0];

assign sext_ln298_fu_335_p1 = sh_amt_reg_566;

assign sh_amt_2_fu_348_p2 = ($signed(9'd0) - $signed(sh_amt_reg_566));

assign sh_amt_fu_312_p2 = (9'd150 - zext_ln283_fu_298_p1);

assign shl_ln322_fu_410_p2 = v54_V_reg_554_pp0_iter25_reg << sext_ln298_2cast_fu_406_p1;

assign sub_ln100_fu_245_p2 = (p_shl9_fu_227_p3 - zext_ln100_fu_241_p1);

assign tmp_fu_234_p3 = {{select_ln98_2_reg_497}, {8'd0}};

assign trunc_ln278_fu_276_p1 = reg_fu_273_p1[30:0];

assign trunc_ln287_fu_324_p1 = reg_reg_544[22:0];

assign v50_fu_265_p1 = v553_load_reg_514;

assign v54_V_1_fu_369_p1 = lshr_ln304_fu_363_p2[11:0];

assign v54_V_3_fu_395_p3 = ((and_ln302_2_fu_389_p2[0:0] == 1'b1) ? v54_V_1_fu_369_p1 : 12'd0);

assign v54_V_4_fu_430_p3 = ((and_ln320_fu_425_p2[0:0] == 1'b1) ? shl_ln322_fu_410_p2 : v54_V_3_reg_600);

assign v54_V_5_fu_447_p3 = ((and_ln299_fu_442_p2[0:0] == 1'b1) ? v54_V_reg_554_pp0_iter25_reg : v54_V_4_fu_430_p3);

assign v54_V_6_fu_454_p2 = (12'd0 - v54_V_5_fu_447_p3);

assign v54_V_7_fu_460_p3 = ((p_Result_s_reg_549_pp0_iter25_reg[0:0] == 1'b1) ? v54_V_6_fu_454_p2 : v54_V_5_fu_447_p3);

assign v54_V_fu_302_p1 = reg_fu_273_p1[11:0];

assign v553_address0 = zext_ln100_2_fu_260_p1;

assign xor_ln295_fu_437_p2 = (icmp_ln295_reg_560_pp0_iter25_reg ^ 1'd1);

assign xor_ln299_fu_377_p2 = (or_ln299_fu_373_p2 ^ 1'd1);

assign xor_ln301_fu_419_p2 = (or_ln301_fu_415_p2 ^ 1'd1);

assign zext_ln100_1_fu_251_p1 = select_ln98_reg_492;

assign zext_ln100_2_fu_260_p1 = add_ln100_fu_254_p2;

assign zext_ln100_fu_241_p1 = tmp_fu_234_p3;

assign zext_ln283_fu_298_p1 = exp_fu_288_p4;

assign zext_ln304_1_cast_fu_327_p3 = {{1'd1}, {trunc_ln287_fu_324_p1}};

assign zext_ln304_fu_359_p1 = zext_ln304_1_cast_fu_327_p3;

assign zext_ln98_fu_269_p1 = select_ln98_2_reg_497_pp0_iter5_reg;

always @ (posedge ap_clk) begin
    zext_ln100_2_reg_504[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter3_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter4_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter5_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter6_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter7_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter8_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter9_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter10_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter11_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter12_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter13_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter14_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter15_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter16_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter17_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter18_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter19_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter20_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter21_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter22_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter23_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter24_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter25_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
    zext_ln100_2_reg_504_pp0_iter26_reg[63:20] <= 44'b00000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Linear_layer_qkv_Pipeline_l_W_to_int_i3_l_j3
