// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Context_layer_Pipeline_l_gemm_i18_l_j18 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        q_Attn_V_0_address0,
        q_Attn_V_0_ce0,
        q_Attn_V_0_q0,
        q_Attn_V_1_address0,
        q_Attn_V_1_ce0,
        q_Attn_V_1_q0,
        q_Attn_V_2_address0,
        q_Attn_V_2_ce0,
        q_Attn_V_2_q0,
        q_Attn_V_3_address0,
        q_Attn_V_3_ce0,
        q_Attn_V_3_q0,
        q_Attn_V_4_address0,
        q_Attn_V_4_ce0,
        q_Attn_V_4_q0,
        q_Attn_V_5_address0,
        q_Attn_V_5_ce0,
        q_Attn_V_5_q0,
        q_Attn_V_6_address0,
        q_Attn_V_6_ce0,
        q_Attn_V_6_q0,
        q_Attn_V_7_address0,
        q_Attn_V_7_ce0,
        q_Attn_V_7_q0,
        q_Attn_V_8_address0,
        q_Attn_V_8_ce0,
        q_Attn_V_8_q0,
        q_Attn_V_9_address0,
        q_Attn_V_9_ce0,
        q_Attn_V_9_q0,
        q_Attn_V_10_address0,
        q_Attn_V_10_ce0,
        q_Attn_V_10_q0,
        q_Attn_V_11_address0,
        q_Attn_V_11_ce0,
        q_Attn_V_11_q0,
        q_outp2_address0,
        q_outp2_ce0,
        q_outp2_we0,
        q_outp2_d0,
        q_outp2_address1,
        q_outp2_ce1,
        q_outp2_q1,
        q_V_h_V_0_address0,
        q_V_h_V_0_ce0,
        q_V_h_V_0_q0,
        q_V_h_V_1_address0,
        q_V_h_V_1_ce0,
        q_V_h_V_1_q0,
        q_V_h_V_2_address0,
        q_V_h_V_2_ce0,
        q_V_h_V_2_q0,
        q_V_h_V_3_address0,
        q_V_h_V_3_ce0,
        q_V_h_V_3_q0,
        q_V_h_V_4_address0,
        q_V_h_V_4_ce0,
        q_V_h_V_4_q0,
        q_V_h_V_5_address0,
        q_V_h_V_5_ce0,
        q_V_h_V_5_q0,
        q_V_h_V_6_address0,
        q_V_h_V_6_ce0,
        q_V_h_V_6_q0,
        q_V_h_V_7_address0,
        q_V_h_V_7_ce0,
        q_V_h_V_7_q0,
        q_V_h_V_8_address0,
        q_V_h_V_8_ce0,
        q_V_h_V_8_q0,
        q_V_h_V_9_address0,
        q_V_h_V_9_ce0,
        q_V_h_V_9_q0,
        q_V_h_V_10_address0,
        q_V_h_V_10_ce0,
        q_V_h_V_10_q0,
        q_V_h_V_11_address0,
        q_V_h_V_11_ce0,
        q_V_h_V_11_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] q_Attn_V_0_address0;
output   q_Attn_V_0_ce0;
input  [11:0] q_Attn_V_0_q0;
output  [3:0] q_Attn_V_1_address0;
output   q_Attn_V_1_ce0;
input  [11:0] q_Attn_V_1_q0;
output  [3:0] q_Attn_V_2_address0;
output   q_Attn_V_2_ce0;
input  [11:0] q_Attn_V_2_q0;
output  [3:0] q_Attn_V_3_address0;
output   q_Attn_V_3_ce0;
input  [11:0] q_Attn_V_3_q0;
output  [3:0] q_Attn_V_4_address0;
output   q_Attn_V_4_ce0;
input  [11:0] q_Attn_V_4_q0;
output  [3:0] q_Attn_V_5_address0;
output   q_Attn_V_5_ce0;
input  [11:0] q_Attn_V_5_q0;
output  [3:0] q_Attn_V_6_address0;
output   q_Attn_V_6_ce0;
input  [11:0] q_Attn_V_6_q0;
output  [3:0] q_Attn_V_7_address0;
output   q_Attn_V_7_ce0;
input  [11:0] q_Attn_V_7_q0;
output  [3:0] q_Attn_V_8_address0;
output   q_Attn_V_8_ce0;
input  [11:0] q_Attn_V_8_q0;
output  [3:0] q_Attn_V_9_address0;
output   q_Attn_V_9_ce0;
input  [11:0] q_Attn_V_9_q0;
output  [3:0] q_Attn_V_10_address0;
output   q_Attn_V_10_ce0;
input  [11:0] q_Attn_V_10_q0;
output  [3:0] q_Attn_V_11_address0;
output   q_Attn_V_11_ce0;
input  [11:0] q_Attn_V_11_q0;
output  [9:0] q_outp2_address0;
output   q_outp2_ce0;
output   q_outp2_we0;
output  [31:0] q_outp2_d0;
output  [9:0] q_outp2_address1;
output   q_outp2_ce1;
input  [31:0] q_outp2_q1;
output  [5:0] q_V_h_V_0_address0;
output   q_V_h_V_0_ce0;
input  [11:0] q_V_h_V_0_q0;
output  [5:0] q_V_h_V_1_address0;
output   q_V_h_V_1_ce0;
input  [11:0] q_V_h_V_1_q0;
output  [5:0] q_V_h_V_2_address0;
output   q_V_h_V_2_ce0;
input  [11:0] q_V_h_V_2_q0;
output  [5:0] q_V_h_V_3_address0;
output   q_V_h_V_3_ce0;
input  [11:0] q_V_h_V_3_q0;
output  [5:0] q_V_h_V_4_address0;
output   q_V_h_V_4_ce0;
input  [11:0] q_V_h_V_4_q0;
output  [5:0] q_V_h_V_5_address0;
output   q_V_h_V_5_ce0;
input  [11:0] q_V_h_V_5_q0;
output  [5:0] q_V_h_V_6_address0;
output   q_V_h_V_6_ce0;
input  [11:0] q_V_h_V_6_q0;
output  [5:0] q_V_h_V_7_address0;
output   q_V_h_V_7_ce0;
input  [11:0] q_V_h_V_7_q0;
output  [5:0] q_V_h_V_8_address0;
output   q_V_h_V_8_ce0;
input  [11:0] q_V_h_V_8_q0;
output  [5:0] q_V_h_V_9_address0;
output   q_V_h_V_9_ce0;
input  [11:0] q_V_h_V_9_q0;
output  [5:0] q_V_h_V_10_address0;
output   q_V_h_V_10_ce0;
input  [11:0] q_V_h_V_10_q0;
output  [5:0] q_V_h_V_11_address0;
output   q_V_h_V_11_ce0;
input  [11:0] q_V_h_V_11_q0;

reg ap_idle;
reg q_Attn_V_0_ce0;
reg q_Attn_V_1_ce0;
reg q_Attn_V_2_ce0;
reg q_Attn_V_3_ce0;
reg q_Attn_V_4_ce0;
reg q_Attn_V_5_ce0;
reg q_Attn_V_6_ce0;
reg q_Attn_V_7_ce0;
reg q_Attn_V_8_ce0;
reg q_Attn_V_9_ce0;
reg q_Attn_V_10_ce0;
reg q_Attn_V_11_ce0;
reg q_outp2_ce0;
reg q_outp2_we0;
reg q_outp2_ce1;
reg q_V_h_V_0_ce0;
reg q_V_h_V_1_ce0;
reg q_V_h_V_2_ce0;
reg q_V_h_V_3_ce0;
reg q_V_h_V_4_ce0;
reg q_V_h_V_5_ce0;
reg q_V_h_V_6_ce0;
reg q_V_h_V_7_ce0;
reg q_V_h_V_8_ce0;
reg q_V_h_V_9_ce0;
reg q_V_h_V_10_ce0;
reg q_V_h_V_11_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln379_fu_451_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] select_ln379_fu_481_p3;
reg   [6:0] select_ln379_reg_827;
wire   [3:0] select_ln379_1_fu_489_p3;
reg   [3:0] select_ln379_1_reg_832;
wire   [63:0] zext_ln379_fu_497_p1;
reg   [63:0] zext_ln379_reg_837;
reg   [63:0] zext_ln379_reg_837_pp0_iter1_reg;
reg   [63:0] zext_ln379_reg_837_pp0_iter2_reg;
wire   [63:0] j18_cast_fu_502_p1;
reg   [63:0] j18_cast_reg_857;
reg   [63:0] j18_cast_reg_857_pp0_iter1_reg;
reg   [63:0] j18_cast_reg_857_pp0_iter2_reg;
reg   [9:0] q_outp2_addr_1_reg_907;
reg   [9:0] q_outp2_addr_1_reg_907_pp0_iter2_reg;
reg   [9:0] q_outp2_addr_1_reg_907_pp0_iter3_reg;
reg   [9:0] q_outp2_addr_1_reg_907_pp0_iter4_reg;
reg   [9:0] q_outp2_addr_1_reg_907_pp0_iter5_reg;
reg   [9:0] q_outp2_addr_1_reg_907_pp0_iter6_reg;
reg   [9:0] q_outp2_addr_1_reg_907_pp0_iter7_reg;
reg   [31:0] q_outp2_load_reg_993;
reg   [31:0] q_outp2_load_reg_993_pp0_iter3_reg;
reg   [31:0] q_outp2_load_reg_993_pp0_iter4_reg;
reg   [31:0] q_outp2_load_reg_993_pp0_iter5_reg;
wire  signed [24:0] grp_fu_727_p3;
wire   [31:0] add_ln389_1_fu_663_p2;
reg   [31:0] add_ln389_1_reg_1148;
wire  signed [24:0] grp_fu_758_p3;
wire   [25:0] add_ln389_10_fu_683_p2;
reg   [25:0] add_ln389_10_reg_1158;
wire   [31:0] add_ln389_11_fu_700_p2;
reg   [31:0] add_ln389_11_reg_1163;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast_fu_548_p1;
reg   [6:0] j18_fu_92;
wire   [6:0] add_ln380_fu_507_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_j18_load;
reg   [3:0] i18_fu_96;
reg   [3:0] ap_sig_allocacmp_i18_load;
reg   [9:0] indvar_flatten18_fu_100;
wire   [9:0] add_ln379_1_fu_457_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten18_load;
wire   [0:0] icmp_ln380_fu_475_p2;
wire   [3:0] add_ln379_fu_469_p2;
wire   [9:0] tmp_s_fu_528_p3;
wire   [9:0] select_ln379_cast_fu_539_p1;
wire   [9:0] empty_432_fu_542_p2;
wire  signed [23:0] grp_fu_706_p2;
wire  signed [23:0] grp_fu_713_p2;
wire  signed [23:0] grp_fu_720_p2;
wire  signed [23:0] grp_fu_735_p2;
wire  signed [23:0] grp_fu_742_p2;
wire  signed [24:0] grp_fu_749_p3;
wire  signed [31:0] sext_ln389_1_fu_660_p1;
wire  signed [24:0] grp_fu_766_p3;
wire  signed [24:0] grp_fu_775_p3;
wire  signed [24:0] grp_fu_784_p3;
wire  signed [25:0] sext_ln389_5_fu_674_p1;
wire  signed [25:0] sext_ln389_4_fu_671_p1;
wire   [25:0] add_ln389_9_fu_677_p2;
wire  signed [25:0] sext_ln389_3_fu_668_p1;
wire  signed [24:0] grp_fu_793_p3;
wire  signed [31:0] sext_ln389_2_fu_689_p1;
wire  signed [31:0] sext_ln389_6_fu_697_p1;
wire   [31:0] add_ln389_4_fu_692_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_mul_mul_12s_12s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_12s_12s_24_4_1_U1035(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_6_q0),
    .din1(q_Attn_V_6_q0),
    .ce(1'b1),
    .dout(grp_fu_706_p2)
);

Bert_layer_mul_mul_12s_12s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_12s_12s_24_4_1_U1036(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_0_q0),
    .din1(q_Attn_V_0_q0),
    .ce(1'b1),
    .dout(grp_fu_713_p2)
);

Bert_layer_mul_mul_12s_12s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_12s_12s_24_4_1_U1037(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_3_q0),
    .din1(q_Attn_V_3_q0),
    .ce(1'b1),
    .dout(grp_fu_720_p2)
);

Bert_layer_mac_muladd_12s_12s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_24s_25_4_1_U1038(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_7_q0),
    .din1(q_Attn_V_7_q0),
    .din2(grp_fu_706_p2),
    .ce(1'b1),
    .dout(grp_fu_727_p3)
);

Bert_layer_mul_mul_12s_12s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_12s_12s_24_4_1_U1039(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_8_q0),
    .din1(q_Attn_V_8_q0),
    .ce(1'b1),
    .dout(grp_fu_735_p2)
);

Bert_layer_mul_mul_12s_12s_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 24 ))
mul_mul_12s_12s_24_4_1_U1040(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_10_q0),
    .din1(q_Attn_V_10_q0),
    .ce(1'b1),
    .dout(grp_fu_742_p2)
);

Bert_layer_mac_muladd_12s_12s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_24s_25_4_1_U1041(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_1_q0),
    .din1(q_Attn_V_1_q0),
    .din2(grp_fu_713_p2),
    .ce(1'b1),
    .dout(grp_fu_749_p3)
);

Bert_layer_mac_muladd_12s_12s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_24s_25_4_1_U1042(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_4_q0),
    .din1(q_Attn_V_4_q0),
    .din2(grp_fu_720_p2),
    .ce(1'b1),
    .dout(grp_fu_758_p3)
);

Bert_layer_mac_muladd_12s_12s_25s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_25s_25_4_1_U1043(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_5_q0),
    .din1(q_Attn_V_5_q0),
    .din2(grp_fu_727_p3),
    .ce(1'b1),
    .dout(grp_fu_766_p3)
);

Bert_layer_mac_muladd_12s_12s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_24s_25_4_1_U1044(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_9_q0),
    .din1(q_Attn_V_9_q0),
    .din2(grp_fu_735_p2),
    .ce(1'b1),
    .dout(grp_fu_775_p3)
);

Bert_layer_mac_muladd_12s_12s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_24s_25_4_1_U1045(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_11_q0),
    .din1(q_Attn_V_11_q0),
    .din2(grp_fu_742_p2),
    .ce(1'b1),
    .dout(grp_fu_784_p3)
);

Bert_layer_mac_muladd_12s_12s_25s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 25 ))
mac_muladd_12s_12s_25s_25_4_1_U1046(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(q_V_h_V_2_q0),
    .din1(q_Attn_V_2_q0),
    .din2(grp_fu_758_p3),
    .ce(1'b1),
    .dout(grp_fu_793_p3)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln379_fu_451_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i18_fu_96 <= select_ln379_1_fu_489_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i18_fu_96 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln379_fu_451_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten18_fu_100 <= add_ln379_1_fu_457_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten18_fu_100 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln379_fu_451_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j18_fu_92 <= add_ln380_fu_507_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j18_fu_92 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln389_10_reg_1158 <= add_ln389_10_fu_683_p2;
        add_ln389_11_reg_1163 <= add_ln389_11_fu_700_p2;
        add_ln389_1_reg_1148 <= add_ln389_1_fu_663_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        j18_cast_reg_857_pp0_iter2_reg[6 : 0] <= j18_cast_reg_857_pp0_iter1_reg[6 : 0];
        q_outp2_addr_1_reg_907_pp0_iter2_reg <= q_outp2_addr_1_reg_907;
        q_outp2_addr_1_reg_907_pp0_iter3_reg <= q_outp2_addr_1_reg_907_pp0_iter2_reg;
        q_outp2_addr_1_reg_907_pp0_iter4_reg <= q_outp2_addr_1_reg_907_pp0_iter3_reg;
        q_outp2_addr_1_reg_907_pp0_iter5_reg <= q_outp2_addr_1_reg_907_pp0_iter4_reg;
        q_outp2_addr_1_reg_907_pp0_iter6_reg <= q_outp2_addr_1_reg_907_pp0_iter5_reg;
        q_outp2_addr_1_reg_907_pp0_iter7_reg <= q_outp2_addr_1_reg_907_pp0_iter6_reg;
        q_outp2_load_reg_993_pp0_iter3_reg <= q_outp2_load_reg_993;
        q_outp2_load_reg_993_pp0_iter4_reg <= q_outp2_load_reg_993_pp0_iter3_reg;
        q_outp2_load_reg_993_pp0_iter5_reg <= q_outp2_load_reg_993_pp0_iter4_reg;
        zext_ln379_reg_837_pp0_iter2_reg[3 : 0] <= zext_ln379_reg_837_pp0_iter1_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        j18_cast_reg_857_pp0_iter1_reg[6 : 0] <= j18_cast_reg_857[6 : 0];
        q_outp2_addr_1_reg_907 <= p_cast_fu_548_p1;
        zext_ln379_reg_837_pp0_iter1_reg[3 : 0] <= zext_ln379_reg_837[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln379_fu_451_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j18_cast_reg_857[6 : 0] <= j18_cast_fu_502_p1[6 : 0];
        select_ln379_1_reg_832 <= select_ln379_1_fu_489_p3;
        select_ln379_reg_827 <= select_ln379_fu_481_p3;
        zext_ln379_reg_837[3 : 0] <= zext_ln379_fu_497_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_outp2_load_reg_993 <= q_outp2_q1;
    end
end

always @ (*) begin
    if (((icmp_ln379_fu_451_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i18_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i18_load = i18_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten18_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten18_load = indvar_flatten18_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j18_load = 7'd0;
    end else begin
        ap_sig_allocacmp_j18_load = j18_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_Attn_V_0_ce0 = 1'b1;
    end else begin
        q_Attn_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_Attn_V_10_ce0 = 1'b1;
    end else begin
        q_Attn_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_Attn_V_11_ce0 = 1'b1;
    end else begin
        q_Attn_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_Attn_V_1_ce0 = 1'b1;
    end else begin
        q_Attn_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        q_Attn_V_2_ce0 = 1'b1;
    end else begin
        q_Attn_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_Attn_V_3_ce0 = 1'b1;
    end else begin
        q_Attn_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_Attn_V_4_ce0 = 1'b1;
    end else begin
        q_Attn_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_Attn_V_5_ce0 = 1'b1;
    end else begin
        q_Attn_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_Attn_V_6_ce0 = 1'b1;
    end else begin
        q_Attn_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_Attn_V_7_ce0 = 1'b1;
    end else begin
        q_Attn_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_Attn_V_8_ce0 = 1'b1;
    end else begin
        q_Attn_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_Attn_V_9_ce0 = 1'b1;
    end else begin
        q_Attn_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_h_V_0_ce0 = 1'b1;
    end else begin
        q_V_h_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_h_V_10_ce0 = 1'b1;
    end else begin
        q_V_h_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_V_h_V_11_ce0 = 1'b1;
    end else begin
        q_V_h_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_V_h_V_1_ce0 = 1'b1;
    end else begin
        q_V_h_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        q_V_h_V_2_ce0 = 1'b1;
    end else begin
        q_V_h_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_h_V_3_ce0 = 1'b1;
    end else begin
        q_V_h_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_V_h_V_4_ce0 = 1'b1;
    end else begin
        q_V_h_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_V_h_V_5_ce0 = 1'b1;
    end else begin
        q_V_h_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_h_V_6_ce0 = 1'b1;
    end else begin
        q_V_h_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_h_V_7_ce0 = 1'b1;
    end else begin
        q_V_h_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_V_h_V_8_ce0 = 1'b1;
    end else begin
        q_V_h_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        q_V_h_V_9_ce0 = 1'b1;
    end else begin
        q_V_h_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        q_outp2_ce0 = 1'b1;
    end else begin
        q_outp2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        q_outp2_ce1 = 1'b1;
    end else begin
        q_outp2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        q_outp2_we0 = 1'b1;
    end else begin
        q_outp2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln379_1_fu_457_p2 = (ap_sig_allocacmp_indvar_flatten18_load + 10'd1);

assign add_ln379_fu_469_p2 = (ap_sig_allocacmp_i18_load + 4'd1);

assign add_ln380_fu_507_p2 = (select_ln379_fu_481_p3 + 7'd1);

assign add_ln389_10_fu_683_p2 = ($signed(add_ln389_9_fu_677_p2) + $signed(sext_ln389_3_fu_668_p1));

assign add_ln389_11_fu_700_p2 = ($signed(sext_ln389_6_fu_697_p1) + $signed(add_ln389_4_fu_692_p2));

assign add_ln389_1_fu_663_p2 = ($signed(sext_ln389_1_fu_660_p1) + $signed(q_outp2_load_reg_993_pp0_iter5_reg));

assign add_ln389_4_fu_692_p2 = ($signed(sext_ln389_2_fu_689_p1) + $signed(add_ln389_1_reg_1148));

assign add_ln389_9_fu_677_p2 = ($signed(sext_ln389_5_fu_674_p1) + $signed(sext_ln389_4_fu_671_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_432_fu_542_p2 = (tmp_s_fu_528_p3 + select_ln379_cast_fu_539_p1);

assign icmp_ln379_fu_451_p2 = ((ap_sig_allocacmp_indvar_flatten18_load == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln380_fu_475_p2 = ((ap_sig_allocacmp_j18_load == 7'd64) ? 1'b1 : 1'b0);

assign j18_cast_fu_502_p1 = select_ln379_fu_481_p3;

assign p_cast_fu_548_p1 = empty_432_fu_542_p2;

assign q_Attn_V_0_address0 = zext_ln379_reg_837;

assign q_Attn_V_10_address0 = zext_ln379_reg_837;

assign q_Attn_V_11_address0 = zext_ln379_reg_837_pp0_iter1_reg;

assign q_Attn_V_1_address0 = zext_ln379_reg_837_pp0_iter1_reg;

assign q_Attn_V_2_address0 = zext_ln379_reg_837_pp0_iter2_reg;

assign q_Attn_V_3_address0 = zext_ln379_reg_837;

assign q_Attn_V_4_address0 = zext_ln379_reg_837_pp0_iter1_reg;

assign q_Attn_V_5_address0 = zext_ln379_reg_837_pp0_iter1_reg;

assign q_Attn_V_6_address0 = zext_ln379_fu_497_p1;

assign q_Attn_V_7_address0 = zext_ln379_reg_837;

assign q_Attn_V_8_address0 = zext_ln379_reg_837;

assign q_Attn_V_9_address0 = zext_ln379_reg_837_pp0_iter1_reg;

assign q_V_h_V_0_address0 = j18_cast_reg_857;

assign q_V_h_V_10_address0 = j18_cast_reg_857;

assign q_V_h_V_11_address0 = j18_cast_reg_857_pp0_iter1_reg;

assign q_V_h_V_1_address0 = j18_cast_reg_857_pp0_iter1_reg;

assign q_V_h_V_2_address0 = j18_cast_reg_857_pp0_iter2_reg;

assign q_V_h_V_3_address0 = j18_cast_reg_857;

assign q_V_h_V_4_address0 = j18_cast_reg_857_pp0_iter1_reg;

assign q_V_h_V_5_address0 = j18_cast_reg_857_pp0_iter1_reg;

assign q_V_h_V_6_address0 = j18_cast_fu_502_p1;

assign q_V_h_V_7_address0 = j18_cast_reg_857;

assign q_V_h_V_8_address0 = j18_cast_reg_857;

assign q_V_h_V_9_address0 = j18_cast_reg_857_pp0_iter1_reg;

assign q_outp2_address0 = q_outp2_addr_1_reg_907_pp0_iter7_reg;

assign q_outp2_address1 = p_cast_fu_548_p1;

assign q_outp2_d0 = add_ln389_11_reg_1163;

assign select_ln379_1_fu_489_p3 = ((icmp_ln380_fu_475_p2[0:0] == 1'b1) ? add_ln379_fu_469_p2 : ap_sig_allocacmp_i18_load);

assign select_ln379_cast_fu_539_p1 = select_ln379_reg_827;

assign select_ln379_fu_481_p3 = ((icmp_ln380_fu_475_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_j18_load);

assign sext_ln389_1_fu_660_p1 = grp_fu_749_p3;

assign sext_ln389_2_fu_689_p1 = grp_fu_793_p3;

assign sext_ln389_3_fu_668_p1 = grp_fu_766_p3;

assign sext_ln389_4_fu_671_p1 = grp_fu_775_p3;

assign sext_ln389_5_fu_674_p1 = grp_fu_784_p3;

assign sext_ln389_6_fu_697_p1 = $signed(add_ln389_10_reg_1158);

assign tmp_s_fu_528_p3 = {{select_ln379_1_reg_832}, {6'd0}};

assign zext_ln379_fu_497_p1 = select_ln379_1_fu_489_p3;

always @ (posedge ap_clk) begin
    zext_ln379_reg_837[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln379_reg_837_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln379_reg_837_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    j18_cast_reg_857[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    j18_cast_reg_857_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    j18_cast_reg_857_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Context_layer_Pipeline_l_gemm_i18_l_j18
