// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Attention_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v77_address0,
        v77_ce0,
        v77_q0,
        v78_address0,
        v78_ce0,
        v78_q0,
        v79_address0,
        v79_ce0,
        v79_we0,
        v79_d0
);

parameter    ap_ST_fsm_state1 = 109'd1;
parameter    ap_ST_fsm_state2 = 109'd2;
parameter    ap_ST_fsm_state3 = 109'd4;
parameter    ap_ST_fsm_state4 = 109'd8;
parameter    ap_ST_fsm_state5 = 109'd16;
parameter    ap_ST_fsm_state6 = 109'd32;
parameter    ap_ST_fsm_state7 = 109'd64;
parameter    ap_ST_fsm_state8 = 109'd128;
parameter    ap_ST_fsm_state9 = 109'd256;
parameter    ap_ST_fsm_state10 = 109'd512;
parameter    ap_ST_fsm_state11 = 109'd1024;
parameter    ap_ST_fsm_state12 = 109'd2048;
parameter    ap_ST_fsm_state13 = 109'd4096;
parameter    ap_ST_fsm_state14 = 109'd8192;
parameter    ap_ST_fsm_state15 = 109'd16384;
parameter    ap_ST_fsm_state16 = 109'd32768;
parameter    ap_ST_fsm_state17 = 109'd65536;
parameter    ap_ST_fsm_state18 = 109'd131072;
parameter    ap_ST_fsm_state19 = 109'd262144;
parameter    ap_ST_fsm_state20 = 109'd524288;
parameter    ap_ST_fsm_state21 = 109'd1048576;
parameter    ap_ST_fsm_state22 = 109'd2097152;
parameter    ap_ST_fsm_state23 = 109'd4194304;
parameter    ap_ST_fsm_state24 = 109'd8388608;
parameter    ap_ST_fsm_state25 = 109'd16777216;
parameter    ap_ST_fsm_state26 = 109'd33554432;
parameter    ap_ST_fsm_state27 = 109'd67108864;
parameter    ap_ST_fsm_state28 = 109'd134217728;
parameter    ap_ST_fsm_state29 = 109'd268435456;
parameter    ap_ST_fsm_state30 = 109'd536870912;
parameter    ap_ST_fsm_state31 = 109'd1073741824;
parameter    ap_ST_fsm_state32 = 109'd2147483648;
parameter    ap_ST_fsm_state33 = 109'd4294967296;
parameter    ap_ST_fsm_state34 = 109'd8589934592;
parameter    ap_ST_fsm_state35 = 109'd17179869184;
parameter    ap_ST_fsm_state36 = 109'd34359738368;
parameter    ap_ST_fsm_state37 = 109'd68719476736;
parameter    ap_ST_fsm_state38 = 109'd137438953472;
parameter    ap_ST_fsm_state39 = 109'd274877906944;
parameter    ap_ST_fsm_state40 = 109'd549755813888;
parameter    ap_ST_fsm_state41 = 109'd1099511627776;
parameter    ap_ST_fsm_state42 = 109'd2199023255552;
parameter    ap_ST_fsm_state43 = 109'd4398046511104;
parameter    ap_ST_fsm_state44 = 109'd8796093022208;
parameter    ap_ST_fsm_state45 = 109'd17592186044416;
parameter    ap_ST_fsm_state46 = 109'd35184372088832;
parameter    ap_ST_fsm_state47 = 109'd70368744177664;
parameter    ap_ST_fsm_state48 = 109'd140737488355328;
parameter    ap_ST_fsm_state49 = 109'd281474976710656;
parameter    ap_ST_fsm_state50 = 109'd562949953421312;
parameter    ap_ST_fsm_state51 = 109'd1125899906842624;
parameter    ap_ST_fsm_state52 = 109'd2251799813685248;
parameter    ap_ST_fsm_state53 = 109'd4503599627370496;
parameter    ap_ST_fsm_state54 = 109'd9007199254740992;
parameter    ap_ST_fsm_state55 = 109'd18014398509481984;
parameter    ap_ST_fsm_state56 = 109'd36028797018963968;
parameter    ap_ST_fsm_state57 = 109'd72057594037927936;
parameter    ap_ST_fsm_state58 = 109'd144115188075855872;
parameter    ap_ST_fsm_state59 = 109'd288230376151711744;
parameter    ap_ST_fsm_state60 = 109'd576460752303423488;
parameter    ap_ST_fsm_state61 = 109'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 109'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 109'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 109'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 109'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 109'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 109'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 109'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 109'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 109'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 109'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 109'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 109'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 109'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 109'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 109'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 109'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 109'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 109'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 109'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 109'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 109'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 109'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 109'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 109'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 109'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 109'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 109'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 109'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 109'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 109'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 109'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 109'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 109'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 109'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 109'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 109'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 109'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 109'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 109'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 109'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 109'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 109'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 109'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 109'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 109'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 109'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 109'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 109'd324518553658426726783156020576256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] v77_address0;
output   v77_ce0;
input  [31:0] v77_q0;
output  [9:0] v78_address0;
output   v78_ce0;
input  [31:0] v78_q0;
output  [7:0] v79_address0;
output   v79_ce0;
output   v79_we0;
output  [31:0] v79_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] v77_address0;
reg v77_ce0;
reg[9:0] v78_address0;
reg v78_ce0;
reg v79_ce0;
reg v79_we0;

(* fsm_encoding = "none" *) reg   [108:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_533;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state19;
wire   [31:0] max_Q_h_q0;
reg   [31:0] reg_541;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state76;
reg   [31:0] reg_548;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state46;
wire   [31:0] max_K_h_q0;
reg   [31:0] reg_556;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state89;
wire   [31:0] grp_fu_510_p2;
reg   [31:0] reg_563;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state92;
wire   [31:0] grp_fu_516_p2;
reg   [31:0] reg_569;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state108;
wire   [31:0] q_outp1_q0;
reg   [31:0] reg_574;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state78;
wire   [3:0] v81_fu_585_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] v83_fu_602_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] v87_fu_619_p2;
reg   [3:0] v87_reg_1939;
wire    ap_CS_fsm_state4;
wire   [8:0] sub_ln157_fu_649_p2;
reg   [8:0] sub_ln157_reg_1944;
wire   [0:0] icmp_ln155_fu_613_p2;
wire   [3:0] v88_fu_661_p2;
wire    ap_CS_fsm_state5;
wire   [3:0] i6_fu_687_p2;
reg   [3:0] i6_reg_1960;
wire    ap_CS_fsm_state6;
wire   [10:0] zext_ln173_fu_706_p1;
reg   [10:0] zext_ln173_reg_1965;
wire   [0:0] icmp_ln160_fu_681_p2;
reg   [3:0] max_Q_h_addr_1_reg_1970;
wire   [6:0] j6_fu_716_p2;
reg   [6:0] j6_reg_1978;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln161_fu_710_p2;
wire   [0:0] icmp_ln163_1_fu_760_p2;
reg   [0:0] icmp_ln163_1_reg_1988;
wire   [0:0] and_ln163_fu_772_p2;
reg   [0:0] and_ln163_reg_1993;
wire   [31:0] v99_fu_784_p1;
reg   [31:0] v99_reg_1997;
wire   [0:0] icmp_ln176_fu_817_p2;
reg   [0:0] icmp_ln176_reg_2003;
wire   [0:0] icmp_ln176_1_fu_823_p2;
reg   [0:0] icmp_ln176_1_reg_2008;
wire   [0:0] icmp_ln176_2_fu_829_p2;
reg   [0:0] icmp_ln176_2_reg_2013;
wire   [0:0] icmp_ln167_fu_853_p2;
reg   [0:0] icmp_ln167_reg_2018;
wire   [0:0] icmp_ln167_1_fu_859_p2;
reg   [0:0] icmp_ln167_1_reg_2023;
wire   [3:0] i7_fu_901_p2;
reg   [3:0] i7_reg_2037;
wire    ap_CS_fsm_state11;
wire   [10:0] zext_ln198_fu_920_p1;
reg   [10:0] zext_ln198_reg_2042;
wire   [0:0] icmp_ln185_fu_895_p2;
reg   [3:0] max_K_h_addr_1_reg_2047;
wire   [6:0] j7_fu_930_p2;
reg   [6:0] j7_reg_2055;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln186_fu_924_p2;
wire   [0:0] icmp_ln188_1_fu_974_p2;
reg   [0:0] icmp_ln188_1_reg_2065;
wire   [0:0] and_ln188_fu_986_p2;
reg   [0:0] and_ln188_reg_2070;
wire   [31:0] v113_fu_998_p1;
reg   [31:0] v113_reg_2074;
wire   [0:0] icmp_ln201_fu_1031_p2;
reg   [0:0] icmp_ln201_reg_2080;
wire   [0:0] icmp_ln201_1_fu_1037_p2;
reg   [0:0] icmp_ln201_1_reg_2085;
wire   [0:0] icmp_ln201_2_fu_1043_p2;
reg   [0:0] icmp_ln201_2_reg_2090;
wire   [0:0] icmp_ln192_fu_1067_p2;
reg   [0:0] icmp_ln192_reg_2095;
wire   [0:0] icmp_ln192_1_fu_1073_p2;
reg   [0:0] icmp_ln192_1_reg_2100;
wire   [3:0] i8_fu_1115_p2;
reg   [3:0] i8_reg_2114;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln210_fu_1109_p2;
wire   [10:0] zext_ln214_fu_1134_p1;
reg   [10:0] zext_ln214_reg_2124;
wire   [6:0] j8_fu_1144_p2;
reg   [6:0] j8_reg_2132;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln212_2_fu_1159_p1;
reg   [63:0] zext_ln212_2_reg_2137;
wire   [0:0] icmp_ln211_fu_1138_p2;
wire   [31:0] reg_V_fu_1164_p1;
reg   [31:0] reg_V_reg_2147;
wire    ap_CS_fsm_state40;
reg   [0:0] p_Result_89_reg_2152;
wire   [11:0] v123_V_fu_1198_p1;
reg   [11:0] v123_V_reg_2157;
wire   [0:0] icmp_ln278_fu_1210_p2;
reg   [0:0] icmp_ln278_reg_2163;
wire   [0:0] icmp_ln282_fu_1226_p2;
reg   [0:0] icmp_ln282_reg_2169;
wire   [0:0] icmp_ln285_fu_1238_p2;
reg   [0:0] icmp_ln285_reg_2174;
wire  signed [8:0] sh_amt_16_fu_1244_p2;
reg  signed [8:0] sh_amt_16_reg_2179;
wire   [0:0] and_ln284_fu_1278_p2;
reg   [0:0] and_ln284_reg_2184;
wire   [11:0] v123_V_3_fu_1290_p3;
reg   [11:0] v123_V_3_reg_2189;
wire   [0:0] and_ln295_fu_1310_p2;
reg   [0:0] and_ln295_reg_2194;
wire   [11:0] v123_V_9_fu_1397_p3;
reg   [11:0] v123_V_9_reg_2199;
wire    ap_CS_fsm_state41;
wire   [3:0] i9_fu_1410_p2;
reg   [3:0] i9_reg_2207;
wire    ap_CS_fsm_state43;
wire   [0:0] icmp_ln220_fu_1404_p2;
wire   [10:0] zext_ln224_fu_1429_p1;
reg   [10:0] zext_ln224_reg_2217;
wire   [6:0] j9_fu_1439_p2;
reg   [6:0] j9_reg_2225;
wire    ap_CS_fsm_state45;
wire   [63:0] zext_ln222_2_fu_1454_p1;
reg   [63:0] zext_ln222_2_reg_2230;
wire   [0:0] icmp_ln221_fu_1433_p2;
wire   [31:0] reg_V_6_fu_1459_p1;
reg   [31:0] reg_V_6_reg_2240;
wire    ap_CS_fsm_state67;
reg   [0:0] p_Result_90_reg_2245;
wire   [11:0] v130_V_fu_1493_p1;
reg   [11:0] v130_V_reg_2250;
wire   [0:0] icmp_ln278_6_fu_1505_p2;
reg   [0:0] icmp_ln278_6_reg_2256;
wire   [0:0] icmp_ln282_6_fu_1521_p2;
reg   [0:0] icmp_ln282_6_reg_2262;
wire   [0:0] icmp_ln285_6_fu_1533_p2;
reg   [0:0] icmp_ln285_6_reg_2267;
wire  signed [8:0] sh_amt_18_fu_1539_p2;
reg  signed [8:0] sh_amt_18_reg_2272;
wire   [0:0] and_ln284_6_fu_1573_p2;
reg   [0:0] and_ln284_6_reg_2277;
wire   [11:0] v130_V_3_fu_1585_p3;
reg   [11:0] v130_V_3_reg_2282;
wire   [0:0] and_ln295_6_fu_1605_p2;
reg   [0:0] and_ln295_6_reg_2287;
wire   [11:0] v130_V_9_fu_1692_p3;
reg   [11:0] v130_V_9_reg_2292;
wire    ap_CS_fsm_state68;
wire   [3:0] i10_fu_1705_p2;
reg   [3:0] i10_reg_2300;
wire    ap_CS_fsm_state70;
wire   [10:0] zext_ln238_fu_1719_p1;
reg   [10:0] zext_ln238_reg_2305;
wire   [0:0] icmp_ln230_fu_1699_p2;
wire   [8:0] sub_ln238_fu_1747_p2;
reg   [8:0] sub_ln238_reg_2310;
wire   [3:0] j10_fu_1759_p2;
reg   [3:0] j10_reg_2318;
wire    ap_CS_fsm_state71;
wire   [10:0] zext_ln238_3_fu_1777_p1;
reg   [10:0] zext_ln238_3_reg_2323;
wire   [0:0] icmp_ln231_fu_1753_p2;
reg   [7:0] q_outp1_addr_1_reg_2328;
wire   [6:0] k1_fu_1797_p2;
reg   [6:0] k1_reg_2336;
wire    ap_CS_fsm_state72;
wire   [0:0] icmp_ln232_fu_1791_p2;
wire   [11:0] q_Q_h_V_q0;
reg  signed [11:0] v134_V_reg_2351;
wire   [11:0] q_K_h_V_q0;
reg  signed [11:0] v135_V_reg_2356;
wire   [3:0] i11_fu_1839_p2;
reg   [3:0] i11_reg_2364;
wire    ap_CS_fsm_state75;
wire   [0:0] icmp_ln245_fu_1833_p2;
wire   [8:0] sub_ln254_fu_1874_p2;
reg   [8:0] sub_ln254_reg_2374;
wire   [3:0] j11_fu_1886_p2;
reg   [3:0] j11_reg_2382;
wire    ap_CS_fsm_state77;
wire  signed [63:0] sext_ln254_fu_1901_p1;
reg  signed [63:0] sext_ln254_reg_2387;
wire   [0:0] icmp_ln246_fu_1880_p2;
wire   [31:0] grp_fu_521_p1;
reg   [31:0] v146_reg_2397;
wire    ap_CS_fsm_state84;
reg   [3:0] max_Q_h_address0;
reg    max_Q_h_ce0;
reg    max_Q_h_we0;
reg   [31:0] max_Q_h_d0;
reg   [3:0] max_K_h_address0;
reg    max_K_h_ce0;
reg    max_K_h_we0;
reg   [31:0] max_K_h_d0;
reg   [9:0] q_Q_h_V_address0;
reg    q_Q_h_V_ce0;
reg    q_Q_h_V_we0;
reg   [9:0] q_K_h_V_address0;
reg    q_K_h_V_ce0;
reg    q_K_h_V_we0;
reg   [7:0] q_outp1_address0;
reg    q_outp1_ce0;
reg    q_outp1_we0;
reg   [31:0] q_outp1_d0;
reg   [3:0] v81_0_reg_319;
wire   [0:0] icmp_ln145_fu_579_p2;
reg   [3:0] v83_0_reg_330;
wire   [0:0] icmp_ln149_fu_596_p2;
reg   [3:0] v87_0_reg_341;
wire   [0:0] icmp_ln156_fu_655_p2;
reg   [3:0] v88_0_reg_352;
reg   [3:0] i6_0_reg_363;
reg   [6:0] j6_0_reg_374;
wire    ap_CS_fsm_state10;
reg   [3:0] i7_0_reg_385;
reg   [6:0] j7_0_reg_396;
wire    ap_CS_fsm_state15;
reg   [3:0] i8_0_reg_407;
reg   [6:0] j8_0_reg_419;
wire    ap_CS_fsm_state42;
reg   [3:0] i9_0_reg_430;
reg   [6:0] j9_0_reg_442;
wire    ap_CS_fsm_state69;
reg   [3:0] i10_0_reg_453;
reg   [3:0] j10_0_reg_464;
reg   [6:0] k1_0_reg_475;
wire    ap_CS_fsm_state74;
reg   [3:0] i11_0_reg_486;
reg   [3:0] j11_0_reg_498;
wire    ap_CS_fsm_state109;
wire   [63:0] zext_ln146_fu_591_p1;
wire   [63:0] zext_ln150_fu_608_p1;
wire  signed [63:0] sext_ln157_fu_676_p1;
wire   [63:0] zext_ln162_fu_693_p1;
wire   [63:0] zext_ln162_2_fu_731_p1;
wire   [63:0] zext_ln187_fu_907_p1;
wire   [63:0] zext_ln187_2_fu_945_p1;
wire   [63:0] zext_ln212_fu_1121_p1;
wire   [63:0] zext_ln222_fu_1416_p1;
wire  signed [63:0] sext_ln238_fu_1786_p1;
wire   [63:0] zext_ln233_1_fu_1812_p1;
wire   [63:0] zext_ln234_1_fu_1822_p1;
wire   [63:0] zext_ln247_fu_1845_p1;
wire   [63:0] zext_ln247_1_fu_1906_p1;
wire   [0:0] v100_fu_879_p2;
wire   [0:0] v95_fu_889_p2;
wire   [0:0] v114_fu_1093_p2;
wire   [0:0] v109_fu_1103_p2;
wire  signed [31:0] grp_fu_1911_p3;
reg   [31:0] grp_fu_510_p0;
reg   [31:0] grp_fu_510_p1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state85;
reg   [31:0] grp_fu_516_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state79;
reg   [31:0] grp_fu_524_p0;
reg   [31:0] grp_fu_524_p1;
wire   [7:0] tmp_111_fu_625_p3;
wire   [5:0] tmp_112_fu_637_p3;
wire   [8:0] zext_ln157_fu_633_p1;
wire   [8:0] zext_ln157_7_fu_645_p1;
wire   [8:0] zext_ln157_8_fu_667_p1;
wire   [8:0] add_ln157_fu_671_p2;
wire   [9:0] tmp_113_fu_698_p3;
wire   [10:0] zext_ln162_1_fu_722_p1;
wire   [10:0] add_ln162_fu_726_p2;
wire   [31:0] bitcast_ln163_fu_736_p1;
wire   [7:0] tmp_78_fu_740_p4;
wire   [22:0] trunc_ln163_fu_750_p1;
wire   [0:0] icmp_ln163_fu_754_p2;
wire   [0:0] or_ln163_fu_766_p2;
wire   [0:0] grp_fu_524_p2;
wire   [31:0] xor_ln175_fu_778_p2;
wire   [31:0] bitcast_ln176_fu_789_p1;
wire   [7:0] tmp_82_fu_793_p4;
wire   [22:0] trunc_ln176_fu_803_p1;
wire   [7:0] tmp_83_fu_807_p4;
wire   [31:0] bitcast_ln167_fu_835_p1;
wire   [7:0] tmp_80_fu_839_p4;
wire   [22:0] trunc_ln167_fu_849_p1;
wire   [0:0] or_ln176_fu_865_p2;
wire   [0:0] or_ln176_1_fu_869_p2;
wire   [0:0] and_ln176_fu_873_p2;
wire   [0:0] or_ln167_fu_885_p2;
wire   [9:0] tmp_114_fu_912_p3;
wire   [10:0] zext_ln187_1_fu_936_p1;
wire   [10:0] add_ln187_fu_940_p2;
wire   [31:0] bitcast_ln188_fu_950_p1;
wire   [7:0] tmp_85_fu_954_p4;
wire   [22:0] trunc_ln188_fu_964_p1;
wire   [0:0] icmp_ln188_fu_968_p2;
wire   [0:0] or_ln188_fu_980_p2;
wire   [31:0] xor_ln200_fu_992_p2;
wire   [31:0] bitcast_ln201_fu_1003_p1;
wire   [7:0] tmp_89_fu_1007_p4;
wire   [22:0] trunc_ln201_fu_1017_p1;
wire   [7:0] tmp_90_fu_1021_p4;
wire   [31:0] bitcast_ln192_fu_1049_p1;
wire   [7:0] tmp_87_fu_1053_p4;
wire   [22:0] trunc_ln192_fu_1063_p1;
wire   [0:0] or_ln201_fu_1079_p2;
wire   [0:0] or_ln201_1_fu_1083_p2;
wire   [0:0] and_ln201_fu_1087_p2;
wire   [0:0] or_ln192_fu_1099_p2;
wire   [9:0] tmp_115_fu_1126_p3;
wire   [10:0] zext_ln212_1_fu_1150_p1;
wire   [10:0] add_ln212_fu_1154_p2;
wire   [7:0] p_Result_s_fu_1180_p4;
wire   [22:0] trunc_ln270_fu_1194_p1;
wire   [30:0] trunc_ln262_fu_1168_p1;
wire   [8:0] exp_V_fu_1190_p1;
wire  signed [8:0] sh_amt_fu_1216_p2;
wire   [23:0] tmp_36_fu_1202_p3;
wire  signed [23:0] sext_ln281_fu_1222_p1;
wire   [23:0] lshr_ln286_fu_1256_p2;
wire   [0:0] or_ln282_fu_1266_p2;
wire   [0:0] icmp_ln284_fu_1232_p2;
wire   [0:0] xor_ln282_fu_1272_p2;
wire   [0:0] and_ln285_fu_1284_p2;
wire   [11:0] v123_V_1_fu_1262_p1;
wire   [0:0] or_ln284_fu_1298_p2;
wire   [0:0] icmp_ln295_fu_1250_p2;
wire   [0:0] xor_ln284_fu_1304_p2;
wire   [0:0] tmp_93_fu_1319_p3;
wire  signed [31:0] sext_ln294_fu_1316_p1;
wire   [11:0] sext_ln294cast_fu_1334_p1;
wire   [11:0] shl_ln297_fu_1338_p2;
wire   [11:0] v123_V_4_fu_1343_p3;
wire   [0:0] xor_ln285_fu_1356_p2;
wire   [0:0] and_ln285_16_fu_1361_p2;
wire   [11:0] select_ln288_fu_1326_p3;
wire   [11:0] v123_V_5_fu_1349_p3;
wire   [0:0] xor_ln278_fu_1374_p2;
wire   [0:0] and_ln282_fu_1379_p2;
wire   [11:0] v123_V_6_fu_1366_p3;
wire   [11:0] v123_V_7_fu_1384_p3;
wire   [11:0] v123_V_8_fu_1391_p2;
wire   [9:0] tmp_116_fu_1421_p3;
wire   [10:0] zext_ln222_1_fu_1445_p1;
wire   [10:0] add_ln222_fu_1449_p2;
wire   [7:0] p_Result_s_489_fu_1475_p4;
wire   [22:0] trunc_ln270_6_fu_1489_p1;
wire   [30:0] trunc_ln262_6_fu_1463_p1;
wire   [8:0] exp_V_6_fu_1485_p1;
wire  signed [8:0] sh_amt_17_fu_1511_p2;
wire   [23:0] tmp_38_fu_1497_p3;
wire  signed [23:0] sext_ln281_6_fu_1517_p1;
wire   [23:0] lshr_ln286_6_fu_1551_p2;
wire   [0:0] or_ln282_6_fu_1561_p2;
wire   [0:0] icmp_ln284_6_fu_1527_p2;
wire   [0:0] xor_ln282_6_fu_1567_p2;
wire   [0:0] and_ln285_17_fu_1579_p2;
wire   [11:0] v130_V_1_fu_1557_p1;
wire   [0:0] or_ln284_6_fu_1593_p2;
wire   [0:0] icmp_ln295_6_fu_1545_p2;
wire   [0:0] xor_ln284_6_fu_1599_p2;
wire   [0:0] tmp_95_fu_1614_p3;
wire  signed [31:0] sext_ln294_6_fu_1611_p1;
wire   [11:0] sext_ln294_6cast_fu_1629_p1;
wire   [11:0] shl_ln297_6_fu_1633_p2;
wire   [11:0] v130_V_4_fu_1638_p3;
wire   [0:0] xor_ln285_6_fu_1651_p2;
wire   [0:0] and_ln285_18_fu_1656_p2;
wire   [11:0] select_ln288_6_fu_1621_p3;
wire   [11:0] v130_V_5_fu_1644_p3;
wire   [0:0] xor_ln278_6_fu_1669_p2;
wire   [0:0] and_ln282_6_fu_1674_p2;
wire   [11:0] v130_V_6_fu_1661_p3;
wire   [11:0] v130_V_7_fu_1679_p3;
wire   [11:0] v130_V_8_fu_1686_p2;
wire   [9:0] tmp_117_fu_1711_p3;
wire   [7:0] tmp_118_fu_1723_p3;
wire   [5:0] tmp_119_fu_1735_p3;
wire   [8:0] zext_ln238_1_fu_1731_p1;
wire   [8:0] zext_ln238_2_fu_1743_p1;
wire   [9:0] tmp_122_fu_1769_p3;
wire   [8:0] zext_ln234_fu_1765_p1;
wire   [8:0] add_ln238_fu_1781_p2;
wire   [10:0] zext_ln233_fu_1803_p1;
wire   [10:0] add_ln233_fu_1807_p2;
wire   [10:0] add_ln234_fu_1817_p2;
wire   [7:0] tmp_120_fu_1850_p3;
wire   [5:0] tmp_121_fu_1862_p3;
wire   [8:0] zext_ln254_fu_1858_p1;
wire   [8:0] zext_ln254_1_fu_1870_p1;
wire   [8:0] zext_ln254_2_fu_1892_p1;
wire   [8:0] add_ln254_fu_1896_p2;
reg   [4:0] grp_fu_524_opcode;
reg   [108:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 109'd1;
end

Linear_layer_qkv_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
max_Q_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_Q_h_address0),
    .ce0(max_Q_h_ce0),
    .we0(max_Q_h_we0),
    .d0(max_Q_h_d0),
    .q0(max_Q_h_q0)
);

Linear_layer_qkv_bkb #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
max_K_h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_K_h_address0),
    .ce0(max_K_h_ce0),
    .we0(max_K_h_we0),
    .d0(max_K_h_d0),
    .q0(max_K_h_q0)
);

Attention_layer_qocq #(
    .DataWidth( 12 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
q_Q_h_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_Q_h_V_address0),
    .ce0(q_Q_h_V_ce0),
    .we0(q_Q_h_V_we0),
    .d0(v123_V_9_reg_2199),
    .q0(q_Q_h_V_q0)
);

Attention_layer_qocq #(
    .DataWidth( 12 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
q_K_h_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_K_h_V_address0),
    .ce0(q_K_h_V_ce0),
    .we0(q_K_h_V_we0),
    .d0(v130_V_9_reg_2292),
    .q0(q_K_h_V_q0)
);

Attention_layer_qqcK #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
q_outp1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_outp1_address0),
    .ce0(q_outp1_ce0),
    .we0(q_outp1_we0),
    .d0(q_outp1_d0),
    .q0(q_outp1_q0)
);

Bert_layer_fmul_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fmul_3hbi_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_510_p0),
    .din1(grp_fu_510_p1),
    .ce(1'b1),
    .dout(grp_fu_510_p2)
);

Bert_layer_fdiv_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fdiv_3ibs_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_563),
    .din1(grp_fu_516_p1),
    .ce(1'b1),
    .dout(grp_fu_516_p2)
);

Bert_layer_sitofpjbC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_sitofpjbC_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_574),
    .ce(1'b1),
    .dout(grp_fu_521_p1)
);

Bert_layer_fcmp_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Bert_layer_fcmp_3kbM_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_524_p0),
    .din1(grp_fu_524_p1),
    .ce(1'b1),
    .opcode(grp_fu_524_opcode),
    .dout(grp_fu_524_p2)
);

Bert_layer_mac_mulbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_mac_mulbW_U26(
    .din0(v135_V_reg_2356),
    .din1(v134_V_reg_2351),
    .din2(reg_574),
    .dout(grp_fu_1911_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln220_fu_1404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        i10_0_reg_453 <= 4'd0;
    end else if (((icmp_ln231_fu_1753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
        i10_0_reg_453 <= i10_reg_2300;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln230_fu_1699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        i11_0_reg_486 <= 4'd0;
    end else if (((icmp_ln246_fu_1880_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
        i11_0_reg_486 <= i11_reg_2364;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i6_0_reg_363 <= 4'd0;
    end else if (((icmp_ln161_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i6_0_reg_363 <= i6_reg_1960;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i7_0_reg_385 <= 4'd0;
    end else if (((icmp_ln186_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i7_0_reg_385 <= i7_reg_2037;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i8_0_reg_407 <= 4'd0;
    end else if (((icmp_ln211_fu_1138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i8_0_reg_407 <= i8_reg_2114;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_1109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        i9_0_reg_430 <= 4'd0;
    end else if (((icmp_ln221_fu_1433_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        i9_0_reg_430 <= i9_reg_2207;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln232_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
        j10_0_reg_464 <= j10_reg_2318;
    end else if (((icmp_ln230_fu_1699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        j10_0_reg_464 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        j11_0_reg_498 <= j11_reg_2382;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        j11_0_reg_498 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j6_0_reg_374 <= j6_reg_1978;
    end else if (((icmp_ln160_fu_681_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        j6_0_reg_374 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j7_0_reg_396 <= j7_reg_2055;
    end else if (((icmp_ln185_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        j7_0_reg_396 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        j8_0_reg_419 <= j8_reg_2132;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        j8_0_reg_419 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        j9_0_reg_442 <= j9_reg_2225;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        j9_0_reg_442 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        k1_0_reg_475 <= k1_reg_2336;
    end else if (((icmp_ln231_fu_1753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        k1_0_reg_475 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_579_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v81_0_reg_319 <= v81_fu_585_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v81_0_reg_319 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        v83_0_reg_330 <= 4'd0;
    end else if (((icmp_ln149_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v83_0_reg_330 <= v83_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln149_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        v87_0_reg_341 <= 4'd0;
    end else if (((icmp_ln156_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        v87_0_reg_341 <= v87_reg_1939;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        v88_0_reg_352 <= 4'd0;
    end else if (((icmp_ln156_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        v88_0_reg_352 <= v88_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        and_ln163_reg_1993 <= and_ln163_fu_772_p2;
        icmp_ln163_1_reg_1988 <= icmp_ln163_1_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        and_ln188_reg_2070 <= and_ln188_fu_986_p2;
        icmp_ln188_1_reg_2065 <= icmp_ln188_1_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        and_ln284_6_reg_2277 <= and_ln284_6_fu_1573_p2;
        and_ln295_6_reg_2287 <= and_ln295_6_fu_1605_p2;
        icmp_ln278_6_reg_2256 <= icmp_ln278_6_fu_1505_p2;
        icmp_ln282_6_reg_2262 <= icmp_ln282_6_fu_1521_p2;
        icmp_ln285_6_reg_2267 <= icmp_ln285_6_fu_1533_p2;
        p_Result_90_reg_2245 <= reg_V_6_fu_1459_p1[32'd31];
        reg_V_6_reg_2240 <= reg_V_6_fu_1459_p1;
        sh_amt_18_reg_2272 <= sh_amt_18_fu_1539_p2;
        v130_V_3_reg_2282 <= v130_V_3_fu_1585_p3;
        v130_V_reg_2250 <= v130_V_fu_1493_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        and_ln284_reg_2184 <= and_ln284_fu_1278_p2;
        and_ln295_reg_2194 <= and_ln295_fu_1310_p2;
        icmp_ln278_reg_2163 <= icmp_ln278_fu_1210_p2;
        icmp_ln282_reg_2169 <= icmp_ln282_fu_1226_p2;
        icmp_ln285_reg_2174 <= icmp_ln285_fu_1238_p2;
        p_Result_89_reg_2152 <= reg_V_fu_1164_p1[32'd31];
        reg_V_reg_2147 <= reg_V_fu_1164_p1;
        sh_amt_16_reg_2179 <= sh_amt_16_fu_1244_p2;
        v123_V_3_reg_2189 <= v123_V_3_fu_1290_p3;
        v123_V_reg_2157 <= v123_V_fu_1198_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        i10_reg_2300 <= i10_fu_1705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        i11_reg_2364 <= i11_fu_1839_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i6_reg_1960 <= i6_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i7_reg_2037 <= i7_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i8_reg_2114 <= i8_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i9_reg_2207 <= i9_fu_1410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln167_1_reg_2023 <= icmp_ln167_1_fu_859_p2;
        icmp_ln167_reg_2018 <= icmp_ln167_fu_853_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln176_1_reg_2008 <= icmp_ln176_1_fu_823_p2;
        icmp_ln176_2_reg_2013 <= icmp_ln176_2_fu_829_p2;
        icmp_ln176_reg_2003 <= icmp_ln176_fu_817_p2;
        v99_reg_1997 <= v99_fu_784_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14))) begin
        icmp_ln192_1_reg_2100 <= icmp_ln192_1_fu_1073_p2;
        icmp_ln192_reg_2095 <= icmp_ln192_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14))) begin
        icmp_ln201_1_reg_2085 <= icmp_ln201_1_fu_1037_p2;
        icmp_ln201_2_reg_2090 <= icmp_ln201_2_fu_1043_p2;
        icmp_ln201_reg_2080 <= icmp_ln201_fu_1031_p2;
        v113_reg_2074 <= v113_fu_998_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        j10_reg_2318 <= j10_fu_1759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        j11_reg_2382 <= j11_fu_1886_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j6_reg_1978 <= j6_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j7_reg_2055 <= j7_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j8_reg_2132 <= j8_fu_1144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        j9_reg_2225 <= j9_fu_1439_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        k1_reg_2336 <= k1_fu_1797_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_895_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        max_K_h_addr_1_reg_2047 <= zext_ln187_fu_907_p1;
        zext_ln198_reg_2042[9 : 6] <= zext_ln198_fu_920_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_681_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        max_Q_h_addr_1_reg_1970 <= zext_ln162_fu_693_p1;
        zext_ln173_reg_1965[9 : 6] <= zext_ln173_fu_706_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln231_fu_1753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        q_outp1_addr_1_reg_2328 <= sext_ln238_fu_1786_p1;
        zext_ln238_3_reg_2323[9 : 6] <= zext_ln238_3_fu_1777_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_533 <= v77_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_541 <= max_Q_h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_548 <= v78_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_556 <= max_K_h_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_563 <= grp_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_569 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state73))) begin
        reg_574 <= q_outp1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln246_fu_1880_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        sext_ln254_reg_2387 <= sext_ln254_fu_1901_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sub_ln157_reg_1944[8 : 2] <= sub_ln157_fu_649_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln230_fu_1699_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        sub_ln238_reg_2310[8 : 2] <= sub_ln238_fu_1747_p2[8 : 2];
        zext_ln238_reg_2305[9 : 6] <= zext_ln238_fu_1719_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        sub_ln254_reg_2374[8 : 2] <= sub_ln254_fu_1874_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        v123_V_9_reg_2199 <= v123_V_9_fu_1397_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        v130_V_9_reg_2292 <= v130_V_9_fu_1692_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        v134_V_reg_2351 <= q_Q_h_V_q0;
        v135_V_reg_2356 <= q_K_h_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        v146_reg_2397 <= grp_fu_521_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v87_reg_1939 <= v87_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_fu_1138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        zext_ln212_2_reg_2137[10 : 0] <= zext_ln212_2_fu_1159_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        zext_ln214_reg_2124[9 : 6] <= zext_ln214_fu_1134_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_fu_1433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        zext_ln222_2_reg_2230[10 : 0] <= zext_ln222_2_fu_1454_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        zext_ln224_reg_2217[9 : 6] <= zext_ln224_fu_1429_p1[9 : 6];
    end
end

always @ (*) begin
    if ((((icmp_ln245_fu_1833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln245_fu_1833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_510_p0 = reg_563;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_510_p0 = v146_reg_2397;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_510_p0 = reg_548;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_510_p0 = reg_533;
    end else begin
        grp_fu_510_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_510_p1 = max_K_h_q0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_510_p1 = reg_541;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_510_p1 = 32'd1157619712;
    end else begin
        grp_fu_510_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_516_p1 = 32'd1275052036;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_516_p1 = reg_556;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_516_p1 = reg_541;
    end else begin
        grp_fu_516_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14)) | ((1'd0 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14)) | ((1'd1 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9)) | ((1'd0 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_524_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_524_opcode = 5'd3;
    end else begin
        grp_fu_524_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14)) | ((1'd0 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_524_p0 = max_K_h_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_524_p0 = v78_q0;
    end else if ((((1'd1 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9)) | ((1'd0 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9)))) begin
        grp_fu_524_p0 = max_Q_h_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_524_p0 = v77_q0;
    end else begin
        grp_fu_524_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_524_p1 = reg_548;
    end else if (((1'd0 == and_ln188_fu_986_p2) & (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_524_p1 = v113_fu_998_p1;
    end else if (((1'd1 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_524_p1 = reg_533;
    end else if (((1'd0 == and_ln163_fu_772_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_524_p1 = v99_fu_784_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_524_p1 = 32'd0;
    end else begin
        grp_fu_524_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        max_K_h_address0 = zext_ln247_1_fu_1906_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        max_K_h_address0 = zext_ln222_fu_1416_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((v109_fu_1103_p2 == 1'd1) & (1'd1 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15)) | ((v114_fu_1093_p2 == 1'd1) & (1'd0 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15)))) begin
        max_K_h_address0 = max_K_h_addr_1_reg_2047;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        max_K_h_address0 = zext_ln150_fu_608_p1;
    end else begin
        max_K_h_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state13) | ((v109_fu_1103_p2 == 1'd1) & (1'd1 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15)) | ((v114_fu_1093_p2 == 1'd1) & (1'd0 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15)))) begin
        max_K_h_ce0 = 1'b1;
    end else begin
        max_K_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((v109_fu_1103_p2 == 1'd1) & (1'd1 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15))) begin
        max_K_h_d0 = reg_548;
    end else if (((v114_fu_1093_p2 == 1'd1) & (1'd0 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15))) begin
        max_K_h_d0 = v113_reg_2074;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        max_K_h_d0 = 32'd0;
    end else begin
        max_K_h_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((v109_fu_1103_p2 == 1'd1) & (1'd1 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15)) | ((v114_fu_1093_p2 == 1'd1) & (1'd0 == and_ln188_reg_2070) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln149_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        max_K_h_we0 = 1'b1;
    end else begin
        max_K_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        max_Q_h_address0 = zext_ln247_fu_1845_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_Q_h_address0 = zext_ln212_fu_1121_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((v95_fu_889_p2 == 1'd1) & (1'd1 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10)) | ((v100_fu_879_p2 == 1'd1) & (1'd0 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10)))) begin
        max_Q_h_address0 = max_Q_h_addr_1_reg_1970;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        max_Q_h_address0 = zext_ln146_fu_591_p1;
    end else begin
        max_Q_h_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | ((v95_fu_889_p2 == 1'd1) & (1'd1 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10)) | ((v100_fu_879_p2 == 1'd1) & (1'd0 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10)))) begin
        max_Q_h_ce0 = 1'b1;
    end else begin
        max_Q_h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((v95_fu_889_p2 == 1'd1) & (1'd1 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10))) begin
        max_Q_h_d0 = reg_533;
    end else if (((v100_fu_879_p2 == 1'd1) & (1'd0 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10))) begin
        max_Q_h_d0 = v99_reg_1997;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        max_Q_h_d0 = 32'd0;
    end else begin
        max_Q_h_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((v95_fu_889_p2 == 1'd1) & (1'd1 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10)) | ((v100_fu_879_p2 == 1'd1) & (1'd0 == and_ln163_reg_1993) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln145_fu_579_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        max_Q_h_we0 = 1'b1;
    end else begin
        max_Q_h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        q_K_h_V_address0 = zext_ln234_1_fu_1822_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        q_K_h_V_address0 = zext_ln222_2_reg_2230;
    end else begin
        q_K_h_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state72))) begin
        q_K_h_V_ce0 = 1'b1;
    end else begin
        q_K_h_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        q_K_h_V_we0 = 1'b1;
    end else begin
        q_K_h_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        q_Q_h_V_address0 = zext_ln233_1_fu_1812_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        q_Q_h_V_address0 = zext_ln212_2_reg_2137;
    end else begin
        q_Q_h_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state72))) begin
        q_Q_h_V_ce0 = 1'b1;
    end else begin
        q_Q_h_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        q_Q_h_V_we0 = 1'b1;
    end else begin
        q_Q_h_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        q_outp1_address0 = sext_ln254_fu_1901_p1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state72))) begin
        q_outp1_address0 = q_outp1_addr_1_reg_2328;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        q_outp1_address0 = sext_ln157_fu_676_p1;
    end else begin
        q_outp1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state5))) begin
        q_outp1_ce0 = 1'b1;
    end else begin
        q_outp1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        q_outp1_d0 = grp_fu_1911_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        q_outp1_d0 = 32'd0;
    end else begin
        q_outp1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | ((icmp_ln156_fu_655_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        q_outp1_we0 = 1'b1;
    end else begin
        q_outp1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        v77_address0 = zext_ln212_2_fu_1159_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        v77_address0 = zext_ln162_2_fu_731_p1;
    end else begin
        v77_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state7))) begin
        v77_ce0 = 1'b1;
    end else begin
        v77_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        v78_address0 = zext_ln222_2_fu_1454_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        v78_address0 = zext_ln187_2_fu_945_p1;
    end else begin
        v78_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state12))) begin
        v78_ce0 = 1'b1;
    end else begin
        v78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        v79_ce0 = 1'b1;
    end else begin
        v79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        v79_we0 = 1'b1;
    end else begin
        v79_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln145_fu_579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln149_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln155_fu_613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln156_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln160_fu_681_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln161_fu_710_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln185_fu_895_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln186_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln210_fu_1109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln211_fu_1138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln220_fu_1404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln221_fu_1433_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln230_fu_1699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((icmp_ln231_fu_1753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((icmp_ln232_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state75 : begin
            if (((icmp_ln245_fu_1833_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((icmp_ln246_fu_1880_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln157_fu_671_p2 = (sub_ln157_reg_1944 + zext_ln157_8_fu_667_p1);

assign add_ln162_fu_726_p2 = (zext_ln173_reg_1965 + zext_ln162_1_fu_722_p1);

assign add_ln187_fu_940_p2 = (zext_ln198_reg_2042 + zext_ln187_1_fu_936_p1);

assign add_ln212_fu_1154_p2 = (zext_ln214_reg_2124 + zext_ln212_1_fu_1150_p1);

assign add_ln222_fu_1449_p2 = (zext_ln224_reg_2217 + zext_ln222_1_fu_1445_p1);

assign add_ln233_fu_1807_p2 = (zext_ln238_reg_2305 + zext_ln233_fu_1803_p1);

assign add_ln234_fu_1817_p2 = (zext_ln238_3_reg_2323 + zext_ln233_fu_1803_p1);

assign add_ln238_fu_1781_p2 = (zext_ln234_fu_1765_p1 + sub_ln238_reg_2310);

assign add_ln254_fu_1896_p2 = (sub_ln254_reg_2374 + zext_ln254_2_fu_1892_p1);

assign and_ln163_fu_772_p2 = (or_ln163_fu_766_p2 & grp_fu_524_p2);

assign and_ln176_fu_873_p2 = (or_ln176_fu_865_p2 & or_ln176_1_fu_869_p2);

assign and_ln188_fu_986_p2 = (or_ln188_fu_980_p2 & grp_fu_524_p2);

assign and_ln201_fu_1087_p2 = (or_ln201_fu_1079_p2 & or_ln201_1_fu_1083_p2);

assign and_ln282_6_fu_1674_p2 = (xor_ln278_6_fu_1669_p2 & icmp_ln282_6_reg_2262);

assign and_ln282_fu_1379_p2 = (xor_ln278_fu_1374_p2 & icmp_ln282_reg_2169);

assign and_ln284_6_fu_1573_p2 = (xor_ln282_6_fu_1567_p2 & icmp_ln284_6_fu_1527_p2);

assign and_ln284_fu_1278_p2 = (xor_ln282_fu_1272_p2 & icmp_ln284_fu_1232_p2);

assign and_ln285_16_fu_1361_p2 = (xor_ln285_fu_1356_p2 & and_ln284_reg_2184);

assign and_ln285_17_fu_1579_p2 = (icmp_ln285_6_fu_1533_p2 & and_ln284_6_fu_1573_p2);

assign and_ln285_18_fu_1656_p2 = (xor_ln285_6_fu_1651_p2 & and_ln284_6_reg_2277);

assign and_ln285_fu_1284_p2 = (icmp_ln285_fu_1238_p2 & and_ln284_fu_1278_p2);

assign and_ln295_6_fu_1605_p2 = (xor_ln284_6_fu_1599_p2 & icmp_ln295_6_fu_1545_p2);

assign and_ln295_fu_1310_p2 = (xor_ln284_fu_1304_p2 & icmp_ln295_fu_1250_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign bitcast_ln163_fu_736_p1 = reg_533;

assign bitcast_ln167_fu_835_p1 = max_Q_h_q0;

assign bitcast_ln176_fu_789_p1 = max_Q_h_q0;

assign bitcast_ln188_fu_950_p1 = reg_548;

assign bitcast_ln192_fu_1049_p1 = max_K_h_q0;

assign bitcast_ln201_fu_1003_p1 = max_K_h_q0;

assign exp_V_6_fu_1485_p1 = p_Result_s_489_fu_1475_p4;

assign exp_V_fu_1190_p1 = p_Result_s_fu_1180_p4;

assign i10_fu_1705_p2 = (i10_0_reg_453 + 4'd1);

assign i11_fu_1839_p2 = (i11_0_reg_486 + 4'd1);

assign i6_fu_687_p2 = (i6_0_reg_363 + 4'd1);

assign i7_fu_901_p2 = (i7_0_reg_385 + 4'd1);

assign i8_fu_1115_p2 = (i8_0_reg_407 + 4'd1);

assign i9_fu_1410_p2 = (i9_0_reg_430 + 4'd1);

assign icmp_ln145_fu_579_p2 = ((v81_0_reg_319 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_596_p2 = ((v83_0_reg_330 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_613_p2 = ((v87_0_reg_341 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln156_fu_655_p2 = ((v88_0_reg_352 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_681_p2 = ((i6_0_reg_363 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_710_p2 = ((j6_0_reg_374 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln163_1_fu_760_p2 = ((trunc_ln163_fu_750_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln163_fu_754_p2 = ((tmp_78_fu_740_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln167_1_fu_859_p2 = ((trunc_ln167_fu_849_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_853_p2 = ((tmp_80_fu_839_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln176_1_fu_823_p2 = ((trunc_ln176_fu_803_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln176_2_fu_829_p2 = ((tmp_83_fu_807_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_817_p2 = ((tmp_82_fu_793_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_895_p2 = ((i7_0_reg_385 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_924_p2 = ((j7_0_reg_396 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln188_1_fu_974_p2 = ((trunc_ln188_fu_964_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln188_fu_968_p2 = ((tmp_85_fu_954_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln192_1_fu_1073_p2 = ((trunc_ln192_fu_1063_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_1067_p2 = ((tmp_87_fu_1053_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln201_1_fu_1037_p2 = ((trunc_ln201_fu_1017_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln201_2_fu_1043_p2 = ((tmp_90_fu_1021_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_1031_p2 = ((tmp_89_fu_1007_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln210_fu_1109_p2 = ((i8_0_reg_407 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_1138_p2 = ((j8_0_reg_419 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln220_fu_1404_p2 = ((i9_0_reg_430 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_1433_p2 = ((j9_0_reg_442 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln230_fu_1699_p2 = ((i10_0_reg_453 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln231_fu_1753_p2 = ((j10_0_reg_464 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln232_fu_1791_p2 = ((k1_0_reg_475 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln245_fu_1833_p2 = ((i11_0_reg_486 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_1880_p2 = ((j11_0_reg_498 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln278_6_fu_1505_p2 = ((trunc_ln262_6_fu_1463_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_1210_p2 = ((trunc_ln262_fu_1168_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_6_fu_1521_p2 = ((p_Result_s_489_fu_1475_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_1226_p2 = ((p_Result_s_fu_1180_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_6_fu_1527_p2 = (($signed(sh_amt_17_fu_1511_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_1232_p2 = (($signed(sh_amt_fu_1216_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_6_fu_1533_p2 = (($signed(sh_amt_17_fu_1511_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_1238_p2 = (($signed(sh_amt_fu_1216_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_6_fu_1545_p2 = (($signed(sh_amt_18_fu_1539_p2) < $signed(9'd12)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_1250_p2 = (($signed(sh_amt_16_fu_1244_p2) < $signed(9'd12)) ? 1'b1 : 1'b0);

assign j10_fu_1759_p2 = (j10_0_reg_464 + 4'd1);

assign j11_fu_1886_p2 = (j11_0_reg_498 + 4'd1);

assign j6_fu_716_p2 = (j6_0_reg_374 + 7'd1);

assign j7_fu_930_p2 = (j7_0_reg_396 + 7'd1);

assign j8_fu_1144_p2 = (j8_0_reg_419 + 7'd1);

assign j9_fu_1439_p2 = (j9_0_reg_442 + 7'd1);

assign k1_fu_1797_p2 = (k1_0_reg_475 + 7'd1);

assign lshr_ln286_6_fu_1551_p2 = tmp_38_fu_1497_p3 >> sext_ln281_6_fu_1517_p1;

assign lshr_ln286_fu_1256_p2 = tmp_36_fu_1202_p3 >> sext_ln281_fu_1222_p1;

assign or_ln163_fu_766_p2 = (icmp_ln163_fu_754_p2 | icmp_ln163_1_fu_760_p2);

assign or_ln167_fu_885_p2 = (icmp_ln167_reg_2018 | icmp_ln167_1_reg_2023);

assign or_ln176_1_fu_869_p2 = (icmp_ln176_2_reg_2013 | icmp_ln163_1_reg_1988);

assign or_ln176_fu_865_p2 = (icmp_ln176_reg_2003 | icmp_ln176_1_reg_2008);

assign or_ln188_fu_980_p2 = (icmp_ln188_fu_968_p2 | icmp_ln188_1_fu_974_p2);

assign or_ln192_fu_1099_p2 = (icmp_ln192_reg_2095 | icmp_ln192_1_reg_2100);

assign or_ln201_1_fu_1083_p2 = (icmp_ln201_2_reg_2090 | icmp_ln188_1_reg_2065);

assign or_ln201_fu_1079_p2 = (icmp_ln201_reg_2080 | icmp_ln201_1_reg_2085);

assign or_ln282_6_fu_1561_p2 = (icmp_ln282_6_fu_1521_p2 | icmp_ln278_6_fu_1505_p2);

assign or_ln282_fu_1266_p2 = (icmp_ln282_fu_1226_p2 | icmp_ln278_fu_1210_p2);

assign or_ln284_6_fu_1593_p2 = (or_ln282_6_fu_1561_p2 | icmp_ln284_6_fu_1527_p2);

assign or_ln284_fu_1298_p2 = (or_ln282_fu_1266_p2 | icmp_ln284_fu_1232_p2);

assign p_Result_s_489_fu_1475_p4 = {{reg_V_6_fu_1459_p1[30:23]}};

assign p_Result_s_fu_1180_p4 = {{reg_V_fu_1164_p1[30:23]}};

assign reg_V_6_fu_1459_p1 = reg_569;

assign reg_V_fu_1164_p1 = reg_569;

assign select_ln288_6_fu_1621_p3 = ((tmp_95_fu_1614_p3[0:0] === 1'b1) ? 12'd4095 : 12'd0);

assign select_ln288_fu_1326_p3 = ((tmp_93_fu_1319_p3[0:0] === 1'b1) ? 12'd4095 : 12'd0);

assign sext_ln157_fu_676_p1 = $signed(add_ln157_fu_671_p2);

assign sext_ln238_fu_1786_p1 = $signed(add_ln238_fu_1781_p2);

assign sext_ln254_fu_1901_p1 = $signed(add_ln254_fu_1896_p2);

assign sext_ln281_6_fu_1517_p1 = sh_amt_17_fu_1511_p2;

assign sext_ln281_fu_1222_p1 = sh_amt_fu_1216_p2;

assign sext_ln294_6_fu_1611_p1 = sh_amt_18_reg_2272;

assign sext_ln294_6cast_fu_1629_p1 = sext_ln294_6_fu_1611_p1[11:0];

assign sext_ln294_fu_1316_p1 = sh_amt_16_reg_2179;

assign sext_ln294cast_fu_1334_p1 = sext_ln294_fu_1316_p1[11:0];

assign sh_amt_16_fu_1244_p2 = ($signed(9'd0) - $signed(sh_amt_fu_1216_p2));

assign sh_amt_17_fu_1511_p2 = (9'd150 - exp_V_6_fu_1485_p1);

assign sh_amt_18_fu_1539_p2 = ($signed(9'd0) - $signed(sh_amt_17_fu_1511_p2));

assign sh_amt_fu_1216_p2 = (9'd150 - exp_V_fu_1190_p1);

assign shl_ln297_6_fu_1633_p2 = v130_V_reg_2250 << sext_ln294_6cast_fu_1629_p1;

assign shl_ln297_fu_1338_p2 = v123_V_reg_2157 << sext_ln294cast_fu_1334_p1;

assign sub_ln157_fu_649_p2 = (zext_ln157_fu_633_p1 - zext_ln157_7_fu_645_p1);

assign sub_ln238_fu_1747_p2 = (zext_ln238_1_fu_1731_p1 - zext_ln238_2_fu_1743_p1);

assign sub_ln254_fu_1874_p2 = (zext_ln254_fu_1858_p1 - zext_ln254_1_fu_1870_p1);

assign tmp_111_fu_625_p3 = {{v87_0_reg_341}, {4'd0}};

assign tmp_112_fu_637_p3 = {{v87_0_reg_341}, {2'd0}};

assign tmp_113_fu_698_p3 = {{i6_0_reg_363}, {6'd0}};

assign tmp_114_fu_912_p3 = {{i7_0_reg_385}, {6'd0}};

assign tmp_115_fu_1126_p3 = {{i8_0_reg_407}, {6'd0}};

assign tmp_116_fu_1421_p3 = {{i9_0_reg_430}, {6'd0}};

assign tmp_117_fu_1711_p3 = {{i10_0_reg_453}, {6'd0}};

assign tmp_118_fu_1723_p3 = {{i10_0_reg_453}, {4'd0}};

assign tmp_119_fu_1735_p3 = {{i10_0_reg_453}, {2'd0}};

assign tmp_120_fu_1850_p3 = {{i11_0_reg_486}, {4'd0}};

assign tmp_121_fu_1862_p3 = {{i11_0_reg_486}, {2'd0}};

assign tmp_122_fu_1769_p3 = {{j10_0_reg_464}, {6'd0}};

assign tmp_36_fu_1202_p3 = {{1'd1}, {trunc_ln270_fu_1194_p1}};

assign tmp_38_fu_1497_p3 = {{1'd1}, {trunc_ln270_6_fu_1489_p1}};

assign tmp_78_fu_740_p4 = {{bitcast_ln163_fu_736_p1[30:23]}};

assign tmp_80_fu_839_p4 = {{bitcast_ln167_fu_835_p1[30:23]}};

assign tmp_82_fu_793_p4 = {{bitcast_ln176_fu_789_p1[30:23]}};

assign tmp_83_fu_807_p4 = {{xor_ln175_fu_778_p2[30:23]}};

assign tmp_85_fu_954_p4 = {{bitcast_ln188_fu_950_p1[30:23]}};

assign tmp_87_fu_1053_p4 = {{bitcast_ln192_fu_1049_p1[30:23]}};

assign tmp_89_fu_1007_p4 = {{bitcast_ln201_fu_1003_p1[30:23]}};

assign tmp_90_fu_1021_p4 = {{xor_ln200_fu_992_p2[30:23]}};

assign tmp_93_fu_1319_p3 = reg_V_reg_2147[32'd31];

assign tmp_95_fu_1614_p3 = reg_V_6_reg_2240[32'd31];

assign trunc_ln163_fu_750_p1 = bitcast_ln163_fu_736_p1[22:0];

assign trunc_ln167_fu_849_p1 = bitcast_ln167_fu_835_p1[22:0];

assign trunc_ln176_fu_803_p1 = bitcast_ln176_fu_789_p1[22:0];

assign trunc_ln188_fu_964_p1 = bitcast_ln188_fu_950_p1[22:0];

assign trunc_ln192_fu_1063_p1 = bitcast_ln192_fu_1049_p1[22:0];

assign trunc_ln201_fu_1017_p1 = bitcast_ln201_fu_1003_p1[22:0];

assign trunc_ln262_6_fu_1463_p1 = reg_V_6_fu_1459_p1[30:0];

assign trunc_ln262_fu_1168_p1 = reg_V_fu_1164_p1[30:0];

assign trunc_ln270_6_fu_1489_p1 = reg_V_6_fu_1459_p1[22:0];

assign trunc_ln270_fu_1194_p1 = reg_V_fu_1164_p1[22:0];

assign v100_fu_879_p2 = (grp_fu_524_p2 & and_ln176_fu_873_p2);

assign v109_fu_1103_p2 = (or_ln192_fu_1099_p2 & grp_fu_524_p2);

assign v113_fu_998_p1 = xor_ln200_fu_992_p2;

assign v114_fu_1093_p2 = (grp_fu_524_p2 & and_ln201_fu_1087_p2);

assign v123_V_1_fu_1262_p1 = lshr_ln286_fu_1256_p2[11:0];

assign v123_V_3_fu_1290_p3 = ((and_ln285_fu_1284_p2[0:0] === 1'b1) ? v123_V_1_fu_1262_p1 : 12'd0);

assign v123_V_4_fu_1343_p3 = ((and_ln295_reg_2194[0:0] === 1'b1) ? shl_ln297_fu_1338_p2 : v123_V_3_reg_2189);

assign v123_V_5_fu_1349_p3 = ((icmp_ln278_reg_2163[0:0] === 1'b1) ? 12'd0 : v123_V_4_fu_1343_p3);

assign v123_V_6_fu_1366_p3 = ((and_ln285_16_fu_1361_p2[0:0] === 1'b1) ? select_ln288_fu_1326_p3 : v123_V_5_fu_1349_p3);

assign v123_V_7_fu_1384_p3 = ((and_ln282_fu_1379_p2[0:0] === 1'b1) ? v123_V_reg_2157 : v123_V_6_fu_1366_p3);

assign v123_V_8_fu_1391_p2 = (12'd0 - v123_V_7_fu_1384_p3);

assign v123_V_9_fu_1397_p3 = ((p_Result_89_reg_2152[0:0] === 1'b1) ? v123_V_8_fu_1391_p2 : v123_V_7_fu_1384_p3);

assign v123_V_fu_1198_p1 = reg_V_fu_1164_p1[11:0];

assign v130_V_1_fu_1557_p1 = lshr_ln286_6_fu_1551_p2[11:0];

assign v130_V_3_fu_1585_p3 = ((and_ln285_17_fu_1579_p2[0:0] === 1'b1) ? v130_V_1_fu_1557_p1 : 12'd0);

assign v130_V_4_fu_1638_p3 = ((and_ln295_6_reg_2287[0:0] === 1'b1) ? shl_ln297_6_fu_1633_p2 : v130_V_3_reg_2282);

assign v130_V_5_fu_1644_p3 = ((icmp_ln278_6_reg_2256[0:0] === 1'b1) ? 12'd0 : v130_V_4_fu_1638_p3);

assign v130_V_6_fu_1661_p3 = ((and_ln285_18_fu_1656_p2[0:0] === 1'b1) ? select_ln288_6_fu_1621_p3 : v130_V_5_fu_1644_p3);

assign v130_V_7_fu_1679_p3 = ((and_ln282_6_fu_1674_p2[0:0] === 1'b1) ? v130_V_reg_2250 : v130_V_6_fu_1661_p3);

assign v130_V_8_fu_1686_p2 = (12'd0 - v130_V_7_fu_1679_p3);

assign v130_V_9_fu_1692_p3 = ((p_Result_90_reg_2245[0:0] === 1'b1) ? v130_V_8_fu_1686_p2 : v130_V_7_fu_1679_p3);

assign v130_V_fu_1493_p1 = reg_V_6_fu_1459_p1[11:0];

assign v79_address0 = sext_ln254_reg_2387;

assign v79_d0 = reg_569;

assign v81_fu_585_p2 = (v81_0_reg_319 + 4'd1);

assign v83_fu_602_p2 = (v83_0_reg_330 + 4'd1);

assign v87_fu_619_p2 = (v87_0_reg_341 + 4'd1);

assign v88_fu_661_p2 = (v88_0_reg_352 + 4'd1);

assign v95_fu_889_p2 = (or_ln167_fu_885_p2 & grp_fu_524_p2);

assign v99_fu_784_p1 = xor_ln175_fu_778_p2;

assign xor_ln175_fu_778_p2 = (bitcast_ln163_fu_736_p1 ^ 32'd2147483648);

assign xor_ln200_fu_992_p2 = (bitcast_ln188_fu_950_p1 ^ 32'd2147483648);

assign xor_ln278_6_fu_1669_p2 = (icmp_ln278_6_reg_2256 ^ 1'd1);

assign xor_ln278_fu_1374_p2 = (icmp_ln278_reg_2163 ^ 1'd1);

assign xor_ln282_6_fu_1567_p2 = (or_ln282_6_fu_1561_p2 ^ 1'd1);

assign xor_ln282_fu_1272_p2 = (or_ln282_fu_1266_p2 ^ 1'd1);

assign xor_ln284_6_fu_1599_p2 = (or_ln284_6_fu_1593_p2 ^ 1'd1);

assign xor_ln284_fu_1304_p2 = (or_ln284_fu_1298_p2 ^ 1'd1);

assign xor_ln285_6_fu_1651_p2 = (icmp_ln285_6_reg_2267 ^ 1'd1);

assign xor_ln285_fu_1356_p2 = (icmp_ln285_reg_2174 ^ 1'd1);

assign zext_ln146_fu_591_p1 = v81_0_reg_319;

assign zext_ln150_fu_608_p1 = v83_0_reg_330;

assign zext_ln157_7_fu_645_p1 = tmp_112_fu_637_p3;

assign zext_ln157_8_fu_667_p1 = v88_0_reg_352;

assign zext_ln157_fu_633_p1 = tmp_111_fu_625_p3;

assign zext_ln162_1_fu_722_p1 = j6_0_reg_374;

assign zext_ln162_2_fu_731_p1 = add_ln162_fu_726_p2;

assign zext_ln162_fu_693_p1 = i6_0_reg_363;

assign zext_ln173_fu_706_p1 = tmp_113_fu_698_p3;

assign zext_ln187_1_fu_936_p1 = j7_0_reg_396;

assign zext_ln187_2_fu_945_p1 = add_ln187_fu_940_p2;

assign zext_ln187_fu_907_p1 = i7_0_reg_385;

assign zext_ln198_fu_920_p1 = tmp_114_fu_912_p3;

assign zext_ln212_1_fu_1150_p1 = j8_0_reg_419;

assign zext_ln212_2_fu_1159_p1 = add_ln212_fu_1154_p2;

assign zext_ln212_fu_1121_p1 = i8_0_reg_407;

assign zext_ln214_fu_1134_p1 = tmp_115_fu_1126_p3;

assign zext_ln222_1_fu_1445_p1 = j9_0_reg_442;

assign zext_ln222_2_fu_1454_p1 = add_ln222_fu_1449_p2;

assign zext_ln222_fu_1416_p1 = i9_0_reg_430;

assign zext_ln224_fu_1429_p1 = tmp_116_fu_1421_p3;

assign zext_ln233_1_fu_1812_p1 = add_ln233_fu_1807_p2;

assign zext_ln233_fu_1803_p1 = k1_0_reg_475;

assign zext_ln234_1_fu_1822_p1 = add_ln234_fu_1817_p2;

assign zext_ln234_fu_1765_p1 = j10_0_reg_464;

assign zext_ln238_1_fu_1731_p1 = tmp_118_fu_1723_p3;

assign zext_ln238_2_fu_1743_p1 = tmp_119_fu_1735_p3;

assign zext_ln238_3_fu_1777_p1 = tmp_122_fu_1769_p3;

assign zext_ln238_fu_1719_p1 = tmp_117_fu_1711_p3;

assign zext_ln247_1_fu_1906_p1 = j11_0_reg_498;

assign zext_ln247_fu_1845_p1 = i11_0_reg_486;

assign zext_ln254_1_fu_1870_p1 = tmp_121_fu_1862_p3;

assign zext_ln254_2_fu_1892_p1 = j11_0_reg_498;

assign zext_ln254_fu_1858_p1 = tmp_120_fu_1850_p3;

always @ (posedge ap_clk) begin
    sub_ln157_reg_1944[1:0] <= 2'b00;
    zext_ln173_reg_1965[5:0] <= 6'b000000;
    zext_ln173_reg_1965[10] <= 1'b0;
    zext_ln198_reg_2042[5:0] <= 6'b000000;
    zext_ln198_reg_2042[10] <= 1'b0;
    zext_ln214_reg_2124[5:0] <= 6'b000000;
    zext_ln214_reg_2124[10] <= 1'b0;
    zext_ln212_2_reg_2137[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln224_reg_2217[5:0] <= 6'b000000;
    zext_ln224_reg_2217[10] <= 1'b0;
    zext_ln222_2_reg_2230[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln238_reg_2305[5:0] <= 6'b000000;
    zext_ln238_reg_2305[10] <= 1'b0;
    sub_ln238_reg_2310[1:0] <= 2'b00;
    zext_ln238_3_reg_2323[5:0] <= 6'b000000;
    zext_ln238_3_reg_2323[10] <= 1'b0;
    sub_ln254_reg_2374[1:0] <= 2'b00;
end

endmodule //Attention_layer
