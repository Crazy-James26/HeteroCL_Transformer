// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Linear_layer_ds1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v176_V_address0,
        v176_V_ce0,
        v176_V_q0,
        v177_V_address0,
        v177_V_ce0,
        v177_V_q0,
        v178_V_address0,
        v178_V_ce0,
        v178_V_q0,
        v179_address0,
        v179_ce0,
        v179_we0,
        v179_d0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v176_V_address0;
output   v176_V_ce0;
input  [23:0] v176_V_q0;
output  [21:0] v177_V_address0;
output   v177_V_ce0;
input  [23:0] v177_V_q0;
output  [11:0] v178_V_address0;
output   v178_V_ce0;
input  [23:0] v178_V_q0;
output  [15:0] v179_address0;
output   v179_ce0;
output   v179_we0;
output  [31:0] v179_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v176_V_ce0;
reg v177_V_ce0;
reg v178_V_ce0;
reg[15:0] v179_address0;
reg v179_ce0;
reg v179_we0;
reg[31:0] v179_d0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] v182_fu_338_p2;
reg   [3:0] v182_reg_1055;
wire    ap_CS_fsm_state2;
wire   [16:0] sub_ln203_fu_368_p2;
reg   [16:0] sub_ln203_reg_1060;
wire   [0:0] icmp_ln311_fu_332_p2;
wire   [11:0] v183_fu_380_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] v184_fu_406_p2;
reg   [3:0] v184_reg_1076;
wire    ap_CS_fsm_state4;
wire   [16:0] sub_ln318_fu_436_p2;
reg   [16:0] sub_ln318_reg_1081;
wire   [0:0] icmp_ln316_fu_400_p2;
wire   [11:0] v185_fu_448_p2;
wire    ap_CS_fsm_state5;
wire   [3:0] i15_fu_474_p2;
reg   [3:0] i15_reg_1097;
wire    ap_CS_fsm_state6;
wire   [14:0] sub_ln324_fu_508_p2;
reg   [14:0] sub_ln324_reg_1102;
wire   [0:0] icmp_ln321_fu_468_p2;
wire   [16:0] sub_ln329_fu_526_p2;
reg   [16:0] sub_ln329_reg_1107;
wire   [11:0] j14_fu_538_p2;
reg   [11:0] j14_reg_1115;
wire    ap_CS_fsm_state7;
wire   [22:0] sub_ln325_fu_572_p2;
reg   [22:0] sub_ln325_reg_1120;
wire   [0:0] icmp_ln322_fu_532_p2;
reg   [15:0] outp1_V_addr_1_reg_1125;
wire   [9:0] k4_fu_594_p2;
reg   [9:0] k4_reg_1133;
wire    ap_CS_fsm_state8;
wire   [14:0] add_ln324_fu_608_p2;
reg   [14:0] add_ln324_reg_1138;
wire   [0:0] icmp_ln323_fu_588_p2;
wire    ap_CS_fsm_state10;
reg   [23:0] v189_V_reg_1153;
wire    ap_CS_fsm_state11;
reg   [23:0] v190_V_reg_1158;
wire   [23:0] outp1_V_q0;
reg   [23:0] v194_V_reg_1163;
wire    ap_CS_fsm_state12;
reg   [23:0] v195_V_reg_1168;
wire   [3:0] i16_fu_676_p2;
reg   [3:0] i16_reg_1176;
wire    ap_CS_fsm_state14;
wire   [16:0] sub_ln344_fu_706_p2;
reg   [16:0] sub_ln344_reg_1181;
wire   [0:0] icmp_ln336_fu_670_p2;
wire   [11:0] j15_fu_718_p2;
reg   [11:0] j15_reg_1189;
wire    ap_CS_fsm_state15;
wire  signed [63:0] sext_ln344_fu_738_p1;
reg  signed [63:0] sext_ln344_reg_1194;
wire   [0:0] icmp_ln337_fu_712_p2;
wire   [24:0] tmp_V_15_fu_751_p2;
reg   [24:0] tmp_V_15_reg_1209;
wire    ap_CS_fsm_state16;
reg   [0:0] p_Result_83_reg_1216;
wire   [0:0] icmp_ln935_fu_765_p2;
reg   [0:0] icmp_ln935_reg_1222;
wire    ap_CS_fsm_state17;
wire   [24:0] tmp_V_16_fu_775_p3;
reg   [24:0] tmp_V_16_reg_1227;
reg   [31:0] l_fu_799_p3;
reg   [31:0] l_reg_1235;
wire   [7:0] trunc_ln943_fu_807_p1;
reg   [7:0] trunc_ln943_reg_1241;
wire   [31:0] sub_ln944_fu_811_p2;
reg   [31:0] sub_ln944_reg_1246;
wire    ap_CS_fsm_state18;
wire   [31:0] or_ln_fu_918_p3;
reg   [31:0] or_ln_reg_1251;
wire   [0:0] icmp_ln958_fu_926_p2;
reg   [0:0] icmp_ln958_reg_1256;
reg   [62:0] m_s_reg_1261;
wire    ap_CS_fsm_state19;
wire   [7:0] select_ln964_fu_996_p3;
reg   [7:0] select_ln964_reg_1266;
reg   [15:0] outp1_V_address0;
reg    outp1_V_ce0;
reg    outp1_V_we0;
reg   [23:0] outp1_V_d0;
reg   [3:0] v182_0_reg_233;
wire   [0:0] icmp_ln312_fu_374_p2;
reg   [11:0] v183_0_reg_244;
reg   [3:0] v184_0_reg_255;
wire   [0:0] icmp_ln317_fu_442_p2;
reg   [11:0] v185_0_reg_266;
reg   [3:0] i15_0_reg_277;
reg   [11:0] j14_0_reg_288;
reg   [9:0] k4_0_reg_299;
wire    ap_CS_fsm_state13;
reg   [3:0] i16_0_reg_310;
reg   [11:0] j15_0_reg_321;
wire    ap_CS_fsm_state20;
wire  signed [63:0] sext_ln203_fu_395_p1;
wire  signed [63:0] sext_ln318_fu_463_p1;
wire  signed [63:0] sext_ln329_fu_583_p1;
wire  signed [63:0] sext_ln325_fu_618_p1;
wire  signed [63:0] sext_ln324_fu_623_p1;
wire   [63:0] zext_ln338_fu_724_p1;
wire   [23:0] v196_V_fu_665_p2;
wire   [31:0] v204_fu_1044_p3;
wire    ap_CS_fsm_state9;
wire   [15:0] tmp_43_fu_344_p3;
wire   [13:0] tmp_44_fu_356_p3;
wire   [16:0] zext_ln203_fu_352_p1;
wire   [16:0] zext_ln203_9_fu_364_p1;
wire   [16:0] zext_ln203_10_fu_386_p1;
wire   [16:0] add_ln203_fu_390_p2;
wire   [15:0] tmp_45_fu_412_p3;
wire   [13:0] tmp_46_fu_424_p3;
wire   [16:0] zext_ln318_fu_420_p1;
wire   [16:0] zext_ln318_1_fu_432_p1;
wire   [16:0] zext_ln318_2_fu_454_p1;
wire   [16:0] add_ln318_fu_458_p2;
wire   [13:0] tmp_47_fu_480_p3;
wire   [11:0] tmp_48_fu_496_p3;
wire   [14:0] zext_ln324_1_fu_492_p1;
wire   [14:0] zext_ln324_2_fu_504_p1;
wire   [15:0] tmp_49_fu_514_p3;
wire   [16:0] zext_ln329_fu_522_p1;
wire   [16:0] zext_ln324_fu_488_p1;
wire   [21:0] tmp_52_fu_548_p3;
wire   [19:0] tmp_53_fu_560_p3;
wire   [22:0] zext_ln325_1_fu_556_p1;
wire   [22:0] zext_ln325_2_fu_568_p1;
wire   [16:0] zext_ln325_fu_544_p1;
wire   [16:0] add_ln329_fu_578_p2;
wire   [14:0] zext_ln324_4_fu_604_p1;
wire   [22:0] zext_ln324_3_fu_600_p1;
wire   [22:0] add_ln325_fu_613_p2;
wire   [39:0] v191_V_fu_627_p3;
wire   [39:0] v192_V_fu_634_p3;
wire  signed [39:0] r_V_fu_649_p0;
wire  signed [39:0] r_V_fu_649_p1;
wire   [71:0] r_V_fu_649_p2;
wire   [15:0] tmp_50_fu_682_p3;
wire   [13:0] tmp_51_fu_694_p3;
wire   [16:0] zext_ln344_fu_690_p1;
wire   [16:0] zext_ln344_1_fu_702_p1;
wire   [16:0] zext_ln344_2_fu_729_p1;
wire   [16:0] add_ln344_fu_733_p2;
wire  signed [24:0] sext_ln703_2_fu_747_p1;
wire  signed [24:0] sext_ln703_fu_743_p1;
wire   [24:0] tmp_V_fu_770_p2;
reg   [24:0] p_Result_s_fu_781_p4;
wire   [31:0] p_Result_84_fu_791_p3;
wire   [31:0] lsb_index_fu_820_p2;
wire   [30:0] tmp_34_fu_826_p4;
wire   [4:0] trunc_ln947_fu_842_p1;
wire   [4:0] sub_ln947_fu_846_p2;
wire   [24:0] zext_ln947_fu_852_p1;
wire   [24:0] lshr_ln947_fu_856_p2;
wire   [24:0] p_Result_80_fu_862_p2;
wire   [0:0] icmp_ln947_fu_836_p2;
wire   [0:0] icmp_ln947_2_fu_867_p2;
wire   [0:0] tmp_35_fu_879_p3;
wire   [24:0] trunc_ln944_fu_816_p1;
wire   [24:0] add_ln949_fu_893_p2;
wire   [0:0] p_Result_81_fu_899_p3;
wire   [0:0] xor_ln949_fu_887_p2;
wire   [0:0] and_ln949_fu_906_p2;
wire   [0:0] a_fu_873_p2;
wire   [0:0] or_ln949_fu_912_p2;
wire   [31:0] zext_ln957_2_fu_935_p1;
wire   [31:0] add_ln958_fu_938_p2;
wire   [31:0] lshr_ln958_fu_943_p2;
wire   [63:0] m_fu_932_p1;
wire   [63:0] zext_ln958_2_fu_953_p1;
wire   [63:0] zext_ln958_fu_949_p1;
wire   [63:0] shl_ln958_fu_956_p2;
wire   [63:0] zext_ln961_fu_969_p1;
wire   [63:0] m_7_fu_962_p3;
wire   [63:0] m_8_fu_972_p2;
wire   [0:0] tmp_36_fu_988_p3;
wire   [7:0] sub_ln964_fu_1007_p2;
wire   [7:0] add_ln964_fu_1012_p2;
wire   [63:0] m_11_fu_1004_p1;
wire   [8:0] tmp_2_fu_1017_p3;
wire   [63:0] p_Result_85_fu_1024_p5;
wire   [31:0] trunc_ln738_fu_1036_p1;
wire   [31:0] bitcast_ln739_fu_1040_p1;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

Linear_layer_ds1_qcK #(
    .DataWidth( 24 ),
    .AddressRange( 36864 ),
    .AddressWidth( 16 ))
outp1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outp1_V_address0),
    .ce0(outp1_V_ce0),
    .we0(outp1_V_we0),
    .d0(outp1_V_d0),
    .q0(outp1_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i15_0_reg_277 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln322_fu_532_p2 == 1'd1))) begin
        i15_0_reg_277 <= i15_reg_1097;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln321_fu_468_p2 == 1'd1))) begin
        i16_0_reg_310 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln337_fu_712_p2 == 1'd1))) begin
        i16_0_reg_310 <= i16_reg_1176;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln323_fu_588_p2 == 1'd1))) begin
        j14_0_reg_288 <= j14_reg_1115;
    end else if (((icmp_ln321_fu_468_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        j14_0_reg_288 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j15_0_reg_321 <= j15_reg_1189;
    end else if (((icmp_ln336_fu_670_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j15_0_reg_321 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k4_0_reg_299 <= k4_reg_1133;
    end else if (((icmp_ln322_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        k4_0_reg_299 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln312_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        v182_0_reg_233 <= v182_reg_1055;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v182_0_reg_233 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_fu_332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v183_0_reg_244 <= 12'd0;
    end else if (((icmp_ln312_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v183_0_reg_244 <= v183_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_fu_332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        v184_0_reg_255 <= 4'd0;
    end else if (((icmp_ln317_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        v184_0_reg_255 <= v184_reg_1076;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_400_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        v185_0_reg_266 <= 12'd0;
    end else if (((icmp_ln317_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        v185_0_reg_266 <= v185_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln323_fu_588_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln324_reg_1138 <= add_ln324_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i15_reg_1097 <= i15_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i16_reg_1176 <= i16_fu_676_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        icmp_ln935_reg_1222 <= icmp_ln935_fu_765_p2;
        l_reg_1235 <= l_fu_799_p3;
        tmp_V_16_reg_1227 <= tmp_V_16_fu_775_p3;
        trunc_ln943_reg_1241 <= trunc_ln943_fu_807_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1222 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        icmp_ln958_reg_1256 <= icmp_ln958_fu_926_p2;
        or_ln_reg_1251[0] <= or_ln_fu_918_p3[0];
        sub_ln944_reg_1246 <= sub_ln944_fu_811_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j14_reg_1115 <= j14_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j15_reg_1189 <= j15_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k4_reg_1133 <= k4_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1222 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        m_s_reg_1261 <= {{m_8_fu_972_p2[63:1]}};
        select_ln964_reg_1266[0] <= select_ln964_fu_996_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        outp1_V_addr_1_reg_1125 <= sext_ln329_fu_583_p1;
        sub_ln325_reg_1120[22 : 8] <= sub_ln325_fu_572_p2[22 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Result_83_reg_1216 <= tmp_V_15_fu_751_p2[32'd24];
        tmp_V_15_reg_1209 <= tmp_V_15_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln337_fu_712_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        sext_ln344_reg_1194 <= sext_ln344_fu_738_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln311_fu_332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_ln203_reg_1060[16 : 10] <= sub_ln203_fu_368_p2[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_400_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sub_ln318_reg_1081[16 : 10] <= sub_ln318_fu_436_p2[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln321_fu_468_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        sub_ln324_reg_1102[14 : 8] <= sub_ln324_fu_508_p2[14 : 8];
        sub_ln329_reg_1107[16 : 10] <= sub_ln329_fu_526_p2[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln336_fu_670_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        sub_ln344_reg_1181[16 : 10] <= sub_ln344_fu_706_p2[16 : 10];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v182_reg_1055 <= v182_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v184_reg_1076 <= v184_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v189_V_reg_1153 <= v176_V_q0;
        v190_V_reg_1158 <= v177_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v194_V_reg_1163 <= outp1_V_q0;
        v195_V_reg_1168 <= {{r_V_fu_649_p2[71:48]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln336_fu_670_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln336_fu_670_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        outp1_V_address0 = sext_ln344_fu_738_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11))) begin
        outp1_V_address0 = outp1_V_addr_1_reg_1125;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        outp1_V_address0 = sext_ln203_fu_395_p1;
    end else begin
        outp1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11))) begin
        outp1_V_ce0 = 1'b1;
    end else begin
        outp1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        outp1_V_d0 = v196_V_fu_665_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        outp1_V_d0 = 24'd0;
    end else begin
        outp1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln312_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        outp1_V_we0 = 1'b1;
    end else begin
        outp1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v176_V_ce0 = 1'b1;
    end else begin
        v176_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        v177_V_ce0 = 1'b1;
    end else begin
        v177_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v178_V_ce0 = 1'b1;
    end else begin
        v178_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        v179_address0 = sext_ln344_reg_1194;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        v179_address0 = sext_ln318_fu_463_p1;
    end else begin
        v179_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5))) begin
        v179_ce0 = 1'b1;
    end else begin
        v179_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        v179_d0 = v204_fu_1044_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        v179_d0 = 32'd0;
    end else begin
        v179_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((icmp_ln317_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        v179_we0 = 1'b1;
    end else begin
        v179_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln311_fu_332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln312_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln316_fu_400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln317_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln321_fu_468_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln322_fu_532_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln323_fu_588_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln336_fu_670_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln337_fu_712_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_873_p2 = (icmp_ln947_fu_836_p2 & icmp_ln947_2_fu_867_p2);

assign add_ln203_fu_390_p2 = (sub_ln203_reg_1060 + zext_ln203_10_fu_386_p1);

assign add_ln318_fu_458_p2 = (sub_ln318_reg_1081 + zext_ln318_2_fu_454_p1);

assign add_ln324_fu_608_p2 = (zext_ln324_4_fu_604_p1 + sub_ln324_reg_1102);

assign add_ln325_fu_613_p2 = (zext_ln324_3_fu_600_p1 + sub_ln325_reg_1120);

assign add_ln329_fu_578_p2 = (sub_ln329_reg_1107 + zext_ln325_fu_544_p1);

assign add_ln344_fu_733_p2 = (zext_ln344_2_fu_729_p1 + sub_ln344_reg_1181);

assign add_ln949_fu_893_p2 = ($signed(25'd33554408) + $signed(trunc_ln944_fu_816_p1));

assign add_ln958_fu_938_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_1246));

assign add_ln964_fu_1012_p2 = (sub_ln964_fu_1007_p2 + select_ln964_reg_1266);

assign and_ln949_fu_906_p2 = (xor_ln949_fu_887_p2 & p_Result_81_fu_899_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln739_fu_1040_p1 = trunc_ln738_fu_1036_p1;

assign i15_fu_474_p2 = (i15_0_reg_277 + 4'd1);

assign i16_fu_676_p2 = (i16_0_reg_310 + 4'd1);

assign icmp_ln311_fu_332_p2 = ((v182_0_reg_233 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln312_fu_374_p2 = ((v183_0_reg_244 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln316_fu_400_p2 = ((v184_0_reg_255 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_442_p2 = ((v185_0_reg_266 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_468_p2 = ((i15_0_reg_277 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln322_fu_532_p2 = ((j14_0_reg_288 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_588_p2 = ((k4_0_reg_299 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_670_p2 = ((i16_0_reg_310 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_712_p2 = ((j15_0_reg_321 == 12'd3072) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_765_p2 = ((tmp_V_15_reg_1209 == 25'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_2_fu_867_p2 = ((p_Result_80_fu_862_p2 != 25'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_836_p2 = (($signed(tmp_34_fu_826_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_926_p2 = (($signed(lsb_index_fu_820_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign j14_fu_538_p2 = (j14_0_reg_288 + 12'd1);

assign j15_fu_718_p2 = (j15_0_reg_321 + 12'd1);

assign k4_fu_594_p2 = (k4_0_reg_299 + 10'd1);


always @ (p_Result_84_fu_791_p3) begin
    if (p_Result_84_fu_791_p3[0] == 1'b1) begin
        l_fu_799_p3 = 32'd0;
    end else if (p_Result_84_fu_791_p3[1] == 1'b1) begin
        l_fu_799_p3 = 32'd1;
    end else if (p_Result_84_fu_791_p3[2] == 1'b1) begin
        l_fu_799_p3 = 32'd2;
    end else if (p_Result_84_fu_791_p3[3] == 1'b1) begin
        l_fu_799_p3 = 32'd3;
    end else if (p_Result_84_fu_791_p3[4] == 1'b1) begin
        l_fu_799_p3 = 32'd4;
    end else if (p_Result_84_fu_791_p3[5] == 1'b1) begin
        l_fu_799_p3 = 32'd5;
    end else if (p_Result_84_fu_791_p3[6] == 1'b1) begin
        l_fu_799_p3 = 32'd6;
    end else if (p_Result_84_fu_791_p3[7] == 1'b1) begin
        l_fu_799_p3 = 32'd7;
    end else if (p_Result_84_fu_791_p3[8] == 1'b1) begin
        l_fu_799_p3 = 32'd8;
    end else if (p_Result_84_fu_791_p3[9] == 1'b1) begin
        l_fu_799_p3 = 32'd9;
    end else if (p_Result_84_fu_791_p3[10] == 1'b1) begin
        l_fu_799_p3 = 32'd10;
    end else if (p_Result_84_fu_791_p3[11] == 1'b1) begin
        l_fu_799_p3 = 32'd11;
    end else if (p_Result_84_fu_791_p3[12] == 1'b1) begin
        l_fu_799_p3 = 32'd12;
    end else if (p_Result_84_fu_791_p3[13] == 1'b1) begin
        l_fu_799_p3 = 32'd13;
    end else if (p_Result_84_fu_791_p3[14] == 1'b1) begin
        l_fu_799_p3 = 32'd14;
    end else if (p_Result_84_fu_791_p3[15] == 1'b1) begin
        l_fu_799_p3 = 32'd15;
    end else if (p_Result_84_fu_791_p3[16] == 1'b1) begin
        l_fu_799_p3 = 32'd16;
    end else if (p_Result_84_fu_791_p3[17] == 1'b1) begin
        l_fu_799_p3 = 32'd17;
    end else if (p_Result_84_fu_791_p3[18] == 1'b1) begin
        l_fu_799_p3 = 32'd18;
    end else if (p_Result_84_fu_791_p3[19] == 1'b1) begin
        l_fu_799_p3 = 32'd19;
    end else if (p_Result_84_fu_791_p3[20] == 1'b1) begin
        l_fu_799_p3 = 32'd20;
    end else if (p_Result_84_fu_791_p3[21] == 1'b1) begin
        l_fu_799_p3 = 32'd21;
    end else if (p_Result_84_fu_791_p3[22] == 1'b1) begin
        l_fu_799_p3 = 32'd22;
    end else if (p_Result_84_fu_791_p3[23] == 1'b1) begin
        l_fu_799_p3 = 32'd23;
    end else if (p_Result_84_fu_791_p3[24] == 1'b1) begin
        l_fu_799_p3 = 32'd24;
    end else if (p_Result_84_fu_791_p3[25] == 1'b1) begin
        l_fu_799_p3 = 32'd25;
    end else if (p_Result_84_fu_791_p3[26] == 1'b1) begin
        l_fu_799_p3 = 32'd26;
    end else if (p_Result_84_fu_791_p3[27] == 1'b1) begin
        l_fu_799_p3 = 32'd27;
    end else if (p_Result_84_fu_791_p3[28] == 1'b1) begin
        l_fu_799_p3 = 32'd28;
    end else if (p_Result_84_fu_791_p3[29] == 1'b1) begin
        l_fu_799_p3 = 32'd29;
    end else if (p_Result_84_fu_791_p3[30] == 1'b1) begin
        l_fu_799_p3 = 32'd30;
    end else if (p_Result_84_fu_791_p3[31] == 1'b1) begin
        l_fu_799_p3 = 32'd31;
    end else begin
        l_fu_799_p3 = 32'd32;
    end
end

assign lsb_index_fu_820_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_811_p2));

assign lshr_ln947_fu_856_p2 = 25'd33554431 >> zext_ln947_fu_852_p1;

assign lshr_ln958_fu_943_p2 = zext_ln957_2_fu_935_p1 >> add_ln958_fu_938_p2;

assign m_11_fu_1004_p1 = m_s_reg_1261;

assign m_7_fu_962_p3 = ((icmp_ln958_reg_1256[0:0] === 1'b1) ? zext_ln958_fu_949_p1 : shl_ln958_fu_956_p2);

assign m_8_fu_972_p2 = (zext_ln961_fu_969_p1 + m_7_fu_962_p3);

assign m_fu_932_p1 = tmp_V_16_reg_1227;

assign or_ln949_fu_912_p2 = (and_ln949_fu_906_p2 | a_fu_873_p2);

assign or_ln_fu_918_p3 = {{31'd0}, {or_ln949_fu_912_p2}};

assign p_Result_80_fu_862_p2 = (tmp_V_16_reg_1227 & lshr_ln947_fu_856_p2);

assign p_Result_81_fu_899_p3 = tmp_V_16_reg_1227[add_ln949_fu_893_p2];

assign p_Result_84_fu_791_p3 = {{7'd127}, {p_Result_s_fu_781_p4}};

assign p_Result_85_fu_1024_p5 = {{m_11_fu_1004_p1[63:32]}, {tmp_2_fu_1017_p3}, {m_11_fu_1004_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_16_fu_775_p3) begin
    for (ap_tvar_int_0 = 25 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 24 - 0) begin
            p_Result_s_fu_781_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_781_p4[ap_tvar_int_0] = tmp_V_16_fu_775_p3[24 - ap_tvar_int_0];
        end
    end
end

assign r_V_fu_649_p0 = v191_V_fu_627_p3;

assign r_V_fu_649_p1 = v192_V_fu_634_p3;

assign r_V_fu_649_p2 = ($signed(r_V_fu_649_p0) * $signed(r_V_fu_649_p1));

assign select_ln964_fu_996_p3 = ((tmp_36_fu_988_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln203_fu_395_p1 = $signed(add_ln203_fu_390_p2);

assign sext_ln318_fu_463_p1 = $signed(add_ln318_fu_458_p2);

assign sext_ln324_fu_623_p1 = $signed(add_ln324_reg_1138);

assign sext_ln325_fu_618_p1 = $signed(add_ln325_fu_613_p2);

assign sext_ln329_fu_583_p1 = $signed(add_ln329_fu_578_p2);

assign sext_ln344_fu_738_p1 = $signed(add_ln344_fu_733_p2);

assign sext_ln703_2_fu_747_p1 = $signed(v178_V_q0);

assign sext_ln703_fu_743_p1 = $signed(outp1_V_q0);

assign shl_ln958_fu_956_p2 = m_fu_932_p1 << zext_ln958_2_fu_953_p1;

assign sub_ln203_fu_368_p2 = (zext_ln203_fu_352_p1 - zext_ln203_9_fu_364_p1);

assign sub_ln318_fu_436_p2 = (zext_ln318_fu_420_p1 - zext_ln318_1_fu_432_p1);

assign sub_ln324_fu_508_p2 = (zext_ln324_1_fu_492_p1 - zext_ln324_2_fu_504_p1);

assign sub_ln325_fu_572_p2 = (zext_ln325_1_fu_556_p1 - zext_ln325_2_fu_568_p1);

assign sub_ln329_fu_526_p2 = (zext_ln329_fu_522_p1 - zext_ln324_fu_488_p1);

assign sub_ln344_fu_706_p2 = (zext_ln344_fu_690_p1 - zext_ln344_1_fu_702_p1);

assign sub_ln944_fu_811_p2 = (32'd25 - l_reg_1235);

assign sub_ln947_fu_846_p2 = ($signed(5'd18) - $signed(trunc_ln947_fu_842_p1));

assign sub_ln964_fu_1007_p2 = (8'd9 - trunc_ln943_reg_1241);

assign tmp_2_fu_1017_p3 = {{p_Result_83_reg_1216}, {add_ln964_fu_1012_p2}};

assign tmp_34_fu_826_p4 = {{lsb_index_fu_820_p2[31:1]}};

assign tmp_35_fu_879_p3 = lsb_index_fu_820_p2[32'd31];

assign tmp_36_fu_988_p3 = m_8_fu_972_p2[32'd25];

assign tmp_43_fu_344_p3 = {{v182_0_reg_233}, {12'd0}};

assign tmp_44_fu_356_p3 = {{v182_0_reg_233}, {10'd0}};

assign tmp_45_fu_412_p3 = {{v184_0_reg_255}, {12'd0}};

assign tmp_46_fu_424_p3 = {{v184_0_reg_255}, {10'd0}};

assign tmp_47_fu_480_p3 = {{i15_0_reg_277}, {10'd0}};

assign tmp_48_fu_496_p3 = {{i15_0_reg_277}, {8'd0}};

assign tmp_49_fu_514_p3 = {{i15_0_reg_277}, {12'd0}};

assign tmp_50_fu_682_p3 = {{i16_0_reg_310}, {12'd0}};

assign tmp_51_fu_694_p3 = {{i16_0_reg_310}, {10'd0}};

assign tmp_52_fu_548_p3 = {{j14_0_reg_288}, {10'd0}};

assign tmp_53_fu_560_p3 = {{j14_0_reg_288}, {8'd0}};

assign tmp_V_15_fu_751_p2 = ($signed(sext_ln703_2_fu_747_p1) + $signed(sext_ln703_fu_743_p1));

assign tmp_V_16_fu_775_p3 = ((p_Result_83_reg_1216[0:0] === 1'b1) ? tmp_V_fu_770_p2 : tmp_V_15_reg_1209);

assign tmp_V_fu_770_p2 = (25'd0 - tmp_V_15_reg_1209);

assign trunc_ln738_fu_1036_p1 = p_Result_85_fu_1024_p5[31:0];

assign trunc_ln943_fu_807_p1 = l_fu_799_p3[7:0];

assign trunc_ln944_fu_816_p1 = sub_ln944_fu_811_p2[24:0];

assign trunc_ln947_fu_842_p1 = sub_ln944_fu_811_p2[4:0];

assign v176_V_address0 = sext_ln324_fu_623_p1;

assign v177_V_address0 = sext_ln325_fu_618_p1;

assign v178_V_address0 = zext_ln338_fu_724_p1;

assign v182_fu_338_p2 = (v182_0_reg_233 + 4'd1);

assign v183_fu_380_p2 = (v183_0_reg_244 + 12'd1);

assign v184_fu_406_p2 = (v184_0_reg_255 + 4'd1);

assign v185_fu_448_p2 = (v185_0_reg_266 + 12'd1);

assign v191_V_fu_627_p3 = {{v189_V_reg_1153}, {16'd0}};

assign v192_V_fu_634_p3 = {{v190_V_reg_1158}, {16'd0}};

assign v196_V_fu_665_p2 = (v194_V_reg_1163 + v195_V_reg_1168);

assign v204_fu_1044_p3 = ((icmp_ln935_reg_1222[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1040_p1);

assign xor_ln949_fu_887_p2 = (tmp_35_fu_879_p3 ^ 1'd1);

assign zext_ln203_10_fu_386_p1 = v183_0_reg_244;

assign zext_ln203_9_fu_364_p1 = tmp_44_fu_356_p3;

assign zext_ln203_fu_352_p1 = tmp_43_fu_344_p3;

assign zext_ln318_1_fu_432_p1 = tmp_46_fu_424_p3;

assign zext_ln318_2_fu_454_p1 = v185_0_reg_266;

assign zext_ln318_fu_420_p1 = tmp_45_fu_412_p3;

assign zext_ln324_1_fu_492_p1 = tmp_47_fu_480_p3;

assign zext_ln324_2_fu_504_p1 = tmp_48_fu_496_p3;

assign zext_ln324_3_fu_600_p1 = k4_0_reg_299;

assign zext_ln324_4_fu_604_p1 = k4_0_reg_299;

assign zext_ln324_fu_488_p1 = tmp_47_fu_480_p3;

assign zext_ln325_1_fu_556_p1 = tmp_52_fu_548_p3;

assign zext_ln325_2_fu_568_p1 = tmp_53_fu_560_p3;

assign zext_ln325_fu_544_p1 = j14_0_reg_288;

assign zext_ln329_fu_522_p1 = tmp_49_fu_514_p3;

assign zext_ln338_fu_724_p1 = j15_0_reg_321;

assign zext_ln344_1_fu_702_p1 = tmp_51_fu_694_p3;

assign zext_ln344_2_fu_729_p1 = j15_0_reg_321;

assign zext_ln344_fu_690_p1 = tmp_50_fu_682_p3;

assign zext_ln947_fu_852_p1 = sub_ln947_fu_846_p2;

assign zext_ln957_2_fu_935_p1 = tmp_V_16_reg_1227;

assign zext_ln958_2_fu_953_p1 = l_reg_1235;

assign zext_ln958_fu_949_p1 = lshr_ln958_fu_943_p2;

assign zext_ln961_fu_969_p1 = or_ln_reg_1251;

always @ (posedge ap_clk) begin
    sub_ln203_reg_1060[9:0] <= 10'b0000000000;
    sub_ln318_reg_1081[9:0] <= 10'b0000000000;
    sub_ln324_reg_1102[7:0] <= 8'b00000000;
    sub_ln329_reg_1107[9:0] <= 10'b0000000000;
    sub_ln325_reg_1120[7:0] <= 8'b00000000;
    sub_ln344_reg_1181[9:0] <= 10'b0000000000;
    or_ln_reg_1251[31:1] <= 31'b0000000000000000000000000000000;
    select_ln964_reg_1266[7:1] <= 7'b0111111;
end

endmodule //Linear_layer_ds1
