// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Res_layer_HH_
#define _Res_layer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Res_layer : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > v124_V_address0;
    sc_out< sc_logic > v124_V_ce0;
    sc_in< sc_lv<24> > v124_V_q0;
    sc_out< sc_lv<14> > v125_V_address0;
    sc_out< sc_logic > v125_V_ce0;
    sc_in< sc_lv<24> > v125_V_q0;
    sc_out< sc_lv<14> > v126_address0;
    sc_out< sc_logic > v126_ce0;
    sc_out< sc_logic > v126_we0;
    sc_out< sc_lv<32> > v126_d0;


    // Module declarations
    Res_layer(sc_module_name name);
    SC_HAS_PROCESS(Res_layer);

    ~Res_layer();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i11_fu_173_p2;
    sc_signal< sc_lv<4> > i11_reg_548;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<15> > sub_ln232_fu_203_p2;
    sc_signal< sc_lv<15> > sub_ln232_reg_553;
    sc_signal< sc_lv<1> > icmp_ln230_fu_167_p2;
    sc_signal< sc_lv<10> > j11_fu_215_p2;
    sc_signal< sc_lv<10> > j11_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > sext_ln232_fu_230_p1;
    sc_signal< sc_lv<64> > sext_ln232_reg_566;
    sc_signal< sc_lv<1> > icmp_ln231_fu_209_p2;
    sc_signal< sc_lv<25> > tmp_V_11_fu_244_p2;
    sc_signal< sc_lv<25> > tmp_V_11_reg_581;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > p_Result_74_reg_588;
    sc_signal< sc_lv<1> > icmp_ln935_fu_258_p2;
    sc_signal< sc_lv<1> > icmp_ln935_reg_594;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<25> > tmp_V_12_fu_268_p3;
    sc_signal< sc_lv<25> > tmp_V_12_reg_599;
    sc_signal< sc_lv<32> > l_fu_292_p3;
    sc_signal< sc_lv<32> > l_reg_607;
    sc_signal< sc_lv<8> > trunc_ln943_fu_300_p1;
    sc_signal< sc_lv<8> > trunc_ln943_reg_613;
    sc_signal< sc_lv<32> > sub_ln944_fu_304_p2;
    sc_signal< sc_lv<32> > sub_ln944_reg_618;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > or_ln_fu_411_p3;
    sc_signal< sc_lv<32> > or_ln_reg_623;
    sc_signal< sc_lv<1> > icmp_ln958_fu_419_p2;
    sc_signal< sc_lv<1> > icmp_ln958_reg_628;
    sc_signal< sc_lv<63> > m_5_reg_633;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > select_ln964_fu_489_p3;
    sc_signal< sc_lv<8> > select_ln964_reg_638;
    sc_signal< sc_lv<4> > i11_0_reg_145;
    sc_signal< sc_lv<10> > j11_0_reg_156;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<14> > tmp_s_fu_179_p3;
    sc_signal< sc_lv<12> > tmp_25_fu_191_p3;
    sc_signal< sc_lv<15> > zext_ln232_fu_187_p1;
    sc_signal< sc_lv<15> > zext_ln232_1_fu_199_p1;
    sc_signal< sc_lv<15> > zext_ln232_2_fu_221_p1;
    sc_signal< sc_lv<15> > add_ln232_fu_225_p2;
    sc_signal< sc_lv<25> > sext_ln703_1_fu_240_p1;
    sc_signal< sc_lv<25> > sext_ln703_fu_236_p1;
    sc_signal< sc_lv<25> > tmp_V_fu_263_p2;
    sc_signal< sc_lv<25> > p_Result_s_fu_274_p4;
    sc_signal< sc_lv<32> > p_Result_75_fu_284_p3;
    sc_signal< sc_lv<32> > lsb_index_fu_313_p2;
    sc_signal< sc_lv<31> > tmp_30_fu_319_p4;
    sc_signal< sc_lv<5> > trunc_ln947_fu_335_p1;
    sc_signal< sc_lv<5> > sub_ln947_fu_339_p2;
    sc_signal< sc_lv<25> > zext_ln947_fu_345_p1;
    sc_signal< sc_lv<25> > lshr_ln947_fu_349_p2;
    sc_signal< sc_lv<25> > p_Result_71_fu_355_p2;
    sc_signal< sc_lv<1> > icmp_ln947_fu_329_p2;
    sc_signal< sc_lv<1> > icmp_ln947_1_fu_360_p2;
    sc_signal< sc_lv<1> > tmp_31_fu_372_p3;
    sc_signal< sc_lv<25> > trunc_ln944_fu_309_p1;
    sc_signal< sc_lv<25> > add_ln949_fu_386_p2;
    sc_signal< sc_lv<1> > p_Result_72_fu_392_p3;
    sc_signal< sc_lv<1> > xor_ln949_fu_380_p2;
    sc_signal< sc_lv<1> > and_ln949_fu_399_p2;
    sc_signal< sc_lv<1> > a_fu_366_p2;
    sc_signal< sc_lv<1> > or_ln949_fu_405_p2;
    sc_signal< sc_lv<32> > zext_ln957_1_fu_428_p1;
    sc_signal< sc_lv<32> > add_ln958_fu_431_p2;
    sc_signal< sc_lv<32> > lshr_ln958_fu_436_p2;
    sc_signal< sc_lv<64> > m_fu_425_p1;
    sc_signal< sc_lv<64> > zext_ln958_1_fu_446_p1;
    sc_signal< sc_lv<64> > zext_ln958_fu_442_p1;
    sc_signal< sc_lv<64> > shl_ln958_fu_449_p2;
    sc_signal< sc_lv<64> > zext_ln961_fu_462_p1;
    sc_signal< sc_lv<64> > m_1_fu_455_p3;
    sc_signal< sc_lv<64> > m_2_fu_465_p2;
    sc_signal< sc_lv<1> > tmp_32_fu_481_p3;
    sc_signal< sc_lv<8> > sub_ln964_fu_500_p2;
    sc_signal< sc_lv<8> > add_ln964_fu_505_p2;
    sc_signal< sc_lv<64> > m_6_fu_497_p1;
    sc_signal< sc_lv<9> > tmp_7_fu_510_p3;
    sc_signal< sc_lv<64> > p_Result_76_fu_517_p5;
    sc_signal< sc_lv<32> > trunc_ln738_fu_529_p1;
    sc_signal< sc_lv<32> > bitcast_ln739_fu_533_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<10> ap_const_lv10_300;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<25> ap_const_lv25_0;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_FFFFFFE8;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<25> ap_const_lv25_1FFFFFF;
    static const sc_lv<25> ap_const_lv25_1FFFFE8;
    static const sc_lv<32> ap_const_lv32_FFFFFFE7;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<8> ap_const_lv8_7E;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<32> ap_const_lv32_17;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_fu_366_p2();
    void thread_add_ln232_fu_225_p2();
    void thread_add_ln949_fu_386_p2();
    void thread_add_ln958_fu_431_p2();
    void thread_add_ln964_fu_505_p2();
    void thread_and_ln949_fu_399_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln739_fu_533_p1();
    void thread_i11_fu_173_p2();
    void thread_icmp_ln230_fu_167_p2();
    void thread_icmp_ln231_fu_209_p2();
    void thread_icmp_ln935_fu_258_p2();
    void thread_icmp_ln947_1_fu_360_p2();
    void thread_icmp_ln947_fu_329_p2();
    void thread_icmp_ln958_fu_419_p2();
    void thread_j11_fu_215_p2();
    void thread_l_fu_292_p3();
    void thread_lsb_index_fu_313_p2();
    void thread_lshr_ln947_fu_349_p2();
    void thread_lshr_ln958_fu_436_p2();
    void thread_m_1_fu_455_p3();
    void thread_m_2_fu_465_p2();
    void thread_m_6_fu_497_p1();
    void thread_m_fu_425_p1();
    void thread_or_ln949_fu_405_p2();
    void thread_or_ln_fu_411_p3();
    void thread_p_Result_71_fu_355_p2();
    void thread_p_Result_72_fu_392_p3();
    void thread_p_Result_75_fu_284_p3();
    void thread_p_Result_76_fu_517_p5();
    void thread_p_Result_s_fu_274_p4();
    void thread_select_ln964_fu_489_p3();
    void thread_sext_ln232_fu_230_p1();
    void thread_sext_ln703_1_fu_240_p1();
    void thread_sext_ln703_fu_236_p1();
    void thread_shl_ln958_fu_449_p2();
    void thread_sub_ln232_fu_203_p2();
    void thread_sub_ln944_fu_304_p2();
    void thread_sub_ln947_fu_339_p2();
    void thread_sub_ln964_fu_500_p2();
    void thread_tmp_25_fu_191_p3();
    void thread_tmp_30_fu_319_p4();
    void thread_tmp_31_fu_372_p3();
    void thread_tmp_32_fu_481_p3();
    void thread_tmp_7_fu_510_p3();
    void thread_tmp_V_11_fu_244_p2();
    void thread_tmp_V_12_fu_268_p3();
    void thread_tmp_V_fu_263_p2();
    void thread_tmp_s_fu_179_p3();
    void thread_trunc_ln738_fu_529_p1();
    void thread_trunc_ln943_fu_300_p1();
    void thread_trunc_ln944_fu_309_p1();
    void thread_trunc_ln947_fu_335_p1();
    void thread_v124_V_address0();
    void thread_v124_V_ce0();
    void thread_v125_V_address0();
    void thread_v125_V_ce0();
    void thread_v126_address0();
    void thread_v126_ce0();
    void thread_v126_d0();
    void thread_v126_we0();
    void thread_xor_ln949_fu_380_p2();
    void thread_zext_ln232_1_fu_199_p1();
    void thread_zext_ln232_2_fu_221_p1();
    void thread_zext_ln232_fu_187_p1();
    void thread_zext_ln947_fu_345_p1();
    void thread_zext_ln957_1_fu_428_p1();
    void thread_zext_ln958_1_fu_446_p1();
    void thread_zext_ln958_fu_442_p1();
    void thread_zext_ln961_fu_462_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
