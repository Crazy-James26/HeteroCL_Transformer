-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Bert_layer_Linear_layer_qkv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v242_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v242_ce0 : OUT STD_LOGIC;
    v242_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    v243_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v243_ce0 : OUT STD_LOGIC;
    v243_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    v244_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v244_ce0 : OUT STD_LOGIC;
    v244_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    v3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v3_ce0 : OUT STD_LOGIC;
    v3_we0 : OUT STD_LOGIC;
    v3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    v3_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    v3_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    v3_ce1 : OUT STD_LOGIC;
    v3_q1 : IN STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of Bert_layer_Linear_layer_qkv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_2400 : STD_LOGIC_VECTOR (13 downto 0) := "10010000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal select_ln28_fu_165_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln28_reg_288 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln28_fu_135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln28_1_fu_173_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln28_1_reg_295 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln31_fu_220_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln31_reg_301 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_407_fu_229_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_407_reg_306 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln32_fu_258_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln32_reg_316 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal v3_load_reg_321 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_done : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_idle : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_ready : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_we0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_idle : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_ready : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_we0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce1 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v244_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v244_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_done : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_idle : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_ready : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_we0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v242_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v242_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v243_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v243_ce0 : STD_LOGIC;
    signal grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_cast_fu_235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_64 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_fu_181_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_68 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten6_fu_72 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln28_1_fu_141_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln29_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_fu_153_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_26_fu_209_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_202_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln31_fu_216_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln32_fu_226_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_28_fu_247_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_fu_240_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln32_1_fu_254_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Bert_layer_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v3_ce0 : OUT STD_LOGIC;
        v3_we0 : OUT STD_LOGIC;
        v3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component Bert_layer_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v3_ce0 : OUT STD_LOGIC;
        v3_we0 : OUT STD_LOGIC;
        v3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        v3_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v3_ce1 : OUT STD_LOGIC;
        v3_q1 : IN STD_LOGIC_VECTOR (23 downto 0);
        v244_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v244_ce0 : OUT STD_LOGIC;
        v244_q0 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component Bert_layer_Linear_layer_qkv_Pipeline_l_S_k_0_k IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v3_load : IN STD_LOGIC_VECTOR (23 downto 0);
        v3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v3_ce0 : OUT STD_LOGIC;
        v3_we0 : OUT STD_LOGIC;
        v3_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        empty : IN STD_LOGIC_VECTOR (13 downto 0);
        sub_ln31 : IN STD_LOGIC_VECTOR (13 downto 0);
        v242_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v242_ce0 : OUT STD_LOGIC;
        v242_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        sub_ln32 : IN STD_LOGIC_VECTOR (19 downto 0);
        v243_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        v243_ce0 : OUT STD_LOGIC;
        v243_q0 : IN STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89 : component Bert_layer_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start,
        ap_done => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_done,
        ap_idle => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_idle,
        ap_ready => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_ready,
        v3_address0 => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_address0,
        v3_ce0 => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_ce0,
        v3_we0 => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_we0,
        v3_d0 => grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_d0);

    grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95 : component Bert_layer_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start,
        ap_done => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done,
        ap_idle => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_idle,
        ap_ready => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_ready,
        v3_address0 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address0,
        v3_ce0 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce0,
        v3_we0 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_we0,
        v3_d0 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_d0,
        v3_address1 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address1,
        v3_ce1 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce1,
        v3_q1 => v3_q1,
        v244_address0 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v244_address0,
        v244_ce0 => grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v244_ce0,
        v244_q0 => v244_q0);

    grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103 : component Bert_layer_Linear_layer_qkv_Pipeline_l_S_k_0_k
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start,
        ap_done => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_done,
        ap_idle => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_idle,
        ap_ready => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_ready,
        v3_load => v3_load_reg_321,
        v3_address0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_address0,
        v3_ce0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_ce0,
        v3_we0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_we0,
        v3_d0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_d0,
        empty => empty_407_reg_306,
        sub_ln31 => sub_ln31_reg_301,
        v242_address0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v242_address0,
        v242_ce0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v242_ce0,
        v242_q0 => v242_q0,
        sub_ln32 => sub_ln32_reg_316,
        v243_address0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v243_address0,
        v243_ce0 => grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v243_ce0,
        v243_q0 => v243_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_ready = ap_const_logic_1)) then 
                    grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln28_fu_135_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_ready = ap_const_logic_1)) then 
                    grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_68 <= ap_const_lv4_0;
            elsif (((icmp_ln28_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_fu_68 <= select_ln28_1_fu_173_p3;
            end if; 
        end if;
    end process;

    indvar_flatten6_fu_72_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten6_fu_72 <= ap_const_lv14_0;
            elsif (((icmp_ln28_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten6_fu_72 <= add_ln28_1_fu_141_p2;
            end if; 
        end if;
    end process;

    j_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_fu_64 <= ap_const_lv10_0;
            elsif (((icmp_ln28_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_fu_64 <= add_ln29_fu_181_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                empty_407_reg_306 <= empty_407_fu_229_p2;
                    sub_ln31_reg_301(13 downto 8) <= sub_ln31_fu_220_p2(13 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_fu_135_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                select_ln28_1_reg_295 <= select_ln28_1_fu_173_p3;
                select_ln28_reg_288 <= select_ln28_fu_165_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    sub_ln32_reg_316(19 downto 8) <= sub_ln32_fu_258_p2(19 downto 8);
                v3_load_reg_321 <= v3_q0;
            end if;
        end if;
    end process;
    sub_ln31_reg_301(7 downto 0) <= "00000000";
    sub_ln32_reg_316(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln28_fu_135_p2, grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_done, grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done, grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln28_fu_135_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln28_1_fu_141_p2 <= std_logic_vector(unsigned(indvar_flatten6_fu_72) + unsigned(ap_const_lv14_1));
    add_ln28_fu_153_p2 <= std_logic_vector(unsigned(i_fu_68) + unsigned(ap_const_lv4_1));
    add_ln29_fu_181_p2 <= std_logic_vector(unsigned(select_ln28_fu_165_p3) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_done)
    begin
        if ((grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_done)
    begin
        if ((grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done)
    begin
        if ((grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_407_fu_229_p2 <= std_logic_vector(unsigned(sub_ln31_fu_220_p2) + unsigned(zext_ln32_fu_226_p1));
    grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start <= grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_ap_start_reg;
    grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_ap_start_reg;
    grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_ap_start_reg;
    icmp_ln28_fu_135_p2 <= "1" when (indvar_flatten6_fu_72 = ap_const_lv14_2400) else "0";
    icmp_ln29_fu_159_p2 <= "1" when (j_fu_64 = ap_const_lv10_300) else "0";
    p_cast_fu_235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_407_fu_229_p2),64));
    select_ln28_1_fu_173_p3 <= 
        add_ln28_fu_153_p2 when (icmp_ln29_fu_159_p2(0) = '1') else 
        i_fu_68;
    select_ln28_fu_165_p3 <= 
        ap_const_lv10_0 when (icmp_ln29_fu_159_p2(0) = '1') else 
        j_fu_64;
    sub_ln31_fu_220_p2 <= std_logic_vector(unsigned(tmp_s_fu_202_p3) - unsigned(zext_ln31_fu_216_p1));
    sub_ln32_fu_258_p2 <= std_logic_vector(unsigned(tmp_27_fu_240_p3) - unsigned(zext_ln32_1_fu_254_p1));
    tmp_26_fu_209_p3 <= (select_ln28_1_reg_295 & ap_const_lv8_0);
    tmp_27_fu_240_p3 <= (select_ln28_reg_288 & ap_const_lv10_0);
    tmp_28_fu_247_p3 <= (select_ln28_reg_288 & ap_const_lv8_0);
    tmp_s_fu_202_p3 <= (select_ln28_1_reg_295 & ap_const_lv10_0);
    v242_address0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v242_address0;
    v242_ce0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v242_ce0;
    v243_address0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v243_address0;
    v243_ce0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v243_ce0;
    v244_address0 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v244_address0;
    v244_ce0 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v244_ce0;

    v3_address0_assign_proc : process(ap_CS_fsm_state4, grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_address0, grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address0, grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_address0, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state7, p_cast_fu_235_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v3_address0 <= p_cast_fu_235_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            v3_address0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v3_address0 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v3_address0 <= grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_address0;
        else 
            v3_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;

    v3_address1 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_address1;

    v3_ce0_assign_proc : process(ap_CS_fsm_state4, grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_ce0, grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce0, grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_ce0, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            v3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            v3_ce0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v3_ce0 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v3_ce0 <= grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_ce0;
        else 
            v3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v3_ce1_assign_proc : process(grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v3_ce1 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_ce1;
        else 
            v3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    v3_d0_assign_proc : process(grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_d0, grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_d0, grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_d0, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            v3_d0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v3_d0 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v3_d0 <= grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_d0;
        else 
            v3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v3_we0_assign_proc : process(grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_we0, grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_we0, grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_we0, ap_CS_fsm_state2, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            v3_we0 <= grp_Linear_layer_qkv_Pipeline_l_S_k_0_k_fu_103_v3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v3_we0 <= grp_Linear_layer_qkv_Pipeline_l_bias_i1_l_j1_fu_95_v3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v3_we0 <= grp_Linear_layer_qkv_Pipeline_VITIS_LOOP_23_1_VITIS_LOOP_24_2_fu_89_v3_we0;
        else 
            v3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln31_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_209_p3),14));
    zext_ln32_1_fu_254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_247_p3),20));
    zext_ln32_fu_226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_reg_288),14));
end behav;
