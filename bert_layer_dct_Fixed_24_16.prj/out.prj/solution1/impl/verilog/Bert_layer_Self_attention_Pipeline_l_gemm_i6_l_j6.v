// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_gemm_i6_l_j6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v96_V_0_address0,
        v96_V_0_ce0,
        v96_V_0_q0,
        v96_V_1_address0,
        v96_V_1_ce0,
        v96_V_1_q0,
        v96_V_2_address0,
        v96_V_2_ce0,
        v96_V_2_q0,
        v96_V_3_address0,
        v96_V_3_ce0,
        v96_V_3_q0,
        v96_V_4_address0,
        v96_V_4_ce0,
        v96_V_4_q0,
        v96_V_5_address0,
        v96_V_5_ce0,
        v96_V_5_q0,
        v96_V_6_address0,
        v96_V_6_ce0,
        v96_V_6_q0,
        v96_V_7_address0,
        v96_V_7_ce0,
        v96_V_7_q0,
        v96_V_8_address0,
        v96_V_8_ce0,
        v96_V_8_q0,
        v96_V_9_address0,
        v96_V_9_ce0,
        v96_V_9_q0,
        v96_V_10_address0,
        v96_V_10_ce0,
        v96_V_10_q0,
        v96_V_11_address0,
        v96_V_11_ce0,
        v96_V_11_q0,
        V_h_V_address0,
        V_h_V_ce0,
        V_h_V_q0,
        V_h_V_address1,
        V_h_V_ce1,
        V_h_V_q1,
        V_h_V_address2,
        V_h_V_ce2,
        V_h_V_q2,
        V_h_V_address3,
        V_h_V_ce3,
        V_h_V_q3,
        V_h_V_address4,
        V_h_V_ce4,
        V_h_V_q4,
        V_h_V_address5,
        V_h_V_ce5,
        V_h_V_q5,
        V_h_V_address6,
        V_h_V_ce6,
        V_h_V_q6,
        V_h_V_address7,
        V_h_V_ce7,
        V_h_V_q7,
        V_h_V_address8,
        V_h_V_ce8,
        V_h_V_q8,
        V_h_V_address9,
        V_h_V_ce9,
        V_h_V_q9,
        V_h_V_address10,
        V_h_V_ce10,
        V_h_V_q10,
        V_h_V_address11,
        V_h_V_ce11,
        V_h_V_q11,
        v97_V_address0,
        v97_V_ce0,
        v97_V_we0,
        v97_V_d0,
        v97_V_address1,
        v97_V_ce1,
        v97_V_q1,
        grp_fu_253_p_din0,
        grp_fu_253_p_din1,
        grp_fu_253_p_dout0,
        grp_fu_253_p_ce,
        grp_fu_257_p_din0,
        grp_fu_257_p_din1,
        grp_fu_257_p_dout0,
        grp_fu_257_p_ce,
        grp_fu_261_p_din0,
        grp_fu_261_p_din1,
        grp_fu_261_p_dout0,
        grp_fu_261_p_ce,
        grp_fu_265_p_din0,
        grp_fu_265_p_din1,
        grp_fu_265_p_dout0,
        grp_fu_265_p_ce,
        grp_fu_269_p_din0,
        grp_fu_269_p_din1,
        grp_fu_269_p_dout0,
        grp_fu_269_p_ce,
        grp_fu_273_p_din0,
        grp_fu_273_p_din1,
        grp_fu_273_p_dout0,
        grp_fu_273_p_ce,
        grp_fu_277_p_din0,
        grp_fu_277_p_din1,
        grp_fu_277_p_dout0,
        grp_fu_277_p_ce,
        grp_fu_281_p_din0,
        grp_fu_281_p_din1,
        grp_fu_281_p_dout0,
        grp_fu_281_p_ce,
        grp_fu_285_p_din0,
        grp_fu_285_p_din1,
        grp_fu_285_p_dout0,
        grp_fu_285_p_ce,
        grp_fu_289_p_din0,
        grp_fu_289_p_din1,
        grp_fu_289_p_dout0,
        grp_fu_289_p_ce,
        grp_fu_293_p_din0,
        grp_fu_293_p_din1,
        grp_fu_293_p_dout0,
        grp_fu_293_p_ce,
        grp_fu_297_p_din0,
        grp_fu_297_p_din1,
        grp_fu_297_p_dout0,
        grp_fu_297_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v96_V_0_address0;
output   v96_V_0_ce0;
input  [23:0] v96_V_0_q0;
output  [3:0] v96_V_1_address0;
output   v96_V_1_ce0;
input  [23:0] v96_V_1_q0;
output  [3:0] v96_V_2_address0;
output   v96_V_2_ce0;
input  [23:0] v96_V_2_q0;
output  [3:0] v96_V_3_address0;
output   v96_V_3_ce0;
input  [23:0] v96_V_3_q0;
output  [3:0] v96_V_4_address0;
output   v96_V_4_ce0;
input  [23:0] v96_V_4_q0;
output  [3:0] v96_V_5_address0;
output   v96_V_5_ce0;
input  [23:0] v96_V_5_q0;
output  [3:0] v96_V_6_address0;
output   v96_V_6_ce0;
input  [23:0] v96_V_6_q0;
output  [3:0] v96_V_7_address0;
output   v96_V_7_ce0;
input  [23:0] v96_V_7_q0;
output  [3:0] v96_V_8_address0;
output   v96_V_8_ce0;
input  [23:0] v96_V_8_q0;
output  [3:0] v96_V_9_address0;
output   v96_V_9_ce0;
input  [23:0] v96_V_9_q0;
output  [3:0] v96_V_10_address0;
output   v96_V_10_ce0;
input  [23:0] v96_V_10_q0;
output  [3:0] v96_V_11_address0;
output   v96_V_11_ce0;
input  [23:0] v96_V_11_q0;
output  [9:0] V_h_V_address0;
output   V_h_V_ce0;
input  [23:0] V_h_V_q0;
output  [9:0] V_h_V_address1;
output   V_h_V_ce1;
input  [23:0] V_h_V_q1;
output  [9:0] V_h_V_address2;
output   V_h_V_ce2;
input  [23:0] V_h_V_q2;
output  [9:0] V_h_V_address3;
output   V_h_V_ce3;
input  [23:0] V_h_V_q3;
output  [9:0] V_h_V_address4;
output   V_h_V_ce4;
input  [23:0] V_h_V_q4;
output  [9:0] V_h_V_address5;
output   V_h_V_ce5;
input  [23:0] V_h_V_q5;
output  [9:0] V_h_V_address6;
output   V_h_V_ce6;
input  [23:0] V_h_V_q6;
output  [9:0] V_h_V_address7;
output   V_h_V_ce7;
input  [23:0] V_h_V_q7;
output  [9:0] V_h_V_address8;
output   V_h_V_ce8;
input  [23:0] V_h_V_q8;
output  [9:0] V_h_V_address9;
output   V_h_V_ce9;
input  [23:0] V_h_V_q9;
output  [9:0] V_h_V_address10;
output   V_h_V_ce10;
input  [23:0] V_h_V_q10;
output  [9:0] V_h_V_address11;
output   V_h_V_ce11;
input  [23:0] V_h_V_q11;
output  [9:0] v97_V_address0;
output   v97_V_ce0;
output   v97_V_we0;
output  [23:0] v97_V_d0;
output  [9:0] v97_V_address1;
output   v97_V_ce1;
input  [23:0] v97_V_q1;
output  [39:0] grp_fu_253_p_din0;
output  [39:0] grp_fu_253_p_din1;
input  [71:0] grp_fu_253_p_dout0;
output   grp_fu_253_p_ce;
output  [39:0] grp_fu_257_p_din0;
output  [39:0] grp_fu_257_p_din1;
input  [71:0] grp_fu_257_p_dout0;
output   grp_fu_257_p_ce;
output  [39:0] grp_fu_261_p_din0;
output  [39:0] grp_fu_261_p_din1;
input  [71:0] grp_fu_261_p_dout0;
output   grp_fu_261_p_ce;
output  [39:0] grp_fu_265_p_din0;
output  [39:0] grp_fu_265_p_din1;
input  [71:0] grp_fu_265_p_dout0;
output   grp_fu_265_p_ce;
output  [39:0] grp_fu_269_p_din0;
output  [39:0] grp_fu_269_p_din1;
input  [71:0] grp_fu_269_p_dout0;
output   grp_fu_269_p_ce;
output  [39:0] grp_fu_273_p_din0;
output  [39:0] grp_fu_273_p_din1;
input  [71:0] grp_fu_273_p_dout0;
output   grp_fu_273_p_ce;
output  [39:0] grp_fu_277_p_din0;
output  [39:0] grp_fu_277_p_din1;
input  [71:0] grp_fu_277_p_dout0;
output   grp_fu_277_p_ce;
output  [39:0] grp_fu_281_p_din0;
output  [39:0] grp_fu_281_p_din1;
input  [71:0] grp_fu_281_p_dout0;
output   grp_fu_281_p_ce;
output  [39:0] grp_fu_285_p_din0;
output  [39:0] grp_fu_285_p_din1;
input  [71:0] grp_fu_285_p_dout0;
output   grp_fu_285_p_ce;
output  [39:0] grp_fu_289_p_din0;
output  [39:0] grp_fu_289_p_din1;
input  [71:0] grp_fu_289_p_dout0;
output   grp_fu_289_p_ce;
output  [39:0] grp_fu_293_p_din0;
output  [39:0] grp_fu_293_p_din1;
input  [71:0] grp_fu_293_p_dout0;
output   grp_fu_293_p_ce;
output  [39:0] grp_fu_297_p_din0;
output  [39:0] grp_fu_297_p_din1;
input  [71:0] grp_fu_297_p_dout0;
output   grp_fu_297_p_ce;

reg ap_idle;
reg v96_V_0_ce0;
reg v96_V_1_ce0;
reg v96_V_2_ce0;
reg v96_V_3_ce0;
reg v96_V_4_ce0;
reg v96_V_5_ce0;
reg v96_V_6_ce0;
reg v96_V_7_ce0;
reg v96_V_8_ce0;
reg v96_V_9_ce0;
reg v96_V_10_ce0;
reg v96_V_11_ce0;
reg V_h_V_ce0;
reg V_h_V_ce1;
reg V_h_V_ce2;
reg V_h_V_ce3;
reg V_h_V_ce4;
reg V_h_V_ce5;
reg V_h_V_ce6;
reg V_h_V_ce7;
reg V_h_V_ce8;
reg V_h_V_ce9;
reg V_h_V_ce10;
reg V_h_V_ce11;
reg v97_V_ce0;
reg v97_V_we0;
reg v97_V_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln136_fu_454_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln137_fu_469_p2;
reg   [0:0] icmp_ln137_reg_1221;
wire   [6:0] select_ln136_fu_475_p3;
reg   [6:0] select_ln136_reg_1226;
wire   [3:0] select_ln136_1_fu_574_p3;
reg   [3:0] select_ln136_1_reg_1263;
wire   [63:0] zext_ln136_fu_581_p1;
reg   [63:0] zext_ln136_reg_1268;
wire   [9:0] zext_ln140_fu_589_p1;
reg   [9:0] zext_ln140_reg_1300;
reg   [23:0] V_h_V_load_reg_1335;
reg   [23:0] V_h_V_load_reg_1335_pp0_iter2_reg;
reg   [23:0] V_h_V_load_reg_1335_pp0_iter3_reg;
reg   [23:0] V_h_V_load_2_reg_1340;
reg   [23:0] V_h_V_load_2_reg_1340_pp0_iter2_reg;
reg   [23:0] V_h_V_load_2_reg_1340_pp0_iter3_reg;
reg   [23:0] V_h_V_load_4_reg_1345;
reg   [23:0] V_h_V_load_4_reg_1345_pp0_iter2_reg;
reg   [23:0] V_h_V_load_4_reg_1345_pp0_iter3_reg;
reg   [23:0] V_h_V_load_6_reg_1350;
reg   [23:0] V_h_V_load_6_reg_1350_pp0_iter2_reg;
reg   [23:0] V_h_V_load_6_reg_1350_pp0_iter3_reg;
reg   [23:0] V_h_V_load_8_reg_1355;
reg   [23:0] V_h_V_load_8_reg_1355_pp0_iter2_reg;
reg   [23:0] V_h_V_load_10_reg_1360;
reg   [23:0] V_h_V_load_10_reg_1360_pp0_iter2_reg;
reg   [23:0] v96_V_8_load_reg_1405;
reg   [23:0] v96_V_9_load_reg_1410;
reg   [23:0] v96_V_10_load_reg_1415;
reg   [23:0] v96_V_11_load_reg_1420;
wire   [9:0] empty_405_fu_676_p2;
reg   [9:0] empty_405_reg_1425;
reg   [9:0] empty_405_reg_1425_pp0_iter3_reg;
reg   [23:0] V_h_V_load_1_reg_1430;
reg   [23:0] V_h_V_load_1_reg_1430_pp0_iter3_reg;
reg   [23:0] V_h_V_load_3_reg_1435;
reg   [23:0] V_h_V_load_3_reg_1435_pp0_iter3_reg;
reg   [23:0] V_h_V_load_5_reg_1440;
reg   [23:0] V_h_V_load_5_reg_1440_pp0_iter3_reg;
reg   [23:0] V_h_V_load_7_reg_1445;
reg   [23:0] V_h_V_load_7_reg_1445_pp0_iter3_reg;
reg   [23:0] V_h_V_load_9_reg_1450;
reg   [23:0] V_h_V_load_11_reg_1455;
reg   [23:0] v96_V_0_load_reg_1460;
reg   [23:0] v96_V_1_load_reg_1465;
reg   [23:0] v96_V_2_load_reg_1470;
reg   [23:0] v96_V_3_load_reg_1475;
reg   [23:0] v96_V_4_load_reg_1480;
reg   [23:0] v96_V_5_load_reg_1485;
reg   [23:0] v96_V_6_load_reg_1490;
reg   [23:0] v96_V_7_load_reg_1495;
wire  signed [71:0] sext_ln136_8_fu_688_p1;
wire  signed [71:0] sext_ln136_9_fu_699_p1;
wire  signed [71:0] sext_ln136_10_fu_710_p1;
wire  signed [71:0] sext_ln136_11_fu_721_p1;
wire  signed [71:0] sext_ln1319_8_fu_732_p1;
wire  signed [71:0] sext_ln1319_9_fu_749_p1;
wire  signed [71:0] sext_ln1319_10_fu_766_p1;
wire  signed [71:0] sext_ln1319_11_fu_783_p1;
wire  signed [71:0] sext_ln136_fu_800_p1;
wire  signed [71:0] sext_ln136_1_fu_811_p1;
wire  signed [71:0] sext_ln136_2_fu_822_p1;
wire  signed [71:0] sext_ln136_3_fu_833_p1;
wire  signed [71:0] sext_ln136_4_fu_844_p1;
wire  signed [71:0] sext_ln136_5_fu_855_p1;
wire  signed [71:0] sext_ln136_6_fu_866_p1;
wire  signed [71:0] sext_ln136_7_fu_877_p1;
reg   [9:0] v97_V_addr_reg_1580;
reg   [9:0] v97_V_addr_reg_1580_pp0_iter5_reg;
reg   [9:0] v97_V_addr_reg_1580_pp0_iter6_reg;
reg   [9:0] v97_V_addr_reg_1580_pp0_iter7_reg;
wire  signed [71:0] sext_ln1319_fu_892_p1;
wire  signed [71:0] sext_ln1319_1_fu_909_p1;
wire  signed [71:0] sext_ln1319_2_fu_926_p1;
wire  signed [71:0] sext_ln1319_3_fu_943_p1;
wire  signed [71:0] sext_ln1319_4_fu_960_p1;
wire  signed [71:0] sext_ln1319_5_fu_977_p1;
wire  signed [71:0] sext_ln1319_6_fu_994_p1;
wire  signed [71:0] sext_ln1319_7_fu_1011_p1;
reg   [23:0] trunc_ln864_8_reg_1626;
reg   [23:0] trunc_ln864_9_reg_1631;
reg   [23:0] trunc_ln864_s_reg_1636;
reg   [23:0] trunc_ln864_10_reg_1641;
reg   [23:0] v97_V_load_reg_1646;
reg   [23:0] trunc_ln_reg_1651;
reg   [23:0] trunc_ln864_1_reg_1656;
reg   [23:0] trunc_ln864_2_reg_1661;
reg   [23:0] trunc_ln864_3_reg_1666;
reg   [23:0] trunc_ln864_4_reg_1671;
reg   [23:0] trunc_ln864_5_reg_1676;
reg   [23:0] trunc_ln864_6_reg_1681;
reg   [23:0] trunc_ln864_7_reg_1686;
wire   [23:0] add_ln859_9_fu_1149_p2;
reg   [23:0] add_ln859_9_reg_1691;
wire   [23:0] add_ln859_1_fu_1159_p2;
reg   [23:0] add_ln859_1_reg_1696;
wire   [23:0] add_ln859_3_fu_1168_p2;
reg   [23:0] add_ln859_3_reg_1701;
wire   [23:0] add_ln859_10_fu_1182_p2;
reg   [23:0] add_ln859_10_reg_1706;
wire   [23:0] add_ln859_11_fu_1191_p2;
reg   [23:0] add_ln859_11_reg_1711;
wire   [63:0] j6_cast_fu_483_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln140_4_fu_496_p1;
wire   [63:0] zext_ln140_6_fu_509_p1;
wire   [63:0] zext_ln140_8_fu_518_p1;
wire   [63:0] zext_ln140_10_fu_531_p1;
wire   [63:0] zext_ln140_12_fu_544_p1;
wire   [63:0] zext_ln140_3_fu_604_p1;
wire   [63:0] zext_ln140_5_fu_615_p1;
wire   [63:0] zext_ln140_7_fu_626_p1;
wire   [63:0] zext_ln140_9_fu_637_p1;
wire   [63:0] zext_ln140_11_fu_648_p1;
wire   [63:0] zext_ln140_13_fu_659_p1;
wire   [63:0] p_cast_fu_881_p1;
reg   [6:0] j6_fu_106;
wire   [6:0] add_ln137_fu_549_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_j6_load;
reg   [3:0] i6_fu_110;
reg   [9:0] indvar_flatten25_fu_114;
wire   [9:0] add_ln136_1_fu_460_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten25_load;
wire  signed [7:0] tmp_53_cast_fu_488_p3;
wire   [8:0] tmp_54_cast_fu_501_p3;
wire  signed [8:0] sext_ln140_fu_514_p1;
wire   [9:0] tmp_56_cast_fu_523_p3;
wire   [9:0] tmp_57_cast_fu_536_p3;
wire   [3:0] add_ln136_fu_568_p2;
wire   [7:0] zext_ln140_2_fu_595_p1;
wire   [7:0] add_ln140_fu_598_p2;
wire   [8:0] zext_ln140_1_fu_592_p1;
wire   [8:0] add_ln140_1_fu_609_p2;
wire   [8:0] add_ln140_2_fu_620_p2;
wire   [9:0] add_ln140_3_fu_631_p2;
wire   [9:0] add_ln140_4_fu_642_p2;
wire   [9:0] add_ln140_5_fu_653_p2;
wire   [9:0] tmp_s_fu_669_p3;
wire   [39:0] sext_ln139_8_mid2_v_fu_681_p3;
wire   [39:0] sext_ln139_9_mid2_v_fu_692_p3;
wire   [39:0] sext_ln139_10_mid2_v_fu_703_p3;
wire   [39:0] sext_ln137_mid2_v_fu_714_p3;
wire   [39:0] shl_ln884_6_fu_725_p3;
wire   [39:0] shl_ln884_8_fu_742_p3;
wire   [39:0] shl_ln884_10_fu_759_p3;
wire   [39:0] shl_ln884_11_fu_776_p3;
wire   [39:0] sext_ln139_mid2_v_fu_793_p3;
wire   [39:0] sext_ln139_1_mid2_v_fu_804_p3;
wire   [39:0] sext_ln139_2_mid2_v_fu_815_p3;
wire   [39:0] sext_ln139_3_mid2_v_fu_826_p3;
wire   [39:0] sext_ln139_4_mid2_v_fu_837_p3;
wire   [39:0] sext_ln139_5_mid2_v_fu_848_p3;
wire   [39:0] sext_ln139_6_mid2_v_fu_859_p3;
wire   [39:0] sext_ln139_7_mid2_v_fu_870_p3;
wire   [39:0] shl_ln884_1_fu_885_p3;
wire   [39:0] shl_ln884_3_fu_902_p3;
wire   [39:0] shl_ln884_5_fu_919_p3;
wire   [39:0] shl_ln884_7_fu_936_p3;
wire   [39:0] shl_ln884_9_fu_953_p3;
wire   [39:0] shl_ln884_s_fu_970_p3;
wire   [39:0] shl_ln884_2_fu_987_p3;
wire   [39:0] shl_ln884_4_fu_1004_p3;
wire   [23:0] add_ln859_8_fu_1145_p2;
wire   [23:0] add_ln859_7_fu_1141_p2;
wire   [23:0] add_ln859_fu_1155_p2;
wire   [23:0] add_ln859_2_fu_1164_p2;
wire   [23:0] add_ln859_5_fu_1173_p2;
wire   [23:0] add_ln859_6_fu_1177_p2;
wire   [23:0] add_ln859_4_fu_1187_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i6_fu_110 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i6_fu_110 <= select_ln136_1_fu_574_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln136_fu_454_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten25_fu_114 <= add_ln136_1_fu_460_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten25_fu_114 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln136_fu_454_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j6_fu_106 <= add_ln137_fu_549_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j6_fu_106 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_load_10_reg_1360 <= V_h_V_q6;
        V_h_V_load_2_reg_1340 <= V_h_V_q10;
        V_h_V_load_4_reg_1345 <= V_h_V_q9;
        V_h_V_load_6_reg_1350 <= V_h_V_q8;
        V_h_V_load_8_reg_1355 <= V_h_V_q7;
        V_h_V_load_reg_1335 <= V_h_V_q11;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        V_h_V_load_10_reg_1360_pp0_iter2_reg <= V_h_V_load_10_reg_1360;
        V_h_V_load_1_reg_1430_pp0_iter3_reg <= V_h_V_load_1_reg_1430;
        V_h_V_load_2_reg_1340_pp0_iter2_reg <= V_h_V_load_2_reg_1340;
        V_h_V_load_2_reg_1340_pp0_iter3_reg <= V_h_V_load_2_reg_1340_pp0_iter2_reg;
        V_h_V_load_3_reg_1435_pp0_iter3_reg <= V_h_V_load_3_reg_1435;
        V_h_V_load_4_reg_1345_pp0_iter2_reg <= V_h_V_load_4_reg_1345;
        V_h_V_load_4_reg_1345_pp0_iter3_reg <= V_h_V_load_4_reg_1345_pp0_iter2_reg;
        V_h_V_load_5_reg_1440_pp0_iter3_reg <= V_h_V_load_5_reg_1440;
        V_h_V_load_6_reg_1350_pp0_iter2_reg <= V_h_V_load_6_reg_1350;
        V_h_V_load_6_reg_1350_pp0_iter3_reg <= V_h_V_load_6_reg_1350_pp0_iter2_reg;
        V_h_V_load_7_reg_1445_pp0_iter3_reg <= V_h_V_load_7_reg_1445;
        V_h_V_load_8_reg_1355_pp0_iter2_reg <= V_h_V_load_8_reg_1355;
        V_h_V_load_reg_1335_pp0_iter2_reg <= V_h_V_load_reg_1335;
        V_h_V_load_reg_1335_pp0_iter3_reg <= V_h_V_load_reg_1335_pp0_iter2_reg;
        add_ln859_10_reg_1706 <= add_ln859_10_fu_1182_p2;
        add_ln859_11_reg_1711 <= add_ln859_11_fu_1191_p2;
        add_ln859_1_reg_1696 <= add_ln859_1_fu_1159_p2;
        add_ln859_3_reg_1701 <= add_ln859_3_fu_1168_p2;
        add_ln859_9_reg_1691 <= add_ln859_9_fu_1149_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        empty_405_reg_1425 <= empty_405_fu_676_p2;
        empty_405_reg_1425_pp0_iter3_reg <= empty_405_reg_1425;
        trunc_ln864_10_reg_1641 <= {{grp_fu_269_p_dout0[71:48]}};
        trunc_ln864_1_reg_1656 <= {{grp_fu_277_p_dout0[71:48]}};
        trunc_ln864_2_reg_1661 <= {{grp_fu_281_p_dout0[71:48]}};
        trunc_ln864_3_reg_1666 <= {{grp_fu_285_p_dout0[71:48]}};
        trunc_ln864_4_reg_1671 <= {{grp_fu_289_p_dout0[71:48]}};
        trunc_ln864_5_reg_1676 <= {{grp_fu_293_p_dout0[71:48]}};
        trunc_ln864_6_reg_1681 <= {{grp_fu_297_p_dout0[71:48]}};
        trunc_ln864_7_reg_1686 <= {{grp_fu_253_p_dout0[71:48]}};
        trunc_ln864_8_reg_1626 <= {{grp_fu_257_p_dout0[71:48]}};
        trunc_ln864_9_reg_1631 <= {{grp_fu_261_p_dout0[71:48]}};
        trunc_ln864_s_reg_1636 <= {{grp_fu_265_p_dout0[71:48]}};
        trunc_ln_reg_1651 <= {{grp_fu_273_p_dout0[71:48]}};
        v96_V_0_load_reg_1460 <= v96_V_0_q0;
        v96_V_10_load_reg_1415 <= v96_V_10_q0;
        v96_V_11_load_reg_1420 <= v96_V_11_q0;
        v96_V_1_load_reg_1465 <= v96_V_1_q0;
        v96_V_2_load_reg_1470 <= v96_V_2_q0;
        v96_V_3_load_reg_1475 <= v96_V_3_q0;
        v96_V_4_load_reg_1480 <= v96_V_4_q0;
        v96_V_5_load_reg_1485 <= v96_V_5_q0;
        v96_V_6_load_reg_1490 <= v96_V_6_q0;
        v96_V_7_load_reg_1495 <= v96_V_7_q0;
        v96_V_8_load_reg_1405 <= v96_V_8_q0;
        v96_V_9_load_reg_1410 <= v96_V_9_q0;
        v97_V_addr_reg_1580 <= p_cast_fu_881_p1;
        v97_V_addr_reg_1580_pp0_iter5_reg <= v97_V_addr_reg_1580;
        v97_V_addr_reg_1580_pp0_iter6_reg <= v97_V_addr_reg_1580_pp0_iter5_reg;
        v97_V_addr_reg_1580_pp0_iter7_reg <= v97_V_addr_reg_1580_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_h_V_load_11_reg_1455 <= V_h_V_q0;
        V_h_V_load_1_reg_1430 <= V_h_V_q5;
        V_h_V_load_3_reg_1435 <= V_h_V_q4;
        V_h_V_load_5_reg_1440 <= V_h_V_q3;
        V_h_V_load_7_reg_1445 <= V_h_V_q2;
        V_h_V_load_9_reg_1450 <= V_h_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln136_1_reg_1263 <= select_ln136_1_fu_574_p3;
        zext_ln136_reg_1268[3 : 0] <= zext_ln136_fu_581_p1[3 : 0];
        zext_ln140_reg_1300[6 : 0] <= zext_ln140_fu_589_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln136_fu_454_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln137_reg_1221 <= icmp_ln137_fu_469_p2;
        select_ln136_reg_1226 <= select_ln136_fu_475_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        v97_V_load_reg_1646 <= v97_V_q1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce0 = 1'b1;
    end else begin
        V_h_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce1 = 1'b1;
    end else begin
        V_h_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce10 = 1'b1;
    end else begin
        V_h_V_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce11 = 1'b1;
    end else begin
        V_h_V_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce2 = 1'b1;
    end else begin
        V_h_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce3 = 1'b1;
    end else begin
        V_h_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce4 = 1'b1;
    end else begin
        V_h_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce5 = 1'b1;
    end else begin
        V_h_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce6 = 1'b1;
    end else begin
        V_h_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce7 = 1'b1;
    end else begin
        V_h_V_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce8 = 1'b1;
    end else begin
        V_h_V_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        V_h_V_ce9 = 1'b1;
    end else begin
        V_h_V_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln136_fu_454_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten25_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten25_load = indvar_flatten25_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j6_load = 7'd0;
    end else begin
        ap_sig_allocacmp_j6_load = j6_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_0_ce0 = 1'b1;
    end else begin
        v96_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v96_V_10_ce0 = 1'b1;
    end else begin
        v96_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v96_V_11_ce0 = 1'b1;
    end else begin
        v96_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_1_ce0 = 1'b1;
    end else begin
        v96_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_2_ce0 = 1'b1;
    end else begin
        v96_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_3_ce0 = 1'b1;
    end else begin
        v96_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_4_ce0 = 1'b1;
    end else begin
        v96_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_5_ce0 = 1'b1;
    end else begin
        v96_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_6_ce0 = 1'b1;
    end else begin
        v96_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        v96_V_7_ce0 = 1'b1;
    end else begin
        v96_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v96_V_8_ce0 = 1'b1;
    end else begin
        v96_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v96_V_9_ce0 = 1'b1;
    end else begin
        v96_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        v97_V_ce0 = 1'b1;
    end else begin
        v97_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        v97_V_ce1 = 1'b1;
    end else begin
        v97_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        v97_V_we0 = 1'b1;
    end else begin
        v97_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign V_h_V_address0 = zext_ln140_13_fu_659_p1;

assign V_h_V_address1 = zext_ln140_11_fu_648_p1;

assign V_h_V_address10 = zext_ln140_4_fu_496_p1;

assign V_h_V_address11 = j6_cast_fu_483_p1;

assign V_h_V_address2 = zext_ln140_9_fu_637_p1;

assign V_h_V_address3 = zext_ln140_7_fu_626_p1;

assign V_h_V_address4 = zext_ln140_5_fu_615_p1;

assign V_h_V_address5 = zext_ln140_3_fu_604_p1;

assign V_h_V_address6 = zext_ln140_12_fu_544_p1;

assign V_h_V_address7 = zext_ln140_10_fu_531_p1;

assign V_h_V_address8 = zext_ln140_8_fu_518_p1;

assign V_h_V_address9 = zext_ln140_6_fu_509_p1;

assign add_ln136_1_fu_460_p2 = (ap_sig_allocacmp_indvar_flatten25_load + 10'd1);

assign add_ln136_fu_568_p2 = (i6_fu_110 + 4'd1);

assign add_ln137_fu_549_p2 = (select_ln136_fu_475_p3 + 7'd1);

assign add_ln140_1_fu_609_p2 = (zext_ln140_1_fu_592_p1 + 9'd192);

assign add_ln140_2_fu_620_p2 = ($signed(zext_ln140_1_fu_592_p1) + $signed(9'd320));

assign add_ln140_3_fu_631_p2 = (zext_ln140_fu_589_p1 + 10'd448);

assign add_ln140_4_fu_642_p2 = ($signed(zext_ln140_fu_589_p1) + $signed(10'd576));

assign add_ln140_5_fu_653_p2 = ($signed(zext_ln140_fu_589_p1) + $signed(10'd704));

assign add_ln140_fu_598_p2 = (zext_ln140_2_fu_595_p1 + 8'd64);

assign add_ln859_10_fu_1182_p2 = (add_ln859_9_reg_1691 + add_ln859_6_fu_1177_p2);

assign add_ln859_11_fu_1191_p2 = (add_ln859_10_reg_1706 + add_ln859_4_fu_1187_p2);

assign add_ln859_1_fu_1159_p2 = (add_ln859_fu_1155_p2 + v97_V_load_reg_1646);

assign add_ln859_2_fu_1164_p2 = (trunc_ln864_3_reg_1666 + trunc_ln864_4_reg_1671);

assign add_ln859_3_fu_1168_p2 = (add_ln859_2_fu_1164_p2 + trunc_ln864_2_reg_1661);

assign add_ln859_4_fu_1187_p2 = (add_ln859_3_reg_1701 + add_ln859_1_reg_1696);

assign add_ln859_5_fu_1173_p2 = (trunc_ln864_6_reg_1681 + trunc_ln864_7_reg_1686);

assign add_ln859_6_fu_1177_p2 = (add_ln859_5_fu_1173_p2 + trunc_ln864_5_reg_1676);

assign add_ln859_7_fu_1141_p2 = (trunc_ln864_8_reg_1626 + trunc_ln864_9_reg_1631);

assign add_ln859_8_fu_1145_p2 = (trunc_ln864_s_reg_1636 + trunc_ln864_10_reg_1641);

assign add_ln859_9_fu_1149_p2 = (add_ln859_8_fu_1145_p2 + add_ln859_7_fu_1141_p2);

assign add_ln859_fu_1155_p2 = (trunc_ln_reg_1651 + trunc_ln864_1_reg_1656);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_405_fu_676_p2 = (tmp_s_fu_669_p3 + zext_ln140_reg_1300);

assign grp_fu_253_p_ce = 1'b1;

assign grp_fu_253_p_din0 = sext_ln1319_7_fu_1011_p1;

assign grp_fu_253_p_din1 = sext_ln136_7_fu_877_p1;

assign grp_fu_257_p_ce = 1'b1;

assign grp_fu_257_p_din0 = sext_ln1319_8_fu_732_p1;

assign grp_fu_257_p_din1 = sext_ln136_8_fu_688_p1;

assign grp_fu_261_p_ce = 1'b1;

assign grp_fu_261_p_din0 = sext_ln1319_9_fu_749_p1;

assign grp_fu_261_p_din1 = sext_ln136_9_fu_699_p1;

assign grp_fu_265_p_ce = 1'b1;

assign grp_fu_265_p_din0 = sext_ln1319_10_fu_766_p1;

assign grp_fu_265_p_din1 = sext_ln136_10_fu_710_p1;

assign grp_fu_269_p_ce = 1'b1;

assign grp_fu_269_p_din0 = sext_ln1319_11_fu_783_p1;

assign grp_fu_269_p_din1 = sext_ln136_11_fu_721_p1;

assign grp_fu_273_p_ce = 1'b1;

assign grp_fu_273_p_din0 = sext_ln1319_fu_892_p1;

assign grp_fu_273_p_din1 = sext_ln136_fu_800_p1;

assign grp_fu_277_p_ce = 1'b1;

assign grp_fu_277_p_din0 = sext_ln1319_1_fu_909_p1;

assign grp_fu_277_p_din1 = sext_ln136_1_fu_811_p1;

assign grp_fu_281_p_ce = 1'b1;

assign grp_fu_281_p_din0 = sext_ln1319_2_fu_926_p1;

assign grp_fu_281_p_din1 = sext_ln136_2_fu_822_p1;

assign grp_fu_285_p_ce = 1'b1;

assign grp_fu_285_p_din0 = sext_ln1319_3_fu_943_p1;

assign grp_fu_285_p_din1 = sext_ln136_3_fu_833_p1;

assign grp_fu_289_p_ce = 1'b1;

assign grp_fu_289_p_din0 = sext_ln1319_4_fu_960_p1;

assign grp_fu_289_p_din1 = sext_ln136_4_fu_844_p1;

assign grp_fu_293_p_ce = 1'b1;

assign grp_fu_293_p_din0 = sext_ln1319_5_fu_977_p1;

assign grp_fu_293_p_din1 = sext_ln136_5_fu_855_p1;

assign grp_fu_297_p_ce = 1'b1;

assign grp_fu_297_p_din0 = sext_ln1319_6_fu_994_p1;

assign grp_fu_297_p_din1 = sext_ln136_6_fu_866_p1;

assign icmp_ln136_fu_454_p2 = ((ap_sig_allocacmp_indvar_flatten25_load == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_469_p2 = ((ap_sig_allocacmp_j6_load == 7'd64) ? 1'b1 : 1'b0);

assign j6_cast_fu_483_p1 = select_ln136_fu_475_p3;

assign p_cast_fu_881_p1 = empty_405_reg_1425_pp0_iter3_reg;

assign select_ln136_1_fu_574_p3 = ((icmp_ln137_reg_1221[0:0] == 1'b1) ? add_ln136_fu_568_p2 : i6_fu_110);

assign select_ln136_fu_475_p3 = ((icmp_ln137_fu_469_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_j6_load);

assign sext_ln1319_10_fu_766_p1 = $signed(shl_ln884_10_fu_759_p3);

assign sext_ln1319_11_fu_783_p1 = $signed(shl_ln884_11_fu_776_p3);

assign sext_ln1319_1_fu_909_p1 = $signed(shl_ln884_3_fu_902_p3);

assign sext_ln1319_2_fu_926_p1 = $signed(shl_ln884_5_fu_919_p3);

assign sext_ln1319_3_fu_943_p1 = $signed(shl_ln884_7_fu_936_p3);

assign sext_ln1319_4_fu_960_p1 = $signed(shl_ln884_9_fu_953_p3);

assign sext_ln1319_5_fu_977_p1 = $signed(shl_ln884_s_fu_970_p3);

assign sext_ln1319_6_fu_994_p1 = $signed(shl_ln884_2_fu_987_p3);

assign sext_ln1319_7_fu_1011_p1 = $signed(shl_ln884_4_fu_1004_p3);

assign sext_ln1319_8_fu_732_p1 = $signed(shl_ln884_6_fu_725_p3);

assign sext_ln1319_9_fu_749_p1 = $signed(shl_ln884_8_fu_742_p3);

assign sext_ln1319_fu_892_p1 = $signed(shl_ln884_1_fu_885_p3);

assign sext_ln136_10_fu_710_p1 = $signed(sext_ln139_10_mid2_v_fu_703_p3);

assign sext_ln136_11_fu_721_p1 = $signed(sext_ln137_mid2_v_fu_714_p3);

assign sext_ln136_1_fu_811_p1 = $signed(sext_ln139_1_mid2_v_fu_804_p3);

assign sext_ln136_2_fu_822_p1 = $signed(sext_ln139_2_mid2_v_fu_815_p3);

assign sext_ln136_3_fu_833_p1 = $signed(sext_ln139_3_mid2_v_fu_826_p3);

assign sext_ln136_4_fu_844_p1 = $signed(sext_ln139_4_mid2_v_fu_837_p3);

assign sext_ln136_5_fu_855_p1 = $signed(sext_ln139_5_mid2_v_fu_848_p3);

assign sext_ln136_6_fu_866_p1 = $signed(sext_ln139_6_mid2_v_fu_859_p3);

assign sext_ln136_7_fu_877_p1 = $signed(sext_ln139_7_mid2_v_fu_870_p3);

assign sext_ln136_8_fu_688_p1 = $signed(sext_ln139_8_mid2_v_fu_681_p3);

assign sext_ln136_9_fu_699_p1 = $signed(sext_ln139_9_mid2_v_fu_692_p3);

assign sext_ln136_fu_800_p1 = $signed(sext_ln139_mid2_v_fu_793_p3);

assign sext_ln137_mid2_v_fu_714_p3 = {{v96_V_11_load_reg_1420}, {16'd0}};

assign sext_ln139_10_mid2_v_fu_703_p3 = {{v96_V_10_load_reg_1415}, {16'd0}};

assign sext_ln139_1_mid2_v_fu_804_p3 = {{v96_V_1_load_reg_1465}, {16'd0}};

assign sext_ln139_2_mid2_v_fu_815_p3 = {{v96_V_2_load_reg_1470}, {16'd0}};

assign sext_ln139_3_mid2_v_fu_826_p3 = {{v96_V_3_load_reg_1475}, {16'd0}};

assign sext_ln139_4_mid2_v_fu_837_p3 = {{v96_V_4_load_reg_1480}, {16'd0}};

assign sext_ln139_5_mid2_v_fu_848_p3 = {{v96_V_5_load_reg_1485}, {16'd0}};

assign sext_ln139_6_mid2_v_fu_859_p3 = {{v96_V_6_load_reg_1490}, {16'd0}};

assign sext_ln139_7_mid2_v_fu_870_p3 = {{v96_V_7_load_reg_1495}, {16'd0}};

assign sext_ln139_8_mid2_v_fu_681_p3 = {{v96_V_8_load_reg_1405}, {16'd0}};

assign sext_ln139_9_mid2_v_fu_692_p3 = {{v96_V_9_load_reg_1410}, {16'd0}};

assign sext_ln139_mid2_v_fu_793_p3 = {{v96_V_0_load_reg_1460}, {16'd0}};

assign sext_ln140_fu_514_p1 = tmp_53_cast_fu_488_p3;

assign shl_ln884_10_fu_759_p3 = {{V_h_V_load_10_reg_1360_pp0_iter2_reg}, {16'd0}};

assign shl_ln884_11_fu_776_p3 = {{V_h_V_load_11_reg_1455}, {16'd0}};

assign shl_ln884_1_fu_885_p3 = {{V_h_V_load_reg_1335_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_2_fu_987_p3 = {{V_h_V_load_6_reg_1350_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_3_fu_902_p3 = {{V_h_V_load_1_reg_1430_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_4_fu_1004_p3 = {{V_h_V_load_7_reg_1445_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_5_fu_919_p3 = {{V_h_V_load_2_reg_1340_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_6_fu_725_p3 = {{V_h_V_load_8_reg_1355_pp0_iter2_reg}, {16'd0}};

assign shl_ln884_7_fu_936_p3 = {{V_h_V_load_3_reg_1435_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_8_fu_742_p3 = {{V_h_V_load_9_reg_1450}, {16'd0}};

assign shl_ln884_9_fu_953_p3 = {{V_h_V_load_4_reg_1345_pp0_iter3_reg}, {16'd0}};

assign shl_ln884_s_fu_970_p3 = {{V_h_V_load_5_reg_1440_pp0_iter3_reg}, {16'd0}};

assign tmp_53_cast_fu_488_p3 = {{1'd1}, {select_ln136_fu_475_p3}};

assign tmp_54_cast_fu_501_p3 = {{2'd2}, {select_ln136_fu_475_p3}};

assign tmp_56_cast_fu_523_p3 = {{3'd4}, {select_ln136_fu_475_p3}};

assign tmp_57_cast_fu_536_p3 = {{3'd5}, {select_ln136_fu_475_p3}};

assign tmp_s_fu_669_p3 = {{select_ln136_1_reg_1263}, {6'd0}};

assign v96_V_0_address0 = zext_ln136_reg_1268;

assign v96_V_10_address0 = zext_ln136_fu_581_p1;

assign v96_V_11_address0 = zext_ln136_fu_581_p1;

assign v96_V_1_address0 = zext_ln136_reg_1268;

assign v96_V_2_address0 = zext_ln136_reg_1268;

assign v96_V_3_address0 = zext_ln136_reg_1268;

assign v96_V_4_address0 = zext_ln136_reg_1268;

assign v96_V_5_address0 = zext_ln136_reg_1268;

assign v96_V_6_address0 = zext_ln136_reg_1268;

assign v96_V_7_address0 = zext_ln136_reg_1268;

assign v96_V_8_address0 = zext_ln136_fu_581_p1;

assign v96_V_9_address0 = zext_ln136_fu_581_p1;

assign v97_V_address0 = v97_V_addr_reg_1580_pp0_iter7_reg;

assign v97_V_address1 = p_cast_fu_881_p1;

assign v97_V_d0 = add_ln859_11_reg_1711;

assign zext_ln136_fu_581_p1 = select_ln136_1_fu_574_p3;

assign zext_ln140_10_fu_531_p1 = tmp_56_cast_fu_523_p3;

assign zext_ln140_11_fu_648_p1 = add_ln140_4_fu_642_p2;

assign zext_ln140_12_fu_544_p1 = tmp_57_cast_fu_536_p3;

assign zext_ln140_13_fu_659_p1 = add_ln140_5_fu_653_p2;

assign zext_ln140_1_fu_592_p1 = select_ln136_reg_1226;

assign zext_ln140_2_fu_595_p1 = select_ln136_reg_1226;

assign zext_ln140_3_fu_604_p1 = add_ln140_fu_598_p2;

assign zext_ln140_4_fu_496_p1 = $unsigned(tmp_53_cast_fu_488_p3);

assign zext_ln140_5_fu_615_p1 = add_ln140_1_fu_609_p2;

assign zext_ln140_6_fu_509_p1 = tmp_54_cast_fu_501_p3;

assign zext_ln140_7_fu_626_p1 = add_ln140_2_fu_620_p2;

assign zext_ln140_8_fu_518_p1 = $unsigned(sext_ln140_fu_514_p1);

assign zext_ln140_9_fu_637_p1 = add_ln140_3_fu_631_p2;

assign zext_ln140_fu_589_p1 = select_ln136_reg_1226;

always @ (posedge ap_clk) begin
    zext_ln136_reg_1268[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln140_reg_1300[9:7] <= 3'b000;
end

endmodule //Bert_layer_Self_attention_Pipeline_l_gemm_i6_l_j6
