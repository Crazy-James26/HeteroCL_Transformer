// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Linear_layer_ds0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v101_V_address0,
        v101_V_ce0,
        v101_V_q0,
        v102_V_address0,
        v102_V_ce0,
        v102_V_q0,
        v103_V_address0,
        v103_V_ce0,
        v103_V_q0,
        v104_V_address0,
        v104_V_ce0,
        v104_V_we0,
        v104_V_d0,
        v104_V_q0
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] v101_V_address0;
output   v101_V_ce0;
input  [23:0] v101_V_q0;
output  [19:0] v102_V_address0;
output   v102_V_ce0;
input  [23:0] v102_V_q0;
output  [9:0] v103_V_address0;
output   v103_V_ce0;
input  [23:0] v103_V_q0;
output  [13:0] v104_V_address0;
output   v104_V_ce0;
output   v104_V_we0;
output  [23:0] v104_V_d0;
input  [23:0] v104_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v101_V_ce0;
reg v102_V_ce0;
reg v103_V_ce0;
reg[13:0] v104_V_address0;
reg v104_V_ce0;
reg v104_V_we0;
reg[23:0] v104_V_d0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] v106_fu_217_p2;
reg   [3:0] v106_reg_541;
wire    ap_CS_fsm_state2;
wire   [14:0] sub_ln203_fu_247_p2;
reg   [14:0] sub_ln203_reg_546;
wire   [0:0] icmp_ln195_fu_211_p2;
wire   [9:0] v107_fu_259_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] i9_fu_285_p2;
reg   [3:0] i9_reg_562;
wire    ap_CS_fsm_state4;
wire   [14:0] sub_ln203_1_fu_315_p2;
reg   [14:0] sub_ln203_1_reg_567;
wire   [0:0] icmp_ln200_fu_279_p2;
wire   [9:0] j9_fu_327_p2;
reg   [9:0] j9_reg_576;
wire    ap_CS_fsm_state5;
wire   [20:0] sub_ln204_fu_361_p2;
reg   [20:0] sub_ln204_reg_581;
wire   [0:0] icmp_ln201_fu_321_p2;
reg   [13:0] v104_V_addr_1_reg_586;
wire   [9:0] k3_fu_383_p2;
reg   [9:0] k3_reg_594;
wire    ap_CS_fsm_state6;
wire   [14:0] add_ln203_2_fu_397_p2;
reg   [14:0] add_ln203_2_reg_599;
wire   [0:0] icmp_ln202_fu_377_p2;
wire    ap_CS_fsm_state8;
reg   [23:0] v111_V_reg_614;
wire    ap_CS_fsm_state9;
reg   [23:0] v112_V_reg_619;
reg   [23:0] v116_V_reg_624;
wire    ap_CS_fsm_state10;
reg   [23:0] v117_V_reg_629;
wire   [3:0] i10_fu_465_p2;
reg   [3:0] i10_reg_637;
wire    ap_CS_fsm_state12;
wire   [14:0] sub_ln218_fu_495_p2;
reg   [14:0] sub_ln218_reg_642;
wire   [0:0] icmp_ln215_fu_459_p2;
wire   [9:0] j10_fu_507_p2;
reg   [9:0] j10_reg_650;
wire    ap_CS_fsm_state13;
reg   [13:0] v104_V_addr_2_reg_655;
wire   [0:0] icmp_ln216_fu_501_p2;
wire   [23:0] v123_V_fu_532_p2;
reg   [23:0] v123_V_reg_665;
wire    ap_CS_fsm_state14;
reg   [3:0] v106_0_reg_134;
wire   [0:0] icmp_ln196_fu_253_p2;
reg   [9:0] v107_0_reg_145;
reg   [3:0] i9_0_reg_156;
reg   [9:0] j9_0_reg_167;
reg   [9:0] k3_0_reg_178;
wire    ap_CS_fsm_state11;
reg   [3:0] i10_0_reg_189;
reg   [9:0] j10_0_reg_200;
wire    ap_CS_fsm_state15;
wire  signed [63:0] sext_ln203_fu_274_p1;
wire  signed [63:0] sext_ln208_fu_372_p1;
wire  signed [63:0] sext_ln204_fu_407_p1;
wire  signed [63:0] sext_ln203_1_fu_412_p1;
wire  signed [63:0] sext_ln218_fu_527_p1;
wire   [63:0] zext_ln217_fu_513_p1;
wire   [23:0] v118_V_fu_454_p2;
wire    ap_CS_fsm_state7;
wire   [13:0] tmp_54_fu_223_p3;
wire   [11:0] tmp_55_fu_235_p3;
wire   [14:0] zext_ln203_fu_231_p1;
wire   [14:0] zext_ln203_11_fu_243_p1;
wire   [14:0] zext_ln203_14_fu_265_p1;
wire   [14:0] add_ln203_fu_269_p2;
wire   [13:0] tmp_56_fu_291_p3;
wire   [11:0] tmp_57_fu_303_p3;
wire   [14:0] zext_ln203_12_fu_299_p1;
wire   [14:0] zext_ln203_13_fu_311_p1;
wire   [19:0] tmp_60_fu_337_p3;
wire   [17:0] tmp_61_fu_349_p3;
wire   [20:0] zext_ln204_1_fu_345_p1;
wire   [20:0] zext_ln204_2_fu_357_p1;
wire   [14:0] zext_ln204_fu_333_p1;
wire   [14:0] add_ln208_fu_367_p2;
wire   [14:0] zext_ln203_16_fu_393_p1;
wire   [20:0] zext_ln203_15_fu_389_p1;
wire   [20:0] add_ln204_fu_402_p2;
wire   [39:0] v113_V_fu_416_p3;
wire   [39:0] v114_V_fu_423_p3;
wire  signed [39:0] r_V_fu_438_p0;
wire  signed [39:0] r_V_fu_438_p1;
wire   [71:0] r_V_fu_438_p2;
wire   [13:0] tmp_58_fu_471_p3;
wire   [11:0] tmp_59_fu_483_p3;
wire   [14:0] zext_ln218_fu_479_p1;
wire   [14:0] zext_ln218_1_fu_491_p1;
wire   [14:0] zext_ln218_2_fu_518_p1;
wire   [14:0] add_ln218_fu_522_p2;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i10_0_reg_189 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln216_fu_501_p2 == 1'd1))) begin
        i10_0_reg_189 <= i10_reg_637;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_fu_211_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i9_0_reg_156 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_fu_321_p2 == 1'd1))) begin
        i9_0_reg_156 <= i9_reg_562;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j10_0_reg_200 <= j10_reg_650;
    end else if (((icmp_ln215_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        j10_0_reg_200 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln202_fu_377_p2 == 1'd1))) begin
        j9_0_reg_167 <= j9_reg_576;
    end else if (((icmp_ln200_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j9_0_reg_167 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        k3_0_reg_178 <= k3_reg_594;
    end else if (((icmp_ln201_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        k3_0_reg_178 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln196_fu_253_p2 == 1'd1))) begin
        v106_0_reg_134 <= v106_reg_541;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v106_0_reg_134 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_fu_211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v107_0_reg_145 <= 10'd0;
    end else if (((icmp_ln196_fu_253_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v107_0_reg_145 <= v107_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln202_fu_377_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln203_2_reg_599 <= add_ln203_2_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i10_reg_637 <= i10_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i9_reg_562 <= i9_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j10_reg_650 <= j10_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j9_reg_576 <= j9_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k3_reg_594 <= k3_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_fu_279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sub_ln203_1_reg_567[14 : 8] <= sub_ln203_1_fu_315_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_fu_211_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_ln203_reg_546[14 : 8] <= sub_ln203_fu_247_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln201_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sub_ln204_reg_581[20 : 8] <= sub_ln204_fu_361_p2[20 : 8];
        v104_V_addr_1_reg_586 <= sext_ln208_fu_372_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln215_fu_459_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        sub_ln218_reg_642[14 : 8] <= sub_ln218_fu_495_p2[14 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_501_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        v104_V_addr_2_reg_655 <= sext_ln218_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v106_reg_541 <= v106_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v111_V_reg_614 <= v101_V_q0;
        v112_V_reg_619 <= v102_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v116_V_reg_624 <= v104_V_q0;
        v117_V_reg_629 <= {{r_V_fu_438_p2[71:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v123_V_reg_665 <= v123_V_fu_532_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_459_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_459_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v101_V_ce0 = 1'b1;
    end else begin
        v101_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        v102_V_ce0 = 1'b1;
    end else begin
        v102_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v103_V_ce0 = 1'b1;
    end else begin
        v103_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v104_V_address0 = v104_V_addr_2_reg_655;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        v104_V_address0 = sext_ln218_fu_527_p1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        v104_V_address0 = v104_V_addr_1_reg_586;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v104_V_address0 = sext_ln203_fu_274_p1;
    end else begin
        v104_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        v104_V_ce0 = 1'b1;
    end else begin
        v104_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v104_V_d0 = v123_V_reg_665;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        v104_V_d0 = v118_V_fu_454_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        v104_V_d0 = 24'd0;
    end else begin
        v104_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | ((icmp_ln196_fu_253_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        v104_V_we0 = 1'b1;
    end else begin
        v104_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln195_fu_211_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln196_fu_253_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln200_fu_279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln201_fu_321_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln202_fu_377_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_459_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln216_fu_501_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln203_2_fu_397_p2 = (zext_ln203_16_fu_393_p1 + sub_ln203_1_reg_567);

assign add_ln203_fu_269_p2 = (sub_ln203_reg_546 + zext_ln203_14_fu_265_p1);

assign add_ln204_fu_402_p2 = (zext_ln203_15_fu_389_p1 + sub_ln204_reg_581);

assign add_ln208_fu_367_p2 = (sub_ln203_1_reg_567 + zext_ln204_fu_333_p1);

assign add_ln218_fu_522_p2 = (sub_ln218_reg_642 + zext_ln218_2_fu_518_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign i10_fu_465_p2 = (i10_0_reg_189 + 4'd1);

assign i9_fu_285_p2 = (i9_0_reg_156 + 4'd1);

assign icmp_ln195_fu_211_p2 = ((v106_0_reg_134 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln196_fu_253_p2 = ((v107_0_reg_145 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_279_p2 = ((i9_0_reg_156 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln201_fu_321_p2 = ((j9_0_reg_167 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln202_fu_377_p2 = ((k3_0_reg_178 == 10'd768) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_459_p2 = ((i10_0_reg_189 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_501_p2 = ((j10_0_reg_200 == 10'd768) ? 1'b1 : 1'b0);

assign j10_fu_507_p2 = (j10_0_reg_200 + 10'd1);

assign j9_fu_327_p2 = (j9_0_reg_167 + 10'd1);

assign k3_fu_383_p2 = (k3_0_reg_178 + 10'd1);

assign r_V_fu_438_p0 = v113_V_fu_416_p3;

assign r_V_fu_438_p1 = v114_V_fu_423_p3;

assign r_V_fu_438_p2 = ($signed(r_V_fu_438_p0) * $signed(r_V_fu_438_p1));

assign sext_ln203_1_fu_412_p1 = $signed(add_ln203_2_reg_599);

assign sext_ln203_fu_274_p1 = $signed(add_ln203_fu_269_p2);

assign sext_ln204_fu_407_p1 = $signed(add_ln204_fu_402_p2);

assign sext_ln208_fu_372_p1 = $signed(add_ln208_fu_367_p2);

assign sext_ln218_fu_527_p1 = $signed(add_ln218_fu_522_p2);

assign sub_ln203_1_fu_315_p2 = (zext_ln203_12_fu_299_p1 - zext_ln203_13_fu_311_p1);

assign sub_ln203_fu_247_p2 = (zext_ln203_fu_231_p1 - zext_ln203_11_fu_243_p1);

assign sub_ln204_fu_361_p2 = (zext_ln204_1_fu_345_p1 - zext_ln204_2_fu_357_p1);

assign sub_ln218_fu_495_p2 = (zext_ln218_fu_479_p1 - zext_ln218_1_fu_491_p1);

assign tmp_54_fu_223_p3 = {{v106_0_reg_134}, {10'd0}};

assign tmp_55_fu_235_p3 = {{v106_0_reg_134}, {8'd0}};

assign tmp_56_fu_291_p3 = {{i9_0_reg_156}, {10'd0}};

assign tmp_57_fu_303_p3 = {{i9_0_reg_156}, {8'd0}};

assign tmp_58_fu_471_p3 = {{i10_0_reg_189}, {10'd0}};

assign tmp_59_fu_483_p3 = {{i10_0_reg_189}, {8'd0}};

assign tmp_60_fu_337_p3 = {{j9_0_reg_167}, {10'd0}};

assign tmp_61_fu_349_p3 = {{j9_0_reg_167}, {8'd0}};

assign v101_V_address0 = sext_ln203_1_fu_412_p1;

assign v102_V_address0 = sext_ln204_fu_407_p1;

assign v103_V_address0 = zext_ln217_fu_513_p1;

assign v106_fu_217_p2 = (v106_0_reg_134 + 4'd1);

assign v107_fu_259_p2 = (v107_0_reg_145 + 10'd1);

assign v113_V_fu_416_p3 = {{v111_V_reg_614}, {16'd0}};

assign v114_V_fu_423_p3 = {{v112_V_reg_619}, {16'd0}};

assign v118_V_fu_454_p2 = (v116_V_reg_624 + v117_V_reg_629);

assign v123_V_fu_532_p2 = (v104_V_q0 + v103_V_q0);

assign zext_ln203_11_fu_243_p1 = tmp_55_fu_235_p3;

assign zext_ln203_12_fu_299_p1 = tmp_56_fu_291_p3;

assign zext_ln203_13_fu_311_p1 = tmp_57_fu_303_p3;

assign zext_ln203_14_fu_265_p1 = v107_0_reg_145;

assign zext_ln203_15_fu_389_p1 = k3_0_reg_178;

assign zext_ln203_16_fu_393_p1 = k3_0_reg_178;

assign zext_ln203_fu_231_p1 = tmp_54_fu_223_p3;

assign zext_ln204_1_fu_345_p1 = tmp_60_fu_337_p3;

assign zext_ln204_2_fu_357_p1 = tmp_61_fu_349_p3;

assign zext_ln204_fu_333_p1 = j9_0_reg_167;

assign zext_ln217_fu_513_p1 = j10_0_reg_200;

assign zext_ln218_1_fu_491_p1 = tmp_59_fu_483_p3;

assign zext_ln218_2_fu_518_p1 = j10_0_reg_200;

assign zext_ln218_fu_479_p1 = tmp_58_fu_471_p3;

always @ (posedge ap_clk) begin
    sub_ln203_reg_546[7:0] <= 8'b00000000;
    sub_ln203_1_reg_567[7:0] <= 8'b00000000;
    sub_ln204_reg_581[7:0] <= 8'b00000000;
    sub_ln218_reg_642[7:0] <= 8'b00000000;
end

endmodule //Linear_layer_ds0
