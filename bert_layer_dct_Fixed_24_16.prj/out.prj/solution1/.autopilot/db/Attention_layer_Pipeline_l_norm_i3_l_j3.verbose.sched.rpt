

================================================================
== Vitis HLS Report for 'Attention_layer_Pipeline_l_norm_i3_l_j3'
================================================================
* Date:           Sun Sep  3 07:19:49 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.972 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      156|      156|  1.560 us|  1.560 us|  156|  156|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_norm_i3_l_j3  |      154|      154|        12|          1|          1|   144|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.42>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%j3 = alloca i32 1"   --->   Operation 15 'alloca' 'j3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i3 = alloca i32 1"   --->   Operation 16 'alloca' 'i3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%indvar_flatten84 = alloca i32 1"   --->   Operation 17 'alloca' 'indvar_flatten84' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten84"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %i3"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 0, i4 %j3"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body81"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten84_load = load i8 %indvar_flatten84" [kernel.cpp:85]   --->   Operation 22 'load' 'indvar_flatten84_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 23 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.55ns)   --->   "%icmp_ln85 = icmp_eq  i8 %indvar_flatten84_load, i8 144" [kernel.cpp:85]   --->   Operation 24 'icmp' 'icmp_ln85' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (1.91ns)   --->   "%add_ln85_1 = add i8 %indvar_flatten84_load, i8 1" [kernel.cpp:85]   --->   Operation 25 'add' 'add_ln85_1' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln85 = br i1 %icmp_ln85, void %for.inc94, void %for.end96.exitStub" [kernel.cpp:85]   --->   Operation 26 'br' 'br_ln85' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%j3_load = load i4 %j3" [kernel.cpp:86]   --->   Operation 27 'load' 'j3_load' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%i3_load = load i4 %i3" [kernel.cpp:85]   --->   Operation 28 'load' 'i3_load' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.73ns)   --->   "%add_ln85 = add i4 %i3_load, i4 1" [kernel.cpp:85]   --->   Operation 29 'add' 'add_ln85' <Predicate = (!icmp_ln85)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (1.30ns)   --->   "%icmp_ln86 = icmp_eq  i4 %j3_load, i4 12" [kernel.cpp:86]   --->   Operation 30 'icmp' 'icmp_ln86' <Predicate = (!icmp_ln85)> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.02ns)   --->   "%select_ln85 = select i1 %icmp_ln86, i4 0, i4 %j3_load" [kernel.cpp:85]   --->   Operation 31 'select' 'select_ln85' <Predicate = (!icmp_ln85)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.02ns)   --->   "%select_ln85_1 = select i1 %icmp_ln86, i4 %add_ln85, i4 %i3_load" [kernel.cpp:85]   --->   Operation 32 'select' 'select_ln85_1' <Predicate = (!icmp_ln85)> <Delay = 1.02> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_57 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i4.i4, i4 %select_ln85_1, i4 0" [kernel.cpp:90]   --->   Operation 33 'bitconcatenate' 'tmp_57' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_58 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %select_ln85_1, i2 0" [kernel.cpp:90]   --->   Operation 34 'bitconcatenate' 'tmp_58' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i6 %tmp_58" [kernel.cpp:90]   --->   Operation 35 'zext' 'zext_ln90' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln90 = sub i8 %tmp_57, i8 %zext_ln90" [kernel.cpp:90]   --->   Operation 36 'sub' 'sub_ln90' <Predicate = (!icmp_ln85)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln90_1 = zext i4 %select_ln85" [kernel.cpp:90]   --->   Operation 37 'zext' 'zext_ln90_1' <Predicate = (!icmp_ln85)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln90 = add i8 %sub_ln90, i8 %zext_ln90_1" [kernel.cpp:90]   --->   Operation 38 'add' 'add_ln90' <Predicate = (!icmp_ln85)> <Delay = 3.66> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 39 [1/1] (1.73ns)   --->   "%add_ln86 = add i4 %select_ln85, i4 1" [kernel.cpp:86]   --->   Operation 39 'add' 'add_ln86' <Predicate = (!icmp_ln85)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.58ns)   --->   "%store_ln86 = store i8 %add_ln85_1, i8 %indvar_flatten84" [kernel.cpp:86]   --->   Operation 40 'store' 'store_ln86' <Predicate = (!icmp_ln85)> <Delay = 1.58>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln86 = store i4 %select_ln85_1, i4 %i3" [kernel.cpp:86]   --->   Operation 41 'store' 'store_ln86' <Predicate = (!icmp_ln85)> <Delay = 1.58>
ST_1 : Operation 42 [1/1] (1.58ns)   --->   "%store_ln86 = store i4 %add_ln86, i4 %j3" [kernel.cpp:86]   --->   Operation 42 'store' 'store_ln86' <Predicate = (!icmp_ln85)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln90_2 = zext i8 %add_ln90" [kernel.cpp:90]   --->   Operation 43 'zext' 'zext_ln90_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%outp_V_addr = getelementptr i24 %outp_V, i64 0, i64 %zext_ln90_2" [kernel.cpp:87]   --->   Operation 44 'getelementptr' 'outp_V_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [2/2] (3.25ns)   --->   "%v45_V = load i8 %outp_V_addr" [kernel.cpp:87]   --->   Operation 45 'load' 'v45_V' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 144> <RAM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 46 [1/2] (3.25ns)   --->   "%v45_V = load i8 %outp_V_addr" [kernel.cpp:87]   --->   Operation 46 'load' 'v45_V' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 144> <RAM>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%p_Result_69 = bitselect i1 @_ssdm_op_BitSelect.i1.i24.i32, i24 %v45_V, i32 23"   --->   Operation 47 'bitselect' 'p_Result_69' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.56>
ST_4 : Operation 48 [1/1] (2.45ns)   --->   "%icmp_ln1136 = icmp_eq  i24 %v45_V, i24 0"   --->   Operation 48 'icmp' 'icmp_ln1136' <Predicate = true> <Delay = 2.45> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.45> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (2.31ns)   --->   "%tmp_V = sub i24 0, i24 %v45_V"   --->   Operation 49 'sub' 'tmp_V' <Predicate = (p_Result_69)> <Delay = 2.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.69ns)   --->   "%tmp_V_8 = select i1 %p_Result_69, i24 %tmp_V, i24 %v45_V"   --->   Operation 50 'select' 'tmp_V_8' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%p_Result_s = partselect i24 @llvm.part.select.i24, i24 %tmp_V_8, i32 23, i32 0"   --->   Operation 51 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%p_Result_70 = bitconcatenate i25 @_ssdm_op_BitConcatenate.i25.i1.i24, i1 1, i24 %p_Result_s"   --->   Operation 52 'bitconcatenate' 'p_Result_70' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%sext_ln1244 = sext i25 %p_Result_70"   --->   Operation 53 'sext' 'sext_ln1244' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%l = cttz i32 @llvm.cttz.i32, i32 %sext_ln1244, i1 1"   --->   Operation 54 'cttz' 'l' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (2.55ns)   --->   "%sub_ln1145 = sub i32 24, i32 %l"   --->   Operation 55 'sub' 'sub_ln1145' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln1145 = trunc i32 %sub_ln1145"   --->   Operation 56 'trunc' 'trunc_ln1145' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln1148 = trunc i32 %sub_ln1145"   --->   Operation 57 'trunc' 'trunc_ln1148' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln1144 = trunc i32 %l"   --->   Operation 58 'trunc' 'trunc_ln1144' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.00>
ST_5 : Operation 59 [1/1] (2.55ns)   --->   "%lsb_index = add i32 %sub_ln1145, i32 4294967272"   --->   Operation 59 'add' 'lsb_index' <Predicate = (!icmp_ln1136)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%tmp = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %lsb_index, i32 1, i32 31"   --->   Operation 60 'partselect' 'tmp' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (2.47ns)   --->   "%icmp_ln1147 = icmp_sgt  i31 %tmp, i31 0"   --->   Operation 61 'icmp' 'icmp_ln1147' <Predicate = (!icmp_ln1136)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (1.78ns)   --->   "%sub_ln1148 = sub i5 17, i5 %trunc_ln1148"   --->   Operation 62 'sub' 'sub_ln1148' <Predicate = (!icmp_ln1136)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln1148)   --->   "%zext_ln1148 = zext i5 %sub_ln1148"   --->   Operation 63 'zext' 'zext_ln1148' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln1148)   --->   "%lshr_ln1148 = lshr i24 16777215, i24 %zext_ln1148"   --->   Operation 64 'lshr' 'lshr_ln1148' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln1148)   --->   "%p_Result_65 = and i24 %tmp_V_8, i24 %lshr_ln1148"   --->   Operation 65 'and' 'p_Result_65' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (2.66ns) (out node of the LUT)   --->   "%icmp_ln1148 = icmp_ne  i24 %p_Result_65, i24 0"   --->   Operation 66 'icmp' 'icmp_ln1148' <Predicate = (!icmp_ln1136)> <Delay = 2.66> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.45> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln1147, i1 %icmp_ln1148"   --->   Operation 67 'and' 'a' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_59 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %lsb_index, i32 31"   --->   Operation 68 'bitselect' 'tmp_59' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln1150 = xor i1 %tmp_59, i1 1"   --->   Operation 69 'xor' 'xor_ln1150' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (2.31ns)   --->   "%add_ln1150 = add i24 %trunc_ln1145, i24 16777192"   --->   Operation 70 'add' 'add_ln1150' <Predicate = (!icmp_ln1136)> <Delay = 2.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_66 = bitselect i1 @_ssdm_op_BitSelect.i1.i24.i24, i24 %tmp_V_8, i24 %add_ln1150"   --->   Operation 71 'bitselect' 'p_Result_66' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln1150 = and i1 %p_Result_66, i1 %xor_ln1150"   --->   Operation 72 'and' 'and_ln1150' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln1150 = or i1 %and_ln1150, i1 %a"   --->   Operation 73 'or' 'or_ln1150' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 0, i1 %or_ln1150"   --->   Operation 74 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln1136)> <Delay = 0.97>
ST_5 : Operation 75 [1/1] (2.47ns)   --->   "%icmp_ln1159 = icmp_sgt  i32 %lsb_index, i32 0"   --->   Operation 75 'icmp' 'icmp_ln1159' <Predicate = (!icmp_ln1136)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.97>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln1158 = zext i24 %tmp_V_8"   --->   Operation 76 'zext' 'zext_ln1158' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (2.55ns)   --->   "%add_ln1159 = add i32 %sub_ln1145, i32 4294967271"   --->   Operation 77 'add' 'add_ln1159' <Predicate = (!icmp_ln1136 & icmp_ln1159)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node m_15)   --->   "%zext_ln1159 = zext i32 %add_ln1159"   --->   Operation 78 'zext' 'zext_ln1159' <Predicate = (!icmp_ln1136 & icmp_ln1159)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node m_15)   --->   "%lshr_ln1159 = lshr i64 %zext_ln1158, i64 %zext_ln1159"   --->   Operation 79 'lshr' 'lshr_ln1159' <Predicate = (!icmp_ln1136 & icmp_ln1159)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (2.55ns)   --->   "%sub_ln1160 = sub i32 25, i32 %sub_ln1145"   --->   Operation 80 'sub' 'sub_ln1160' <Predicate = (!icmp_ln1136 & !icmp_ln1159)> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node m_15)   --->   "%zext_ln1160 = zext i32 %sub_ln1160"   --->   Operation 81 'zext' 'zext_ln1160' <Predicate = (!icmp_ln1136 & !icmp_ln1159)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node m_15)   --->   "%shl_ln1160 = shl i64 %zext_ln1158, i64 %zext_ln1160"   --->   Operation 82 'shl' 'shl_ln1160' <Predicate = (!icmp_ln1136 & !icmp_ln1159)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node m_15)   --->   "%m_14 = select i1 %icmp_ln1159, i64 %lshr_ln1159, i64 %shl_ln1160"   --->   Operation 83 'select' 'm_14' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node m_15)   --->   "%zext_ln1162 = zext i2 %or_ln"   --->   Operation 84 'zext' 'zext_ln1162' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (4.42ns) (out node of the LUT)   --->   "%m_15 = add i64 %m_14, i64 %zext_ln1162"   --->   Operation 85 'add' 'm_15' <Predicate = (!icmp_ln1136)> <Delay = 4.42> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%m_16 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %m_15, i32 1, i32 63"   --->   Operation 86 'partselect' 'm_16' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%p_Result_67 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %m_15, i32 25"   --->   Operation 87 'bitselect' 'p_Result_67' <Predicate = (!icmp_ln1136)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 4.91>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln1163 = zext i63 %m_16"   --->   Operation 88 'zext' 'zext_ln1163' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (1.24ns)   --->   "%select_ln1144 = select i1 %p_Result_67, i8 127, i8 126"   --->   Operation 89 'select' 'select_ln1144' <Predicate = (!icmp_ln1136)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln1165 = sub i8 8, i8 %trunc_ln1144"   --->   Operation 90 'sub' 'sub_ln1165' <Predicate = (!icmp_ln1136)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 91 [1/1] (3.66ns) (root node of TernaryAdder)   --->   "%add_ln1170 = add i8 %sub_ln1165, i8 %select_ln1144"   --->   Operation 91 'add' 'add_ln1170' <Predicate = (!icmp_ln1136)> <Delay = 3.66> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %p_Result_69, i8 %add_ln1170"   --->   Operation 92 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%p_Result_71 = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln1163, i9 %tmp_s, i32 23, i32 31"   --->   Operation 93 'partset' 'p_Result_71' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%LD = trunc i64 %p_Result_71"   --->   Operation 94 'trunc' 'LD' <Predicate = (!icmp_ln1136)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 5.70>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%bitcast_ln810 = bitcast i32 %LD"   --->   Operation 95 'bitcast' 'bitcast_ln810' <Predicate = (!icmp_ln1136)> <Delay = 0.00>
ST_8 : Operation 96 [4/4] (5.70ns)   --->   "%phitmp = fmul i32 %bitcast_ln810, i32 0.125"   --->   Operation 96 'fmul' 'phitmp' <Predicate = (!icmp_ln1136)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.70>
ST_9 : Operation 97 [3/4] (5.70ns)   --->   "%phitmp = fmul i32 %bitcast_ln810, i32 0.125"   --->   Operation 97 'fmul' 'phitmp' <Predicate = (!icmp_ln1136)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 5.70>
ST_10 : Operation 98 [2/4] (5.70ns)   --->   "%phitmp = fmul i32 %bitcast_ln810, i32 0.125"   --->   Operation 98 'fmul' 'phitmp' <Predicate = (!icmp_ln1136)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.40>
ST_11 : Operation 99 [1/4] (5.70ns)   --->   "%phitmp = fmul i32 %bitcast_ln810, i32 0.125"   --->   Operation 99 'fmul' 'phitmp' <Predicate = (!icmp_ln1136)> <Delay = 5.70> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 5.70> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 100 [1/1] (0.69ns)   --->   "%v47 = select i1 %icmp_ln1136, i32 0, i32 %phitmp"   --->   Operation 100 'select' 'v47' <Predicate = true> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 108 'ret' 'ret_ln0' <Predicate = (icmp_ln85)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @l_norm_i3_l_j3_str"   --->   Operation 101 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 144, i64 144, i64 144"   --->   Operation 102 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 103 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 103 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 104 [1/1] (0.00ns)   --->   "%v25_addr = getelementptr i32 %v25, i64 0, i64 %zext_ln90_2" [kernel.cpp:90]   --->   Operation 104 'getelementptr' 'v25_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 105 [1/1] (0.00ns)   --->   "%specloopname_ln86 = specloopname void @_ssdm_op_SpecLoopName, void @empty" [kernel.cpp:86]   --->   Operation 105 'specloopname' 'specloopname_ln86' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 106 [1/1] (3.25ns)   --->   "%store_ln90 = store i32 %v47, i8 %v25_addr" [kernel.cpp:90]   --->   Operation 106 'store' 'store_ln90' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 144> <RAM>
ST_12 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln86 = br void %for.body81" [kernel.cpp:86]   --->   Operation 107 'br' 'br_ln86' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 6.43ns
The critical path consists of the following:
	'alloca' operation ('i3') [4]  (0 ns)
	'load' operation ('i3_load', kernel.cpp:85) on local variable 'i3' [18]  (0 ns)
	'add' operation ('add_ln85', kernel.cpp:85) [19]  (1.74 ns)
	'select' operation ('select_ln85_1', kernel.cpp:85) [24]  (1.02 ns)
	'sub' operation ('sub_ln90', kernel.cpp:90) [28]  (0 ns)
	'add' operation ('add_ln90', kernel.cpp:90) [31]  (3.67 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('outp_V_addr', kernel.cpp:87) [34]  (0 ns)
	'load' operation ('v45.V', kernel.cpp:87) on array 'outp_V' [36]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('v45.V', kernel.cpp:87) on array 'outp_V' [36]  (3.25 ns)

 <State 4>: 5.56ns
The critical path consists of the following:
	'sub' operation ('tmp.V') [39]  (2.31 ns)
	'select' operation ('tmp.V') [40]  (0.694 ns)
	'cttz' operation ('l') [44]  (0 ns)
	'sub' operation ('sub_ln1145') [45]  (2.55 ns)

 <State 5>: 6ns
The critical path consists of the following:
	'add' operation ('lsb_index') [47]  (2.55 ns)
	'icmp' operation ('icmp_ln1147') [49]  (2.47 ns)
	'and' operation ('a') [56]  (0 ns)
	'or' operation ('or_ln1150') [62]  (0 ns)
	blocking operation 0.978 ns on control path)

 <State 6>: 6.97ns
The critical path consists of the following:
	'add' operation ('add_ln1159') [66]  (2.55 ns)
	'lshr' operation ('lshr_ln1159') [68]  (0 ns)
	'select' operation ('m') [72]  (0 ns)
	'add' operation ('m') [74]  (4.42 ns)

 <State 7>: 4.92ns
The critical path consists of the following:
	'select' operation ('select_ln1144') [78]  (1.25 ns)
	'add' operation ('add_ln1170') [81]  (3.67 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('phitmp') [86]  (5.7 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('phitmp') [86]  (5.7 ns)

 <State 10>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('phitmp') [86]  (5.7 ns)

 <State 11>: 6.4ns
The critical path consists of the following:
	'fmul' operation ('phitmp') [86]  (5.7 ns)
	'select' operation ('v47') [87]  (0.698 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('v25_addr', kernel.cpp:90) [33]  (0 ns)
	'store' operation ('store_ln90', kernel.cpp:90) of variable 'v47' on array 'v25' [88]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
