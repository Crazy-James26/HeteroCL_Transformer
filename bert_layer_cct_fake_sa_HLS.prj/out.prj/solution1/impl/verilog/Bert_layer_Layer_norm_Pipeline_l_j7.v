// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Layer_norm_Pipeline_l_j7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln327,
        v115_address0,
        v115_ce0,
        v115_q0,
        v222_address0,
        v222_ce0,
        v222_q0,
        v145,
        v150,
        v223_address0,
        v223_ce0,
        v223_q0,
        v118_0_address0,
        v118_0_ce0,
        v118_0_we0,
        v118_0_d0,
        v118_1_address0,
        v118_1_ce0,
        v118_1_we0,
        v118_1_d0,
        v118_2_address0,
        v118_2_ce0,
        v118_2_we0,
        v118_2_d0,
        v118_3_address0,
        v118_3_ce0,
        v118_3_we0,
        v118_3_d0,
        v118_4_address0,
        v118_4_ce0,
        v118_4_we0,
        v118_4_d0,
        v118_5_address0,
        v118_5_ce0,
        v118_5_we0,
        v118_5_d0,
        v118_6_address0,
        v118_6_ce0,
        v118_6_we0,
        v118_6_d0,
        v118_7_address0,
        v118_7_ce0,
        v118_7_we0,
        v118_7_d0,
        v118_8_address0,
        v118_8_ce0,
        v118_8_we0,
        v118_8_d0,
        v118_9_address0,
        v118_9_ce0,
        v118_9_we0,
        v118_9_d0,
        v118_10_address0,
        v118_10_ce0,
        v118_10_we0,
        v118_10_d0,
        v118_11_address0,
        v118_11_ce0,
        v118_11_we0,
        v118_11_d0,
        i9,
        grp_fu_437_p_din0,
        grp_fu_437_p_din1,
        grp_fu_437_p_opcode,
        grp_fu_437_p_dout0,
        grp_fu_437_p_ce,
        grp_fu_449_p_din0,
        grp_fu_449_p_din1,
        grp_fu_449_p_opcode,
        grp_fu_449_p_dout0,
        grp_fu_449_p_ce,
        grp_fu_441_p_din0,
        grp_fu_441_p_din1,
        grp_fu_441_p_dout0,
        grp_fu_441_p_ce,
        grp_fu_445_p_din0,
        grp_fu_445_p_din1,
        grp_fu_445_p_dout0,
        grp_fu_445_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] sub_ln327;
output  [13:0] v115_address0;
output   v115_ce0;
input  [31:0] v115_q0;
output  [9:0] v222_address0;
output   v222_ce0;
input  [31:0] v222_q0;
input  [31:0] v145;
input  [31:0] v150;
output  [9:0] v223_address0;
output   v223_ce0;
input  [31:0] v223_q0;
output  [9:0] v118_0_address0;
output   v118_0_ce0;
output   v118_0_we0;
output  [31:0] v118_0_d0;
output  [9:0] v118_1_address0;
output   v118_1_ce0;
output   v118_1_we0;
output  [31:0] v118_1_d0;
output  [9:0] v118_2_address0;
output   v118_2_ce0;
output   v118_2_we0;
output  [31:0] v118_2_d0;
output  [9:0] v118_3_address0;
output   v118_3_ce0;
output   v118_3_we0;
output  [31:0] v118_3_d0;
output  [9:0] v118_4_address0;
output   v118_4_ce0;
output   v118_4_we0;
output  [31:0] v118_4_d0;
output  [9:0] v118_5_address0;
output   v118_5_ce0;
output   v118_5_we0;
output  [31:0] v118_5_d0;
output  [9:0] v118_6_address0;
output   v118_6_ce0;
output   v118_6_we0;
output  [31:0] v118_6_d0;
output  [9:0] v118_7_address0;
output   v118_7_ce0;
output   v118_7_we0;
output  [31:0] v118_7_d0;
output  [9:0] v118_8_address0;
output   v118_8_ce0;
output   v118_8_we0;
output  [31:0] v118_8_d0;
output  [9:0] v118_9_address0;
output   v118_9_ce0;
output   v118_9_we0;
output  [31:0] v118_9_d0;
output  [9:0] v118_10_address0;
output   v118_10_ce0;
output   v118_10_we0;
output  [31:0] v118_10_d0;
output  [9:0] v118_11_address0;
output   v118_11_ce0;
output   v118_11_we0;
output  [31:0] v118_11_d0;
input  [3:0] i9;
output  [31:0] grp_fu_437_p_din0;
output  [31:0] grp_fu_437_p_din1;
output  [0:0] grp_fu_437_p_opcode;
input  [31:0] grp_fu_437_p_dout0;
output   grp_fu_437_p_ce;
output  [31:0] grp_fu_449_p_din0;
output  [31:0] grp_fu_449_p_din1;
output  [1:0] grp_fu_449_p_opcode;
input  [31:0] grp_fu_449_p_dout0;
output   grp_fu_449_p_ce;
output  [31:0] grp_fu_441_p_din0;
output  [31:0] grp_fu_441_p_din1;
input  [31:0] grp_fu_441_p_dout0;
output   grp_fu_441_p_ce;
output  [31:0] grp_fu_445_p_din0;
output  [31:0] grp_fu_445_p_din1;
input  [31:0] grp_fu_445_p_dout0;
output   grp_fu_445_p_ce;

reg ap_idle;
reg v115_ce0;
reg v222_ce0;
reg v223_ce0;
reg v118_0_ce0;
reg v118_0_we0;
reg v118_1_ce0;
reg v118_1_we0;
reg v118_2_ce0;
reg v118_2_we0;
reg v118_3_ce0;
reg v118_3_we0;
reg v118_4_ce0;
reg v118_4_we0;
reg v118_5_ce0;
reg v118_5_we0;
reg v118_6_ce0;
reg v118_6_we0;
reg v118_7_ce0;
reg v118_7_we0;
reg v118_8_ce0;
reg v118_8_we0;
reg v118_9_ce0;
reg v118_9_we0;
reg v118_10_ce0;
reg v118_10_we0;
reg v118_11_ce0;
reg v118_11_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln324_fu_343_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] i9_read_reg_394;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] j7_1_reg_408;
reg   [9:0] j7_1_reg_408_pp0_iter1_reg;
reg   [9:0] j7_1_reg_408_pp0_iter2_reg;
reg   [9:0] j7_1_reg_408_pp0_iter3_reg;
reg   [9:0] j7_1_reg_408_pp0_iter4_reg;
reg   [31:0] v144_reg_422;
wire   [63:0] zext_ln324_fu_375_p1;
reg   [63:0] zext_ln324_reg_427;
reg   [63:0] zext_ln324_reg_427_pp0_iter6_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter7_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter8_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter9_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter10_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter11_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter12_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter13_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter14_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter15_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter16_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter17_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter18_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter19_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter20_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter21_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter22_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter23_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter24_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter25_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter26_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter27_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter28_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter29_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter30_reg;
reg   [63:0] zext_ln324_reg_427_pp0_iter31_reg;
reg   [31:0] v222_load_reg_449;
reg   [31:0] v146_reg_454;
wire   [31:0] v143_fu_379_p1;
reg   [31:0] v147_reg_464;
reg   [31:0] v151_reg_474;
reg   [31:0] v223_load_reg_479;
wire   [31:0] v152_fu_383_p1;
reg   [31:0] v153_reg_489;
wire   [63:0] zext_ln327_1_fu_365_p1;
wire    ap_block_pp0_stage0;
reg   [9:0] j7_fu_96;
wire   [9:0] add_ln324_fu_349_p2;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_j7_1;
wire   [13:0] zext_ln327_fu_355_p1;
wire   [13:0] add_ln327_fu_359_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter31_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln324_fu_343_p2 == 1'd0))) begin
            j7_fu_96 <= add_ln324_fu_349_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j7_fu_96 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        j7_1_reg_408_pp0_iter2_reg <= j7_1_reg_408_pp0_iter1_reg;
        j7_1_reg_408_pp0_iter3_reg <= j7_1_reg_408_pp0_iter2_reg;
        j7_1_reg_408_pp0_iter4_reg <= j7_1_reg_408_pp0_iter3_reg;
        v146_reg_454 <= grp_fu_437_p_dout0;
        v147_reg_464 <= grp_fu_441_p_dout0;
        v151_reg_474 <= grp_fu_445_p_dout0;
        v153_reg_489 <= grp_fu_449_p_dout0;
        v222_load_reg_449 <= v222_q0;
        v223_load_reg_479 <= v223_q0;
        zext_ln324_reg_427[9 : 0] <= zext_ln324_fu_375_p1[9 : 0];
        zext_ln324_reg_427_pp0_iter10_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter9_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter11_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter10_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter12_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter11_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter13_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter12_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter14_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter13_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter15_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter14_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter16_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter15_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter17_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter16_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter18_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter17_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter19_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter18_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter20_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter19_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter21_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter20_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter22_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter21_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter23_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter22_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter24_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter23_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter25_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter24_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter26_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter25_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter27_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter26_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter28_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter27_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter29_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter28_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter30_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter29_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter31_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter30_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter6_reg[9 : 0] <= zext_ln324_reg_427[9 : 0];
        zext_ln324_reg_427_pp0_iter7_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter6_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter8_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter7_reg[9 : 0];
        zext_ln324_reg_427_pp0_iter9_reg[9 : 0] <= zext_ln324_reg_427_pp0_iter8_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        j7_1_reg_408 <= ap_sig_allocacmp_j7_1;
        j7_1_reg_408_pp0_iter1_reg <= j7_1_reg_408;
        v144_reg_422 <= v115_q0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln324_fu_343_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter31_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j7_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_j7_1 = j7_fu_96;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v115_ce0 = 1'b1;
    end else begin
        v115_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_0_ce0 = 1'b1;
    end else begin
        v118_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_0_we0 = 1'b1;
    end else begin
        v118_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_10_ce0 = 1'b1;
    end else begin
        v118_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_10_we0 = 1'b1;
    end else begin
        v118_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_11_ce0 = 1'b1;
    end else begin
        v118_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1) & ((i9_read_reg_394 == 4'd11) | ((i9_read_reg_394 == 4'd12) | ((i9_read_reg_394 == 4'd13) | ((i9_read_reg_394 == 4'd14) | (i9_read_reg_394 == 4'd15))))))) begin
        v118_11_we0 = 1'b1;
    end else begin
        v118_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_1_ce0 = 1'b1;
    end else begin
        v118_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_1_we0 = 1'b1;
    end else begin
        v118_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_2_ce0 = 1'b1;
    end else begin
        v118_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_2_we0 = 1'b1;
    end else begin
        v118_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_3_ce0 = 1'b1;
    end else begin
        v118_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_3_we0 = 1'b1;
    end else begin
        v118_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_4_ce0 = 1'b1;
    end else begin
        v118_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_4_we0 = 1'b1;
    end else begin
        v118_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_5_ce0 = 1'b1;
    end else begin
        v118_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_5_we0 = 1'b1;
    end else begin
        v118_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_6_ce0 = 1'b1;
    end else begin
        v118_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_6_we0 = 1'b1;
    end else begin
        v118_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_7_ce0 = 1'b1;
    end else begin
        v118_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_7_we0 = 1'b1;
    end else begin
        v118_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_8_ce0 = 1'b1;
    end else begin
        v118_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_8_we0 = 1'b1;
    end else begin
        v118_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_9_ce0 = 1'b1;
    end else begin
        v118_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((i9_read_reg_394 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        v118_9_we0 = 1'b1;
    end else begin
        v118_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v222_ce0 = 1'b1;
    end else begin
        v222_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        v223_ce0 = 1'b1;
    end else begin
        v223_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln324_fu_349_p2 = (ap_sig_allocacmp_j7_1 + 10'd1);

assign add_ln327_fu_359_p2 = (sub_ln327 + zext_ln327_fu_355_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_437_p_ce = 1'b1;

assign grp_fu_437_p_din0 = v144_reg_422;

assign grp_fu_437_p_din1 = v145;

assign grp_fu_437_p_opcode = 2'd1;

assign grp_fu_441_p_ce = 1'b1;

assign grp_fu_441_p_din0 = v143_fu_379_p1;

assign grp_fu_441_p_din1 = v146_reg_454;

assign grp_fu_445_p_ce = 1'b1;

assign grp_fu_445_p_din0 = v147_reg_464;

assign grp_fu_445_p_din1 = v150;

assign grp_fu_449_p_ce = 1'b1;

assign grp_fu_449_p_din0 = v151_reg_474;

assign grp_fu_449_p_din1 = v152_fu_383_p1;

assign grp_fu_449_p_opcode = 2'd0;

assign i9_read_reg_394 = i9;

assign icmp_ln324_fu_343_p2 = ((ap_sig_allocacmp_j7_1 == 10'd768) ? 1'b1 : 1'b0);

assign v115_address0 = zext_ln327_1_fu_365_p1;

assign v118_0_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_0_d0 = v153_reg_489;

assign v118_10_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_10_d0 = v153_reg_489;

assign v118_11_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_11_d0 = v153_reg_489;

assign v118_1_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_1_d0 = v153_reg_489;

assign v118_2_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_2_d0 = v153_reg_489;

assign v118_3_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_3_d0 = v153_reg_489;

assign v118_4_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_4_d0 = v153_reg_489;

assign v118_5_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_5_d0 = v153_reg_489;

assign v118_6_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_6_d0 = v153_reg_489;

assign v118_7_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_7_d0 = v153_reg_489;

assign v118_8_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_8_d0 = v153_reg_489;

assign v118_9_address0 = zext_ln324_reg_427_pp0_iter31_reg;

assign v118_9_d0 = v153_reg_489;

assign v143_fu_379_p1 = v222_load_reg_449;

assign v152_fu_383_p1 = v223_load_reg_479;

assign v222_address0 = zext_ln324_fu_375_p1;

assign v223_address0 = zext_ln324_reg_427_pp0_iter24_reg;

assign zext_ln324_fu_375_p1 = j7_1_reg_408_pp0_iter4_reg;

assign zext_ln327_1_fu_365_p1 = add_ln327_fu_359_p2;

assign zext_ln327_fu_355_p1 = ap_sig_allocacmp_j7_1;

always @ (posedge ap_clk) begin
    zext_ln324_reg_427[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter6_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter7_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter8_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter9_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter10_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter11_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter12_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter13_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter14_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter15_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter16_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter17_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter18_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter19_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter20_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter21_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter22_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter23_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter24_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter25_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter26_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter27_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter28_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter29_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter30_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln324_reg_427_pp0_iter31_reg[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Layer_norm_Pipeline_l_j7
