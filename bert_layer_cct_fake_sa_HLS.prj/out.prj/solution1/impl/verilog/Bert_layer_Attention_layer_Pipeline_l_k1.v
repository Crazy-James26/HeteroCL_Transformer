// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Attention_layer_Pipeline_l_k1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v19_3_3_load,
        v19_3_2_load,
        v19_3_1_load,
        v19_3_0_load,
        v19_2_3_load,
        v19_2_2_load,
        v19_2_1_load,
        v19_2_0_load,
        v19_1_3_load,
        v19_1_2_load,
        v19_1_1_load,
        v19_1_0_load,
        v19_0_3_load,
        v19_0_2_load,
        v19_0_1_load,
        v19_0_0_load,
        v19_3_3_address0,
        v19_3_3_ce0,
        v19_3_3_we0,
        v19_3_3_d0,
        empty_101,
        v19_3_2_address0,
        v19_3_2_ce0,
        v19_3_2_we0,
        v19_3_2_d0,
        v19_3_1_address0,
        v19_3_1_ce0,
        v19_3_1_we0,
        v19_3_1_d0,
        v19_3_0_address0,
        v19_3_0_ce0,
        v19_3_0_we0,
        v19_3_0_d0,
        v19_2_3_address0,
        v19_2_3_ce0,
        v19_2_3_we0,
        v19_2_3_d0,
        v19_2_2_address0,
        v19_2_2_ce0,
        v19_2_2_we0,
        v19_2_2_d0,
        v19_2_1_address0,
        v19_2_1_ce0,
        v19_2_1_we0,
        v19_2_1_d0,
        v19_2_0_address0,
        v19_2_0_ce0,
        v19_2_0_we0,
        v19_2_0_d0,
        v19_1_3_address0,
        v19_1_3_ce0,
        v19_1_3_we0,
        v19_1_3_d0,
        v19_1_2_address0,
        v19_1_2_ce0,
        v19_1_2_we0,
        v19_1_2_d0,
        v19_1_1_address0,
        v19_1_1_ce0,
        v19_1_1_we0,
        v19_1_1_d0,
        v19_1_0_address0,
        v19_1_0_ce0,
        v19_1_0_we0,
        v19_1_0_d0,
        v19_0_3_address0,
        v19_0_3_ce0,
        v19_0_3_we0,
        v19_0_3_d0,
        v19_0_2_address0,
        v19_0_2_ce0,
        v19_0_2_we0,
        v19_0_2_d0,
        v19_0_1_address0,
        v19_0_1_ce0,
        v19_0_1_we0,
        v19_0_1_d0,
        v19_0_0_address0,
        v19_0_0_ce0,
        v19_0_0_we0,
        v19_0_0_d0,
        empty,
        v17_0_address0,
        v17_0_ce0,
        v17_0_q0,
        v17_1_address0,
        v17_1_ce0,
        v17_1_q0,
        v17_2_address0,
        v17_2_ce0,
        v17_2_q0,
        v17_3_address0,
        v17_3_ce0,
        v17_3_q0,
        zext_ln80,
        v18_0_address0,
        v18_0_ce0,
        v18_0_q0,
        v18_1_address0,
        v18_1_ce0,
        v18_1_q0,
        v18_2_address0,
        v18_2_ce0,
        v18_2_q0,
        v18_3_address0,
        v18_3_ce0,
        v18_3_q0,
        grp_fu_807_p_din0,
        grp_fu_807_p_din1,
        grp_fu_807_p_opcode,
        grp_fu_807_p_dout0,
        grp_fu_807_p_ce,
        grp_fu_811_p_din0,
        grp_fu_811_p_din1,
        grp_fu_811_p_opcode,
        grp_fu_811_p_dout0,
        grp_fu_811_p_ce,
        grp_fu_815_p_din0,
        grp_fu_815_p_din1,
        grp_fu_815_p_opcode,
        grp_fu_815_p_dout0,
        grp_fu_815_p_ce,
        grp_fu_819_p_din0,
        grp_fu_819_p_din1,
        grp_fu_819_p_opcode,
        grp_fu_819_p_dout0,
        grp_fu_819_p_ce,
        grp_fu_823_p_din0,
        grp_fu_823_p_din1,
        grp_fu_823_p_dout0,
        grp_fu_823_p_ce,
        grp_fu_827_p_din0,
        grp_fu_827_p_din1,
        grp_fu_827_p_dout0,
        grp_fu_827_p_ce,
        grp_fu_831_p_din0,
        grp_fu_831_p_din1,
        grp_fu_831_p_dout0,
        grp_fu_831_p_ce,
        grp_fu_835_p_din0,
        grp_fu_835_p_din1,
        grp_fu_835_p_dout0,
        grp_fu_835_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v19_3_3_load;
input  [31:0] v19_3_2_load;
input  [31:0] v19_3_1_load;
input  [31:0] v19_3_0_load;
input  [31:0] v19_2_3_load;
input  [31:0] v19_2_2_load;
input  [31:0] v19_2_1_load;
input  [31:0] v19_2_0_load;
input  [31:0] v19_1_3_load;
input  [31:0] v19_1_2_load;
input  [31:0] v19_1_1_load;
input  [31:0] v19_1_0_load;
input  [31:0] v19_0_3_load;
input  [31:0] v19_0_2_load;
input  [31:0] v19_0_1_load;
input  [31:0] v19_0_0_load;
output  [3:0] v19_3_3_address0;
output   v19_3_3_ce0;
output   v19_3_3_we0;
output  [31:0] v19_3_3_d0;
input  [3:0] empty_101;
output  [3:0] v19_3_2_address0;
output   v19_3_2_ce0;
output   v19_3_2_we0;
output  [31:0] v19_3_2_d0;
output  [3:0] v19_3_1_address0;
output   v19_3_1_ce0;
output   v19_3_1_we0;
output  [31:0] v19_3_1_d0;
output  [3:0] v19_3_0_address0;
output   v19_3_0_ce0;
output   v19_3_0_we0;
output  [31:0] v19_3_0_d0;
output  [3:0] v19_2_3_address0;
output   v19_2_3_ce0;
output   v19_2_3_we0;
output  [31:0] v19_2_3_d0;
output  [3:0] v19_2_2_address0;
output   v19_2_2_ce0;
output   v19_2_2_we0;
output  [31:0] v19_2_2_d0;
output  [3:0] v19_2_1_address0;
output   v19_2_1_ce0;
output   v19_2_1_we0;
output  [31:0] v19_2_1_d0;
output  [3:0] v19_2_0_address0;
output   v19_2_0_ce0;
output   v19_2_0_we0;
output  [31:0] v19_2_0_d0;
output  [3:0] v19_1_3_address0;
output   v19_1_3_ce0;
output   v19_1_3_we0;
output  [31:0] v19_1_3_d0;
output  [3:0] v19_1_2_address0;
output   v19_1_2_ce0;
output   v19_1_2_we0;
output  [31:0] v19_1_2_d0;
output  [3:0] v19_1_1_address0;
output   v19_1_1_ce0;
output   v19_1_1_we0;
output  [31:0] v19_1_1_d0;
output  [3:0] v19_1_0_address0;
output   v19_1_0_ce0;
output   v19_1_0_we0;
output  [31:0] v19_1_0_d0;
output  [3:0] v19_0_3_address0;
output   v19_0_3_ce0;
output   v19_0_3_we0;
output  [31:0] v19_0_3_d0;
output  [3:0] v19_0_2_address0;
output   v19_0_2_ce0;
output   v19_0_2_we0;
output  [31:0] v19_0_2_d0;
output  [3:0] v19_0_1_address0;
output   v19_0_1_ce0;
output   v19_0_1_we0;
output  [31:0] v19_0_1_d0;
output  [3:0] v19_0_0_address0;
output   v19_0_0_ce0;
output   v19_0_0_we0;
output  [31:0] v19_0_0_d0;
input  [7:0] empty;
output  [7:0] v17_0_address0;
output   v17_0_ce0;
input  [31:0] v17_0_q0;
output  [7:0] v17_1_address0;
output   v17_1_ce0;
input  [31:0] v17_1_q0;
output  [7:0] v17_2_address0;
output   v17_2_ce0;
input  [31:0] v17_2_q0;
output  [7:0] v17_3_address0;
output   v17_3_ce0;
input  [31:0] v17_3_q0;
input  [7:0] zext_ln80;
output  [7:0] v18_0_address0;
output   v18_0_ce0;
input  [31:0] v18_0_q0;
output  [7:0] v18_1_address0;
output   v18_1_ce0;
input  [31:0] v18_1_q0;
output  [7:0] v18_2_address0;
output   v18_2_ce0;
input  [31:0] v18_2_q0;
output  [7:0] v18_3_address0;
output   v18_3_ce0;
input  [31:0] v18_3_q0;
output  [31:0] grp_fu_807_p_din0;
output  [31:0] grp_fu_807_p_din1;
output  [0:0] grp_fu_807_p_opcode;
input  [31:0] grp_fu_807_p_dout0;
output   grp_fu_807_p_ce;
output  [31:0] grp_fu_811_p_din0;
output  [31:0] grp_fu_811_p_din1;
output  [1:0] grp_fu_811_p_opcode;
input  [31:0] grp_fu_811_p_dout0;
output   grp_fu_811_p_ce;
output  [31:0] grp_fu_815_p_din0;
output  [31:0] grp_fu_815_p_din1;
output  [1:0] grp_fu_815_p_opcode;
input  [31:0] grp_fu_815_p_dout0;
output   grp_fu_815_p_ce;
output  [31:0] grp_fu_819_p_din0;
output  [31:0] grp_fu_819_p_din1;
output  [1:0] grp_fu_819_p_opcode;
input  [31:0] grp_fu_819_p_dout0;
output   grp_fu_819_p_ce;
output  [31:0] grp_fu_823_p_din0;
output  [31:0] grp_fu_823_p_din1;
input  [31:0] grp_fu_823_p_dout0;
output   grp_fu_823_p_ce;
output  [31:0] grp_fu_827_p_din0;
output  [31:0] grp_fu_827_p_din1;
input  [31:0] grp_fu_827_p_dout0;
output   grp_fu_827_p_ce;
output  [31:0] grp_fu_831_p_din0;
output  [31:0] grp_fu_831_p_din1;
input  [31:0] grp_fu_831_p_dout0;
output   grp_fu_831_p_ce;
output  [31:0] grp_fu_835_p_din0;
output  [31:0] grp_fu_835_p_din1;
input  [31:0] grp_fu_835_p_dout0;
output   grp_fu_835_p_ce;

reg ap_idle;
reg v19_3_3_ce0;
reg v19_3_3_we0;
reg v19_3_2_ce0;
reg v19_3_2_we0;
reg v19_3_1_ce0;
reg v19_3_1_we0;
reg v19_3_0_ce0;
reg v19_3_0_we0;
reg v19_2_3_ce0;
reg v19_2_3_we0;
reg v19_2_2_ce0;
reg v19_2_2_we0;
reg v19_2_1_ce0;
reg v19_2_1_we0;
reg v19_2_0_ce0;
reg v19_2_0_we0;
reg v19_1_3_ce0;
reg v19_1_3_we0;
reg v19_1_2_ce0;
reg v19_1_2_we0;
reg v19_1_1_ce0;
reg v19_1_1_we0;
reg v19_1_0_ce0;
reg v19_1_0_we0;
reg v19_0_3_ce0;
reg v19_0_3_we0;
reg v19_0_2_ce0;
reg v19_0_2_we0;
reg v19_0_1_ce0;
reg v19_0_1_we0;
reg v19_0_0_ce0;
reg v19_0_0_we0;
reg v17_0_ce0;
reg v17_1_ce0;
reg v17_2_ce0;
reg v17_3_ce0;
reg v18_0_ce0;
reg v18_1_ce0;
reg v18_2_ce0;
reg v18_3_ce0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln73_reg_1100;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_638;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln73_reg_1100_pp0_iter2_reg;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln73_reg_1100_pp0_iter3_reg;
reg   [31:0] reg_646;
reg   [31:0] reg_654;
reg   [31:0] reg_662;
wire   [63:0] p_cast_fu_670_p1;
reg   [63:0] p_cast_reg_1080;
wire   [0:0] icmp_ln73_fu_762_p2;
reg   [0:0] icmp_ln73_reg_1100_pp0_iter1_reg;
wire   [0:0] icmp_ln73_1_fu_806_p2;
reg   [0:0] icmp_ln73_1_reg_1144;
reg   [0:0] icmp_ln73_1_reg_1144_pp0_iter1_reg;
reg   [0:0] icmp_ln73_1_reg_1144_pp0_iter2_reg;
reg   [0:0] icmp_ln73_1_reg_1144_pp0_iter3_reg;
reg   [31:0] v29_reg_1148;
reg   [31:0] v30_reg_1156;
reg   [31:0] v30_1_reg_1161;
reg   [31:0] v30_2_reg_1166;
reg   [31:0] v30_3_reg_1171;
reg   [31:0] v29_1_reg_1176;
reg   [31:0] v29_2_reg_1184;
reg   [31:0] v29_3_reg_1192;
reg   [31:0] v31_reg_1200;
reg   [31:0] v31_1_reg_1205;
reg   [31:0] v31_2_reg_1210;
reg   [31:0] v31_3_reg_1215;
reg   [31:0] v31_4_reg_1240;
reg   [31:0] v31_5_reg_1245;
reg   [31:0] v31_6_reg_1250;
reg   [31:0] v31_7_reg_1255;
reg   [31:0] v31_8_reg_1280;
reg   [31:0] v31_9_reg_1285;
reg   [31:0] v31_10_reg_1290;
reg   [31:0] v31_11_reg_1295;
reg   [31:0] v31_12_reg_1320;
reg   [31:0] v31_13_reg_1325;
reg   [31:0] v31_14_reg_1330;
reg   [31:0] v31_15_reg_1335;
reg   [3:0] v19_3_3_addr_reg_1360;
reg   [3:0] v19_3_2_addr_reg_1365;
reg   [3:0] v19_3_1_addr_reg_1370;
reg   [3:0] v19_3_0_addr_reg_1375;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter3_stage1;
wire    ap_block_pp0_stage2_subdone;
wire   [63:0] p_cast1_fu_784_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln80_1_fu_798_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage1;
reg   [6:0] k1_fu_116;
wire   [6:0] add_ln73_fu_768_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_k1_1;
reg   [31:0] v32_fu_120;
reg   [31:0] ap_sig_allocacmp_v32_load;
wire    ap_block_pp0_stage2;
reg   [31:0] v32_1_fu_124;
reg   [31:0] ap_sig_allocacmp_v32_1_load;
reg   [31:0] v32_2_fu_128;
reg   [31:0] ap_sig_allocacmp_v32_2_load;
reg   [31:0] v32_3_fu_132;
reg   [31:0] ap_sig_allocacmp_v32_3_load;
reg   [31:0] v32_4_fu_136;
reg   [31:0] ap_sig_allocacmp_v32_4_load;
reg   [31:0] v32_5_fu_140;
reg   [31:0] ap_sig_allocacmp_v32_5_load;
reg   [31:0] v32_6_fu_144;
reg   [31:0] ap_sig_allocacmp_v32_6_load;
reg   [31:0] v32_7_fu_148;
reg   [31:0] ap_sig_allocacmp_v32_7_load;
reg   [31:0] v32_8_fu_152;
reg   [31:0] ap_sig_allocacmp_v32_8_load;
reg   [31:0] v32_9_fu_156;
reg   [31:0] ap_sig_allocacmp_v32_9_load;
reg   [31:0] v32_10_fu_160;
reg   [31:0] ap_sig_allocacmp_v32_10_load;
reg   [31:0] v32_11_fu_164;
reg   [31:0] ap_sig_allocacmp_v32_11_load;
reg   [31:0] v32_12_fu_168;
reg   [31:0] ap_sig_allocacmp_v32_12_load;
reg   [31:0] v32_13_fu_172;
reg   [31:0] ap_sig_allocacmp_v32_13_load;
reg   [31:0] v32_14_fu_176;
reg   [31:0] ap_sig_allocacmp_v32_14_load;
reg   [31:0] v32_15_fu_180;
reg   [31:0] ap_sig_allocacmp_v32_15_load;
reg   [31:0] grp_fu_606_p0;
reg   [31:0] grp_fu_606_p1;
reg   [31:0] grp_fu_610_p0;
reg   [31:0] grp_fu_610_p1;
reg   [31:0] grp_fu_614_p0;
reg   [31:0] grp_fu_614_p1;
reg   [31:0] grp_fu_618_p0;
reg   [31:0] grp_fu_618_p1;
reg   [31:0] grp_fu_622_p0;
reg   [31:0] grp_fu_626_p0;
reg   [31:0] grp_fu_630_p0;
reg   [31:0] grp_fu_634_p0;
wire   [7:0] k1_cast_fu_774_p1;
wire   [7:0] empty_382_fu_778_p2;
wire   [7:0] add_ln80_fu_792_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter3_stage1) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1)))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln73_fu_762_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k1_fu_116 <= add_ln73_fu_768_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k1_fu_116 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v32_10_fu_160 <= v19_2_2_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0))) begin
            v32_10_fu_160 <= grp_fu_815_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v32_11_fu_164 <= v19_2_3_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0))) begin
            v32_11_fu_164 <= grp_fu_819_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_12_fu_168 <= v19_3_0_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v32_12_fu_168 <= grp_fu_807_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_13_fu_172 <= v19_3_1_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v32_13_fu_172 <= grp_fu_811_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_14_fu_176 <= v19_3_2_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v32_14_fu_176 <= grp_fu_815_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_15_fu_180 <= v19_3_3_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v32_15_fu_180 <= grp_fu_819_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_1_fu_124 <= v19_0_1_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v32_1_fu_124 <= grp_fu_811_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_2_fu_128 <= v19_0_2_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v32_2_fu_128 <= grp_fu_815_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_3_fu_132 <= v19_0_3_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v32_3_fu_132 <= grp_fu_819_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_4_fu_136 <= v19_1_0_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v32_4_fu_136 <= grp_fu_807_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_5_fu_140 <= v19_1_1_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v32_5_fu_140 <= grp_fu_811_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_6_fu_144 <= v19_1_2_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v32_6_fu_144 <= grp_fu_815_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_7_fu_148 <= v19_1_3_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v32_7_fu_148 <= grp_fu_819_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v32_8_fu_152 <= v19_2_0_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0))) begin
            v32_8_fu_152 <= grp_fu_807_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v32_9_fu_156 <= v19_2_1_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0))) begin
            v32_9_fu_156 <= grp_fu_811_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v32_fu_120 <= v19_0_0_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v32_fu_120 <= grp_fu_807_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln73_1_reg_1144 <= icmp_ln73_1_fu_806_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln73_1_reg_1144_pp0_iter1_reg <= icmp_ln73_1_reg_1144;
        icmp_ln73_1_reg_1144_pp0_iter2_reg <= icmp_ln73_1_reg_1144_pp0_iter1_reg;
        icmp_ln73_1_reg_1144_pp0_iter3_reg <= icmp_ln73_1_reg_1144_pp0_iter2_reg;
        icmp_ln73_reg_1100 <= icmp_ln73_fu_762_p2;
        icmp_ln73_reg_1100_pp0_iter1_reg <= icmp_ln73_reg_1100;
        icmp_ln73_reg_1100_pp0_iter2_reg <= icmp_ln73_reg_1100_pp0_iter1_reg;
        icmp_ln73_reg_1100_pp0_iter3_reg <= icmp_ln73_reg_1100_pp0_iter2_reg;
        p_cast_reg_1080[3 : 0] <= p_cast_fu_670_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_638 <= grp_fu_807_p_dout0;
        reg_646 <= grp_fu_811_p_dout0;
        reg_654 <= grp_fu_815_p_dout0;
        reg_662 <= grp_fu_819_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_3_0_addr_reg_1375 <= p_cast_reg_1080;
        v19_3_1_addr_reg_1370 <= p_cast_reg_1080;
        v19_3_2_addr_reg_1365 <= p_cast_reg_1080;
        v19_3_3_addr_reg_1360 <= p_cast_reg_1080;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_reg_1100 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v29_1_reg_1176 <= v17_1_q0;
        v29_2_reg_1184 <= v17_2_q0;
        v29_3_reg_1192 <= v17_3_q0;
        v29_reg_1148 <= v17_0_q0;
        v30_1_reg_1161 <= v18_1_q0;
        v30_2_reg_1166 <= v18_2_q0;
        v30_3_reg_1171 <= v18_3_q0;
        v30_reg_1156 <= v18_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln73_reg_1100_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v31_10_reg_1290 <= grp_fu_831_p_dout0;
        v31_11_reg_1295 <= grp_fu_835_p_dout0;
        v31_8_reg_1280 <= grp_fu_823_p_dout0;
        v31_9_reg_1285 <= grp_fu_827_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_reg_1100_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v31_12_reg_1320 <= grp_fu_823_p_dout0;
        v31_13_reg_1325 <= grp_fu_827_p_dout0;
        v31_14_reg_1330 <= grp_fu_831_p_dout0;
        v31_15_reg_1335 <= grp_fu_835_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln73_reg_1100_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v31_1_reg_1205 <= grp_fu_827_p_dout0;
        v31_2_reg_1210 <= grp_fu_831_p_dout0;
        v31_3_reg_1215 <= grp_fu_835_p_dout0;
        v31_reg_1200 <= grp_fu_823_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln73_reg_1100_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v31_4_reg_1240 <= grp_fu_823_p_dout0;
        v31_5_reg_1245 <= grp_fu_827_p_dout0;
        v31_6_reg_1250 <= grp_fu_831_p_dout0;
        v31_7_reg_1255 <= grp_fu_835_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln73_reg_1100 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k1_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_k1_1 = k1_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v32_10_load = grp_fu_815_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_10_load = v32_10_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v32_11_load = grp_fu_819_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_11_load = v32_11_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v32_12_load = grp_fu_807_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_12_load = v32_12_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v32_13_load = grp_fu_811_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_13_load = v32_13_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v32_14_load = grp_fu_815_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_14_load = v32_14_fu_176;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v32_15_load = grp_fu_819_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_15_load = v32_15_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v32_1_load = grp_fu_811_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_1_load = v32_1_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v32_2_load = grp_fu_815_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_2_load = v32_2_fu_128;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v32_3_load = grp_fu_819_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_3_load = v32_3_fu_132;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v32_4_load = grp_fu_807_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_4_load = v32_4_fu_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v32_5_load = grp_fu_811_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_5_load = v32_5_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v32_6_load = grp_fu_815_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_6_load = v32_6_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v32_7_load = grp_fu_819_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_7_load = v32_7_fu_148;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v32_8_load = grp_fu_807_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_8_load = v32_8_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v32_9_load = grp_fu_811_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_9_load = v32_9_fu_156;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v32_load = grp_fu_807_p_dout0;
    end else begin
        ap_sig_allocacmp_v32_load = v32_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_606_p0 = ap_sig_allocacmp_v32_12_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_606_p0 = ap_sig_allocacmp_v32_8_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_606_p0 = ap_sig_allocacmp_v32_4_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_606_p0 = ap_sig_allocacmp_v32_load;
    end else begin
        grp_fu_606_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_606_p1 = v31_12_reg_1320;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_606_p1 = v31_8_reg_1280;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_606_p1 = v31_4_reg_1240;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_606_p1 = v31_reg_1200;
    end else begin
        grp_fu_606_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_610_p0 = ap_sig_allocacmp_v32_13_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_610_p0 = ap_sig_allocacmp_v32_9_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_610_p0 = ap_sig_allocacmp_v32_5_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_610_p0 = ap_sig_allocacmp_v32_1_load;
    end else begin
        grp_fu_610_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_610_p1 = v31_13_reg_1325;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_610_p1 = v31_9_reg_1285;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_610_p1 = v31_5_reg_1245;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_610_p1 = v31_1_reg_1205;
    end else begin
        grp_fu_610_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_614_p0 = ap_sig_allocacmp_v32_14_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_614_p0 = ap_sig_allocacmp_v32_10_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_614_p0 = ap_sig_allocacmp_v32_6_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_614_p0 = ap_sig_allocacmp_v32_2_load;
    end else begin
        grp_fu_614_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_614_p1 = v31_14_reg_1330;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_614_p1 = v31_10_reg_1290;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_614_p1 = v31_6_reg_1250;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_614_p1 = v31_2_reg_1210;
    end else begin
        grp_fu_614_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_618_p0 = ap_sig_allocacmp_v32_15_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_618_p0 = ap_sig_allocacmp_v32_11_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_618_p0 = ap_sig_allocacmp_v32_7_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_618_p0 = ap_sig_allocacmp_v32_3_load;
    end else begin
        grp_fu_618_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_618_p1 = v31_15_reg_1335;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_618_p1 = v31_11_reg_1295;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_618_p1 = v31_7_reg_1255;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_618_p1 = v31_3_reg_1215;
    end else begin
        grp_fu_618_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_622_p0 = v29_3_reg_1192;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_622_p0 = v29_2_reg_1184;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_622_p0 = v29_1_reg_1176;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_622_p0 = v29_reg_1148;
    end else begin
        grp_fu_622_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_626_p0 = v29_3_reg_1192;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_626_p0 = v29_2_reg_1184;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_626_p0 = v29_1_reg_1176;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_626_p0 = v29_reg_1148;
    end else begin
        grp_fu_626_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_630_p0 = v29_3_reg_1192;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_630_p0 = v29_2_reg_1184;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_630_p0 = v29_1_reg_1176;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_630_p0 = v29_reg_1148;
    end else begin
        grp_fu_630_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_634_p0 = v29_3_reg_1192;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_634_p0 = v29_2_reg_1184;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_634_p0 = v29_1_reg_1176;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_634_p0 = v29_reg_1148;
    end else begin
        grp_fu_634_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v17_0_ce0 = 1'b1;
    end else begin
        v17_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v17_1_ce0 = 1'b1;
    end else begin
        v17_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v17_2_ce0 = 1'b1;
    end else begin
        v17_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v17_3_ce0 = 1'b1;
    end else begin
        v17_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v18_0_ce0 = 1'b1;
    end else begin
        v18_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v18_1_ce0 = 1'b1;
    end else begin
        v18_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v18_2_ce0 = 1'b1;
    end else begin
        v18_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v18_3_ce0 = 1'b1;
    end else begin
        v18_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_0_ce0 = 1'b1;
    end else begin
        v19_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_0_we0 = 1'b1;
    end else begin
        v19_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_1_ce0 = 1'b1;
    end else begin
        v19_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_1_we0 = 1'b1;
    end else begin
        v19_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_2_ce0 = 1'b1;
    end else begin
        v19_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_2_we0 = 1'b1;
    end else begin
        v19_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_3_ce0 = 1'b1;
    end else begin
        v19_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v19_0_3_we0 = 1'b1;
    end else begin
        v19_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_0_ce0 = 1'b1;
    end else begin
        v19_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_0_we0 = 1'b1;
    end else begin
        v19_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_1_ce0 = 1'b1;
    end else begin
        v19_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_1_we0 = 1'b1;
    end else begin
        v19_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_2_ce0 = 1'b1;
    end else begin
        v19_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_2_we0 = 1'b1;
    end else begin
        v19_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_3_ce0 = 1'b1;
    end else begin
        v19_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln73_1_reg_1144_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v19_1_3_we0 = 1'b1;
    end else begin
        v19_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_0_ce0 = 1'b1;
    end else begin
        v19_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_0_we0 = 1'b1;
    end else begin
        v19_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_1_ce0 = 1'b1;
    end else begin
        v19_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_1_we0 = 1'b1;
    end else begin
        v19_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_2_ce0 = 1'b1;
    end else begin
        v19_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_2_we0 = 1'b1;
    end else begin
        v19_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_3_ce0 = 1'b1;
    end else begin
        v19_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v19_2_3_we0 = 1'b1;
    end else begin
        v19_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_0_ce0 = 1'b1;
    end else begin
        v19_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_0_we0 = 1'b1;
    end else begin
        v19_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_1_ce0 = 1'b1;
    end else begin
        v19_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_1_we0 = 1'b1;
    end else begin
        v19_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_2_ce0 = 1'b1;
    end else begin
        v19_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_2_we0 = 1'b1;
    end else begin
        v19_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_3_ce0 = 1'b1;
    end else begin
        v19_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln73_1_reg_1144_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln73_reg_1100_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v19_3_3_we0 = 1'b1;
    end else begin
        v19_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln73_fu_768_p2 = (ap_sig_allocacmp_k1_1 + 7'd1);

assign add_ln80_fu_792_p2 = (zext_ln80 + k1_cast_fu_774_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign empty_382_fu_778_p2 = (empty + k1_cast_fu_774_p1);

assign grp_fu_807_p_ce = 1'b1;

assign grp_fu_807_p_din0 = grp_fu_606_p0;

assign grp_fu_807_p_din1 = grp_fu_606_p1;

assign grp_fu_807_p_opcode = 2'd0;

assign grp_fu_811_p_ce = 1'b1;

assign grp_fu_811_p_din0 = grp_fu_610_p0;

assign grp_fu_811_p_din1 = grp_fu_610_p1;

assign grp_fu_811_p_opcode = 2'd0;

assign grp_fu_815_p_ce = 1'b1;

assign grp_fu_815_p_din0 = grp_fu_614_p0;

assign grp_fu_815_p_din1 = grp_fu_614_p1;

assign grp_fu_815_p_opcode = 2'd0;

assign grp_fu_819_p_ce = 1'b1;

assign grp_fu_819_p_din0 = grp_fu_618_p0;

assign grp_fu_819_p_din1 = grp_fu_618_p1;

assign grp_fu_819_p_opcode = 2'd0;

assign grp_fu_823_p_ce = 1'b1;

assign grp_fu_823_p_din0 = grp_fu_622_p0;

assign grp_fu_823_p_din1 = v30_reg_1156;

assign grp_fu_827_p_ce = 1'b1;

assign grp_fu_827_p_din0 = grp_fu_626_p0;

assign grp_fu_827_p_din1 = v30_1_reg_1161;

assign grp_fu_831_p_ce = 1'b1;

assign grp_fu_831_p_din0 = grp_fu_630_p0;

assign grp_fu_831_p_din1 = v30_2_reg_1166;

assign grp_fu_835_p_ce = 1'b1;

assign grp_fu_835_p_din0 = grp_fu_634_p0;

assign grp_fu_835_p_din1 = v30_3_reg_1171;

assign icmp_ln73_1_fu_806_p2 = ((add_ln73_fu_768_p2 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_762_p2 = ((ap_sig_allocacmp_k1_1 == 7'd64) ? 1'b1 : 1'b0);

assign k1_cast_fu_774_p1 = ap_sig_allocacmp_k1_1;

assign p_cast1_fu_784_p1 = empty_382_fu_778_p2;

assign p_cast_fu_670_p1 = empty_101;

assign v17_0_address0 = p_cast1_fu_784_p1;

assign v17_1_address0 = p_cast1_fu_784_p1;

assign v17_2_address0 = p_cast1_fu_784_p1;

assign v17_3_address0 = p_cast1_fu_784_p1;

assign v18_0_address0 = zext_ln80_1_fu_798_p1;

assign v18_1_address0 = zext_ln80_1_fu_798_p1;

assign v18_2_address0 = zext_ln80_1_fu_798_p1;

assign v18_3_address0 = zext_ln80_1_fu_798_p1;

assign v19_0_0_address0 = p_cast_reg_1080;

assign v19_0_0_d0 = reg_638;

assign v19_0_1_address0 = p_cast_reg_1080;

assign v19_0_1_d0 = reg_646;

assign v19_0_2_address0 = p_cast_reg_1080;

assign v19_0_2_d0 = reg_654;

assign v19_0_3_address0 = p_cast_reg_1080;

assign v19_0_3_d0 = reg_662;

assign v19_1_0_address0 = p_cast_reg_1080;

assign v19_1_0_d0 = reg_638;

assign v19_1_1_address0 = p_cast_reg_1080;

assign v19_1_1_d0 = reg_646;

assign v19_1_2_address0 = p_cast_reg_1080;

assign v19_1_2_d0 = reg_654;

assign v19_1_3_address0 = p_cast_reg_1080;

assign v19_1_3_d0 = reg_662;

assign v19_2_0_address0 = p_cast_reg_1080;

assign v19_2_0_d0 = reg_638;

assign v19_2_1_address0 = p_cast_reg_1080;

assign v19_2_1_d0 = reg_646;

assign v19_2_2_address0 = p_cast_reg_1080;

assign v19_2_2_d0 = reg_654;

assign v19_2_3_address0 = p_cast_reg_1080;

assign v19_2_3_d0 = reg_662;

assign v19_3_0_address0 = v19_3_0_addr_reg_1375;

assign v19_3_0_d0 = reg_638;

assign v19_3_1_address0 = v19_3_1_addr_reg_1370;

assign v19_3_1_d0 = reg_646;

assign v19_3_2_address0 = v19_3_2_addr_reg_1365;

assign v19_3_2_d0 = reg_654;

assign v19_3_3_address0 = v19_3_3_addr_reg_1360;

assign v19_3_3_d0 = reg_662;

assign zext_ln80_1_fu_798_p1 = add_ln80_fu_792_p2;

always @ (posedge ap_clk) begin
    p_cast_reg_1080[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Attention_layer_Pipeline_l_k1
