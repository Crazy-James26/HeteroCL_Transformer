// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Softmax_layer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v38_0_0_address0,
        v38_0_0_ce0,
        v38_0_0_we0,
        v38_0_0_d0,
        v38_0_0_q0,
        v38_0_1_address0,
        v38_0_1_ce0,
        v38_0_1_we0,
        v38_0_1_d0,
        v38_0_1_q0,
        v38_0_2_address0,
        v38_0_2_ce0,
        v38_0_2_we0,
        v38_0_2_d0,
        v38_0_2_q0,
        v38_0_3_address0,
        v38_0_3_ce0,
        v38_0_3_we0,
        v38_0_3_d0,
        v38_0_3_q0,
        v38_1_0_address0,
        v38_1_0_ce0,
        v38_1_0_we0,
        v38_1_0_d0,
        v38_1_0_q0,
        v38_1_1_address0,
        v38_1_1_ce0,
        v38_1_1_we0,
        v38_1_1_d0,
        v38_1_1_q0,
        v38_1_2_address0,
        v38_1_2_ce0,
        v38_1_2_we0,
        v38_1_2_d0,
        v38_1_2_q0,
        v38_1_3_address0,
        v38_1_3_ce0,
        v38_1_3_we0,
        v38_1_3_d0,
        v38_1_3_q0,
        v38_2_0_address0,
        v38_2_0_ce0,
        v38_2_0_we0,
        v38_2_0_d0,
        v38_2_0_q0,
        v38_2_1_address0,
        v38_2_1_ce0,
        v38_2_1_we0,
        v38_2_1_d0,
        v38_2_1_q0,
        v38_2_2_address0,
        v38_2_2_ce0,
        v38_2_2_we0,
        v38_2_2_d0,
        v38_2_2_q0,
        v38_2_3_address0,
        v38_2_3_ce0,
        v38_2_3_we0,
        v38_2_3_d0,
        v38_2_3_q0,
        v38_3_0_address0,
        v38_3_0_ce0,
        v38_3_0_we0,
        v38_3_0_d0,
        v38_3_0_q0,
        v38_3_1_address0,
        v38_3_1_ce0,
        v38_3_1_we0,
        v38_3_1_d0,
        v38_3_1_q0,
        v38_3_2_address0,
        v38_3_2_ce0,
        v38_3_2_we0,
        v38_3_2_d0,
        v38_3_2_q0,
        v38_3_3_address0,
        v38_3_3_ce0,
        v38_3_3_we0,
        v38_3_3_d0,
        v38_3_3_q0,
        v39_0_address0,
        v39_0_ce0,
        v39_0_we0,
        v39_0_d0,
        v39_1_address0,
        v39_1_ce0,
        v39_1_we0,
        v39_1_d0,
        v39_2_address0,
        v39_2_ce0,
        v39_2_we0,
        v39_2_d0,
        v39_3_address0,
        v39_3_ce0,
        v39_3_we0,
        v39_3_d0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_pp0_stage0 = 14'd4;
parameter    ap_ST_fsm_pp0_stage1 = 14'd8;
parameter    ap_ST_fsm_pp0_stage2 = 14'd16;
parameter    ap_ST_fsm_pp0_stage3 = 14'd32;
parameter    ap_ST_fsm_pp0_stage4 = 14'd64;
parameter    ap_ST_fsm_pp0_stage5 = 14'd128;
parameter    ap_ST_fsm_pp0_stage6 = 14'd256;
parameter    ap_ST_fsm_pp0_stage7 = 14'd512;
parameter    ap_ST_fsm_pp0_stage8 = 14'd1024;
parameter    ap_ST_fsm_state17 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 14'd4096;
parameter    ap_ST_fsm_state37 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] v38_0_0_address0;
output   v38_0_0_ce0;
output   v38_0_0_we0;
output  [31:0] v38_0_0_d0;
input  [31:0] v38_0_0_q0;
output  [3:0] v38_0_1_address0;
output   v38_0_1_ce0;
output   v38_0_1_we0;
output  [31:0] v38_0_1_d0;
input  [31:0] v38_0_1_q0;
output  [3:0] v38_0_2_address0;
output   v38_0_2_ce0;
output   v38_0_2_we0;
output  [31:0] v38_0_2_d0;
input  [31:0] v38_0_2_q0;
output  [3:0] v38_0_3_address0;
output   v38_0_3_ce0;
output   v38_0_3_we0;
output  [31:0] v38_0_3_d0;
input  [31:0] v38_0_3_q0;
output  [3:0] v38_1_0_address0;
output   v38_1_0_ce0;
output   v38_1_0_we0;
output  [31:0] v38_1_0_d0;
input  [31:0] v38_1_0_q0;
output  [3:0] v38_1_1_address0;
output   v38_1_1_ce0;
output   v38_1_1_we0;
output  [31:0] v38_1_1_d0;
input  [31:0] v38_1_1_q0;
output  [3:0] v38_1_2_address0;
output   v38_1_2_ce0;
output   v38_1_2_we0;
output  [31:0] v38_1_2_d0;
input  [31:0] v38_1_2_q0;
output  [3:0] v38_1_3_address0;
output   v38_1_3_ce0;
output   v38_1_3_we0;
output  [31:0] v38_1_3_d0;
input  [31:0] v38_1_3_q0;
output  [3:0] v38_2_0_address0;
output   v38_2_0_ce0;
output   v38_2_0_we0;
output  [31:0] v38_2_0_d0;
input  [31:0] v38_2_0_q0;
output  [3:0] v38_2_1_address0;
output   v38_2_1_ce0;
output   v38_2_1_we0;
output  [31:0] v38_2_1_d0;
input  [31:0] v38_2_1_q0;
output  [3:0] v38_2_2_address0;
output   v38_2_2_ce0;
output   v38_2_2_we0;
output  [31:0] v38_2_2_d0;
input  [31:0] v38_2_2_q0;
output  [3:0] v38_2_3_address0;
output   v38_2_3_ce0;
output   v38_2_3_we0;
output  [31:0] v38_2_3_d0;
input  [31:0] v38_2_3_q0;
output  [3:0] v38_3_0_address0;
output   v38_3_0_ce0;
output   v38_3_0_we0;
output  [31:0] v38_3_0_d0;
input  [31:0] v38_3_0_q0;
output  [3:0] v38_3_1_address0;
output   v38_3_1_ce0;
output   v38_3_1_we0;
output  [31:0] v38_3_1_d0;
input  [31:0] v38_3_1_q0;
output  [3:0] v38_3_2_address0;
output   v38_3_2_ce0;
output   v38_3_2_we0;
output  [31:0] v38_3_2_d0;
input  [31:0] v38_3_2_q0;
output  [3:0] v38_3_3_address0;
output   v38_3_3_ce0;
output   v38_3_3_we0;
output  [31:0] v38_3_3_d0;
input  [31:0] v38_3_3_q0;
output  [5:0] v39_0_address0;
output   v39_0_ce0;
output   v39_0_we0;
output  [31:0] v39_0_d0;
output  [5:0] v39_1_address0;
output   v39_1_ce0;
output   v39_1_we0;
output  [31:0] v39_1_d0;
output  [5:0] v39_2_address0;
output   v39_2_ce0;
output   v39_2_we0;
output  [31:0] v39_2_d0;
output  [5:0] v39_3_address0;
output   v39_3_ce0;
output   v39_3_we0;
output  [31:0] v39_3_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] v38_0_0_address0;
reg v38_0_0_ce0;
reg v38_0_0_we0;
reg[3:0] v38_0_1_address0;
reg v38_0_1_ce0;
reg v38_0_1_we0;
reg[3:0] v38_0_2_address0;
reg v38_0_2_ce0;
reg v38_0_2_we0;
reg[3:0] v38_0_3_address0;
reg v38_0_3_ce0;
reg v38_0_3_we0;
reg[3:0] v38_1_0_address0;
reg v38_1_0_ce0;
reg v38_1_0_we0;
reg[3:0] v38_1_1_address0;
reg v38_1_1_ce0;
reg v38_1_1_we0;
reg[3:0] v38_1_2_address0;
reg v38_1_2_ce0;
reg v38_1_2_we0;
reg[3:0] v38_1_3_address0;
reg v38_1_3_ce0;
reg v38_1_3_we0;
reg[3:0] v38_2_0_address0;
reg v38_2_0_ce0;
reg v38_2_0_we0;
reg[3:0] v38_2_1_address0;
reg v38_2_1_ce0;
reg v38_2_1_we0;
reg[3:0] v38_2_2_address0;
reg v38_2_2_ce0;
reg v38_2_2_we0;
reg[3:0] v38_2_3_address0;
reg v38_2_3_ce0;
reg v38_2_3_we0;
reg[3:0] v38_3_0_address0;
reg v38_3_0_ce0;
reg v38_3_0_we0;
reg[3:0] v38_3_1_address0;
reg v38_3_1_ce0;
reg v38_3_1_we0;
reg[3:0] v38_3_2_address0;
reg v38_3_2_ce0;
reg v38_3_2_we0;
reg[3:0] v38_3_3_address0;
reg v38_3_3_ce0;
reg v38_3_3_we0;
reg v39_0_ce0;
reg v39_0_we0;
reg v39_1_ce0;
reg v39_1_we0;
reg v39_2_ce0;
reg v39_2_we0;
reg v39_3_ce0;
reg v39_3_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] indvar_flatten_reg_536;
reg   [3:0] i3_0_reg_547;
reg   [3:0] j2_0_reg_558;
reg   [7:0] indvar_flatten14_reg_569;
reg   [3:0] i4_0_reg_580;
reg   [3:0] j3_0_reg_591;
wire   [31:0] inp_sumRow_q0;
reg   [31:0] reg_633;
wire    ap_CS_fsm_pp0_stage6;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln113_reg_1060;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
wire    ap_block_state22_pp1_stage0_iter4;
wire    ap_block_state23_pp1_stage0_iter5;
wire    ap_block_state24_pp1_stage0_iter6;
wire    ap_block_state25_pp1_stage0_iter7;
wire    ap_block_state26_pp1_stage0_iter8;
wire    ap_block_state27_pp1_stage0_iter9;
wire    ap_block_state28_pp1_stage0_iter10;
wire    ap_block_state29_pp1_stage0_iter11;
wire    ap_block_state30_pp1_stage0_iter12;
wire    ap_block_state31_pp1_stage0_iter13;
wire    ap_block_state32_pp1_stage0_iter14;
wire    ap_block_state33_pp1_stage0_iter15;
wire    ap_block_state34_pp1_stage0_iter16;
wire    ap_block_state35_pp1_stage0_iter17;
wire    ap_block_state36_pp1_stage0_iter18;
wire    ap_block_pp1_stage0_11001;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln125_reg_1190;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter1_reg;
wire   [0:0] icmp_ln110_fu_639_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] v41_fu_645_p2;
wire   [0:0] icmp_ln113_fu_656_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln113_reg_1060_pp0_iter1_reg;
wire   [7:0] add_ln113_fu_662_p2;
reg   [7:0] add_ln113_reg_1064;
wire   [3:0] select_ln116_fu_680_p3;
reg   [3:0] select_ln116_reg_1069;
wire   [3:0] select_ln116_1_fu_688_p3;
reg   [3:0] select_ln116_1_reg_1074;
wire   [1:0] trunc_ln116_fu_696_p1;
reg   [1:0] trunc_ln116_reg_1080;
wire   [1:0] trunc_ln116_1_fu_732_p1;
reg   [1:0] trunc_ln116_1_reg_1085;
reg   [3:0] v38_0_0_addr_reg_1090;
reg   [3:0] v38_0_1_addr_reg_1095;
reg   [3:0] v38_0_2_addr_reg_1100;
reg   [3:0] v38_0_3_addr_reg_1105;
reg   [3:0] v38_1_0_addr_reg_1110;
reg   [3:0] v38_1_1_addr_reg_1115;
reg   [3:0] v38_1_2_addr_reg_1120;
reg   [3:0] v38_1_3_addr_reg_1125;
reg   [3:0] v38_2_0_addr_reg_1130;
reg   [3:0] v38_2_1_addr_reg_1135;
reg   [3:0] v38_2_2_addr_reg_1140;
reg   [3:0] v38_2_3_addr_reg_1145;
reg   [3:0] v38_3_0_addr_reg_1150;
reg   [3:0] v38_3_1_addr_reg_1155;
reg   [3:0] v38_3_2_addr_reg_1160;
reg   [3:0] v38_3_3_addr_reg_1165;
wire   [31:0] v44_fu_786_p18;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [3:0] inp_sumRow_addr_2_reg_1175;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] grp_fu_612_p2;
reg   [31:0] v46_reg_1180;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [3:0] j2_fu_829_p2;
reg   [3:0] j2_reg_1185;
wire   [0:0] icmp_ln125_fu_834_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter2_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter3_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter4_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter5_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter6_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter7_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter8_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter9_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter10_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter11_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter12_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter13_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter14_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter15_reg;
reg   [0:0] icmp_ln125_reg_1190_pp1_iter16_reg;
wire   [7:0] add_ln125_fu_840_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln128_1_fu_866_p3;
reg   [3:0] select_ln128_1_reg_1199;
wire   [1:0] trunc_ln128_fu_874_p1;
reg   [1:0] trunc_ln128_reg_1205;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter1_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter2_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter3_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter4_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter5_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter6_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter7_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter8_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter9_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter10_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter11_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter12_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter13_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter14_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter15_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter16_reg;
reg   [1:0] trunc_ln128_reg_1205_pp1_iter17_reg;
wire   [6:0] add_ln131_fu_936_p2;
reg   [6:0] add_ln131_reg_1210;
reg   [6:0] add_ln131_reg_1210_pp1_iter1_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter2_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter3_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter4_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter5_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter6_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter7_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter8_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter9_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter10_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter11_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter12_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter13_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter14_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter15_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter16_reg;
reg   [6:0] add_ln131_reg_1210_pp1_iter17_reg;
wire   [1:0] trunc_ln128_1_fu_942_p1;
reg   [1:0] trunc_ln128_1_reg_1215;
wire   [3:0] j3_fu_986_p2;
wire   [31:0] v51_fu_1006_p18;
reg   [31:0] v51_reg_1310;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] v53_reg_1315;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_CS_fsm_state17;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg   [3:0] inp_sumRow_address0;
reg    inp_sumRow_ce0;
reg    inp_sumRow_we0;
reg   [31:0] inp_sumRow_d0;
reg   [3:0] v41_0_reg_525;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_540_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i3_0_phi_fu_551_p4;
reg   [3:0] ap_phi_mux_j2_0_phi_fu_562_p4;
reg   [3:0] ap_phi_mux_i4_0_phi_fu_584_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln111_fu_651_p1;
wire  signed [63:0] sext_ln116_fu_756_p1;
wire   [63:0] zext_ln116_fu_825_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] sext_ln128_fu_966_p1;
wire   [63:0] zext_ln128_fu_992_p1;
wire  signed [63:0] sext_ln131_fu_1044_p1;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] grp_fu_602_p2;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage1;
wire   [0:0] icmp_ln114_fu_674_p2;
wire   [3:0] i3_fu_668_p2;
wire   [1:0] zext_ln116_1_mid2_v_fu_700_p4;
wire   [3:0] tmp_fu_714_p3;
wire   [4:0] zext_ln116_2_fu_722_p1;
wire   [4:0] zext_ln116_1_fu_710_p1;
wire   [1:0] tmp_27_fu_736_p4;
wire   [4:0] zext_ln116_4_fu_746_p1;
wire   [4:0] sub_ln116_fu_726_p2;
wire   [4:0] add_ln116_fu_750_p2;
wire   [3:0] tmp_2_fu_776_p3;
wire   [4:0] v44_fu_786_p17;
wire   [0:0] icmp_ln126_fu_852_p2;
wire   [3:0] i4_fu_846_p2;
wire   [1:0] zext_ln128_2_mid2_v_fu_878_p4;
wire   [3:0] tmp_s_fu_892_p3;
wire   [4:0] zext_ln128_3_fu_904_p1;
wire   [4:0] zext_ln128_1_fu_888_p1;
wire   [5:0] tmp_15_fu_914_p3;
wire   [6:0] zext_ln131_fu_922_p1;
wire   [6:0] zext_ln128_2_fu_900_p1;
wire   [3:0] select_ln128_fu_858_p3;
wire   [6:0] zext_ln131_1_fu_932_p1;
wire   [6:0] sub_ln131_fu_926_p2;
wire   [1:0] tmp_28_fu_946_p4;
wire   [4:0] zext_ln128_5_fu_956_p1;
wire   [4:0] sub_ln128_fu_908_p2;
wire   [4:0] add_ln128_fu_960_p2;
wire   [3:0] tmp_3_fu_996_p3;
wire   [4:0] v51_fu_1006_p17;
wire    ap_CS_fsm_state37;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
end

Softmax_layer_inpg8j #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
inp_sumRow_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inp_sumRow_address0),
    .ce0(inp_sumRow_ce0),
    .we0(inp_sumRow_we0),
    .d0(inp_sumRow_d0),
    .q0(inp_sumRow_q0)
);

Bert_layer_fadd_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fadd_3bkb_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_633),
    .din1(v46_reg_1180),
    .ce(1'b1),
    .dout(grp_fu_602_p2)
);

Bert_layer_fdiv_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fdiv_3hbi_U257(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v51_reg_1310),
    .din1(inp_sumRow_q0),
    .ce(1'b1),
    .dout(grp_fu_607_p2)
);

Bert_layer_fexp_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Bert_layer_fexp_3ibs_U258(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(v44_fu_786_p18),
    .ce(1'b1),
    .dout(grp_fu_612_p2)
);

Bert_layer_mux_16fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Bert_layer_mux_16fYi_U259(
    .din0(v38_0_0_q0),
    .din1(v38_0_1_q0),
    .din2(v38_0_2_q0),
    .din3(v38_0_3_q0),
    .din4(v38_1_0_q0),
    .din5(v38_1_1_q0),
    .din6(v38_1_2_q0),
    .din7(v38_1_3_q0),
    .din8(v38_2_0_q0),
    .din9(v38_2_1_q0),
    .din10(v38_2_2_q0),
    .din11(v38_2_3_q0),
    .din12(v38_3_0_q0),
    .din13(v38_3_1_q0),
    .din14(v38_3_2_q0),
    .din15(v38_3_3_q0),
    .din16(v44_fu_786_p17),
    .dout(v44_fu_786_p18)
);

Bert_layer_mux_16fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Bert_layer_mux_16fYi_U260(
    .din0(v38_0_0_q0),
    .din1(v38_0_1_q0),
    .din2(v38_0_2_q0),
    .din3(v38_0_3_q0),
    .din4(v38_1_0_q0),
    .din5(v38_1_1_q0),
    .din6(v38_1_2_q0),
    .din7(v38_1_3_q0),
    .din8(v38_2_0_q0),
    .din9(v38_2_1_q0),
    .din10(v38_2_2_q0),
    .din11(v38_2_3_q0),
    .din12(v38_3_0_q0),
    .din13(v38_3_1_q0),
    .din14(v38_3_2_q0),
    .din15(v38_3_3_q0),
    .din16(v51_fu_1006_p17),
    .dout(v51_fu_1006_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln110_fu_639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln110_fu_639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln110_fu_639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i3_0_reg_547 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln113_reg_1060 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_0_reg_547 <= select_ln116_1_reg_1074;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i4_0_reg_580 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_reg_1190 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i4_0_reg_580 <= select_ln128_1_reg_1199;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        indvar_flatten14_reg_569 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_fu_834_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten14_reg_569 <= add_ln125_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln110_fu_639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_536 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln113_reg_1060 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_536 <= add_ln113_reg_1064;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln110_fu_639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j2_0_reg_558 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln113_reg_1060 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j2_0_reg_558 <= j2_reg_1185;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j3_0_reg_591 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_fu_834_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j3_0_reg_591 <= j3_fu_986_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln110_fu_639_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v41_0_reg_525 <= v41_fu_645_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        v41_0_reg_525 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln113_reg_1064 <= add_ln113_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_fu_834_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln131_reg_1210 <= add_ln131_fu_936_p2;
        trunc_ln128_1_reg_1215 <= trunc_ln128_1_fu_942_p1;
        trunc_ln128_reg_1205 <= trunc_ln128_fu_874_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln131_reg_1210_pp1_iter10_reg <= add_ln131_reg_1210_pp1_iter9_reg;
        add_ln131_reg_1210_pp1_iter11_reg <= add_ln131_reg_1210_pp1_iter10_reg;
        add_ln131_reg_1210_pp1_iter12_reg <= add_ln131_reg_1210_pp1_iter11_reg;
        add_ln131_reg_1210_pp1_iter13_reg <= add_ln131_reg_1210_pp1_iter12_reg;
        add_ln131_reg_1210_pp1_iter14_reg <= add_ln131_reg_1210_pp1_iter13_reg;
        add_ln131_reg_1210_pp1_iter15_reg <= add_ln131_reg_1210_pp1_iter14_reg;
        add_ln131_reg_1210_pp1_iter16_reg <= add_ln131_reg_1210_pp1_iter15_reg;
        add_ln131_reg_1210_pp1_iter17_reg <= add_ln131_reg_1210_pp1_iter16_reg;
        add_ln131_reg_1210_pp1_iter2_reg <= add_ln131_reg_1210_pp1_iter1_reg;
        add_ln131_reg_1210_pp1_iter3_reg <= add_ln131_reg_1210_pp1_iter2_reg;
        add_ln131_reg_1210_pp1_iter4_reg <= add_ln131_reg_1210_pp1_iter3_reg;
        add_ln131_reg_1210_pp1_iter5_reg <= add_ln131_reg_1210_pp1_iter4_reg;
        add_ln131_reg_1210_pp1_iter6_reg <= add_ln131_reg_1210_pp1_iter5_reg;
        add_ln131_reg_1210_pp1_iter7_reg <= add_ln131_reg_1210_pp1_iter6_reg;
        add_ln131_reg_1210_pp1_iter8_reg <= add_ln131_reg_1210_pp1_iter7_reg;
        add_ln131_reg_1210_pp1_iter9_reg <= add_ln131_reg_1210_pp1_iter8_reg;
        icmp_ln125_reg_1190_pp1_iter10_reg <= icmp_ln125_reg_1190_pp1_iter9_reg;
        icmp_ln125_reg_1190_pp1_iter11_reg <= icmp_ln125_reg_1190_pp1_iter10_reg;
        icmp_ln125_reg_1190_pp1_iter12_reg <= icmp_ln125_reg_1190_pp1_iter11_reg;
        icmp_ln125_reg_1190_pp1_iter13_reg <= icmp_ln125_reg_1190_pp1_iter12_reg;
        icmp_ln125_reg_1190_pp1_iter14_reg <= icmp_ln125_reg_1190_pp1_iter13_reg;
        icmp_ln125_reg_1190_pp1_iter15_reg <= icmp_ln125_reg_1190_pp1_iter14_reg;
        icmp_ln125_reg_1190_pp1_iter16_reg <= icmp_ln125_reg_1190_pp1_iter15_reg;
        icmp_ln125_reg_1190_pp1_iter2_reg <= icmp_ln125_reg_1190_pp1_iter1_reg;
        icmp_ln125_reg_1190_pp1_iter3_reg <= icmp_ln125_reg_1190_pp1_iter2_reg;
        icmp_ln125_reg_1190_pp1_iter4_reg <= icmp_ln125_reg_1190_pp1_iter3_reg;
        icmp_ln125_reg_1190_pp1_iter5_reg <= icmp_ln125_reg_1190_pp1_iter4_reg;
        icmp_ln125_reg_1190_pp1_iter6_reg <= icmp_ln125_reg_1190_pp1_iter5_reg;
        icmp_ln125_reg_1190_pp1_iter7_reg <= icmp_ln125_reg_1190_pp1_iter6_reg;
        icmp_ln125_reg_1190_pp1_iter8_reg <= icmp_ln125_reg_1190_pp1_iter7_reg;
        icmp_ln125_reg_1190_pp1_iter9_reg <= icmp_ln125_reg_1190_pp1_iter8_reg;
        trunc_ln128_reg_1205_pp1_iter10_reg <= trunc_ln128_reg_1205_pp1_iter9_reg;
        trunc_ln128_reg_1205_pp1_iter11_reg <= trunc_ln128_reg_1205_pp1_iter10_reg;
        trunc_ln128_reg_1205_pp1_iter12_reg <= trunc_ln128_reg_1205_pp1_iter11_reg;
        trunc_ln128_reg_1205_pp1_iter13_reg <= trunc_ln128_reg_1205_pp1_iter12_reg;
        trunc_ln128_reg_1205_pp1_iter14_reg <= trunc_ln128_reg_1205_pp1_iter13_reg;
        trunc_ln128_reg_1205_pp1_iter15_reg <= trunc_ln128_reg_1205_pp1_iter14_reg;
        trunc_ln128_reg_1205_pp1_iter16_reg <= trunc_ln128_reg_1205_pp1_iter15_reg;
        trunc_ln128_reg_1205_pp1_iter17_reg <= trunc_ln128_reg_1205_pp1_iter16_reg;
        trunc_ln128_reg_1205_pp1_iter2_reg <= trunc_ln128_reg_1205_pp1_iter1_reg;
        trunc_ln128_reg_1205_pp1_iter3_reg <= trunc_ln128_reg_1205_pp1_iter2_reg;
        trunc_ln128_reg_1205_pp1_iter4_reg <= trunc_ln128_reg_1205_pp1_iter3_reg;
        trunc_ln128_reg_1205_pp1_iter5_reg <= trunc_ln128_reg_1205_pp1_iter4_reg;
        trunc_ln128_reg_1205_pp1_iter6_reg <= trunc_ln128_reg_1205_pp1_iter5_reg;
        trunc_ln128_reg_1205_pp1_iter7_reg <= trunc_ln128_reg_1205_pp1_iter6_reg;
        trunc_ln128_reg_1205_pp1_iter8_reg <= trunc_ln128_reg_1205_pp1_iter7_reg;
        trunc_ln128_reg_1205_pp1_iter9_reg <= trunc_ln128_reg_1205_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln131_reg_1210_pp1_iter1_reg <= add_ln131_reg_1210;
        icmp_ln125_reg_1190 <= icmp_ln125_fu_834_p2;
        icmp_ln125_reg_1190_pp1_iter1_reg <= icmp_ln125_reg_1190;
        trunc_ln128_reg_1205_pp1_iter1_reg <= trunc_ln128_reg_1205;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln113_reg_1060 <= icmp_ln113_fu_656_p2;
        icmp_ln113_reg_1060_pp0_iter1_reg <= icmp_ln113_reg_1060;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        inp_sumRow_addr_2_reg_1175 <= zext_ln116_fu_825_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j2_reg_1185 <= j2_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_reg_1190_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln113_reg_1060 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_633 <= inp_sumRow_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln113_fu_656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln116_1_reg_1074 <= select_ln116_1_fu_688_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln113_fu_656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln116_reg_1069 <= select_ln116_fu_680_p3;
        trunc_ln116_1_reg_1085 <= trunc_ln116_1_fu_732_p1;
        trunc_ln116_reg_1080 <= trunc_ln116_fu_696_p1;
        v38_0_0_addr_reg_1090 <= sext_ln116_fu_756_p1;
        v38_0_1_addr_reg_1095 <= sext_ln116_fu_756_p1;
        v38_0_2_addr_reg_1100 <= sext_ln116_fu_756_p1;
        v38_0_3_addr_reg_1105 <= sext_ln116_fu_756_p1;
        v38_1_0_addr_reg_1110 <= sext_ln116_fu_756_p1;
        v38_1_1_addr_reg_1115 <= sext_ln116_fu_756_p1;
        v38_1_2_addr_reg_1120 <= sext_ln116_fu_756_p1;
        v38_1_3_addr_reg_1125 <= sext_ln116_fu_756_p1;
        v38_2_0_addr_reg_1130 <= sext_ln116_fu_756_p1;
        v38_2_1_addr_reg_1135 <= sext_ln116_fu_756_p1;
        v38_2_2_addr_reg_1140 <= sext_ln116_fu_756_p1;
        v38_2_3_addr_reg_1145 <= sext_ln116_fu_756_p1;
        v38_3_0_addr_reg_1150 <= sext_ln116_fu_756_p1;
        v38_3_1_addr_reg_1155 <= sext_ln116_fu_756_p1;
        v38_3_2_addr_reg_1160 <= sext_ln116_fu_756_p1;
        v38_3_3_addr_reg_1165 <= sext_ln116_fu_756_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_fu_834_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        select_ln128_1_reg_1199 <= select_ln128_1_fu_866_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        v46_reg_1180 <= grp_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_reg_1190 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v51_reg_1310 <= v51_fu_1006_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln125_reg_1190_pp1_iter16_reg == 1'd0))) begin
        v53_reg_1315 <= grp_fu_607_p2;
    end
end

always @ (*) begin
    if ((icmp_ln113_fu_656_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln125_fu_834_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln113_reg_1060 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i3_0_phi_fu_551_p4 = select_ln116_1_reg_1074;
    end else begin
        ap_phi_mux_i3_0_phi_fu_551_p4 = i3_0_reg_547;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln125_reg_1190 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i4_0_phi_fu_584_p4 = select_ln128_1_reg_1199;
    end else begin
        ap_phi_mux_i4_0_phi_fu_584_p4 = i4_0_reg_580;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln113_reg_1060 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_540_p4 = add_ln113_reg_1064;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_540_p4 = indvar_flatten_reg_536;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln113_reg_1060 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j2_0_phi_fu_562_p4 = j2_reg_1185;
    end else begin
        ap_phi_mux_j2_0_phi_fu_562_p4 = j2_0_reg_558;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        inp_sumRow_address0 = zext_ln128_fu_992_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inp_sumRow_address0 = inp_sumRow_addr_2_reg_1175;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        inp_sumRow_address0 = zext_ln116_fu_825_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inp_sumRow_address0 = zext_ln111_fu_651_p1;
    end else begin
        inp_sumRow_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        inp_sumRow_d0 = grp_fu_602_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        inp_sumRow_d0 = 32'd0;
    end else begin
        inp_sumRow_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln113_reg_1060_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln110_fu_639_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        inp_sumRow_we0 = 1'b1;
    end else begin
        inp_sumRow_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_0_0_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_0_address0 = v38_0_0_addr_reg_1090;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_0_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_0_0_ce0 = 1'b1;
    end else begin
        v38_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd0) & (trunc_ln116_reg_1080 == 2'd0) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_0_we0 = 1'b1;
    end else begin
        v38_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_0_1_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_1_address0 = v38_0_1_addr_reg_1095;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_1_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_0_1_ce0 = 1'b1;
    end else begin
        v38_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd1) & (trunc_ln116_reg_1080 == 2'd0) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_1_we0 = 1'b1;
    end else begin
        v38_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_0_2_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_2_address0 = v38_0_2_addr_reg_1100;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_2_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_0_2_ce0 = 1'b1;
    end else begin
        v38_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd2) & (trunc_ln116_reg_1080 == 2'd0) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_2_we0 = 1'b1;
    end else begin
        v38_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_0_3_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_3_address0 = v38_0_3_addr_reg_1105;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_3_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_0_3_ce0 = 1'b1;
    end else begin
        v38_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd3) & (trunc_ln116_reg_1080 == 2'd0) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_0_3_we0 = 1'b1;
    end else begin
        v38_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_1_0_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_0_address0 = v38_1_0_addr_reg_1110;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_0_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_1_0_ce0 = 1'b1;
    end else begin
        v38_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd0) & (trunc_ln116_reg_1080 == 2'd1) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_0_we0 = 1'b1;
    end else begin
        v38_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_1_1_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_1_address0 = v38_1_1_addr_reg_1115;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_1_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_1_1_ce0 = 1'b1;
    end else begin
        v38_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd1) & (trunc_ln116_reg_1080 == 2'd1) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_1_we0 = 1'b1;
    end else begin
        v38_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_1_2_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_2_address0 = v38_1_2_addr_reg_1120;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_2_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_1_2_ce0 = 1'b1;
    end else begin
        v38_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd2) & (trunc_ln116_reg_1080 == 2'd1) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_2_we0 = 1'b1;
    end else begin
        v38_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_1_3_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_3_address0 = v38_1_3_addr_reg_1125;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_3_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_1_3_ce0 = 1'b1;
    end else begin
        v38_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd3) & (trunc_ln116_reg_1080 == 2'd1) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_1_3_we0 = 1'b1;
    end else begin
        v38_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_2_0_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_0_address0 = v38_2_0_addr_reg_1130;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_0_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_2_0_ce0 = 1'b1;
    end else begin
        v38_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd0) & (trunc_ln116_reg_1080 == 2'd2) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_0_we0 = 1'b1;
    end else begin
        v38_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_2_1_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_1_address0 = v38_2_1_addr_reg_1135;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_1_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_2_1_ce0 = 1'b1;
    end else begin
        v38_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd1) & (trunc_ln116_reg_1080 == 2'd2) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_1_we0 = 1'b1;
    end else begin
        v38_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_2_2_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_2_address0 = v38_2_2_addr_reg_1140;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_2_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_2_2_ce0 = 1'b1;
    end else begin
        v38_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd2) & (trunc_ln116_reg_1080 == 2'd2) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_2_we0 = 1'b1;
    end else begin
        v38_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_2_3_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_3_address0 = v38_2_3_addr_reg_1145;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_3_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_2_3_ce0 = 1'b1;
    end else begin
        v38_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd3) & (trunc_ln116_reg_1080 == 2'd2) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_2_3_we0 = 1'b1;
    end else begin
        v38_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_3_0_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_0_address0 = v38_3_0_addr_reg_1150;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_0_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_3_0_ce0 = 1'b1;
    end else begin
        v38_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd0) & (trunc_ln116_reg_1080 == 2'd3) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_0_we0 = 1'b1;
    end else begin
        v38_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_3_1_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_1_address0 = v38_3_1_addr_reg_1155;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_1_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_3_1_ce0 = 1'b1;
    end else begin
        v38_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd1) & (trunc_ln116_reg_1080 == 2'd3) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_1_we0 = 1'b1;
    end else begin
        v38_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_3_2_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_2_address0 = v38_3_2_addr_reg_1160;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_2_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_3_2_ce0 = 1'b1;
    end else begin
        v38_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd2) & (trunc_ln116_reg_1080 == 2'd3) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_2_we0 = 1'b1;
    end else begin
        v38_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        v38_3_3_address0 = sext_ln128_fu_966_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_3_address0 = v38_3_3_addr_reg_1165;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_3_address0 = sext_ln116_fu_756_p1;
    end else begin
        v38_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        v38_3_3_ce0 = 1'b1;
    end else begin
        v38_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (trunc_ln116_1_reg_1085 == 2'd3) & (trunc_ln116_reg_1080 == 2'd3) & (icmp_ln113_reg_1060 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        v38_3_3_we0 = 1'b1;
    end else begin
        v38_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_0_ce0 = 1'b1;
    end else begin
        v39_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln128_reg_1205_pp1_iter17_reg == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_0_we0 = 1'b1;
    end else begin
        v39_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_1_ce0 = 1'b1;
    end else begin
        v39_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln128_reg_1205_pp1_iter17_reg == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_1_we0 = 1'b1;
    end else begin
        v39_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_2_ce0 = 1'b1;
    end else begin
        v39_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln128_reg_1205_pp1_iter17_reg == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_2_we0 = 1'b1;
    end else begin
        v39_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_3_ce0 = 1'b1;
    end else begin
        v39_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln128_reg_1205_pp1_iter17_reg == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1))) begin
        v39_3_we0 = 1'b1;
    end else begin
        v39_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln110_fu_639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln113_fu_656_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln113_fu_656_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln125_fu_834_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter17 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter18 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter17 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln125_fu_834_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln113_fu_662_p2 = (ap_phi_mux_indvar_flatten_phi_fu_540_p4 + 8'd1);

assign add_ln116_fu_750_p2 = (zext_ln116_4_fu_746_p1 + sub_ln116_fu_726_p2);

assign add_ln125_fu_840_p2 = (indvar_flatten14_reg_569 + 8'd1);

assign add_ln128_fu_960_p2 = (zext_ln128_5_fu_956_p1 + sub_ln128_fu_908_p2);

assign add_ln131_fu_936_p2 = (zext_ln131_1_fu_932_p1 + sub_ln131_fu_926_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign i3_fu_668_p2 = (4'd1 + ap_phi_mux_i3_0_phi_fu_551_p4);

assign i4_fu_846_p2 = (4'd1 + ap_phi_mux_i4_0_phi_fu_584_p4);

assign icmp_ln110_fu_639_p2 = ((v41_0_reg_525 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_656_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_540_p4 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_674_p2 = ((ap_phi_mux_j2_0_phi_fu_562_p4 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_834_p2 = ((indvar_flatten14_reg_569 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_852_p2 = ((j3_0_reg_591 == 4'd12) ? 1'b1 : 1'b0);

assign j2_fu_829_p2 = (select_ln116_reg_1069 + 4'd1);

assign j3_fu_986_p2 = (select_ln128_fu_858_p3 + 4'd1);

assign select_ln116_1_fu_688_p3 = ((icmp_ln114_fu_674_p2[0:0] === 1'b1) ? i3_fu_668_p2 : ap_phi_mux_i3_0_phi_fu_551_p4);

assign select_ln116_fu_680_p3 = ((icmp_ln114_fu_674_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_j2_0_phi_fu_562_p4);

assign select_ln128_1_fu_866_p3 = ((icmp_ln126_fu_852_p2[0:0] === 1'b1) ? i4_fu_846_p2 : ap_phi_mux_i4_0_phi_fu_584_p4);

assign select_ln128_fu_858_p3 = ((icmp_ln126_fu_852_p2[0:0] === 1'b1) ? 4'd0 : j3_0_reg_591);

assign sext_ln116_fu_756_p1 = $signed(add_ln116_fu_750_p2);

assign sext_ln128_fu_966_p1 = $signed(add_ln128_fu_960_p2);

assign sext_ln131_fu_1044_p1 = $signed(add_ln131_reg_1210_pp1_iter17_reg);

assign sub_ln116_fu_726_p2 = (zext_ln116_2_fu_722_p1 - zext_ln116_1_fu_710_p1);

assign sub_ln128_fu_908_p2 = (zext_ln128_3_fu_904_p1 - zext_ln128_1_fu_888_p1);

assign sub_ln131_fu_926_p2 = (zext_ln131_fu_922_p1 - zext_ln128_2_fu_900_p1);

assign tmp_15_fu_914_p3 = {{zext_ln128_2_mid2_v_fu_878_p4}, {4'd0}};

assign tmp_27_fu_736_p4 = {{select_ln116_fu_680_p3[3:2]}};

assign tmp_28_fu_946_p4 = {{select_ln128_fu_858_p3[3:2]}};

assign tmp_2_fu_776_p3 = {{trunc_ln116_reg_1080}, {trunc_ln116_1_reg_1085}};

assign tmp_3_fu_996_p3 = {{trunc_ln128_reg_1205}, {trunc_ln128_1_reg_1215}};

assign tmp_fu_714_p3 = {{zext_ln116_1_mid2_v_fu_700_p4}, {2'd0}};

assign tmp_s_fu_892_p3 = {{zext_ln128_2_mid2_v_fu_878_p4}, {2'd0}};

assign trunc_ln116_1_fu_732_p1 = select_ln116_fu_680_p3[1:0];

assign trunc_ln116_fu_696_p1 = select_ln116_1_fu_688_p3[1:0];

assign trunc_ln128_1_fu_942_p1 = select_ln128_fu_858_p3[1:0];

assign trunc_ln128_fu_874_p1 = select_ln128_1_fu_866_p3[1:0];

assign v38_0_0_d0 = grp_fu_612_p2;

assign v38_0_1_d0 = grp_fu_612_p2;

assign v38_0_2_d0 = grp_fu_612_p2;

assign v38_0_3_d0 = grp_fu_612_p2;

assign v38_1_0_d0 = grp_fu_612_p2;

assign v38_1_1_d0 = grp_fu_612_p2;

assign v38_1_2_d0 = grp_fu_612_p2;

assign v38_1_3_d0 = grp_fu_612_p2;

assign v38_2_0_d0 = grp_fu_612_p2;

assign v38_2_1_d0 = grp_fu_612_p2;

assign v38_2_2_d0 = grp_fu_612_p2;

assign v38_2_3_d0 = grp_fu_612_p2;

assign v38_3_0_d0 = grp_fu_612_p2;

assign v38_3_1_d0 = grp_fu_612_p2;

assign v38_3_2_d0 = grp_fu_612_p2;

assign v38_3_3_d0 = grp_fu_612_p2;

assign v39_0_address0 = sext_ln131_fu_1044_p1;

assign v39_0_d0 = v53_reg_1315;

assign v39_1_address0 = sext_ln131_fu_1044_p1;

assign v39_1_d0 = v53_reg_1315;

assign v39_2_address0 = sext_ln131_fu_1044_p1;

assign v39_2_d0 = v53_reg_1315;

assign v39_3_address0 = sext_ln131_fu_1044_p1;

assign v39_3_d0 = v53_reg_1315;

assign v41_fu_645_p2 = (v41_0_reg_525 + 4'd1);

assign v44_fu_786_p17 = tmp_2_fu_776_p3;

assign v51_fu_1006_p17 = tmp_3_fu_996_p3;

assign zext_ln111_fu_651_p1 = v41_0_reg_525;

assign zext_ln116_1_fu_710_p1 = zext_ln116_1_mid2_v_fu_700_p4;

assign zext_ln116_1_mid2_v_fu_700_p4 = {{select_ln116_1_fu_688_p3[3:2]}};

assign zext_ln116_2_fu_722_p1 = tmp_fu_714_p3;

assign zext_ln116_4_fu_746_p1 = tmp_27_fu_736_p4;

assign zext_ln116_fu_825_p1 = select_ln116_1_reg_1074;

assign zext_ln128_1_fu_888_p1 = zext_ln128_2_mid2_v_fu_878_p4;

assign zext_ln128_2_fu_900_p1 = tmp_s_fu_892_p3;

assign zext_ln128_2_mid2_v_fu_878_p4 = {{select_ln128_1_fu_866_p3[3:2]}};

assign zext_ln128_3_fu_904_p1 = tmp_s_fu_892_p3;

assign zext_ln128_5_fu_956_p1 = tmp_28_fu_946_p4;

assign zext_ln128_fu_992_p1 = select_ln128_1_reg_1199;

assign zext_ln131_1_fu_932_p1 = select_ln128_fu_858_p3;

assign zext_ln131_fu_922_p1 = tmp_15_fu_914_p3;

endmodule //Softmax_layer
