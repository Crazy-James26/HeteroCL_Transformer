

================================================================
== Vitis HLS Report for 'Self_attention'
================================================================
* Date:           Sun Sep  3 06:46:14 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        out.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  8.844 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   112249|   112249|  1.122 ms|  1.122 ms|  112249|  112249|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- l_S_h_0_h      |   112248|   112248|      9354|          -|          -|    12|        no|
        | + l_exp_sum_i3  |      804|      804|        67|          -|          -|    12|        no|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 10 
7 --> 8 
8 --> 9 
9 --> 6 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%h = alloca i32 1"   --->   Operation 15 'alloca' 'h' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%inp_sumRow = alloca i64 1" [kernel.cpp:109]   --->   Operation 16 'alloca' 'inp_sumRow' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%Q_h = alloca i64 1" [kernel.cpp:192]   --->   Operation 17 'alloca' 'Q_h' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%Q_h_1 = alloca i64 1" [kernel.cpp:192]   --->   Operation 18 'alloca' 'Q_h_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%Q_h_2 = alloca i64 1" [kernel.cpp:192]   --->   Operation 19 'alloca' 'Q_h_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%Q_h_3 = alloca i64 1" [kernel.cpp:192]   --->   Operation 20 'alloca' 'Q_h_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%K_h = alloca i64 1" [kernel.cpp:193]   --->   Operation 21 'alloca' 'K_h' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%K_h_1 = alloca i64 1" [kernel.cpp:193]   --->   Operation 22 'alloca' 'K_h_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%K_h_2 = alloca i64 1" [kernel.cpp:193]   --->   Operation 23 'alloca' 'K_h_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%K_h_3 = alloca i64 1" [kernel.cpp:193]   --->   Operation 24 'alloca' 'K_h_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%V_h = alloca i64 1" [kernel.cpp:194]   --->   Operation 25 'alloca' 'V_h' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%V_h_1 = alloca i64 1" [kernel.cpp:194]   --->   Operation 26 'alloca' 'V_h_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%V_h_2 = alloca i64 1" [kernel.cpp:194]   --->   Operation 27 'alloca' 'V_h_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%V_h_3 = alloca i64 1" [kernel.cpp:194]   --->   Operation 28 'alloca' 'V_h_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%v84 = alloca i64 1" [kernel.cpp:206]   --->   Operation 29 'alloca' 'v84' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%v84_1 = alloca i64 1" [kernel.cpp:206]   --->   Operation 30 'alloca' 'v84_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%v84_2 = alloca i64 1" [kernel.cpp:206]   --->   Operation 31 'alloca' 'v84_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%v84_3 = alloca i64 1" [kernel.cpp:206]   --->   Operation 32 'alloca' 'v84_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%v84_4 = alloca i64 1" [kernel.cpp:206]   --->   Operation 33 'alloca' 'v84_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%v84_5 = alloca i64 1" [kernel.cpp:206]   --->   Operation 34 'alloca' 'v84_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%v84_6 = alloca i64 1" [kernel.cpp:206]   --->   Operation 35 'alloca' 'v84_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%v84_7 = alloca i64 1" [kernel.cpp:206]   --->   Operation 36 'alloca' 'v84_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%v84_8 = alloca i64 1" [kernel.cpp:206]   --->   Operation 37 'alloca' 'v84_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%v84_9 = alloca i64 1" [kernel.cpp:206]   --->   Operation 38 'alloca' 'v84_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%v84_10 = alloca i64 1" [kernel.cpp:206]   --->   Operation 39 'alloca' 'v84_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%v84_11 = alloca i64 1" [kernel.cpp:206]   --->   Operation 40 'alloca' 'v84_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%v84_12 = alloca i64 1" [kernel.cpp:206]   --->   Operation 41 'alloca' 'v84_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%v84_13 = alloca i64 1" [kernel.cpp:206]   --->   Operation 42 'alloca' 'v84_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%v84_14 = alloca i64 1" [kernel.cpp:206]   --->   Operation 43 'alloca' 'v84_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%v84_15 = alloca i64 1" [kernel.cpp:206]   --->   Operation 44 'alloca' 'v84_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%v85 = alloca i64 1" [kernel.cpp:208]   --->   Operation 45 'alloca' 'v85' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%v85_1 = alloca i64 1" [kernel.cpp:208]   --->   Operation 46 'alloca' 'v85_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%v85_2 = alloca i64 1" [kernel.cpp:208]   --->   Operation 47 'alloca' 'v85_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%v85_3 = alloca i64 1" [kernel.cpp:208]   --->   Operation 48 'alloca' 'v85_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%v86_0_0 = alloca i64 1"   --->   Operation 49 'alloca' 'v86_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%v86_0_1 = alloca i64 1"   --->   Operation 50 'alloca' 'v86_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%v86_0_2 = alloca i64 1"   --->   Operation 51 'alloca' 'v86_0_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%v86_0_3 = alloca i64 1"   --->   Operation 52 'alloca' 'v86_0_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%v86_1_0 = alloca i64 1"   --->   Operation 53 'alloca' 'v86_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%v86_1_1 = alloca i64 1"   --->   Operation 54 'alloca' 'v86_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%v86_1_2 = alloca i64 1"   --->   Operation 55 'alloca' 'v86_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%v86_1_3 = alloca i64 1"   --->   Operation 56 'alloca' 'v86_1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%v86_2_0 = alloca i64 1"   --->   Operation 57 'alloca' 'v86_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%v86_2_1 = alloca i64 1"   --->   Operation 58 'alloca' 'v86_2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%v86_2_2 = alloca i64 1"   --->   Operation 59 'alloca' 'v86_2_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%v86_2_3 = alloca i64 1"   --->   Operation 60 'alloca' 'v86_2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%v86_3_0 = alloca i64 1"   --->   Operation 61 'alloca' 'v86_3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%v86_3_1 = alloca i64 1"   --->   Operation 62 'alloca' 'v86_3_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%v86_3_2 = alloca i64 1"   --->   Operation 63 'alloca' 'v86_3_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%v86_3_3 = alloca i64 1"   --->   Operation 64 'alloca' 'v86_3_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (1.58ns)   --->   "%store_ln191 = store i4 0, i4 %h" [kernel.cpp:191]   --->   Operation 65 'store' 'store_ln191' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln191 = br void %l_mh_separate_i_s" [kernel.cpp:191]   --->   Operation 66 'br' 'br_ln191' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.73>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%h_1 = load i4 %h" [kernel.cpp:191]   --->   Operation 67 'load' 'h_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (1.30ns)   --->   "%icmp_ln191 = icmp_eq  i4 %h_1, i4 12" [kernel.cpp:191]   --->   Operation 68 'icmp' 'icmp_ln191' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 12, i64 12, i64 12"   --->   Operation 69 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (1.73ns)   --->   "%add_ln191 = add i4 %h_1, i4 1" [kernel.cpp:191]   --->   Operation 70 'add' 'add_ln191' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln191 = br i1 %icmp_ln191, void %l_mh_separate_i_s.split, void %for.end71" [kernel.cpp:191]   --->   Operation 71 'br' 'br_ln191' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %h_1, i6 0" [kernel.cpp:191]   --->   Operation 72 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln191)> <Delay = 0.00>
ST_2 : Operation 73 [2/2] (0.00ns)   --->   "%call_ln191 = call void @Self_attention_Pipeline_l_mh_separate_i_s_l_j_s, i32 %v73_0_0, i32 %v73_0_1, i32 %v73_0_2, i32 %v73_0_3, i32 %v73_0_4, i32 %v73_0_5, i32 %v73_0_6, i32 %v73_0_7, i32 %v73_0_8, i32 %v73_0_9, i32 %v73_0_10, i32 %v73_0_11, i32 %v73_1_0, i32 %v73_1_1, i32 %v73_1_2, i32 %v73_1_3, i32 %v73_1_4, i32 %v73_1_5, i32 %v73_1_6, i32 %v73_1_7, i32 %v73_1_8, i32 %v73_1_9, i32 %v73_1_10, i32 %v73_1_11, i32 %v73_2_0, i32 %v73_2_1, i32 %v73_2_2, i32 %v73_2_3, i32 %v73_2_4, i32 %v73_2_5, i32 %v73_2_6, i32 %v73_2_7, i32 %v73_2_8, i32 %v73_2_9, i32 %v73_2_10, i32 %v73_2_11, i32 %v73_3_0, i32 %v73_3_1, i32 %v73_3_2, i32 %v73_3_3, i32 %v73_3_4, i32 %v73_3_5, i32 %v73_3_6, i32 %v73_3_7, i32 %v73_3_8, i32 %v73_3_9, i32 %v73_3_10, i32 %v73_3_11, i32 %v73_4_0, i32 %v73_4_1, i32 %v73_4_2, i32 %v73_4_3, i32 %v73_4_4, i32 %v73_4_5, i32 %v73_4_6, i32 %v73_4_7, i32 %v73_4_8, i32 %v73_4_9, i32 %v73_4_10, i32 %v73_4_11, i32 %v73_5_0, i32 %v73_5_1, i32 %v73_5_2, i32 %v73_5_3, i32 %v73_5_4, i32 %v73_5_5, i32 %v73_5_6, i32 %v73_5_7, i32 %v73_5_8, i32 %v73_5_9, i32 %v73_5_10, i32 %v73_5_11, i32 %v73_6_0, i32 %v73_6_1, i32 %v73_6_2, i32 %v73_6_3, i32 %v73_6_4, i32 %v73_6_5, i32 %v73_6_6, i32 %v73_6_7, i32 %v73_6_8, i32 %v73_6_9, i32 %v73_6_10, i32 %v73_6_11, i32 %v73_7_0, i32 %v73_7_1, i32 %v73_7_2, i32 %v73_7_3, i32 %v73_7_4, i32 %v73_7_5, i32 %v73_7_6, i32 %v73_7_7, i32 %v73_7_8, i32 %v73_7_9, i32 %v73_7_10, i32 %v73_7_11, i32 %v73_8_0, i32 %v73_8_1, i32 %v73_8_2, i32 %v73_8_3, i32 %v73_8_4, i32 %v73_8_5, i32 %v73_8_6, i32 %v73_8_7, i32 %v73_8_8, i32 %v73_8_9, i32 %v73_8_10, i32 %v73_8_11, i32 %v73_9_0, i32 %v73_9_1, i32 %v73_9_2, i32 %v73_9_3, i32 %v73_9_4, i32 %v73_9_5, i32 %v73_9_6, i32 %v73_9_7, i32 %v73_9_8, i32 %v73_9_9, i32 %v73_9_10, i32 %v73_9_11, i32 %v73_10_0, i32 %v73_10_1, i32 %v73_10_2, i32 %v73_10_3, i32 %v73_10_4, i32 %v73_10_5, i32 %v73_10_6, i32 %v73_10_7, i32 %v73_10_8, i32 %v73_10_9, i32 %v73_10_10, i32 %v73_10_11, i32 %v73_11_0, i32 %v73_11_1, i32 %v73_11_2, i32 %v73_11_3, i32 %v73_11_4, i32 %v73_11_5, i32 %v73_11_6, i32 %v73_11_7, i32 %v73_11_8, i32 %v73_11_9, i32 %v73_11_10, i32 %v73_11_11, i32 %V_h, i32 %V_h_1, i32 %V_h_2, i32 %V_h_3, i32 %Q_h, i32 %Q_h_1, i32 %Q_h_2, i32 %Q_h_3, i32 %K_h, i32 %K_h_1, i32 %K_h_2, i32 %K_h_3, i10 %tmp_s, i32 %v71_0_0, i32 %v71_0_1, i32 %v71_0_2, i32 %v71_0_3, i32 %v71_0_4, i32 %v71_0_5, i32 %v71_0_6, i32 %v71_0_7, i32 %v71_0_8, i32 %v71_0_9, i32 %v71_0_10, i32 %v71_0_11, i32 %v71_1_0, i32 %v71_1_1, i32 %v71_1_2, i32 %v71_1_3, i32 %v71_1_4, i32 %v71_1_5, i32 %v71_1_6, i32 %v71_1_7, i32 %v71_1_8, i32 %v71_1_9, i32 %v71_1_10, i32 %v71_1_11, i32 %v71_2_0, i32 %v71_2_1, i32 %v71_2_2, i32 %v71_2_3, i32 %v71_2_4, i32 %v71_2_5, i32 %v71_2_6, i32 %v71_2_7, i32 %v71_2_8, i32 %v71_2_9, i32 %v71_2_10, i32 %v71_2_11, i32 %v71_3_0, i32 %v71_3_1, i32 %v71_3_2, i32 %v71_3_3, i32 %v71_3_4, i32 %v71_3_5, i32 %v71_3_6, i32 %v71_3_7, i32 %v71_3_8, i32 %v71_3_9, i32 %v71_3_10, i32 %v71_3_11, i32 %v71_4_0, i32 %v71_4_1, i32 %v71_4_2, i32 %v71_4_3, i32 %v71_4_4, i32 %v71_4_5, i32 %v71_4_6, i32 %v71_4_7, i32 %v71_4_8, i32 %v71_4_9, i32 %v71_4_10, i32 %v71_4_11, i32 %v71_5_0, i32 %v71_5_1, i32 %v71_5_2, i32 %v71_5_3, i32 %v71_5_4, i32 %v71_5_5, i32 %v71_5_6, i32 %v71_5_7, i32 %v71_5_8, i32 %v71_5_9, i32 %v71_5_10, i32 %v71_5_11, i32 %v71_6_0, i32 %v71_6_1, i32 %v71_6_2, i32 %v71_6_3, i32 %v71_6_4, i32 %v71_6_5, i32 %v71_6_6, i32 %v71_6_7, i32 %v71_6_8, i32 %v71_6_9, i32 %v71_6_10, i32 %v71_6_11, i32 %v71_7_0, i32 %v71_7_1, i32 %v71_7_2, i32 %v71_7_3, i32 %v71_7_4, i32 %v71_7_5, i32 %v71_7_6, i32 %v71_7_7, i32 %v71_7_8, i32 %v71_7_9, i32 %v71_7_10, i32 %v71_7_11, i32 %v71_8_0, i32 %v71_8_1, i32 %v71_8_2, i32 %v71_8_3, i32 %v71_8_4, i32 %v71_8_5, i32 %v71_8_6, i32 %v71_8_7, i32 %v71_8_8, i32 %v71_8_9, i32 %v71_8_10, i32 %v71_8_11, i32 %v71_9_0, i32 %v71_9_1, i32 %v71_9_2, i32 %v71_9_3, i32 %v71_9_4, i32 %v71_9_5, i32 %v71_9_6, i32 %v71_9_7, i32 %v71_9_8, i32 %v71_9_9, i32 %v71_9_10, i32 %v71_9_11, i32 %v71_10_0, i32 %v71_10_1, i32 %v71_10_2, i32 %v71_10_3, i32 %v71_10_4, i32 %v71_10_5, i32 %v71_10_6, i32 %v71_10_7, i32 %v71_10_8, i32 %v71_10_9, i32 %v71_10_10, i32 %v71_10_11, i32 %v71_11_0, i32 %v71_11_1, i32 %v71_11_2, i32 %v71_11_3, i32 %v71_11_4, i32 %v71_11_5, i32 %v71_11_6, i32 %v71_11_7, i32 %v71_11_8, i32 %v71_11_9, i32 %v71_11_10, i32 %v71_11_11, i32 %v72_0_0, i32 %v72_0_1, i32 %v72_0_2, i32 %v72_0_3, i32 %v72_0_4, i32 %v72_0_5, i32 %v72_0_6, i32 %v72_0_7, i32 %v72_0_8, i32 %v72_0_9, i32 %v72_0_10, i32 %v72_0_11, i32 %v72_1_0, i32 %v72_1_1, i32 %v72_1_2, i32 %v72_1_3, i32 %v72_1_4, i32 %v72_1_5, i32 %v72_1_6, i32 %v72_1_7, i32 %v72_1_8, i32 %v72_1_9, i32 %v72_1_10, i32 %v72_1_11, i32 %v72_2_0, i32 %v72_2_1, i32 %v72_2_2, i32 %v72_2_3, i32 %v72_2_4, i32 %v72_2_5, i32 %v72_2_6, i32 %v72_2_7, i32 %v72_2_8, i32 %v72_2_9, i32 %v72_2_10, i32 %v72_2_11, i32 %v72_3_0, i32 %v72_3_1, i32 %v72_3_2, i32 %v72_3_3, i32 %v72_3_4, i32 %v72_3_5, i32 %v72_3_6, i32 %v72_3_7, i32 %v72_3_8, i32 %v72_3_9, i32 %v72_3_10, i32 %v72_3_11, i32 %v72_4_0, i32 %v72_4_1, i32 %v72_4_2, i32 %v72_4_3, i32 %v72_4_4, i32 %v72_4_5, i32 %v72_4_6, i32 %v72_4_7, i32 %v72_4_8, i32 %v72_4_9, i32 %v72_4_10, i32 %v72_4_11, i32 %v72_5_0, i32 %v72_5_1, i32 %v72_5_2, i32 %v72_5_3, i32 %v72_5_4, i32 %v72_5_5, i32 %v72_5_6, i32 %v72_5_7, i32 %v72_5_8, i32 %v72_5_9, i32 %v72_5_10, i32 %v72_5_11, i32 %v72_6_0, i32 %v72_6_1, i32 %v72_6_2, i32 %v72_6_3, i32 %v72_6_4, i32 %v72_6_5, i32 %v72_6_6, i32 %v72_6_7, i32 %v72_6_8, i32 %v72_6_9, i32 %v72_6_10, i32 %v72_6_11, i32 %v72_7_0, i32 %v72_7_1, i32 %v72_7_2, i32 %v72_7_3, i32 %v72_7_4, i32 %v72_7_5, i32 %v72_7_6, i32 %v72_7_7, i32 %v72_7_8, i32 %v72_7_9, i32 %v72_7_10, i32 %v72_7_11, i32 %v72_8_0, i32 %v72_8_1, i32 %v72_8_2, i32 %v72_8_3, i32 %v72_8_4, i32 %v72_8_5, i32 %v72_8_6, i32 %v72_8_7, i32 %v72_8_8, i32 %v72_8_9, i32 %v72_8_10, i32 %v72_8_11, i32 %v72_9_0, i32 %v72_9_1, i32 %v72_9_2, i32 %v72_9_3, i32 %v72_9_4, i32 %v72_9_5, i32 %v72_9_6, i32 %v72_9_7, i32 %v72_9_8, i32 %v72_9_9, i32 %v72_9_10, i32 %v72_9_11, i32 %v72_10_0, i32 %v72_10_1, i32 %v72_10_2, i32 %v72_10_3, i32 %v72_10_4, i32 %v72_10_5, i32 %v72_10_6, i32 %v72_10_7, i32 %v72_10_8, i32 %v72_10_9, i32 %v72_10_10, i32 %v72_10_11, i32 %v72_11_0, i32 %v72_11_1, i32 %v72_11_2, i32 %v72_11_3, i32 %v72_11_4, i32 %v72_11_5, i32 %v72_11_6, i32 %v72_11_7, i32 %v72_11_8, i32 %v72_11_9, i32 %v72_11_10, i32 %v72_11_11" [kernel.cpp:191]   --->   Operation 73 'call' 'call_ln191' <Predicate = (!icmp_ln191)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 74 [2/2] (0.00ns)   --->   "%call_ln0 = call void @Self_attention_Pipeline_VITIS_LOOP_110_1, i32 %inp_sumRow"   --->   Operation 74 'call' 'call_ln0' <Predicate = (!icmp_ln191)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%ret_ln220 = ret" [kernel.cpp:220]   --->   Operation 75 'ret' 'ret_ln220' <Predicate = (icmp_ln191)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 76 [1/2] (0.00ns)   --->   "%call_ln191 = call void @Self_attention_Pipeline_l_mh_separate_i_s_l_j_s, i32 %v73_0_0, i32 %v73_0_1, i32 %v73_0_2, i32 %v73_0_3, i32 %v73_0_4, i32 %v73_0_5, i32 %v73_0_6, i32 %v73_0_7, i32 %v73_0_8, i32 %v73_0_9, i32 %v73_0_10, i32 %v73_0_11, i32 %v73_1_0, i32 %v73_1_1, i32 %v73_1_2, i32 %v73_1_3, i32 %v73_1_4, i32 %v73_1_5, i32 %v73_1_6, i32 %v73_1_7, i32 %v73_1_8, i32 %v73_1_9, i32 %v73_1_10, i32 %v73_1_11, i32 %v73_2_0, i32 %v73_2_1, i32 %v73_2_2, i32 %v73_2_3, i32 %v73_2_4, i32 %v73_2_5, i32 %v73_2_6, i32 %v73_2_7, i32 %v73_2_8, i32 %v73_2_9, i32 %v73_2_10, i32 %v73_2_11, i32 %v73_3_0, i32 %v73_3_1, i32 %v73_3_2, i32 %v73_3_3, i32 %v73_3_4, i32 %v73_3_5, i32 %v73_3_6, i32 %v73_3_7, i32 %v73_3_8, i32 %v73_3_9, i32 %v73_3_10, i32 %v73_3_11, i32 %v73_4_0, i32 %v73_4_1, i32 %v73_4_2, i32 %v73_4_3, i32 %v73_4_4, i32 %v73_4_5, i32 %v73_4_6, i32 %v73_4_7, i32 %v73_4_8, i32 %v73_4_9, i32 %v73_4_10, i32 %v73_4_11, i32 %v73_5_0, i32 %v73_5_1, i32 %v73_5_2, i32 %v73_5_3, i32 %v73_5_4, i32 %v73_5_5, i32 %v73_5_6, i32 %v73_5_7, i32 %v73_5_8, i32 %v73_5_9, i32 %v73_5_10, i32 %v73_5_11, i32 %v73_6_0, i32 %v73_6_1, i32 %v73_6_2, i32 %v73_6_3, i32 %v73_6_4, i32 %v73_6_5, i32 %v73_6_6, i32 %v73_6_7, i32 %v73_6_8, i32 %v73_6_9, i32 %v73_6_10, i32 %v73_6_11, i32 %v73_7_0, i32 %v73_7_1, i32 %v73_7_2, i32 %v73_7_3, i32 %v73_7_4, i32 %v73_7_5, i32 %v73_7_6, i32 %v73_7_7, i32 %v73_7_8, i32 %v73_7_9, i32 %v73_7_10, i32 %v73_7_11, i32 %v73_8_0, i32 %v73_8_1, i32 %v73_8_2, i32 %v73_8_3, i32 %v73_8_4, i32 %v73_8_5, i32 %v73_8_6, i32 %v73_8_7, i32 %v73_8_8, i32 %v73_8_9, i32 %v73_8_10, i32 %v73_8_11, i32 %v73_9_0, i32 %v73_9_1, i32 %v73_9_2, i32 %v73_9_3, i32 %v73_9_4, i32 %v73_9_5, i32 %v73_9_6, i32 %v73_9_7, i32 %v73_9_8, i32 %v73_9_9, i32 %v73_9_10, i32 %v73_9_11, i32 %v73_10_0, i32 %v73_10_1, i32 %v73_10_2, i32 %v73_10_3, i32 %v73_10_4, i32 %v73_10_5, i32 %v73_10_6, i32 %v73_10_7, i32 %v73_10_8, i32 %v73_10_9, i32 %v73_10_10, i32 %v73_10_11, i32 %v73_11_0, i32 %v73_11_1, i32 %v73_11_2, i32 %v73_11_3, i32 %v73_11_4, i32 %v73_11_5, i32 %v73_11_6, i32 %v73_11_7, i32 %v73_11_8, i32 %v73_11_9, i32 %v73_11_10, i32 %v73_11_11, i32 %V_h, i32 %V_h_1, i32 %V_h_2, i32 %V_h_3, i32 %Q_h, i32 %Q_h_1, i32 %Q_h_2, i32 %Q_h_3, i32 %K_h, i32 %K_h_1, i32 %K_h_2, i32 %K_h_3, i10 %tmp_s, i32 %v71_0_0, i32 %v71_0_1, i32 %v71_0_2, i32 %v71_0_3, i32 %v71_0_4, i32 %v71_0_5, i32 %v71_0_6, i32 %v71_0_7, i32 %v71_0_8, i32 %v71_0_9, i32 %v71_0_10, i32 %v71_0_11, i32 %v71_1_0, i32 %v71_1_1, i32 %v71_1_2, i32 %v71_1_3, i32 %v71_1_4, i32 %v71_1_5, i32 %v71_1_6, i32 %v71_1_7, i32 %v71_1_8, i32 %v71_1_9, i32 %v71_1_10, i32 %v71_1_11, i32 %v71_2_0, i32 %v71_2_1, i32 %v71_2_2, i32 %v71_2_3, i32 %v71_2_4, i32 %v71_2_5, i32 %v71_2_6, i32 %v71_2_7, i32 %v71_2_8, i32 %v71_2_9, i32 %v71_2_10, i32 %v71_2_11, i32 %v71_3_0, i32 %v71_3_1, i32 %v71_3_2, i32 %v71_3_3, i32 %v71_3_4, i32 %v71_3_5, i32 %v71_3_6, i32 %v71_3_7, i32 %v71_3_8, i32 %v71_3_9, i32 %v71_3_10, i32 %v71_3_11, i32 %v71_4_0, i32 %v71_4_1, i32 %v71_4_2, i32 %v71_4_3, i32 %v71_4_4, i32 %v71_4_5, i32 %v71_4_6, i32 %v71_4_7, i32 %v71_4_8, i32 %v71_4_9, i32 %v71_4_10, i32 %v71_4_11, i32 %v71_5_0, i32 %v71_5_1, i32 %v71_5_2, i32 %v71_5_3, i32 %v71_5_4, i32 %v71_5_5, i32 %v71_5_6, i32 %v71_5_7, i32 %v71_5_8, i32 %v71_5_9, i32 %v71_5_10, i32 %v71_5_11, i32 %v71_6_0, i32 %v71_6_1, i32 %v71_6_2, i32 %v71_6_3, i32 %v71_6_4, i32 %v71_6_5, i32 %v71_6_6, i32 %v71_6_7, i32 %v71_6_8, i32 %v71_6_9, i32 %v71_6_10, i32 %v71_6_11, i32 %v71_7_0, i32 %v71_7_1, i32 %v71_7_2, i32 %v71_7_3, i32 %v71_7_4, i32 %v71_7_5, i32 %v71_7_6, i32 %v71_7_7, i32 %v71_7_8, i32 %v71_7_9, i32 %v71_7_10, i32 %v71_7_11, i32 %v71_8_0, i32 %v71_8_1, i32 %v71_8_2, i32 %v71_8_3, i32 %v71_8_4, i32 %v71_8_5, i32 %v71_8_6, i32 %v71_8_7, i32 %v71_8_8, i32 %v71_8_9, i32 %v71_8_10, i32 %v71_8_11, i32 %v71_9_0, i32 %v71_9_1, i32 %v71_9_2, i32 %v71_9_3, i32 %v71_9_4, i32 %v71_9_5, i32 %v71_9_6, i32 %v71_9_7, i32 %v71_9_8, i32 %v71_9_9, i32 %v71_9_10, i32 %v71_9_11, i32 %v71_10_0, i32 %v71_10_1, i32 %v71_10_2, i32 %v71_10_3, i32 %v71_10_4, i32 %v71_10_5, i32 %v71_10_6, i32 %v71_10_7, i32 %v71_10_8, i32 %v71_10_9, i32 %v71_10_10, i32 %v71_10_11, i32 %v71_11_0, i32 %v71_11_1, i32 %v71_11_2, i32 %v71_11_3, i32 %v71_11_4, i32 %v71_11_5, i32 %v71_11_6, i32 %v71_11_7, i32 %v71_11_8, i32 %v71_11_9, i32 %v71_11_10, i32 %v71_11_11, i32 %v72_0_0, i32 %v72_0_1, i32 %v72_0_2, i32 %v72_0_3, i32 %v72_0_4, i32 %v72_0_5, i32 %v72_0_6, i32 %v72_0_7, i32 %v72_0_8, i32 %v72_0_9, i32 %v72_0_10, i32 %v72_0_11, i32 %v72_1_0, i32 %v72_1_1, i32 %v72_1_2, i32 %v72_1_3, i32 %v72_1_4, i32 %v72_1_5, i32 %v72_1_6, i32 %v72_1_7, i32 %v72_1_8, i32 %v72_1_9, i32 %v72_1_10, i32 %v72_1_11, i32 %v72_2_0, i32 %v72_2_1, i32 %v72_2_2, i32 %v72_2_3, i32 %v72_2_4, i32 %v72_2_5, i32 %v72_2_6, i32 %v72_2_7, i32 %v72_2_8, i32 %v72_2_9, i32 %v72_2_10, i32 %v72_2_11, i32 %v72_3_0, i32 %v72_3_1, i32 %v72_3_2, i32 %v72_3_3, i32 %v72_3_4, i32 %v72_3_5, i32 %v72_3_6, i32 %v72_3_7, i32 %v72_3_8, i32 %v72_3_9, i32 %v72_3_10, i32 %v72_3_11, i32 %v72_4_0, i32 %v72_4_1, i32 %v72_4_2, i32 %v72_4_3, i32 %v72_4_4, i32 %v72_4_5, i32 %v72_4_6, i32 %v72_4_7, i32 %v72_4_8, i32 %v72_4_9, i32 %v72_4_10, i32 %v72_4_11, i32 %v72_5_0, i32 %v72_5_1, i32 %v72_5_2, i32 %v72_5_3, i32 %v72_5_4, i32 %v72_5_5, i32 %v72_5_6, i32 %v72_5_7, i32 %v72_5_8, i32 %v72_5_9, i32 %v72_5_10, i32 %v72_5_11, i32 %v72_6_0, i32 %v72_6_1, i32 %v72_6_2, i32 %v72_6_3, i32 %v72_6_4, i32 %v72_6_5, i32 %v72_6_6, i32 %v72_6_7, i32 %v72_6_8, i32 %v72_6_9, i32 %v72_6_10, i32 %v72_6_11, i32 %v72_7_0, i32 %v72_7_1, i32 %v72_7_2, i32 %v72_7_3, i32 %v72_7_4, i32 %v72_7_5, i32 %v72_7_6, i32 %v72_7_7, i32 %v72_7_8, i32 %v72_7_9, i32 %v72_7_10, i32 %v72_7_11, i32 %v72_8_0, i32 %v72_8_1, i32 %v72_8_2, i32 %v72_8_3, i32 %v72_8_4, i32 %v72_8_5, i32 %v72_8_6, i32 %v72_8_7, i32 %v72_8_8, i32 %v72_8_9, i32 %v72_8_10, i32 %v72_8_11, i32 %v72_9_0, i32 %v72_9_1, i32 %v72_9_2, i32 %v72_9_3, i32 %v72_9_4, i32 %v72_9_5, i32 %v72_9_6, i32 %v72_9_7, i32 %v72_9_8, i32 %v72_9_9, i32 %v72_9_10, i32 %v72_9_11, i32 %v72_10_0, i32 %v72_10_1, i32 %v72_10_2, i32 %v72_10_3, i32 %v72_10_4, i32 %v72_10_5, i32 %v72_10_6, i32 %v72_10_7, i32 %v72_10_8, i32 %v72_10_9, i32 %v72_10_10, i32 %v72_10_11, i32 %v72_11_0, i32 %v72_11_1, i32 %v72_11_2, i32 %v72_11_3, i32 %v72_11_4, i32 %v72_11_5, i32 %v72_11_6, i32 %v72_11_7, i32 %v72_11_8, i32 %v72_11_9, i32 %v72_11_10, i32 %v72_11_11" [kernel.cpp:191]   --->   Operation 76 'call' 'call_ln191' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 77 [1/2] (0.00ns)   --->   "%call_ln0 = call void @Self_attention_Pipeline_VITIS_LOOP_110_1, i32 %inp_sumRow"   --->   Operation 77 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 78 [2/2] (0.00ns)   --->   "%call_ln207 = call void @Attention_layer, i32 %Q_h, i32 %Q_h_1, i32 %Q_h_2, i32 %Q_h_3, i32 %K_h, i32 %K_h_1, i32 %K_h_2, i32 %K_h_3, i32 %v84, i32 %v84_1, i32 %v84_2, i32 %v84_3, i32 %v84_4, i32 %v84_5, i32 %v84_6, i32 %v84_7, i32 %v84_8, i32 %v84_9, i32 %v84_10, i32 %v84_11, i32 %v84_12, i32 %v84_13, i32 %v84_14, i32 %v84_15" [kernel.cpp:207]   --->   Operation 78 'call' 'call_ln207' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 1.58>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%specloopname_ln192 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [kernel.cpp:192]   --->   Operation 79 'specloopname' 'specloopname_ln192' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/2] (0.00ns)   --->   "%call_ln207 = call void @Attention_layer, i32 %Q_h, i32 %Q_h_1, i32 %Q_h_2, i32 %Q_h_3, i32 %K_h, i32 %K_h_1, i32 %K_h_2, i32 %K_h_3, i32 %v84, i32 %v84_1, i32 %v84_2, i32 %v84_3, i32 %v84_4, i32 %v84_5, i32 %v84_6, i32 %v84_7, i32 %v84_8, i32 %v84_9, i32 %v84_10, i32 %v84_11, i32 %v84_12, i32 %v84_13, i32 %v84_14, i32 %v84_15" [kernel.cpp:207]   --->   Operation 80 'call' 'call_ln207' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 81 [1/1] (1.58ns)   --->   "%br_ln113 = br void %l_j2.i" [kernel.cpp:113]   --->   Operation 81 'br' 'br_ln113' <Predicate = true> <Delay = 1.58>

State 6 <SV = 5> <Delay = 2.89>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%i3 = phi i4 %add_ln113, void %l_j2.i.split, i4 0, void %l_mh_separate_i_s.split" [kernel.cpp:113]   --->   Operation 82 'phi' 'i3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (1.30ns)   --->   "%icmp_ln113 = icmp_eq  i4 %i3, i4 12" [kernel.cpp:113]   --->   Operation 83 'icmp' 'icmp_ln113' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%empty_374 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 12, i64 12, i64 12"   --->   Operation 84 'speclooptripcount' 'empty_374' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (1.73ns)   --->   "%add_ln113 = add i4 %i3, i4 1" [kernel.cpp:113]   --->   Operation 85 'add' 'add_ln113' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln113 = br i1 %icmp_ln113, void %l_j2.i.split, void %for.inc49.i.preheader" [kernel.cpp:113]   --->   Operation 86 'br' 'br_ln113' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln113 = zext i4 %i3" [kernel.cpp:113]   --->   Operation 87 'zext' 'zext_ln113' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%inp_sumRow_addr = getelementptr i32 %inp_sumRow, i64 0, i64 %zext_ln113" [kernel.cpp:113]   --->   Operation 88 'getelementptr' 'inp_sumRow_addr' <Predicate = (!icmp_ln113)> <Delay = 0.00>
ST_6 : Operation 89 [2/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:120]   --->   Operation 89 'load' 'inp_sumRow_load' <Predicate = (!icmp_ln113)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>
ST_6 : Operation 90 [2/2] (0.00ns)   --->   "%call_ln0 = call void @Self_attention_Pipeline_l_update_i4_l_j3, i32 %inp_sumRow, i32 %v85, i32 %v85_1, i32 %v85_2, i32 %v85_3, i32 %v84, i32 %v84_1, i32 %v84_2, i32 %v84_3, i32 %v84_4, i32 %v84_5, i32 %v84_6, i32 %v84_7, i32 %v84_8, i32 %v84_9, i32 %v84_10, i32 %v84_11, i32 %v84_12, i32 %v84_13, i32 %v84_14, i32 %v84_15"   --->   Operation 90 'call' 'call_ln0' <Predicate = (icmp_ln113)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 91 [1/1] (1.58ns)   --->   "%store_ln191 = store i4 %add_ln191, i4 %h" [kernel.cpp:191]   --->   Operation 91 'store' 'store_ln191' <Predicate = (icmp_ln113)> <Delay = 1.58>

State 7 <SV = 6> <Delay = 2.32>
ST_7 : Operation 92 [1/2] (2.32ns)   --->   "%inp_sumRow_load = load i4 %inp_sumRow_addr" [kernel.cpp:120]   --->   Operation 92 'load' 'inp_sumRow_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 12> <RAM>

State 8 <SV = 7> <Delay = 5.79>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln113 = trunc i4 %i3" [kernel.cpp:113]   --->   Operation 93 'trunc' 'trunc_ln113' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_43 = partselect i2 @_ssdm_op_PartSelect.i2.i4.i32.i32, i4 %i3, i32 2, i32 3" [kernel.cpp:113]   --->   Operation 94 'partselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i2 %tmp_43" [kernel.cpp:116]   --->   Operation 95 'zext' 'zext_ln116' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_44 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %tmp_43, i2 0" [kernel.cpp:116]   --->   Operation 96 'bitconcatenate' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (1.73ns)   --->   "%sub_ln116 = sub i4 %tmp_44, i4 %zext_ln116" [kernel.cpp:116]   --->   Operation 97 'sub' 'sub_ln116' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 98 [2/2] (4.05ns)   --->   "%call_ln120 = call void @Self_attention_Pipeline_l_j2, i32 %inp_sumRow_load, i32 %inp_sumRow, i4 %i3, i32 %v84_15, i32 %v84_14, i32 %v84_13, i32 %v84_12, i32 %v84_11, i32 %v84_10, i32 %v84_9, i32 %v84_8, i32 %v84_7, i32 %v84_6, i32 %v84_5, i32 %v84_4, i32 %v84_3, i32 %v84_2, i32 %v84_1, i32 %v84, i4 %sub_ln116, i2 %trunc_ln113" [kernel.cpp:120]   --->   Operation 98 'call' 'call_ln120' <Predicate = true> <Delay = 4.05> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%specloopname_ln113 = specloopname void @_ssdm_op_SpecLoopName, void @empty_16" [kernel.cpp:113]   --->   Operation 99 'specloopname' 'specloopname_ln113' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/2] (0.00ns)   --->   "%call_ln120 = call void @Self_attention_Pipeline_l_j2, i32 %inp_sumRow_load, i32 %inp_sumRow, i4 %i3, i32 %v84_15, i32 %v84_14, i32 %v84_13, i32 %v84_12, i32 %v84_11, i32 %v84_10, i32 %v84_9, i32 %v84_8, i32 %v84_7, i32 %v84_6, i32 %v84_5, i32 %v84_4, i32 %v84_3, i32 %v84_2, i32 %v84_1, i32 %v84, i4 %sub_ln116, i2 %trunc_ln113" [kernel.cpp:120]   --->   Operation 100 'call' 'call_ln120' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%br_ln113 = br void %l_j2.i" [kernel.cpp:113]   --->   Operation 101 'br' 'br_ln113' <Predicate = true> <Delay = 0.00>

State 10 <SV = 6> <Delay = 0.00>
ST_10 : Operation 102 [1/2] (0.00ns)   --->   "%call_ln0 = call void @Self_attention_Pipeline_l_update_i4_l_j3, i32 %inp_sumRow, i32 %v85, i32 %v85_1, i32 %v85_2, i32 %v85_3, i32 %v84, i32 %v84_1, i32 %v84_2, i32 %v84_3, i32 %v84_4, i32 %v84_5, i32 %v84_6, i32 %v84_7, i32 %v84_8, i32 %v84_9, i32 %v84_10, i32 %v84_11, i32 %v84_12, i32 %v84_13, i32 %v84_14, i32 %v84_15"   --->   Operation 102 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 7> <Delay = 0.00>
ST_11 : Operation 103 [2/2] (0.00ns)   --->   "%call_ln211 = call void @Context_layer, i32 %v85, i32 %v85_1, i32 %v85_2, i32 %v85_3, i32 %V_h, i32 %V_h_1, i32 %V_h_2, i32 %V_h_3, i32 %v86_0_0, i32 %v86_0_1, i32 %v86_0_2, i32 %v86_0_3, i32 %v86_1_0, i32 %v86_1_1, i32 %v86_1_2, i32 %v86_1_3, i32 %v86_2_0, i32 %v86_2_1, i32 %v86_2_2, i32 %v86_2_3, i32 %v86_3_0, i32 %v86_3_1, i32 %v86_3_2, i32 %v86_3_3" [kernel.cpp:211]   --->   Operation 103 'call' 'call_ln211' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 8> <Delay = 0.00>
ST_12 : Operation 104 [1/2] (0.00ns)   --->   "%call_ln211 = call void @Context_layer, i32 %v85, i32 %v85_1, i32 %v85_2, i32 %v85_3, i32 %V_h, i32 %V_h_1, i32 %V_h_2, i32 %V_h_3, i32 %v86_0_0, i32 %v86_0_1, i32 %v86_0_2, i32 %v86_0_3, i32 %v86_1_0, i32 %v86_1_1, i32 %v86_1_2, i32 %v86_1_3, i32 %v86_2_0, i32 %v86_2_1, i32 %v86_2_2, i32 %v86_2_3, i32 %v86_3_0, i32 %v86_3_1, i32 %v86_3_2, i32 %v86_3_3" [kernel.cpp:211]   --->   Operation 104 'call' 'call_ln211' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 9> <Delay = 0.00>
ST_13 : Operation 105 [2/2] (0.00ns)   --->   "%call_ln191 = call void @Self_attention_Pipeline_l_mh_merge_i_m_l_j_m, i32 %v86_0_0, i32 %v86_0_1, i32 %v86_0_2, i32 %v86_0_3, i32 %v86_1_0, i32 %v86_1_1, i32 %v86_1_2, i32 %v86_1_3, i32 %v86_2_0, i32 %v86_2_1, i32 %v86_2_2, i32 %v86_2_3, i32 %v86_3_0, i32 %v86_3_1, i32 %v86_3_2, i32 %v86_3_3, i10 %tmp_s, i32 %v74_0, i32 %v74_1, i32 %v74_2, i32 %v74_3, i32 %v74_4, i32 %v74_5, i32 %v74_6, i32 %v74_7, i32 %v74_8, i32 %v74_9, i32 %v74_10, i32 %v74_11" [kernel.cpp:191]   --->   Operation 105 'call' 'call_ln191' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 10> <Delay = 0.00>
ST_14 : Operation 106 [1/2] (0.00ns)   --->   "%call_ln191 = call void @Self_attention_Pipeline_l_mh_merge_i_m_l_j_m, i32 %v86_0_0, i32 %v86_0_1, i32 %v86_0_2, i32 %v86_0_3, i32 %v86_1_0, i32 %v86_1_1, i32 %v86_1_2, i32 %v86_1_3, i32 %v86_2_0, i32 %v86_2_1, i32 %v86_2_2, i32 %v86_2_3, i32 %v86_3_0, i32 %v86_3_1, i32 %v86_3_2, i32 %v86_3_3, i10 %tmp_s, i32 %v74_0, i32 %v74_1, i32 %v74_2, i32 %v74_3, i32 %v74_4, i32 %v74_5, i32 %v74_6, i32 %v74_7, i32 %v74_8, i32 %v74_9, i32 %v74_10, i32 %v74_11" [kernel.cpp:191]   --->   Operation 106 'call' 'call_ln191' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_14 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln191 = br void %l_mh_separate_i_s" [kernel.cpp:191]   --->   Operation 107 'br' 'br_ln191' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('h') [445]  (0 ns)
	'store' operation ('store_ln191', kernel.cpp:191) of constant 0 on local variable 'h' [495]  (1.59 ns)

 <State 2>: 1.74ns
The critical path consists of the following:
	'load' operation ('h', kernel.cpp:191) on local variable 'h' [498]  (0 ns)
	'add' operation ('add_ln191', kernel.cpp:191) [501]  (1.74 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i3', kernel.cpp:113) with incoming values : ('add_ln113', kernel.cpp:113) [511]  (1.59 ns)

 <State 6>: 2.89ns
The critical path consists of the following:
	'phi' operation ('i3', kernel.cpp:113) with incoming values : ('add_ln113', kernel.cpp:113) [511]  (0 ns)
	'getelementptr' operation ('inp_sumRow_addr', kernel.cpp:113) [520]  (0 ns)
	'load' operation ('inp_sumRow_load', kernel.cpp:120) on array 'inp_sumRow', kernel.cpp:109 [521]  (2.32 ns)
	blocking operation 0.568 ns on control path)

 <State 7>: 2.32ns
The critical path consists of the following:
	'load' operation ('inp_sumRow_load', kernel.cpp:120) on array 'inp_sumRow', kernel.cpp:109 [521]  (2.32 ns)

 <State 8>: 5.79ns
The critical path consists of the following:
	'sub' operation ('sub_ln116', kernel.cpp:116) [525]  (1.74 ns)
	'call' operation ('call_ln120', kernel.cpp:120) to 'Self_attention_Pipeline_l_j2' [526]  (4.06 ns)

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
