// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Self_attention_Pipeline_l_j2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inp_sumRow_load,
        inp_sumRow_address0,
        inp_sumRow_ce0,
        inp_sumRow_we0,
        inp_sumRow_d0,
        zext_ln113,
        v84_15_address0,
        v84_15_ce0,
        v84_15_we0,
        v84_15_d0,
        v84_15_address1,
        v84_15_ce1,
        v84_15_q1,
        v84_14_address0,
        v84_14_ce0,
        v84_14_we0,
        v84_14_d0,
        v84_14_address1,
        v84_14_ce1,
        v84_14_q1,
        v84_13_address0,
        v84_13_ce0,
        v84_13_we0,
        v84_13_d0,
        v84_13_address1,
        v84_13_ce1,
        v84_13_q1,
        v84_12_address0,
        v84_12_ce0,
        v84_12_we0,
        v84_12_d0,
        v84_12_address1,
        v84_12_ce1,
        v84_12_q1,
        v84_11_address0,
        v84_11_ce0,
        v84_11_we0,
        v84_11_d0,
        v84_11_address1,
        v84_11_ce1,
        v84_11_q1,
        v84_10_address0,
        v84_10_ce0,
        v84_10_we0,
        v84_10_d0,
        v84_10_address1,
        v84_10_ce1,
        v84_10_q1,
        v84_9_address0,
        v84_9_ce0,
        v84_9_we0,
        v84_9_d0,
        v84_9_address1,
        v84_9_ce1,
        v84_9_q1,
        v84_8_address0,
        v84_8_ce0,
        v84_8_we0,
        v84_8_d0,
        v84_8_address1,
        v84_8_ce1,
        v84_8_q1,
        v84_7_address0,
        v84_7_ce0,
        v84_7_we0,
        v84_7_d0,
        v84_7_address1,
        v84_7_ce1,
        v84_7_q1,
        v84_6_address0,
        v84_6_ce0,
        v84_6_we0,
        v84_6_d0,
        v84_6_address1,
        v84_6_ce1,
        v84_6_q1,
        v84_5_address0,
        v84_5_ce0,
        v84_5_we0,
        v84_5_d0,
        v84_5_address1,
        v84_5_ce1,
        v84_5_q1,
        v84_4_address0,
        v84_4_ce0,
        v84_4_we0,
        v84_4_d0,
        v84_4_address1,
        v84_4_ce1,
        v84_4_q1,
        v84_3_address0,
        v84_3_ce0,
        v84_3_we0,
        v84_3_d0,
        v84_3_address1,
        v84_3_ce1,
        v84_3_q1,
        v84_2_address0,
        v84_2_ce0,
        v84_2_we0,
        v84_2_d0,
        v84_2_address1,
        v84_2_ce1,
        v84_2_q1,
        v84_1_address0,
        v84_1_ce0,
        v84_1_we0,
        v84_1_d0,
        v84_1_address1,
        v84_1_ce1,
        v84_1_q1,
        v84_address0,
        v84_ce0,
        v84_we0,
        v84_d0,
        v84_address1,
        v84_ce1,
        v84_q1,
        sub_ln116,
        trunc_ln9,
        grp_fu_2333_p_din0,
        grp_fu_2333_p_din1,
        grp_fu_2333_p_opcode,
        grp_fu_2333_p_dout0,
        grp_fu_2333_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inp_sumRow_load;
output  [3:0] inp_sumRow_address0;
output   inp_sumRow_ce0;
output   inp_sumRow_we0;
output  [31:0] inp_sumRow_d0;
input  [3:0] zext_ln113;
output  [3:0] v84_15_address0;
output   v84_15_ce0;
output   v84_15_we0;
output  [31:0] v84_15_d0;
output  [3:0] v84_15_address1;
output   v84_15_ce1;
input  [31:0] v84_15_q1;
output  [3:0] v84_14_address0;
output   v84_14_ce0;
output   v84_14_we0;
output  [31:0] v84_14_d0;
output  [3:0] v84_14_address1;
output   v84_14_ce1;
input  [31:0] v84_14_q1;
output  [3:0] v84_13_address0;
output   v84_13_ce0;
output   v84_13_we0;
output  [31:0] v84_13_d0;
output  [3:0] v84_13_address1;
output   v84_13_ce1;
input  [31:0] v84_13_q1;
output  [3:0] v84_12_address0;
output   v84_12_ce0;
output   v84_12_we0;
output  [31:0] v84_12_d0;
output  [3:0] v84_12_address1;
output   v84_12_ce1;
input  [31:0] v84_12_q1;
output  [3:0] v84_11_address0;
output   v84_11_ce0;
output   v84_11_we0;
output  [31:0] v84_11_d0;
output  [3:0] v84_11_address1;
output   v84_11_ce1;
input  [31:0] v84_11_q1;
output  [3:0] v84_10_address0;
output   v84_10_ce0;
output   v84_10_we0;
output  [31:0] v84_10_d0;
output  [3:0] v84_10_address1;
output   v84_10_ce1;
input  [31:0] v84_10_q1;
output  [3:0] v84_9_address0;
output   v84_9_ce0;
output   v84_9_we0;
output  [31:0] v84_9_d0;
output  [3:0] v84_9_address1;
output   v84_9_ce1;
input  [31:0] v84_9_q1;
output  [3:0] v84_8_address0;
output   v84_8_ce0;
output   v84_8_we0;
output  [31:0] v84_8_d0;
output  [3:0] v84_8_address1;
output   v84_8_ce1;
input  [31:0] v84_8_q1;
output  [3:0] v84_7_address0;
output   v84_7_ce0;
output   v84_7_we0;
output  [31:0] v84_7_d0;
output  [3:0] v84_7_address1;
output   v84_7_ce1;
input  [31:0] v84_7_q1;
output  [3:0] v84_6_address0;
output   v84_6_ce0;
output   v84_6_we0;
output  [31:0] v84_6_d0;
output  [3:0] v84_6_address1;
output   v84_6_ce1;
input  [31:0] v84_6_q1;
output  [3:0] v84_5_address0;
output   v84_5_ce0;
output   v84_5_we0;
output  [31:0] v84_5_d0;
output  [3:0] v84_5_address1;
output   v84_5_ce1;
input  [31:0] v84_5_q1;
output  [3:0] v84_4_address0;
output   v84_4_ce0;
output   v84_4_we0;
output  [31:0] v84_4_d0;
output  [3:0] v84_4_address1;
output   v84_4_ce1;
input  [31:0] v84_4_q1;
output  [3:0] v84_3_address0;
output   v84_3_ce0;
output   v84_3_we0;
output  [31:0] v84_3_d0;
output  [3:0] v84_3_address1;
output   v84_3_ce1;
input  [31:0] v84_3_q1;
output  [3:0] v84_2_address0;
output   v84_2_ce0;
output   v84_2_we0;
output  [31:0] v84_2_d0;
output  [3:0] v84_2_address1;
output   v84_2_ce1;
input  [31:0] v84_2_q1;
output  [3:0] v84_1_address0;
output   v84_1_ce0;
output   v84_1_we0;
output  [31:0] v84_1_d0;
output  [3:0] v84_1_address1;
output   v84_1_ce1;
input  [31:0] v84_1_q1;
output  [3:0] v84_address0;
output   v84_ce0;
output   v84_we0;
output  [31:0] v84_d0;
output  [3:0] v84_address1;
output   v84_ce1;
input  [31:0] v84_q1;
input  [3:0] sub_ln116;
input  [1:0] trunc_ln9;
output  [31:0] grp_fu_2333_p_din0;
output  [31:0] grp_fu_2333_p_din1;
output  [0:0] grp_fu_2333_p_opcode;
input  [31:0] grp_fu_2333_p_dout0;
output   grp_fu_2333_p_ce;

reg ap_idle;
reg inp_sumRow_ce0;
reg inp_sumRow_we0;
reg v84_15_ce0;
reg v84_15_we0;
reg v84_15_ce1;
reg v84_14_ce0;
reg v84_14_we0;
reg v84_14_ce1;
reg v84_13_ce0;
reg v84_13_we0;
reg v84_13_ce1;
reg v84_12_ce0;
reg v84_12_we0;
reg v84_12_ce1;
reg v84_11_ce0;
reg v84_11_we0;
reg v84_11_ce1;
reg v84_10_ce0;
reg v84_10_we0;
reg v84_10_ce1;
reg v84_9_ce0;
reg v84_9_we0;
reg v84_9_ce1;
reg v84_8_ce0;
reg v84_8_we0;
reg v84_8_ce1;
reg v84_7_ce0;
reg v84_7_we0;
reg v84_7_ce1;
reg v84_6_ce0;
reg v84_6_we0;
reg v84_6_ce1;
reg v84_5_ce0;
reg v84_5_we0;
reg v84_5_ce1;
reg v84_4_ce0;
reg v84_4_we0;
reg v84_4_ce1;
reg v84_3_ce0;
reg v84_3_we0;
reg v84_3_ce1;
reg v84_2_ce0;
reg v84_2_we0;
reg v84_2_ce1;
reg v84_1_ce0;
reg v84_1_we0;
reg v84_1_ce1;
reg v84_ce0;
reg v84_we0;
reg v84_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln114_reg_596;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln9_read_reg_586;
reg   [3:0] inp_sumRow_addr_reg_591;
reg   [3:0] inp_sumRow_addr_reg_591_pp0_iter1_reg;
reg   [3:0] inp_sumRow_addr_reg_591_pp0_iter2_reg;
reg   [3:0] inp_sumRow_addr_reg_591_pp0_iter3_reg;
reg   [3:0] inp_sumRow_addr_reg_591_pp0_iter4_reg;
wire   [0:0] icmp_ln114_fu_431_p2;
reg   [0:0] icmp_ln114_reg_596_pp0_iter1_reg;
reg   [0:0] icmp_ln114_reg_596_pp0_iter2_reg;
reg   [0:0] icmp_ln114_reg_596_pp0_iter3_reg;
wire   [1:0] trunc_ln114_fu_443_p1;
reg   [1:0] trunc_ln114_reg_600;
reg   [1:0] trunc_ln114_reg_600_pp0_iter1_reg;
reg   [1:0] trunc_ln114_reg_600_pp0_iter2_reg;
reg   [3:0] v84_addr_reg_608;
reg   [3:0] v84_addr_reg_608_pp0_iter1_reg;
reg   [3:0] v84_addr_reg_608_pp0_iter2_reg;
reg   [3:0] v84_1_addr_reg_614;
reg   [3:0] v84_1_addr_reg_614_pp0_iter1_reg;
reg   [3:0] v84_1_addr_reg_614_pp0_iter2_reg;
reg   [3:0] v84_2_addr_reg_620;
reg   [3:0] v84_2_addr_reg_620_pp0_iter1_reg;
reg   [3:0] v84_2_addr_reg_620_pp0_iter2_reg;
reg   [3:0] v84_3_addr_reg_626;
reg   [3:0] v84_3_addr_reg_626_pp0_iter1_reg;
reg   [3:0] v84_3_addr_reg_626_pp0_iter2_reg;
reg   [3:0] v84_4_addr_reg_632;
reg   [3:0] v84_4_addr_reg_632_pp0_iter1_reg;
reg   [3:0] v84_4_addr_reg_632_pp0_iter2_reg;
reg   [3:0] v84_5_addr_reg_638;
reg   [3:0] v84_5_addr_reg_638_pp0_iter1_reg;
reg   [3:0] v84_5_addr_reg_638_pp0_iter2_reg;
reg   [3:0] v84_6_addr_reg_644;
reg   [3:0] v84_6_addr_reg_644_pp0_iter1_reg;
reg   [3:0] v84_6_addr_reg_644_pp0_iter2_reg;
reg   [3:0] v84_7_addr_reg_650;
reg   [3:0] v84_7_addr_reg_650_pp0_iter1_reg;
reg   [3:0] v84_7_addr_reg_650_pp0_iter2_reg;
reg   [3:0] v84_8_addr_reg_656;
reg   [3:0] v84_8_addr_reg_656_pp0_iter1_reg;
reg   [3:0] v84_8_addr_reg_656_pp0_iter2_reg;
reg   [3:0] v84_9_addr_reg_662;
reg   [3:0] v84_9_addr_reg_662_pp0_iter1_reg;
reg   [3:0] v84_9_addr_reg_662_pp0_iter2_reg;
reg   [3:0] v84_10_addr_reg_668;
reg   [3:0] v84_10_addr_reg_668_pp0_iter1_reg;
reg   [3:0] v84_10_addr_reg_668_pp0_iter2_reg;
reg   [3:0] v84_11_addr_reg_674;
reg   [3:0] v84_11_addr_reg_674_pp0_iter1_reg;
reg   [3:0] v84_11_addr_reg_674_pp0_iter2_reg;
reg   [3:0] v84_12_addr_reg_680;
reg   [3:0] v84_12_addr_reg_680_pp0_iter1_reg;
reg   [3:0] v84_12_addr_reg_680_pp0_iter2_reg;
reg   [3:0] v84_13_addr_reg_686;
reg   [3:0] v84_13_addr_reg_686_pp0_iter1_reg;
reg   [3:0] v84_13_addr_reg_686_pp0_iter2_reg;
reg   [3:0] v84_14_addr_reg_692;
reg   [3:0] v84_14_addr_reg_692_pp0_iter1_reg;
reg   [3:0] v84_14_addr_reg_692_pp0_iter2_reg;
reg   [3:0] v84_15_addr_reg_698;
reg   [3:0] v84_15_addr_reg_698_pp0_iter1_reg;
reg   [3:0] v84_15_addr_reg_698_pp0_iter2_reg;
wire   [0:0] icmp_ln114_1_fu_487_p2;
reg   [0:0] icmp_ln114_1_reg_704;
reg   [0:0] icmp_ln114_1_reg_704_pp0_iter1_reg;
reg   [0:0] icmp_ln114_1_reg_704_pp0_iter2_reg;
reg   [0:0] icmp_ln114_1_reg_704_pp0_iter3_reg;
reg   [0:0] icmp_ln114_1_reg_704_pp0_iter4_reg;
wire   [31:0] v44_fu_550_p6;
reg   [31:0] v44_reg_708;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_fu_408_p2;
reg   [31:0] v46_reg_713;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] v48_reg_739;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln113_cast_fu_413_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln116_1_fu_467_p1;
reg   [31:0] v47_fu_88;
reg   [31:0] ap_sig_allocacmp_v47_load;
wire    ap_loop_init;
reg   [3:0] j2_fu_92;
wire   [3:0] add_ln114_fu_437_p2;
reg   [3:0] ap_sig_allocacmp_j2_1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [1:0] lshr_ln2_fu_447_p4;
wire   [3:0] zext_ln116_fu_457_p1;
wire   [3:0] add_ln116_fu_461_p2;
wire   [31:0] tmp_32_fu_498_p6;
wire   [31:0] tmp_33_fu_511_p6;
wire   [31:0] tmp_34_fu_524_p6;
wire   [31:0] tmp_35_fu_537_p6;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage1;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_fexp_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fexp_32ns_32ns_32_10_full_dsp_1_U1320(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(v44_reg_708),
    .ce(1'b1),
    .dout(grp_fu_408_p2)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1321(
    .din0(v84_q1),
    .din1(v84_1_q1),
    .din2(v84_2_q1),
    .din3(v84_3_q1),
    .din4(trunc_ln114_reg_600),
    .dout(tmp_32_fu_498_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1322(
    .din0(v84_4_q1),
    .din1(v84_5_q1),
    .din2(v84_6_q1),
    .din3(v84_7_q1),
    .din4(trunc_ln114_reg_600),
    .dout(tmp_33_fu_511_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1323(
    .din0(v84_8_q1),
    .din1(v84_9_q1),
    .din2(v84_10_q1),
    .din3(v84_11_q1),
    .din4(trunc_ln114_reg_600),
    .dout(tmp_34_fu_524_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1324(
    .din0(v84_12_q1),
    .din1(v84_13_q1),
    .din2(v84_14_q1),
    .din3(v84_15_q1),
    .din4(trunc_ln114_reg_600),
    .dout(tmp_35_fu_537_p6)
);

Bert_layer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U1325(
    .din0(tmp_32_fu_498_p6),
    .din1(tmp_33_fu_511_p6),
    .din2(tmp_34_fu_524_p6),
    .din3(tmp_35_fu_537_p6),
    .din4(trunc_ln9),
    .dout(v44_fu_550_p6)
);

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln114_fu_431_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j2_fu_92 <= add_ln114_fu_437_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j2_fu_92 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v47_fu_88 <= inp_sumRow_load;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            v47_fu_88 <= grp_fu_2333_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln114_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln114_1_reg_704 <= icmp_ln114_1_fu_487_p2;
        trunc_ln114_reg_600 <= trunc_ln114_fu_443_p1;
        v84_10_addr_reg_668 <= zext_ln116_1_fu_467_p1;
        v84_11_addr_reg_674 <= zext_ln116_1_fu_467_p1;
        v84_12_addr_reg_680 <= zext_ln116_1_fu_467_p1;
        v84_13_addr_reg_686 <= zext_ln116_1_fu_467_p1;
        v84_14_addr_reg_692 <= zext_ln116_1_fu_467_p1;
        v84_15_addr_reg_698 <= zext_ln116_1_fu_467_p1;
        v84_1_addr_reg_614 <= zext_ln116_1_fu_467_p1;
        v84_2_addr_reg_620 <= zext_ln116_1_fu_467_p1;
        v84_3_addr_reg_626 <= zext_ln116_1_fu_467_p1;
        v84_4_addr_reg_632 <= zext_ln116_1_fu_467_p1;
        v84_5_addr_reg_638 <= zext_ln116_1_fu_467_p1;
        v84_6_addr_reg_644 <= zext_ln116_1_fu_467_p1;
        v84_7_addr_reg_650 <= zext_ln116_1_fu_467_p1;
        v84_8_addr_reg_656 <= zext_ln116_1_fu_467_p1;
        v84_9_addr_reg_662 <= zext_ln116_1_fu_467_p1;
        v84_addr_reg_608 <= zext_ln116_1_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln114_1_reg_704_pp0_iter1_reg <= icmp_ln114_1_reg_704;
        icmp_ln114_1_reg_704_pp0_iter2_reg <= icmp_ln114_1_reg_704_pp0_iter1_reg;
        icmp_ln114_1_reg_704_pp0_iter3_reg <= icmp_ln114_1_reg_704_pp0_iter2_reg;
        icmp_ln114_1_reg_704_pp0_iter4_reg <= icmp_ln114_1_reg_704_pp0_iter3_reg;
        icmp_ln114_reg_596 <= icmp_ln114_fu_431_p2;
        icmp_ln114_reg_596_pp0_iter1_reg <= icmp_ln114_reg_596;
        icmp_ln114_reg_596_pp0_iter2_reg <= icmp_ln114_reg_596_pp0_iter1_reg;
        icmp_ln114_reg_596_pp0_iter3_reg <= icmp_ln114_reg_596_pp0_iter2_reg;
        inp_sumRow_addr_reg_591 <= zext_ln113_cast_fu_413_p1;
        inp_sumRow_addr_reg_591_pp0_iter1_reg <= inp_sumRow_addr_reg_591;
        inp_sumRow_addr_reg_591_pp0_iter2_reg <= inp_sumRow_addr_reg_591_pp0_iter1_reg;
        inp_sumRow_addr_reg_591_pp0_iter3_reg <= inp_sumRow_addr_reg_591_pp0_iter2_reg;
        inp_sumRow_addr_reg_591_pp0_iter4_reg <= inp_sumRow_addr_reg_591_pp0_iter3_reg;
        trunc_ln114_reg_600_pp0_iter1_reg <= trunc_ln114_reg_600;
        trunc_ln114_reg_600_pp0_iter2_reg <= trunc_ln114_reg_600_pp0_iter1_reg;
        v48_reg_739 <= grp_fu_2333_p_dout0;
        v84_10_addr_reg_668_pp0_iter1_reg <= v84_10_addr_reg_668;
        v84_10_addr_reg_668_pp0_iter2_reg <= v84_10_addr_reg_668_pp0_iter1_reg;
        v84_11_addr_reg_674_pp0_iter1_reg <= v84_11_addr_reg_674;
        v84_11_addr_reg_674_pp0_iter2_reg <= v84_11_addr_reg_674_pp0_iter1_reg;
        v84_12_addr_reg_680_pp0_iter1_reg <= v84_12_addr_reg_680;
        v84_12_addr_reg_680_pp0_iter2_reg <= v84_12_addr_reg_680_pp0_iter1_reg;
        v84_13_addr_reg_686_pp0_iter1_reg <= v84_13_addr_reg_686;
        v84_13_addr_reg_686_pp0_iter2_reg <= v84_13_addr_reg_686_pp0_iter1_reg;
        v84_14_addr_reg_692_pp0_iter1_reg <= v84_14_addr_reg_692;
        v84_14_addr_reg_692_pp0_iter2_reg <= v84_14_addr_reg_692_pp0_iter1_reg;
        v84_15_addr_reg_698_pp0_iter1_reg <= v84_15_addr_reg_698;
        v84_15_addr_reg_698_pp0_iter2_reg <= v84_15_addr_reg_698_pp0_iter1_reg;
        v84_1_addr_reg_614_pp0_iter1_reg <= v84_1_addr_reg_614;
        v84_1_addr_reg_614_pp0_iter2_reg <= v84_1_addr_reg_614_pp0_iter1_reg;
        v84_2_addr_reg_620_pp0_iter1_reg <= v84_2_addr_reg_620;
        v84_2_addr_reg_620_pp0_iter2_reg <= v84_2_addr_reg_620_pp0_iter1_reg;
        v84_3_addr_reg_626_pp0_iter1_reg <= v84_3_addr_reg_626;
        v84_3_addr_reg_626_pp0_iter2_reg <= v84_3_addr_reg_626_pp0_iter1_reg;
        v84_4_addr_reg_632_pp0_iter1_reg <= v84_4_addr_reg_632;
        v84_4_addr_reg_632_pp0_iter2_reg <= v84_4_addr_reg_632_pp0_iter1_reg;
        v84_5_addr_reg_638_pp0_iter1_reg <= v84_5_addr_reg_638;
        v84_5_addr_reg_638_pp0_iter2_reg <= v84_5_addr_reg_638_pp0_iter1_reg;
        v84_6_addr_reg_644_pp0_iter1_reg <= v84_6_addr_reg_644;
        v84_6_addr_reg_644_pp0_iter2_reg <= v84_6_addr_reg_644_pp0_iter1_reg;
        v84_7_addr_reg_650_pp0_iter1_reg <= v84_7_addr_reg_650;
        v84_7_addr_reg_650_pp0_iter2_reg <= v84_7_addr_reg_650_pp0_iter1_reg;
        v84_8_addr_reg_656_pp0_iter1_reg <= v84_8_addr_reg_656;
        v84_8_addr_reg_656_pp0_iter2_reg <= v84_8_addr_reg_656_pp0_iter1_reg;
        v84_9_addr_reg_662_pp0_iter1_reg <= v84_9_addr_reg_662;
        v84_9_addr_reg_662_pp0_iter2_reg <= v84_9_addr_reg_662_pp0_iter1_reg;
        v84_addr_reg_608_pp0_iter1_reg <= v84_addr_reg_608;
        v84_addr_reg_608_pp0_iter2_reg <= v84_addr_reg_608_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln114_reg_596 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v44_reg_708 <= v44_fu_550_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v46_reg_713 <= grp_fu_408_p2;
    end
end

always @ (*) begin
    if (((icmp_ln114_reg_596 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln114_reg_596_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j2_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_j2_1 = j2_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v47_load = grp_fu_2333_p_dout0;
    end else begin
        ap_sig_allocacmp_v47_load = v47_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inp_sumRow_ce0 = 1'b1;
    end else begin
        inp_sumRow_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln114_1_reg_704_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inp_sumRow_we0 = 1'b1;
    end else begin
        inp_sumRow_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_10_ce0 = 1'b1;
    end else begin
        v84_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_10_ce1 = 1'b1;
    end else begin
        v84_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd2) & (trunc_ln9_read_reg_586 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_10_we0 = 1'b1;
    end else begin
        v84_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_11_ce0 = 1'b1;
    end else begin
        v84_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_11_ce1 = 1'b1;
    end else begin
        v84_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd3) & (trunc_ln9_read_reg_586 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_11_we0 = 1'b1;
    end else begin
        v84_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_12_ce0 = 1'b1;
    end else begin
        v84_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_12_ce1 = 1'b1;
    end else begin
        v84_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd0) & (trunc_ln9_read_reg_586 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_12_we0 = 1'b1;
    end else begin
        v84_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_13_ce0 = 1'b1;
    end else begin
        v84_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_13_ce1 = 1'b1;
    end else begin
        v84_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd1) & (trunc_ln9_read_reg_586 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_13_we0 = 1'b1;
    end else begin
        v84_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_14_ce0 = 1'b1;
    end else begin
        v84_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_14_ce1 = 1'b1;
    end else begin
        v84_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd2) & (trunc_ln9_read_reg_586 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_14_we0 = 1'b1;
    end else begin
        v84_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_15_ce0 = 1'b1;
    end else begin
        v84_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_15_ce1 = 1'b1;
    end else begin
        v84_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd3) & (trunc_ln9_read_reg_586 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_15_we0 = 1'b1;
    end else begin
        v84_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_1_ce0 = 1'b1;
    end else begin
        v84_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_1_ce1 = 1'b1;
    end else begin
        v84_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd1) & (trunc_ln9_read_reg_586 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_1_we0 = 1'b1;
    end else begin
        v84_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_2_ce0 = 1'b1;
    end else begin
        v84_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_2_ce1 = 1'b1;
    end else begin
        v84_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd2) & (trunc_ln9_read_reg_586 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_2_we0 = 1'b1;
    end else begin
        v84_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_3_ce0 = 1'b1;
    end else begin
        v84_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_3_ce1 = 1'b1;
    end else begin
        v84_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd3) & (trunc_ln9_read_reg_586 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_3_we0 = 1'b1;
    end else begin
        v84_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_4_ce0 = 1'b1;
    end else begin
        v84_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_4_ce1 = 1'b1;
    end else begin
        v84_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd0) & (trunc_ln9_read_reg_586 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_4_we0 = 1'b1;
    end else begin
        v84_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_5_ce0 = 1'b1;
    end else begin
        v84_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_5_ce1 = 1'b1;
    end else begin
        v84_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd1) & (trunc_ln9_read_reg_586 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_5_we0 = 1'b1;
    end else begin
        v84_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_6_ce0 = 1'b1;
    end else begin
        v84_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_6_ce1 = 1'b1;
    end else begin
        v84_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd2) & (trunc_ln9_read_reg_586 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_6_we0 = 1'b1;
    end else begin
        v84_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_7_ce0 = 1'b1;
    end else begin
        v84_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_7_ce1 = 1'b1;
    end else begin
        v84_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd3) & (trunc_ln9_read_reg_586 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_7_we0 = 1'b1;
    end else begin
        v84_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_8_ce0 = 1'b1;
    end else begin
        v84_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_8_ce1 = 1'b1;
    end else begin
        v84_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd0) & (trunc_ln9_read_reg_586 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_8_we0 = 1'b1;
    end else begin
        v84_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_9_ce0 = 1'b1;
    end else begin
        v84_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_9_ce1 = 1'b1;
    end else begin
        v84_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd1) & (trunc_ln9_read_reg_586 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_9_we0 = 1'b1;
    end else begin
        v84_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_ce0 = 1'b1;
    end else begin
        v84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_ce1 = 1'b1;
    end else begin
        v84_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln114_reg_600_pp0_iter2_reg == 2'd0) & (trunc_ln9_read_reg_586 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v84_we0 = 1'b1;
    end else begin
        v84_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln114_fu_437_p2 = (ap_sig_allocacmp_j2_1 + 4'd1);

assign add_ln116_fu_461_p2 = (sub_ln116 + zext_ln116_fu_457_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_2333_p_ce = 1'b1;

assign grp_fu_2333_p_din0 = ap_sig_allocacmp_v47_load;

assign grp_fu_2333_p_din1 = v46_reg_713;

assign grp_fu_2333_p_opcode = 2'd0;

assign icmp_ln114_1_fu_487_p2 = ((add_ln114_fu_437_p2 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_431_p2 = ((ap_sig_allocacmp_j2_1 == 4'd12) ? 1'b1 : 1'b0);

assign inp_sumRow_address0 = inp_sumRow_addr_reg_591_pp0_iter4_reg;

assign inp_sumRow_d0 = v48_reg_739;

assign lshr_ln2_fu_447_p4 = {{ap_sig_allocacmp_j2_1[3:2]}};

assign trunc_ln114_fu_443_p1 = ap_sig_allocacmp_j2_1[1:0];

assign trunc_ln9_read_reg_586 = trunc_ln9;

assign v84_10_address0 = v84_10_addr_reg_668_pp0_iter2_reg;

assign v84_10_address1 = zext_ln116_1_fu_467_p1;

assign v84_10_d0 = v46_reg_713;

assign v84_11_address0 = v84_11_addr_reg_674_pp0_iter2_reg;

assign v84_11_address1 = zext_ln116_1_fu_467_p1;

assign v84_11_d0 = v46_reg_713;

assign v84_12_address0 = v84_12_addr_reg_680_pp0_iter2_reg;

assign v84_12_address1 = zext_ln116_1_fu_467_p1;

assign v84_12_d0 = v46_reg_713;

assign v84_13_address0 = v84_13_addr_reg_686_pp0_iter2_reg;

assign v84_13_address1 = zext_ln116_1_fu_467_p1;

assign v84_13_d0 = v46_reg_713;

assign v84_14_address0 = v84_14_addr_reg_692_pp0_iter2_reg;

assign v84_14_address1 = zext_ln116_1_fu_467_p1;

assign v84_14_d0 = v46_reg_713;

assign v84_15_address0 = v84_15_addr_reg_698_pp0_iter2_reg;

assign v84_15_address1 = zext_ln116_1_fu_467_p1;

assign v84_15_d0 = v46_reg_713;

assign v84_1_address0 = v84_1_addr_reg_614_pp0_iter2_reg;

assign v84_1_address1 = zext_ln116_1_fu_467_p1;

assign v84_1_d0 = v46_reg_713;

assign v84_2_address0 = v84_2_addr_reg_620_pp0_iter2_reg;

assign v84_2_address1 = zext_ln116_1_fu_467_p1;

assign v84_2_d0 = v46_reg_713;

assign v84_3_address0 = v84_3_addr_reg_626_pp0_iter2_reg;

assign v84_3_address1 = zext_ln116_1_fu_467_p1;

assign v84_3_d0 = v46_reg_713;

assign v84_4_address0 = v84_4_addr_reg_632_pp0_iter2_reg;

assign v84_4_address1 = zext_ln116_1_fu_467_p1;

assign v84_4_d0 = v46_reg_713;

assign v84_5_address0 = v84_5_addr_reg_638_pp0_iter2_reg;

assign v84_5_address1 = zext_ln116_1_fu_467_p1;

assign v84_5_d0 = v46_reg_713;

assign v84_6_address0 = v84_6_addr_reg_644_pp0_iter2_reg;

assign v84_6_address1 = zext_ln116_1_fu_467_p1;

assign v84_6_d0 = v46_reg_713;

assign v84_7_address0 = v84_7_addr_reg_650_pp0_iter2_reg;

assign v84_7_address1 = zext_ln116_1_fu_467_p1;

assign v84_7_d0 = v46_reg_713;

assign v84_8_address0 = v84_8_addr_reg_656_pp0_iter2_reg;

assign v84_8_address1 = zext_ln116_1_fu_467_p1;

assign v84_8_d0 = v46_reg_713;

assign v84_9_address0 = v84_9_addr_reg_662_pp0_iter2_reg;

assign v84_9_address1 = zext_ln116_1_fu_467_p1;

assign v84_9_d0 = v46_reg_713;

assign v84_address0 = v84_addr_reg_608_pp0_iter2_reg;

assign v84_address1 = zext_ln116_1_fu_467_p1;

assign v84_d0 = v46_reg_713;

assign zext_ln113_cast_fu_413_p1 = zext_ln113;

assign zext_ln116_1_fu_467_p1 = add_ln116_fu_461_p2;

assign zext_ln116_fu_457_p1 = lshr_ln2_fu_447_p4;

endmodule //Bert_layer_Self_attention_Pipeline_l_j2
