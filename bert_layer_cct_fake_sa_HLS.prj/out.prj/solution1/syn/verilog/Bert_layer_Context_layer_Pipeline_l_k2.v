// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Bert_layer_Context_layer_Pipeline_l_k2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v56_3_3_load,
        v56_3_2_load,
        v56_3_1_load,
        v56_3_0_load,
        v56_2_3_load,
        v56_2_2_load,
        v56_2_1_load,
        v56_2_0_load,
        v56_1_3_load,
        v56_1_2_load,
        v56_1_1_load,
        v56_1_0_load,
        v56_0_3_load,
        v56_0_2_load,
        v56_0_1_load,
        v56_0_0_load,
        v56_3_3_address0,
        v56_3_3_ce0,
        v56_3_3_we0,
        v56_3_3_d0,
        empty_100,
        v56_3_2_address0,
        v56_3_2_ce0,
        v56_3_2_we0,
        v56_3_2_d0,
        v56_3_1_address0,
        v56_3_1_ce0,
        v56_3_1_we0,
        v56_3_1_d0,
        v56_3_0_address0,
        v56_3_0_ce0,
        v56_3_0_we0,
        v56_3_0_d0,
        v56_2_3_address0,
        v56_2_3_ce0,
        v56_2_3_we0,
        v56_2_3_d0,
        v56_2_2_address0,
        v56_2_2_ce0,
        v56_2_2_we0,
        v56_2_2_d0,
        v56_2_1_address0,
        v56_2_1_ce0,
        v56_2_1_we0,
        v56_2_1_d0,
        v56_2_0_address0,
        v56_2_0_ce0,
        v56_2_0_we0,
        v56_2_0_d0,
        v56_1_3_address0,
        v56_1_3_ce0,
        v56_1_3_we0,
        v56_1_3_d0,
        v56_1_2_address0,
        v56_1_2_ce0,
        v56_1_2_we0,
        v56_1_2_d0,
        v56_1_1_address0,
        v56_1_1_ce0,
        v56_1_1_we0,
        v56_1_1_d0,
        v56_1_0_address0,
        v56_1_0_ce0,
        v56_1_0_we0,
        v56_1_0_d0,
        v56_0_3_address0,
        v56_0_3_ce0,
        v56_0_3_we0,
        v56_0_3_d0,
        v56_0_2_address0,
        v56_0_2_ce0,
        v56_0_2_we0,
        v56_0_2_d0,
        v56_0_1_address0,
        v56_0_1_ce0,
        v56_0_1_we0,
        v56_0_1_d0,
        v56_0_0_address0,
        v56_0_0_ce0,
        v56_0_0_we0,
        v56_0_0_d0,
        empty,
        v54_0_address0,
        v54_0_ce0,
        v54_0_q0,
        v54_1_address0,
        v54_1_ce0,
        v54_1_q0,
        v54_2_address0,
        v54_2_ce0,
        v54_2_q0,
        v54_3_address0,
        v54_3_ce0,
        v54_3_q0,
        zext_ln154,
        v55_0_address0,
        v55_0_ce0,
        v55_0_q0,
        v55_1_address0,
        v55_1_ce0,
        v55_1_q0,
        v55_2_address0,
        v55_2_ce0,
        v55_2_q0,
        v55_3_address0,
        v55_3_ce0,
        v55_3_q0,
        grp_fu_759_p_din0,
        grp_fu_759_p_din1,
        grp_fu_759_p_opcode,
        grp_fu_759_p_dout0,
        grp_fu_759_p_ce,
        grp_fu_763_p_din0,
        grp_fu_763_p_din1,
        grp_fu_763_p_opcode,
        grp_fu_763_p_dout0,
        grp_fu_763_p_ce,
        grp_fu_767_p_din0,
        grp_fu_767_p_din1,
        grp_fu_767_p_opcode,
        grp_fu_767_p_dout0,
        grp_fu_767_p_ce,
        grp_fu_771_p_din0,
        grp_fu_771_p_din1,
        grp_fu_771_p_opcode,
        grp_fu_771_p_dout0,
        grp_fu_771_p_ce,
        grp_fu_775_p_din0,
        grp_fu_775_p_din1,
        grp_fu_775_p_dout0,
        grp_fu_775_p_ce,
        grp_fu_779_p_din0,
        grp_fu_779_p_din1,
        grp_fu_779_p_dout0,
        grp_fu_779_p_ce,
        grp_fu_783_p_din0,
        grp_fu_783_p_din1,
        grp_fu_783_p_dout0,
        grp_fu_783_p_ce,
        grp_fu_787_p_din0,
        grp_fu_787_p_din1,
        grp_fu_787_p_dout0,
        grp_fu_787_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v56_3_3_load;
input  [31:0] v56_3_2_load;
input  [31:0] v56_3_1_load;
input  [31:0] v56_3_0_load;
input  [31:0] v56_2_3_load;
input  [31:0] v56_2_2_load;
input  [31:0] v56_2_1_load;
input  [31:0] v56_2_0_load;
input  [31:0] v56_1_3_load;
input  [31:0] v56_1_2_load;
input  [31:0] v56_1_1_load;
input  [31:0] v56_1_0_load;
input  [31:0] v56_0_3_load;
input  [31:0] v56_0_2_load;
input  [31:0] v56_0_1_load;
input  [31:0] v56_0_0_load;
output  [5:0] v56_3_3_address0;
output   v56_3_3_ce0;
output   v56_3_3_we0;
output  [31:0] v56_3_3_d0;
input  [5:0] empty_100;
output  [5:0] v56_3_2_address0;
output   v56_3_2_ce0;
output   v56_3_2_we0;
output  [31:0] v56_3_2_d0;
output  [5:0] v56_3_1_address0;
output   v56_3_1_ce0;
output   v56_3_1_we0;
output  [31:0] v56_3_1_d0;
output  [5:0] v56_3_0_address0;
output   v56_3_0_ce0;
output   v56_3_0_we0;
output  [31:0] v56_3_0_d0;
output  [5:0] v56_2_3_address0;
output   v56_2_3_ce0;
output   v56_2_3_we0;
output  [31:0] v56_2_3_d0;
output  [5:0] v56_2_2_address0;
output   v56_2_2_ce0;
output   v56_2_2_we0;
output  [31:0] v56_2_2_d0;
output  [5:0] v56_2_1_address0;
output   v56_2_1_ce0;
output   v56_2_1_we0;
output  [31:0] v56_2_1_d0;
output  [5:0] v56_2_0_address0;
output   v56_2_0_ce0;
output   v56_2_0_we0;
output  [31:0] v56_2_0_d0;
output  [5:0] v56_1_3_address0;
output   v56_1_3_ce0;
output   v56_1_3_we0;
output  [31:0] v56_1_3_d0;
output  [5:0] v56_1_2_address0;
output   v56_1_2_ce0;
output   v56_1_2_we0;
output  [31:0] v56_1_2_d0;
output  [5:0] v56_1_1_address0;
output   v56_1_1_ce0;
output   v56_1_1_we0;
output  [31:0] v56_1_1_d0;
output  [5:0] v56_1_0_address0;
output   v56_1_0_ce0;
output   v56_1_0_we0;
output  [31:0] v56_1_0_d0;
output  [5:0] v56_0_3_address0;
output   v56_0_3_ce0;
output   v56_0_3_we0;
output  [31:0] v56_0_3_d0;
output  [5:0] v56_0_2_address0;
output   v56_0_2_ce0;
output   v56_0_2_we0;
output  [31:0] v56_0_2_d0;
output  [5:0] v56_0_1_address0;
output   v56_0_1_ce0;
output   v56_0_1_we0;
output  [31:0] v56_0_1_d0;
output  [5:0] v56_0_0_address0;
output   v56_0_0_ce0;
output   v56_0_0_we0;
output  [31:0] v56_0_0_d0;
input  [5:0] empty;
output  [5:0] v54_0_address0;
output   v54_0_ce0;
input  [31:0] v54_0_q0;
output  [5:0] v54_1_address0;
output   v54_1_ce0;
input  [31:0] v54_1_q0;
output  [5:0] v54_2_address0;
output   v54_2_ce0;
input  [31:0] v54_2_q0;
output  [5:0] v54_3_address0;
output   v54_3_ce0;
input  [31:0] v54_3_q0;
input  [4:0] zext_ln154;
output  [7:0] v55_0_address0;
output   v55_0_ce0;
input  [31:0] v55_0_q0;
output  [7:0] v55_1_address0;
output   v55_1_ce0;
input  [31:0] v55_1_q0;
output  [7:0] v55_2_address0;
output   v55_2_ce0;
input  [31:0] v55_2_q0;
output  [7:0] v55_3_address0;
output   v55_3_ce0;
input  [31:0] v55_3_q0;
output  [31:0] grp_fu_759_p_din0;
output  [31:0] grp_fu_759_p_din1;
output  [0:0] grp_fu_759_p_opcode;
input  [31:0] grp_fu_759_p_dout0;
output   grp_fu_759_p_ce;
output  [31:0] grp_fu_763_p_din0;
output  [31:0] grp_fu_763_p_din1;
output  [1:0] grp_fu_763_p_opcode;
input  [31:0] grp_fu_763_p_dout0;
output   grp_fu_763_p_ce;
output  [31:0] grp_fu_767_p_din0;
output  [31:0] grp_fu_767_p_din1;
output  [1:0] grp_fu_767_p_opcode;
input  [31:0] grp_fu_767_p_dout0;
output   grp_fu_767_p_ce;
output  [31:0] grp_fu_771_p_din0;
output  [31:0] grp_fu_771_p_din1;
output  [1:0] grp_fu_771_p_opcode;
input  [31:0] grp_fu_771_p_dout0;
output   grp_fu_771_p_ce;
output  [31:0] grp_fu_775_p_din0;
output  [31:0] grp_fu_775_p_din1;
input  [31:0] grp_fu_775_p_dout0;
output   grp_fu_775_p_ce;
output  [31:0] grp_fu_779_p_din0;
output  [31:0] grp_fu_779_p_din1;
input  [31:0] grp_fu_779_p_dout0;
output   grp_fu_779_p_ce;
output  [31:0] grp_fu_783_p_din0;
output  [31:0] grp_fu_783_p_din1;
input  [31:0] grp_fu_783_p_dout0;
output   grp_fu_783_p_ce;
output  [31:0] grp_fu_787_p_din0;
output  [31:0] grp_fu_787_p_din1;
input  [31:0] grp_fu_787_p_dout0;
output   grp_fu_787_p_ce;

reg ap_idle;
reg v56_3_3_ce0;
reg v56_3_3_we0;
reg v56_3_2_ce0;
reg v56_3_2_we0;
reg v56_3_1_ce0;
reg v56_3_1_we0;
reg v56_3_0_ce0;
reg v56_3_0_we0;
reg v56_2_3_ce0;
reg v56_2_3_we0;
reg v56_2_2_ce0;
reg v56_2_2_we0;
reg v56_2_1_ce0;
reg v56_2_1_we0;
reg v56_2_0_ce0;
reg v56_2_0_we0;
reg v56_1_3_ce0;
reg v56_1_3_we0;
reg v56_1_2_ce0;
reg v56_1_2_we0;
reg v56_1_1_ce0;
reg v56_1_1_we0;
reg v56_1_0_ce0;
reg v56_1_0_we0;
reg v56_0_3_ce0;
reg v56_0_3_we0;
reg v56_0_2_ce0;
reg v56_0_2_we0;
reg v56_0_1_ce0;
reg v56_0_1_we0;
reg v56_0_0_ce0;
reg v56_0_0_we0;
reg v54_0_ce0;
reg v54_1_ce0;
reg v54_2_ce0;
reg v54_3_ce0;
reg v55_0_ce0;
reg v55_1_ce0;
reg v55_2_ce0;
reg v55_3_ce0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln155_reg_1114;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_640;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln155_reg_1114_pp0_iter2_reg;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln155_reg_1114_pp0_iter3_reg;
reg   [31:0] reg_648;
reg   [31:0] reg_656;
reg   [31:0] reg_664;
wire   [63:0] p_cast_fu_672_p1;
reg   [63:0] p_cast_reg_1094;
wire   [0:0] icmp_ln155_fu_768_p2;
reg   [0:0] icmp_ln155_reg_1114_pp0_iter1_reg;
wire   [0:0] icmp_ln155_1_fu_820_p2;
reg   [0:0] icmp_ln155_1_reg_1158;
reg   [0:0] icmp_ln155_1_reg_1158_pp0_iter1_reg;
reg   [0:0] icmp_ln155_1_reg_1158_pp0_iter2_reg;
reg   [0:0] icmp_ln155_1_reg_1158_pp0_iter3_reg;
reg   [31:0] v66_reg_1162;
reg   [31:0] v67_reg_1170;
reg   [31:0] v67_1_reg_1175;
reg   [31:0] v67_2_reg_1180;
reg   [31:0] v67_3_reg_1185;
reg   [31:0] v66_1_reg_1190;
reg   [31:0] v66_2_reg_1198;
reg   [31:0] v66_3_reg_1206;
reg   [31:0] v68_reg_1214;
reg   [31:0] v68_1_reg_1219;
reg   [31:0] v68_2_reg_1224;
reg   [31:0] v68_3_reg_1229;
reg   [31:0] v68_4_reg_1254;
reg   [31:0] v68_5_reg_1259;
reg   [31:0] v68_6_reg_1264;
reg   [31:0] v68_7_reg_1269;
reg   [31:0] v68_8_reg_1294;
reg   [31:0] v68_9_reg_1299;
reg   [31:0] v68_10_reg_1304;
reg   [31:0] v68_11_reg_1309;
reg   [31:0] v68_12_reg_1334;
reg   [31:0] v68_13_reg_1339;
reg   [31:0] v68_14_reg_1344;
reg   [31:0] v68_15_reg_1349;
reg   [5:0] v56_3_3_addr_reg_1374;
reg   [5:0] v56_3_2_addr_reg_1379;
reg   [5:0] v56_3_1_addr_reg_1384;
reg   [5:0] v56_3_0_addr_reg_1389;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter3_stage1;
wire    ap_block_pp0_stage2_subdone;
wire   [63:0] p_cast1_fu_790_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln162_fu_812_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage1;
reg   [3:0] k2_fu_118;
wire   [3:0] add_ln155_fu_774_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_k2_1;
reg   [31:0] v69_fu_122;
reg   [31:0] ap_sig_allocacmp_v69_load;
wire    ap_block_pp0_stage2;
reg   [31:0] v69_1_fu_126;
reg   [31:0] ap_sig_allocacmp_v69_1_load;
reg   [31:0] v69_2_fu_130;
reg   [31:0] ap_sig_allocacmp_v69_2_load;
reg   [31:0] v69_3_fu_134;
reg   [31:0] ap_sig_allocacmp_v69_3_load;
reg   [31:0] v69_4_fu_138;
reg   [31:0] ap_sig_allocacmp_v69_4_load;
reg   [31:0] v69_5_fu_142;
reg   [31:0] ap_sig_allocacmp_v69_5_load;
reg   [31:0] v69_6_fu_146;
reg   [31:0] ap_sig_allocacmp_v69_6_load;
reg   [31:0] v69_7_fu_150;
reg   [31:0] ap_sig_allocacmp_v69_7_load;
reg   [31:0] v69_8_fu_154;
reg   [31:0] ap_sig_allocacmp_v69_8_load;
reg   [31:0] v69_9_fu_158;
reg   [31:0] ap_sig_allocacmp_v69_9_load;
reg   [31:0] v69_10_fu_162;
reg   [31:0] ap_sig_allocacmp_v69_10_load;
reg   [31:0] v69_11_fu_166;
reg   [31:0] ap_sig_allocacmp_v69_11_load;
reg   [31:0] v69_12_fu_170;
reg   [31:0] ap_sig_allocacmp_v69_12_load;
reg   [31:0] v69_13_fu_174;
reg   [31:0] ap_sig_allocacmp_v69_13_load;
reg   [31:0] v69_14_fu_178;
reg   [31:0] ap_sig_allocacmp_v69_14_load;
reg   [31:0] v69_15_fu_182;
reg   [31:0] ap_sig_allocacmp_v69_15_load;
reg   [31:0] grp_fu_608_p0;
reg   [31:0] grp_fu_608_p1;
reg   [31:0] grp_fu_612_p0;
reg   [31:0] grp_fu_612_p1;
reg   [31:0] grp_fu_616_p0;
reg   [31:0] grp_fu_616_p1;
reg   [31:0] grp_fu_620_p0;
reg   [31:0] grp_fu_620_p1;
reg   [31:0] grp_fu_624_p0;
reg   [31:0] grp_fu_628_p0;
reg   [31:0] grp_fu_632_p0;
reg   [31:0] grp_fu_636_p0;
wire   [5:0] k2_cast_fu_780_p1;
wire   [5:0] empty_378_fu_784_p2;
wire   [7:0] tmp_s_fu_798_p3;
wire   [7:0] zext_ln154_cast_fu_676_p1;
wire   [7:0] add_ln162_fu_806_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

Bert_layer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter3_stage1) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1)))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln155_fu_768_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k2_fu_118 <= add_ln155_fu_774_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k2_fu_118 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v69_10_fu_162 <= v56_2_2_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0))) begin
            v69_10_fu_162 <= grp_fu_767_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v69_11_fu_166 <= v56_2_3_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0))) begin
            v69_11_fu_166 <= grp_fu_771_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_12_fu_170 <= v56_3_0_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v69_12_fu_170 <= grp_fu_759_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_13_fu_174 <= v56_3_1_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v69_13_fu_174 <= grp_fu_763_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_14_fu_178 <= v56_3_2_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v69_14_fu_178 <= grp_fu_767_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_15_fu_182 <= v56_3_3_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v69_15_fu_182 <= grp_fu_771_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_1_fu_126 <= v56_0_1_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v69_1_fu_126 <= grp_fu_763_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_2_fu_130 <= v56_0_2_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v69_2_fu_130 <= grp_fu_767_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_3_fu_134 <= v56_0_3_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v69_3_fu_134 <= grp_fu_771_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_4_fu_138 <= v56_1_0_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v69_4_fu_138 <= grp_fu_759_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_5_fu_142 <= v56_1_1_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v69_5_fu_142 <= grp_fu_763_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_6_fu_146 <= v56_1_2_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v69_6_fu_146 <= grp_fu_767_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_7_fu_150 <= v56_1_3_load;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v69_7_fu_150 <= grp_fu_771_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v69_8_fu_154 <= v56_2_0_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0))) begin
            v69_8_fu_154 <= grp_fu_759_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            v69_9_fu_158 <= v56_2_1_load;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0))) begin
            v69_9_fu_158 <= grp_fu_763_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v69_fu_122 <= v56_0_0_load;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v69_fu_122 <= grp_fu_759_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln155_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln155_1_reg_1158 <= icmp_ln155_1_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln155_1_reg_1158_pp0_iter1_reg <= icmp_ln155_1_reg_1158;
        icmp_ln155_1_reg_1158_pp0_iter2_reg <= icmp_ln155_1_reg_1158_pp0_iter1_reg;
        icmp_ln155_1_reg_1158_pp0_iter3_reg <= icmp_ln155_1_reg_1158_pp0_iter2_reg;
        icmp_ln155_reg_1114 <= icmp_ln155_fu_768_p2;
        icmp_ln155_reg_1114_pp0_iter1_reg <= icmp_ln155_reg_1114;
        icmp_ln155_reg_1114_pp0_iter2_reg <= icmp_ln155_reg_1114_pp0_iter1_reg;
        icmp_ln155_reg_1114_pp0_iter3_reg <= icmp_ln155_reg_1114_pp0_iter2_reg;
        p_cast_reg_1094[5 : 0] <= p_cast_fu_672_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_640 <= grp_fu_759_p_dout0;
        reg_648 <= grp_fu_763_p_dout0;
        reg_656 <= grp_fu_767_p_dout0;
        reg_664 <= grp_fu_771_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_3_0_addr_reg_1389 <= p_cast_reg_1094;
        v56_3_1_addr_reg_1384 <= p_cast_reg_1094;
        v56_3_2_addr_reg_1379 <= p_cast_reg_1094;
        v56_3_3_addr_reg_1374 <= p_cast_reg_1094;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln155_reg_1114 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v66_1_reg_1190 <= v54_1_q0;
        v66_2_reg_1198 <= v54_2_q0;
        v66_3_reg_1206 <= v54_3_q0;
        v66_reg_1162 <= v54_0_q0;
        v67_1_reg_1175 <= v55_1_q0;
        v67_2_reg_1180 <= v55_2_q0;
        v67_3_reg_1185 <= v55_3_q0;
        v67_reg_1170 <= v55_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln155_reg_1114_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v68_10_reg_1304 <= grp_fu_783_p_dout0;
        v68_11_reg_1309 <= grp_fu_787_p_dout0;
        v68_8_reg_1294 <= grp_fu_775_p_dout0;
        v68_9_reg_1299 <= grp_fu_779_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln155_reg_1114_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v68_12_reg_1334 <= grp_fu_775_p_dout0;
        v68_13_reg_1339 <= grp_fu_779_p_dout0;
        v68_14_reg_1344 <= grp_fu_783_p_dout0;
        v68_15_reg_1349 <= grp_fu_787_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln155_reg_1114_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v68_1_reg_1219 <= grp_fu_779_p_dout0;
        v68_2_reg_1224 <= grp_fu_783_p_dout0;
        v68_3_reg_1229 <= grp_fu_787_p_dout0;
        v68_reg_1214 <= grp_fu_775_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln155_reg_1114_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v68_4_reg_1254 <= grp_fu_775_p_dout0;
        v68_5_reg_1259 <= grp_fu_779_p_dout0;
        v68_6_reg_1264 <= grp_fu_783_p_dout0;
        v68_7_reg_1269 <= grp_fu_787_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln155_reg_1114 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k2_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_k2_1 = k2_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v69_10_load = grp_fu_767_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_10_load = v69_10_fu_162;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v69_11_load = grp_fu_771_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_11_load = v69_11_fu_166;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v69_12_load = grp_fu_759_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_12_load = v69_12_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v69_13_load = grp_fu_763_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_13_load = v69_13_fu_174;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v69_14_load = grp_fu_767_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_14_load = v69_14_fu_178;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_v69_15_load = grp_fu_771_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_15_load = v69_15_fu_182;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v69_1_load = grp_fu_763_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_1_load = v69_1_fu_126;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v69_2_load = grp_fu_767_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_2_load = v69_2_fu_130;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v69_3_load = grp_fu_771_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_3_load = v69_3_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v69_4_load = grp_fu_759_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_4_load = v69_4_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v69_5_load = grp_fu_763_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_5_load = v69_5_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v69_6_load = grp_fu_767_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_6_load = v69_6_fu_146;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_sig_allocacmp_v69_7_load = grp_fu_771_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_7_load = v69_7_fu_150;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v69_8_load = grp_fu_759_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_8_load = v69_8_fu_154;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_v69_9_load = grp_fu_763_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_9_load = v69_9_fu_158;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_v69_load = grp_fu_759_p_dout0;
    end else begin
        ap_sig_allocacmp_v69_load = v69_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_608_p0 = ap_sig_allocacmp_v69_12_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_608_p0 = ap_sig_allocacmp_v69_8_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_608_p0 = ap_sig_allocacmp_v69_4_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_608_p0 = ap_sig_allocacmp_v69_load;
    end else begin
        grp_fu_608_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_608_p1 = v68_12_reg_1334;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_608_p1 = v68_8_reg_1294;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_608_p1 = v68_4_reg_1254;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_608_p1 = v68_reg_1214;
    end else begin
        grp_fu_608_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_612_p0 = ap_sig_allocacmp_v69_13_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_612_p0 = ap_sig_allocacmp_v69_9_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_612_p0 = ap_sig_allocacmp_v69_5_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_612_p0 = ap_sig_allocacmp_v69_1_load;
    end else begin
        grp_fu_612_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_612_p1 = v68_13_reg_1339;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_612_p1 = v68_9_reg_1299;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_612_p1 = v68_5_reg_1259;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_612_p1 = v68_1_reg_1219;
    end else begin
        grp_fu_612_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_616_p0 = ap_sig_allocacmp_v69_14_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_616_p0 = ap_sig_allocacmp_v69_10_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_616_p0 = ap_sig_allocacmp_v69_6_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_616_p0 = ap_sig_allocacmp_v69_2_load;
    end else begin
        grp_fu_616_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_616_p1 = v68_14_reg_1344;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_616_p1 = v68_10_reg_1304;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_616_p1 = v68_6_reg_1264;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_616_p1 = v68_2_reg_1224;
    end else begin
        grp_fu_616_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_620_p0 = ap_sig_allocacmp_v69_15_load;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_620_p0 = ap_sig_allocacmp_v69_11_load;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_620_p0 = ap_sig_allocacmp_v69_7_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_620_p0 = ap_sig_allocacmp_v69_3_load;
    end else begin
        grp_fu_620_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_620_p1 = v68_15_reg_1349;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_620_p1 = v68_11_reg_1309;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_620_p1 = v68_7_reg_1269;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_620_p1 = v68_3_reg_1229;
    end else begin
        grp_fu_620_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_624_p0 = v66_3_reg_1206;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_624_p0 = v66_2_reg_1198;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_624_p0 = v66_1_reg_1190;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_624_p0 = v66_reg_1162;
    end else begin
        grp_fu_624_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_628_p0 = v66_3_reg_1206;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_628_p0 = v66_2_reg_1198;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_628_p0 = v66_1_reg_1190;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_628_p0 = v66_reg_1162;
    end else begin
        grp_fu_628_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_632_p0 = v66_3_reg_1206;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_632_p0 = v66_2_reg_1198;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_632_p0 = v66_1_reg_1190;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_632_p0 = v66_reg_1162;
    end else begin
        grp_fu_632_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_636_p0 = v66_3_reg_1206;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_636_p0 = v66_2_reg_1198;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_636_p0 = v66_1_reg_1190;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_636_p0 = v66_reg_1162;
    end else begin
        grp_fu_636_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v54_0_ce0 = 1'b1;
    end else begin
        v54_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v54_1_ce0 = 1'b1;
    end else begin
        v54_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v54_2_ce0 = 1'b1;
    end else begin
        v54_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v54_3_ce0 = 1'b1;
    end else begin
        v54_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v55_0_ce0 = 1'b1;
    end else begin
        v55_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v55_1_ce0 = 1'b1;
    end else begin
        v55_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v55_2_ce0 = 1'b1;
    end else begin
        v55_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v55_3_ce0 = 1'b1;
    end else begin
        v55_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_0_ce0 = 1'b1;
    end else begin
        v56_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_0_we0 = 1'b1;
    end else begin
        v56_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_1_ce0 = 1'b1;
    end else begin
        v56_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_1_we0 = 1'b1;
    end else begin
        v56_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_2_ce0 = 1'b1;
    end else begin
        v56_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_2_we0 = 1'b1;
    end else begin
        v56_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_3_ce0 = 1'b1;
    end else begin
        v56_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        v56_0_3_we0 = 1'b1;
    end else begin
        v56_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_0_ce0 = 1'b1;
    end else begin
        v56_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_0_we0 = 1'b1;
    end else begin
        v56_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_1_ce0 = 1'b1;
    end else begin
        v56_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_1_we0 = 1'b1;
    end else begin
        v56_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_2_ce0 = 1'b1;
    end else begin
        v56_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_2_we0 = 1'b1;
    end else begin
        v56_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_3_ce0 = 1'b1;
    end else begin
        v56_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln155_1_reg_1158_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v56_1_3_we0 = 1'b1;
    end else begin
        v56_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_0_ce0 = 1'b1;
    end else begin
        v56_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_0_we0 = 1'b1;
    end else begin
        v56_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_1_ce0 = 1'b1;
    end else begin
        v56_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_1_we0 = 1'b1;
    end else begin
        v56_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_2_ce0 = 1'b1;
    end else begin
        v56_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_2_we0 = 1'b1;
    end else begin
        v56_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_3_ce0 = 1'b1;
    end else begin
        v56_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        v56_2_3_we0 = 1'b1;
    end else begin
        v56_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_0_ce0 = 1'b1;
    end else begin
        v56_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_0_we0 = 1'b1;
    end else begin
        v56_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_1_ce0 = 1'b1;
    end else begin
        v56_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_1_we0 = 1'b1;
    end else begin
        v56_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_2_ce0 = 1'b1;
    end else begin
        v56_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_2_we0 = 1'b1;
    end else begin
        v56_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_3_ce0 = 1'b1;
    end else begin
        v56_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln155_1_reg_1158_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln155_reg_1114_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        v56_3_3_we0 = 1'b1;
    end else begin
        v56_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln155_fu_774_p2 = (ap_sig_allocacmp_k2_1 + 4'd1);

assign add_ln162_fu_806_p2 = (tmp_s_fu_798_p3 + zext_ln154_cast_fu_676_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign empty_378_fu_784_p2 = (empty + k2_cast_fu_780_p1);

assign grp_fu_759_p_ce = 1'b1;

assign grp_fu_759_p_din0 = grp_fu_608_p0;

assign grp_fu_759_p_din1 = grp_fu_608_p1;

assign grp_fu_759_p_opcode = 2'd0;

assign grp_fu_763_p_ce = 1'b1;

assign grp_fu_763_p_din0 = grp_fu_612_p0;

assign grp_fu_763_p_din1 = grp_fu_612_p1;

assign grp_fu_763_p_opcode = 2'd0;

assign grp_fu_767_p_ce = 1'b1;

assign grp_fu_767_p_din0 = grp_fu_616_p0;

assign grp_fu_767_p_din1 = grp_fu_616_p1;

assign grp_fu_767_p_opcode = 2'd0;

assign grp_fu_771_p_ce = 1'b1;

assign grp_fu_771_p_din0 = grp_fu_620_p0;

assign grp_fu_771_p_din1 = grp_fu_620_p1;

assign grp_fu_771_p_opcode = 2'd0;

assign grp_fu_775_p_ce = 1'b1;

assign grp_fu_775_p_din0 = grp_fu_624_p0;

assign grp_fu_775_p_din1 = v67_reg_1170;

assign grp_fu_779_p_ce = 1'b1;

assign grp_fu_779_p_din0 = grp_fu_628_p0;

assign grp_fu_779_p_din1 = v67_1_reg_1175;

assign grp_fu_783_p_ce = 1'b1;

assign grp_fu_783_p_din0 = grp_fu_632_p0;

assign grp_fu_783_p_din1 = v67_2_reg_1180;

assign grp_fu_787_p_ce = 1'b1;

assign grp_fu_787_p_din0 = grp_fu_636_p0;

assign grp_fu_787_p_din1 = v67_3_reg_1185;

assign icmp_ln155_1_fu_820_p2 = ((add_ln155_fu_774_p2 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_768_p2 = ((ap_sig_allocacmp_k2_1 == 4'd12) ? 1'b1 : 1'b0);

assign k2_cast_fu_780_p1 = ap_sig_allocacmp_k2_1;

assign p_cast1_fu_790_p1 = empty_378_fu_784_p2;

assign p_cast_fu_672_p1 = empty_100;

assign tmp_s_fu_798_p3 = {{ap_sig_allocacmp_k2_1}, {4'd0}};

assign v54_0_address0 = p_cast1_fu_790_p1;

assign v54_1_address0 = p_cast1_fu_790_p1;

assign v54_2_address0 = p_cast1_fu_790_p1;

assign v54_3_address0 = p_cast1_fu_790_p1;

assign v55_0_address0 = zext_ln162_fu_812_p1;

assign v55_1_address0 = zext_ln162_fu_812_p1;

assign v55_2_address0 = zext_ln162_fu_812_p1;

assign v55_3_address0 = zext_ln162_fu_812_p1;

assign v56_0_0_address0 = p_cast_reg_1094;

assign v56_0_0_d0 = reg_640;

assign v56_0_1_address0 = p_cast_reg_1094;

assign v56_0_1_d0 = reg_648;

assign v56_0_2_address0 = p_cast_reg_1094;

assign v56_0_2_d0 = reg_656;

assign v56_0_3_address0 = p_cast_reg_1094;

assign v56_0_3_d0 = reg_664;

assign v56_1_0_address0 = p_cast_reg_1094;

assign v56_1_0_d0 = reg_640;

assign v56_1_1_address0 = p_cast_reg_1094;

assign v56_1_1_d0 = reg_648;

assign v56_1_2_address0 = p_cast_reg_1094;

assign v56_1_2_d0 = reg_656;

assign v56_1_3_address0 = p_cast_reg_1094;

assign v56_1_3_d0 = reg_664;

assign v56_2_0_address0 = p_cast_reg_1094;

assign v56_2_0_d0 = reg_640;

assign v56_2_1_address0 = p_cast_reg_1094;

assign v56_2_1_d0 = reg_648;

assign v56_2_2_address0 = p_cast_reg_1094;

assign v56_2_2_d0 = reg_656;

assign v56_2_3_address0 = p_cast_reg_1094;

assign v56_2_3_d0 = reg_664;

assign v56_3_0_address0 = v56_3_0_addr_reg_1389;

assign v56_3_0_d0 = reg_640;

assign v56_3_1_address0 = v56_3_1_addr_reg_1384;

assign v56_3_1_d0 = reg_648;

assign v56_3_2_address0 = v56_3_2_addr_reg_1379;

assign v56_3_2_d0 = reg_656;

assign v56_3_3_address0 = v56_3_3_addr_reg_1374;

assign v56_3_3_d0 = reg_664;

assign zext_ln154_cast_fu_676_p1 = zext_ln154;

assign zext_ln162_fu_812_p1 = add_ln162_fu_806_p2;

always @ (posedge ap_clk) begin
    p_cast_reg_1094[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //Bert_layer_Context_layer_Pipeline_l_k2
